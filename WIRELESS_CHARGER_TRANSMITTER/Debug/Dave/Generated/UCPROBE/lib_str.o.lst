   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "lib_str.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .rodata.Str_MultOvfThTbl_Int32U,"a",%progbits
  18              	 .align 2
  21              	Str_MultOvfThTbl_Int32U:
  22 0000 FFFFFFFF 	 .word -1
  23 0004 FFFFFFFF 	 .word -1
  24 0008 FFFFFF7F 	 .word 2147483647
  25 000c 55555555 	 .word 1431655765
  26 0010 FFFFFF3F 	 .word 1073741823
  27 0014 33333333 	 .word 858993459
  28 0018 AAAAAA2A 	 .word 715827882
  29 001c 24499224 	 .word 613566756
  30 0020 FFFFFF1F 	 .word 536870911
  31 0024 1CC7711C 	 .word 477218588
  32 0028 99999919 	 .word 429496729
  33 002c 74D14517 	 .word 390451572
  34 0030 55555515 	 .word 357913941
  35 0034 133BB113 	 .word 330382099
  36 0038 92244912 	 .word 306783378
  37 003c 11111111 	 .word 286331153
  38 0040 FFFFFF0F 	 .word 268435455
  39 0044 0F0F0F0F 	 .word 252645135
  40 0048 8EE3380E 	 .word 238609294
  41 004c 5E43790D 	 .word 226050910
  42 0050 CCCCCC0C 	 .word 214748364
  43 0054 0CC3300C 	 .word 204522252
  44 0058 BAE8A20B 	 .word 195225786
  45 005c 2C64210B 	 .word 186737708
  46 0060 AAAAAA0A 	 .word 178956970
  47 0064 A3703D0A 	 .word 171798691
  48 0068 899DD809 	 .word 165191049
  49 006c 5E427B09 	 .word 159072862
  50 0070 49922409 	 .word 153391689
  51 0074 B0DCD308 	 .word 148102320
  52 0078 88888808 	 .word 143165576
  53 007c 84104208 	 .word 138547332
  54 0080 FFFFFF07 	 .word 134217727
  55 0084 7CF0C107 	 .word 130150524
  56 0088 87878707 	 .word 126322567
  57 008c 07755007 	 .word 122713351
  58 0090 C7711C07 	 .word 119304647
  59              	 .section .text.Str_Len,"ax",%progbits
  60              	 .align 2
  61              	 .global Str_Len
  62              	 .code 16
  63              	 .thumb_func
  65              	Str_Len:
  66              	.LFB0:
  67              	 .file 1 "../Dave/Generated/UCPROBE/lib_str.c"
   1:../Dave/Generated/UCPROBE/lib_str.c **** /*
   2:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
   3:../Dave/Generated/UCPROBE/lib_str.c **** *                                                uC/LIB
   4:../Dave/Generated/UCPROBE/lib_str.c **** *                                        CUSTOM LIBRARY MODULES
   5:../Dave/Generated/UCPROBE/lib_str.c **** *
   6:../Dave/Generated/UCPROBE/lib_str.c **** *                         (c) Copyright 2004-2014; Micrium, Inc.; Weston, FL
   7:../Dave/Generated/UCPROBE/lib_str.c **** *
   8:../Dave/Generated/UCPROBE/lib_str.c **** *                  All rights reserved.  Protected by international copyright laws.
   9:../Dave/Generated/UCPROBE/lib_str.c **** *
  10:../Dave/Generated/UCPROBE/lib_str.c **** *                  uC/LIB is provided in source form to registered licensees ONLY.  It is
  11:../Dave/Generated/UCPROBE/lib_str.c **** *                  illegal to distribute this source code to any third party unless you receive
  12:../Dave/Generated/UCPROBE/lib_str.c **** *                  written permission by an authorized Micrium representative.  Knowledge of
  13:../Dave/Generated/UCPROBE/lib_str.c **** *                  the source code may NOT be used to develop a similar product.
  14:../Dave/Generated/UCPROBE/lib_str.c **** *
  15:../Dave/Generated/UCPROBE/lib_str.c **** *                  Please help us continue to provide the Embedded community with the finest
  16:../Dave/Generated/UCPROBE/lib_str.c **** *                  software available.  Your honesty is greatly appreciated.
  17:../Dave/Generated/UCPROBE/lib_str.c **** *
  18:../Dave/Generated/UCPROBE/lib_str.c **** *                  You can find our product's user manual, API reference, release notes and
  19:../Dave/Generated/UCPROBE/lib_str.c **** *                  more information at: https://doc.micrium.com
  20:../Dave/Generated/UCPROBE/lib_str.c **** *
  21:../Dave/Generated/UCPROBE/lib_str.c **** *                  You can contact us at: http://www.micrium.com
  22:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  23:../Dave/Generated/UCPROBE/lib_str.c **** */
  24:../Dave/Generated/UCPROBE/lib_str.c **** 
  25:../Dave/Generated/UCPROBE/lib_str.c **** /*
  26:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  27:../Dave/Generated/UCPROBE/lib_str.c **** *
  28:../Dave/Generated/UCPROBE/lib_str.c **** *                                       ASCII STRING MANAGEMENT
  29:../Dave/Generated/UCPROBE/lib_str.c **** *
  30:../Dave/Generated/UCPROBE/lib_str.c **** * Filename      : lib_str.c
  31:../Dave/Generated/UCPROBE/lib_str.c **** * Version       : V1.38.01
  32:../Dave/Generated/UCPROBE/lib_str.c **** * Programmer(s) : ITJ
  33:../Dave/Generated/UCPROBE/lib_str.c **** *                 BAN
  34:../Dave/Generated/UCPROBE/lib_str.c **** *                 JDH
  35:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  36:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  37:../Dave/Generated/UCPROBE/lib_str.c **** *
  38:../Dave/Generated/UCPROBE/lib_str.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  39:../Dave/Generated/UCPROBE/lib_str.c **** *
  40:../Dave/Generated/UCPROBE/lib_str.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  41:../Dave/Generated/UCPROBE/lib_str.c **** *
  42:../Dave/Generated/UCPROBE/lib_str.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  43:../Dave/Generated/UCPROBE/lib_str.c **** *
  44:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
  45:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <Custom Library Directory>      directory path for custom l
  46:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <cpu>                           directory name for specific
  47:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <compiler>                      directory name for specific
  48:../Dave/Generated/UCPROBE/lib_str.c **** *
  49:../Dave/Generated/UCPROBE/lib_str.c **** *                     (b) Product-specific library functions are implemented in individual products
  50:../Dave/Generated/UCPROBE/lib_str.c **** *
  51:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  52:../Dave/Generated/UCPROBE/lib_str.c **** * Notice(s)     : (1) The Institute of Electrical and Electronics Engineers and The Open Group, hav
  53:../Dave/Generated/UCPROBE/lib_str.c **** *                     us permission to reprint portions of their documentation.  Portions of this t
  54:../Dave/Generated/UCPROBE/lib_str.c **** *                     reprinted and reproduced in electronic form from the IEEE Std 1003.1, 2004 Ed
  55:../Dave/Generated/UCPROBE/lib_str.c **** *                     Standard for Information Technology -- Portable Operating System Interface (P
  56:../Dave/Generated/UCPROBE/lib_str.c **** *                     The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the In
  57:../Dave/Generated/UCPROBE/lib_str.c **** *                     of Electrical and Electronics Engineers, Inc and The Open Group.  In the even
  58:../Dave/Generated/UCPROBE/lib_str.c **** *                     discrepancy between these versions and the original IEEE and The Open Group S
  59:../Dave/Generated/UCPROBE/lib_str.c **** *                     the original IEEE and The Open Group Standard is the referee document.  The o
  60:../Dave/Generated/UCPROBE/lib_str.c **** *                     Standard can be obtained online at http://www.opengroup.org/unix/online.html.
  61:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  62:../Dave/Generated/UCPROBE/lib_str.c **** */
  63:../Dave/Generated/UCPROBE/lib_str.c **** 
  64:../Dave/Generated/UCPROBE/lib_str.c **** 
  65:../Dave/Generated/UCPROBE/lib_str.c **** /*
  66:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  67:../Dave/Generated/UCPROBE/lib_str.c **** *                                            INCLUDE FILES
  68:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  69:../Dave/Generated/UCPROBE/lib_str.c **** */
  70:../Dave/Generated/UCPROBE/lib_str.c **** 
  71:../Dave/Generated/UCPROBE/lib_str.c **** #define    MICRIUM_SOURCE
  72:../Dave/Generated/UCPROBE/lib_str.c **** #define    LIB_STR_MODULE
  73:../Dave/Generated/UCPROBE/lib_str.c **** #include  "lib_str.h"
  74:../Dave/Generated/UCPROBE/lib_str.c **** 
  75:../Dave/Generated/UCPROBE/lib_str.c **** 
  76:../Dave/Generated/UCPROBE/lib_str.c **** /*
  77:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  78:../Dave/Generated/UCPROBE/lib_str.c **** *                                            LOCAL DEFINES
  79:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  80:../Dave/Generated/UCPROBE/lib_str.c **** */
  81:../Dave/Generated/UCPROBE/lib_str.c **** 
  82:../Dave/Generated/UCPROBE/lib_str.c **** 
  83:../Dave/Generated/UCPROBE/lib_str.c **** /*
  84:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  85:../Dave/Generated/UCPROBE/lib_str.c **** *                                           LOCAL CONSTANTS
  86:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  87:../Dave/Generated/UCPROBE/lib_str.c **** */
  88:../Dave/Generated/UCPROBE/lib_str.c **** 
  89:../Dave/Generated/UCPROBE/lib_str.c **** 
  90:../Dave/Generated/UCPROBE/lib_str.c **** /*
  91:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  92:../Dave/Generated/UCPROBE/lib_str.c **** *                                          LOCAL DATA TYPES
  93:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  94:../Dave/Generated/UCPROBE/lib_str.c **** */
  95:../Dave/Generated/UCPROBE/lib_str.c **** 
  96:../Dave/Generated/UCPROBE/lib_str.c **** 
  97:../Dave/Generated/UCPROBE/lib_str.c **** /*
  98:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  99:../Dave/Generated/UCPROBE/lib_str.c **** *                                            LOCAL TABLES
 100:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 101:../Dave/Generated/UCPROBE/lib_str.c **** */
 102:../Dave/Generated/UCPROBE/lib_str.c **** 
 103:../Dave/Generated/UCPROBE/lib_str.c **** static  const  CPU_INT32U  Str_MultOvfThTbl_Int32U[] = {
 104:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U) DEF_INT_32U_MAX_VAL,                /*                Invalid base  0.  */
 105:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  1u),         /*                Invalid base  1.  */
 106:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  2u),         /* 32-bit mult ovf th for base  2.  */
 107:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  3u),         /* 32-bit mult ovf th for base  3.  */
 108:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  4u),         /* 32-bit mult ovf th for base  4.  */
 109:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  5u),         /* 32-bit mult ovf th for base  5.  */
 110:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  6u),         /* 32-bit mult ovf th for base  6.  */
 111:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  7u),         /* 32-bit mult ovf th for base  7.  */
 112:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  8u),         /* 32-bit mult ovf th for base  8.  */
 113:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  9u),         /* 32-bit mult ovf th for base  9.  */
 114:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 10u),         /* 32-bit mult ovf th for base 10.  */
 115:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 11u),         /* 32-bit mult ovf th for base 11.  */
 116:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 12u),         /* 32-bit mult ovf th for base 12.  */
 117:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 13u),         /* 32-bit mult ovf th for base 13.  */
 118:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 14u),         /* 32-bit mult ovf th for base 14.  */
 119:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 15u),         /* 32-bit mult ovf th for base 15.  */
 120:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 16u),         /* 32-bit mult ovf th for base 16.  */
 121:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 17u),         /* 32-bit mult ovf th for base 17.  */
 122:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 18u),         /* 32-bit mult ovf th for base 18.  */
 123:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 19u),         /* 32-bit mult ovf th for base 19.  */
 124:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 20u),         /* 32-bit mult ovf th for base 20.  */
 125:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 21u),         /* 32-bit mult ovf th for base 21.  */
 126:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 22u),         /* 32-bit mult ovf th for base 22.  */
 127:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 23u),         /* 32-bit mult ovf th for base 23.  */
 128:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 24u),         /* 32-bit mult ovf th for base 24.  */
 129:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 25u),         /* 32-bit mult ovf th for base 25.  */
 130:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 26u),         /* 32-bit mult ovf th for base 26.  */
 131:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 27u),         /* 32-bit mult ovf th for base 27.  */
 132:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 28u),         /* 32-bit mult ovf th for base 28.  */
 133:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 29u),         /* 32-bit mult ovf th for base 29.  */
 134:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 30u),         /* 32-bit mult ovf th for base 30.  */
 135:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 31u),         /* 32-bit mult ovf th for base 31.  */
 136:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 32u),         /* 32-bit mult ovf th for base 32.  */
 137:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 33u),         /* 32-bit mult ovf th for base 33.  */
 138:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 34u),         /* 32-bit mult ovf th for base 34.  */
 139:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 35u),         /* 32-bit mult ovf th for base 35.  */
 140:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 36u)          /* 32-bit mult ovf th for base 36.  */
 141:../Dave/Generated/UCPROBE/lib_str.c **** };
 142:../Dave/Generated/UCPROBE/lib_str.c **** 
 143:../Dave/Generated/UCPROBE/lib_str.c **** 
 144:../Dave/Generated/UCPROBE/lib_str.c **** /*
 145:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 146:../Dave/Generated/UCPROBE/lib_str.c **** *                                       LOCAL GLOBAL VARIABLES
 147:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 148:../Dave/Generated/UCPROBE/lib_str.c **** */
 149:../Dave/Generated/UCPROBE/lib_str.c **** 
 150:../Dave/Generated/UCPROBE/lib_str.c **** 
 151:../Dave/Generated/UCPROBE/lib_str.c **** /*
 152:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 153:../Dave/Generated/UCPROBE/lib_str.c **** *                                      LOCAL FUNCTION PROTOTYPES
 154:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 155:../Dave/Generated/UCPROBE/lib_str.c **** */
 156:../Dave/Generated/UCPROBE/lib_str.c **** 
 157:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_CHAR    *Str_FmtNbr_Int32  (       CPU_INT32U     nbr,
 158:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_dig,
 159:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
 160:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_neg,
 161:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR       lead_char,
 162:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    lower_case,
 163:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nul,
 164:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR      *pstr);
 165:../Dave/Generated/UCPROBE/lib_str.c **** 
 166:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_INT32U   Str_ParseNbr_Int32(const  CPU_CHAR      *pstr,
 167:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR     **pstr_next,
 168:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
 169:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
 170:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg);
 171:../Dave/Generated/UCPROBE/lib_str.c **** 
 172:../Dave/Generated/UCPROBE/lib_str.c **** 
 173:../Dave/Generated/UCPROBE/lib_str.c **** /*
 174:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 175:../Dave/Generated/UCPROBE/lib_str.c **** *                                     LOCAL CONFIGURATION ERRORS
 176:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 177:../Dave/Generated/UCPROBE/lib_str.c **** */
 178:../Dave/Generated/UCPROBE/lib_str.c **** 
 179:../Dave/Generated/UCPROBE/lib_str.c **** 
 180:../Dave/Generated/UCPROBE/lib_str.c **** /*
 181:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 182:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Len()
 183:../Dave/Generated/UCPROBE/lib_str.c **** *
 184:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Calculate length of a string.
 185:../Dave/Generated/UCPROBE/lib_str.c **** *
 186:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 187:../Dave/Generated/UCPROBE/lib_str.c **** *
 188:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character
 189:../Dave/Generated/UCPROBE/lib_str.c **** *                   (see Note #2b1).
 190:../Dave/Generated/UCPROBE/lib_str.c **** *
 191:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 192:../Dave/Generated/UCPROBE/lib_str.c **** *
 193:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 194:../Dave/Generated/UCPROBE/lib_str.c **** *
 195:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 196:../Dave/Generated/UCPROBE/lib_str.c **** *
 197:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 198:../Dave/Generated/UCPROBE/lib_str.c **** *                            which 's' ('pstr') points," ...
 199:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "not including the terminating null byte."
 200:../Dave/Generated/UCPROBE/lib_str.c **** *
 201:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 202:../Dave/Generated/UCPROBE/lib_str.c **** *
 203:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 204:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 205:../Dave/Generated/UCPROBE/lib_str.c **** *
 206:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String length calculation terminates when :
 207:../Dave/Generated/UCPROBE/lib_str.c **** *
 208:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer points to NULL.
 209:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 210:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 211:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL address.
 212:../Dave/Generated/UCPROBE/lib_str.c **** *
 213:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found.
 214:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 215:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL character (see Note #2a2).
 216:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 217:../Dave/Generated/UCPROBE/lib_str.c **** */
 218:../Dave/Generated/UCPROBE/lib_str.c **** 
 219:../Dave/Generated/UCPROBE/lib_str.c **** CPU_SIZE_T  Str_Len (const  CPU_CHAR  *pstr)
 220:../Dave/Generated/UCPROBE/lib_str.c **** {
  68              	 .loc 1 220 0
  69              	 .cfi_startproc
  70 0000 80B5     	 push {r7,lr}
  71              	.LCFI0:
  72              	 .cfi_def_cfa_offset 8
  73              	 .cfi_offset 7,-8
  74              	 .cfi_offset 14,-4
  75 0002 84B0     	 sub sp,sp,#16
  76              	.LCFI1:
  77              	 .cfi_def_cfa_offset 24
  78 0004 00AF     	 add r7,sp,#0
  79              	.LCFI2:
  80              	 .cfi_def_cfa_register 7
  81 0006 7860     	 str r0,[r7,#4]
 221:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_SIZE_T  len;
 222:../Dave/Generated/UCPROBE/lib_str.c **** 
 223:../Dave/Generated/UCPROBE/lib_str.c **** 
 224:../Dave/Generated/UCPROBE/lib_str.c ****     len = Str_Len_N(pstr,
  82              	 .loc 1 224 0
  83 0008 7A68     	 ldr r2,[r7,#4]
  84 000a 0123     	 mov r3,#1
  85 000c 5B42     	 neg r3,r3
  86 000e 101C     	 mov r0,r2
  87 0010 191C     	 mov r1,r3
  88 0012 FFF7FEFF 	 bl Str_Len_N
  89 0016 031C     	 mov r3,r0
  90 0018 FB60     	 str r3,[r7,#12]
 225:../Dave/Generated/UCPROBE/lib_str.c ****                     DEF_INT_CPU_U_MAX_VAL);
 226:../Dave/Generated/UCPROBE/lib_str.c **** 
 227:../Dave/Generated/UCPROBE/lib_str.c ****     return (len);
  91              	 .loc 1 227 0
  92 001a FB68     	 ldr r3,[r7,#12]
 228:../Dave/Generated/UCPROBE/lib_str.c **** }
  93              	 .loc 1 228 0
  94 001c 181C     	 mov r0,r3
  95 001e BD46     	 mov sp,r7
  96 0020 04B0     	 add sp,sp,#16
  97              	 
  98 0022 80BD     	 pop {r7,pc}
  99              	 .cfi_endproc
 100              	.LFE0:
 102              	 .section .text.Str_Len_N,"ax",%progbits
 103              	 .align 2
 104              	 .global Str_Len_N
 105              	 .code 16
 106              	 .thumb_func
 108              	Str_Len_N:
 109              	.LFB1:
 229:../Dave/Generated/UCPROBE/lib_str.c **** 
 230:../Dave/Generated/UCPROBE/lib_str.c **** 
 231:../Dave/Generated/UCPROBE/lib_str.c **** /*
 232:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 233:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Len_N()
 234:../Dave/Generated/UCPROBE/lib_str.c **** *
 235:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Calculate length of a string, up to a maximum number of characters.
 236:../Dave/Generated/UCPROBE/lib_str.c **** *
 237:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 238:../Dave/Generated/UCPROBE/lib_str.c **** *
 239:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to search (see Note #3c).
 240:../Dave/Generated/UCPROBE/lib_str.c **** *
 241:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character,
 242:../Dave/Generated/UCPROBE/lib_str.c **** *                   if terminating NULL character     found (see Note #2b1).
 243:../Dave/Generated/UCPROBE/lib_str.c **** *
 244:../Dave/Generated/UCPROBE/lib_str.c **** *               Requested maximum number of characters to search,
 245:../Dave/Generated/UCPROBE/lib_str.c **** *                   if terminating NULL character NOT found (see Note #3c).
 246:../Dave/Generated/UCPROBE/lib_str.c **** *
 247:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 248:../Dave/Generated/UCPROBE/lib_str.c **** *
 249:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 250:../Dave/Generated/UCPROBE/lib_str.c **** *
 251:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 252:../Dave/Generated/UCPROBE/lib_str.c **** *
 253:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 254:../Dave/Generated/UCPROBE/lib_str.c **** *                            which 's' ('pstr') points," ...
 255:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "not including the terminating null byte."
 256:../Dave/Generated/UCPROBE/lib_str.c **** *
 257:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 258:../Dave/Generated/UCPROBE/lib_str.c **** *
 259:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 260:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 261:../Dave/Generated/UCPROBE/lib_str.c **** *
 262:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String length calculation terminates when :
 263:../Dave/Generated/UCPROBE/lib_str.c **** *
 264:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer points to NULL.
 265:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 266:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 267:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL address.
 268:../Dave/Generated/UCPROBE/lib_str.c **** *
 269:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found.
 270:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 271:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL character (see Note #2a2).
 272:../Dave/Generated/UCPROBE/lib_str.c **** *
 273:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) 'len_max' number of characters searched.
 274:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 275:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 276:../Dave/Generated/UCPROBE/lib_str.c **** */
 277:../Dave/Generated/UCPROBE/lib_str.c **** 
 278:../Dave/Generated/UCPROBE/lib_str.c **** CPU_SIZE_T  Str_Len_N (const  CPU_CHAR    *pstr,
 279:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 280:../Dave/Generated/UCPROBE/lib_str.c **** {
 110              	 .loc 1 280 0
 111              	 .cfi_startproc
 112 0000 80B5     	 push {r7,lr}
 113              	.LCFI3:
 114              	 .cfi_def_cfa_offset 8
 115              	 .cfi_offset 7,-8
 116              	 .cfi_offset 14,-4
 117 0002 84B0     	 sub sp,sp,#16
 118              	.LCFI4:
 119              	 .cfi_def_cfa_offset 24
 120 0004 00AF     	 add r7,sp,#0
 121              	.LCFI5:
 122              	 .cfi_def_cfa_register 7
 123 0006 7860     	 str r0,[r7,#4]
 124 0008 3960     	 str r1,[r7]
 281:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_len;
 282:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len;
 283:../Dave/Generated/UCPROBE/lib_str.c **** 
 284:../Dave/Generated/UCPROBE/lib_str.c **** 
 285:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_len = pstr;
 125              	 .loc 1 285 0
 126 000a 7B68     	 ldr r3,[r7,#4]
 127 000c FB60     	 str r3,[r7,#12]
 286:../Dave/Generated/UCPROBE/lib_str.c ****     len      = 0u;
 128              	 .loc 1 286 0
 129 000e 0023     	 mov r3,#0
 130 0010 BB60     	 str r3,[r7,#8]
 287:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 131              	 .loc 1 287 0
 132 0012 05E0     	 b .L4
 133              	.L6:
 288:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 289:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 290:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_len++;
 134              	 .loc 1 290 0
 135 0014 FB68     	 ldr r3,[r7,#12]
 136 0016 0133     	 add r3,r3,#1
 137 0018 FB60     	 str r3,[r7,#12]
 291:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 138              	 .loc 1 291 0
 139 001a BB68     	 ldr r3,[r7,#8]
 140 001c 0133     	 add r3,r3,#1
 141 001e BB60     	 str r3,[r7,#8]
 142              	.L4:
 287:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 143              	 .loc 1 287 0
 144 0020 FB68     	 ldr r3,[r7,#12]
 145 0022 002B     	 cmp r3,#0
 146 0024 07D0     	 beq .L5
 288:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 147              	 .loc 1 288 0 discriminator 1
 148 0026 FB68     	 ldr r3,[r7,#12]
 149 0028 1B78     	 ldrb r3,[r3]
 287:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 150              	 .loc 1 287 0 discriminator 1
 151 002a 002B     	 cmp r3,#0
 152 002c 03D0     	 beq .L5
 288:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 153              	 .loc 1 288 0
 154 002e BA68     	 ldr r2,[r7,#8]
 155 0030 3B68     	 ldr r3,[r7]
 156 0032 9A42     	 cmp r2,r3
 157 0034 EED3     	 bcc .L6
 158              	.L5:
 292:../Dave/Generated/UCPROBE/lib_str.c ****     }
 293:../Dave/Generated/UCPROBE/lib_str.c **** 
 294:../Dave/Generated/UCPROBE/lib_str.c ****     return (len);                                               /* Rtn str len (see Note #3b1).    
 159              	 .loc 1 294 0
 160 0036 BB68     	 ldr r3,[r7,#8]
 295:../Dave/Generated/UCPROBE/lib_str.c **** }
 161              	 .loc 1 295 0
 162 0038 181C     	 mov r0,r3
 163 003a BD46     	 mov sp,r7
 164 003c 04B0     	 add sp,sp,#16
 165              	 
 166 003e 80BD     	 pop {r7,pc}
 167              	 .cfi_endproc
 168              	.LFE1:
 170              	 .section .text.Str_Copy,"ax",%progbits
 171              	 .align 2
 172              	 .global Str_Copy
 173              	 .code 16
 174              	 .thumb_func
 176              	Str_Copy:
 177              	.LFB2:
 296:../Dave/Generated/UCPROBE/lib_str.c **** 
 297:../Dave/Generated/UCPROBE/lib_str.c **** 
 298:../Dave/Generated/UCPROBE/lib_str.c **** /*
 299:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 300:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Copy()
 301:../Dave/Generated/UCPROBE/lib_str.c **** *
 302:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Copy source string to destination string buffer.
 303:../Dave/Generated/UCPROBE/lib_str.c **** *
 304:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 305:../Dave/Generated/UCPROBE/lib_str.c **** *
 306:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 307:../Dave/Generated/UCPROBE/lib_str.c **** *
 308:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 309:../Dave/Generated/UCPROBE/lib_str.c **** *
 310:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 311:../Dave/Generated/UCPROBE/lib_str.c **** *
 312:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 313:../Dave/Generated/UCPROBE/lib_str.c **** *
 314:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 315:../Dave/Generated/UCPROBE/lib_str.c **** *
 316:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 317:../Dave/Generated/UCPROBE/lib_str.c **** *                           string size including the terminating NULL character.
 318:../Dave/Generated/UCPROBE/lib_str.c **** *
 319:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Source buffer NOT modified.
 320:../Dave/Generated/UCPROBE/lib_str.c **** *
 321:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 322:../Dave/Generated/UCPROBE/lib_str.c **** *
 323:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcpy() function shall copy the string pointed to by 's2' ('pstr_
 324:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... into the array pointed to by 's1' ('pstr_dest')" ...
 325:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(including the terminating null byte)."
 326:../Dave/Generated/UCPROBE/lib_str.c **** *
 327:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : RETURN VALUE' states tha
 328:../Dave/Generated/UCPROBE/lib_str.c **** *
 329:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcpy() function shall return 's1' ('pstr_dest');" ...
 330:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 331:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 332:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 333:../Dave/Generated/UCPROBE/lib_str.c **** *
 334:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 335:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 336:../Dave/Generated/UCPROBE/lib_str.c **** *
 337:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String copy terminates when :
 338:../Dave/Generated/UCPROBE/lib_str.c **** *
 339:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 340:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 341:../Dave/Generated/UCPROBE/lib_str.c **** *
 342:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 343:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 344:../Dave/Generated/UCPROBE/lib_str.c **** *
 345:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 346:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 347:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 348:../Dave/Generated/UCPROBE/lib_str.c **** */
 349:../Dave/Generated/UCPROBE/lib_str.c **** 
 350:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Copy (       CPU_CHAR  *pstr_dest,
 351:../Dave/Generated/UCPROBE/lib_str.c ****                      const  CPU_CHAR  *pstr_src)
 352:../Dave/Generated/UCPROBE/lib_str.c **** {
 178              	 .loc 1 352 0
 179              	 .cfi_startproc
 180 0000 80B5     	 push {r7,lr}
 181              	.LCFI6:
 182              	 .cfi_def_cfa_offset 8
 183              	 .cfi_offset 7,-8
 184              	 .cfi_offset 14,-4
 185 0002 84B0     	 sub sp,sp,#16
 186              	.LCFI7:
 187              	 .cfi_def_cfa_offset 24
 188 0004 00AF     	 add r7,sp,#0
 189              	.LCFI8:
 190              	 .cfi_def_cfa_register 7
 191 0006 7860     	 str r0,[r7,#4]
 192 0008 3960     	 str r1,[r7]
 353:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 354:../Dave/Generated/UCPROBE/lib_str.c **** 
 355:../Dave/Generated/UCPROBE/lib_str.c **** 
 356:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Copy_N(pstr_dest,
 193              	 .loc 1 356 0
 194 000a 7968     	 ldr r1,[r7,#4]
 195 000c 3A68     	 ldr r2,[r7]
 196 000e 0123     	 mov r3,#1
 197 0010 5B42     	 neg r3,r3
 198 0012 081C     	 mov r0,r1
 199 0014 111C     	 mov r1,r2
 200 0016 1A1C     	 mov r2,r3
 201 0018 FFF7FEFF 	 bl Str_Copy_N
 202 001c 031C     	 mov r3,r0
 203 001e FB60     	 str r3,[r7,#12]
 357:../Dave/Generated/UCPROBE/lib_str.c ****                           pstr_src,
 358:../Dave/Generated/UCPROBE/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL);
 359:../Dave/Generated/UCPROBE/lib_str.c **** 
 360:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 204              	 .loc 1 360 0
 205 0020 FB68     	 ldr r3,[r7,#12]
 361:../Dave/Generated/UCPROBE/lib_str.c **** }
 206              	 .loc 1 361 0
 207 0022 181C     	 mov r0,r3
 208 0024 BD46     	 mov sp,r7
 209 0026 04B0     	 add sp,sp,#16
 210              	 
 211 0028 80BD     	 pop {r7,pc}
 212              	 .cfi_endproc
 213              	.LFE2:
 215 002a C046     	 .section .text.Str_Copy_N,"ax",%progbits
 216              	 .align 2
 217              	 .global Str_Copy_N
 218              	 .code 16
 219              	 .thumb_func
 221              	Str_Copy_N:
 222              	.LFB3:
 362:../Dave/Generated/UCPROBE/lib_str.c **** 
 363:../Dave/Generated/UCPROBE/lib_str.c **** 
 364:../Dave/Generated/UCPROBE/lib_str.c **** /*
 365:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 366:../Dave/Generated/UCPROBE/lib_str.c **** *                                            Str_Copy_N()
 367:../Dave/Generated/UCPROBE/lib_str.c **** *
 368:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Copy source string to destination string buffer, up to a maximum number of characte
 369:../Dave/Generated/UCPROBE/lib_str.c **** *
 370:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 371:../Dave/Generated/UCPROBE/lib_str.c **** *
 372:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 373:../Dave/Generated/UCPROBE/lib_str.c **** *
 374:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters  to copy (see Notes #2a2 & #3d).
 375:../Dave/Generated/UCPROBE/lib_str.c **** *
 376:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 377:../Dave/Generated/UCPROBE/lib_str.c **** *
 378:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 379:../Dave/Generated/UCPROBE/lib_str.c **** *
 380:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 381:../Dave/Generated/UCPROBE/lib_str.c **** *
 382:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 383:../Dave/Generated/UCPROBE/lib_str.c **** *
 384:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 385:../Dave/Generated/UCPROBE/lib_str.c **** *                           string size including the terminating NULL character.
 386:../Dave/Generated/UCPROBE/lib_str.c **** *
 387:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Source string buffer NOT modified.
 388:../Dave/Generated/UCPROBE/lib_str.c **** *
 389:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states
 390:../Dave/Generated/UCPROBE/lib_str.c **** *
 391:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "The strncpy() function shall copy ... the array pointed to by 's2'
 392:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('pstr_src') to the array pointed to by 's1' ('pstr_dest')"; ...
 393:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes"                   ...
 394:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C)  &   "(bytes that follow a null byte are not copied)".
 395:../Dave/Generated/UCPROBE/lib_str.c **** *
 396:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' ad
 397:../Dave/Generated/UCPROBE/lib_str.c **** *                              "if the array pointed to by 's2' ('pstr_src') is a string that is sh
 398:../Dave/Generated/UCPROBE/lib_str.c **** *                               than 'n' ('len_max') bytes, null bytes shall be appended to the cop
 399:../Dave/Generated/UCPROBE/lib_str.c **** *                               the array pointed to by 's1' ('pstr_dest'), until 'n' ('len_max') b
 400:../Dave/Generated/UCPROBE/lib_str.c **** *                               in all are written."
 401:../Dave/Generated/UCPROBE/lib_str.c **** *
 402:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Since Str_Copy() limits the maximum number of characters t
 403:../Dave/Generated/UCPROBE/lib_str.c **** *                                   via Str_Copy_N() by the CPU's maximum number of addressable cha
 404:../Dave/Generated/UCPROBE/lib_str.c **** *                                   this requirement is intentionally NOT implemented to avoid appe
 405:../Dave/Generated/UCPROBE/lib_str.c **** *                                   a potentially large number of unnecessary terminating NULL char
 406:../Dave/Generated/UCPROBE/lib_str.c **** *
 407:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : APPLICATION USA
 408:../Dave/Generated/UCPROBE/lib_str.c **** *                               states that "if there is no null byte in the first 'n' ('len_max') 
 409:../Dave/Generated/UCPROBE/lib_str.c **** *                               the array pointed to by 's2' ('pstr_src'), the result is not null-t
 410:../Dave/Generated/UCPROBE/lib_str.c **** *
 411:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : RETURN VALUE' states th
 412:../Dave/Generated/UCPROBE/lib_str.c **** *
 413:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncpy() function shall return 's1' ('pstr_dest');" ...
 414:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 415:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally ignored in order to return N
 416:../Dave/Generated/UCPROBE/lib_str.c **** *                               for any error(s).
 417:../Dave/Generated/UCPROBE/lib_str.c **** *
 418:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states tha
 419:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 420:../Dave/Generated/UCPROBE/lib_str.c **** *
 421:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String copy terminates when :
 422:../Dave/Generated/UCPROBE/lib_str.c **** *
 423:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 424:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 425:../Dave/Generated/UCPROBE/lib_str.c **** *
 426:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 427:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 428:../Dave/Generated/UCPROBE/lib_str.c **** *
 429:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 430:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 431:../Dave/Generated/UCPROBE/lib_str.c **** *
 432:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) 'len_max' number of characters copied.
 433:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters MAY include the terminating NULL charact
 434:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1C).
 435:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Null copies allowed (i.e. zero-length copies).
 436:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No string copy performed; destination string returned  (see Note #2
 437:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 438:../Dave/Generated/UCPROBE/lib_str.c **** */
 439:../Dave/Generated/UCPROBE/lib_str.c **** 
 440:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Copy_N (       CPU_CHAR    *pstr_dest,
 441:../Dave/Generated/UCPROBE/lib_str.c ****                        const  CPU_CHAR    *pstr_src,
 442:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 443:../Dave/Generated/UCPROBE/lib_str.c **** {
 223              	 .loc 1 443 0
 224              	 .cfi_startproc
 225 0000 80B5     	 push {r7,lr}
 226              	.LCFI9:
 227              	 .cfi_def_cfa_offset 8
 228              	 .cfi_offset 7,-8
 229              	 .cfi_offset 14,-4
 230 0002 88B0     	 sub sp,sp,#32
 231              	.LCFI10:
 232              	 .cfi_def_cfa_offset 40
 233 0004 00AF     	 add r7,sp,#0
 234              	.LCFI11:
 235              	 .cfi_def_cfa_register 7
 236 0006 F860     	 str r0,[r7,#12]
 237 0008 B960     	 str r1,[r7,#8]
 238 000a 7A60     	 str r2,[r7,#4]
 444:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
 445:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_copy_src;
 446:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_copy;
 447:../Dave/Generated/UCPROBE/lib_str.c **** 
 448:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 449:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 239              	 .loc 1 449 0
 240 000c FB68     	 ldr r3,[r7,#12]
 241 000e 002B     	 cmp r3,#0
 242 0010 01D1     	 bne .L11
 450:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 243              	 .loc 1 450 0
 244 0012 0023     	 mov r3,#0
 245 0014 36E0     	 b .L12
 246              	.L11:
 451:../Dave/Generated/UCPROBE/lib_str.c ****     }
 452:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_src  == (const CPU_CHAR *)0) {
 247              	 .loc 1 452 0
 248 0016 BB68     	 ldr r3,[r7,#8]
 249 0018 002B     	 cmp r3,#0
 250 001a 01D1     	 bne .L13
 453:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 251              	 .loc 1 453 0
 252 001c 0023     	 mov r3,#0
 253 001e 31E0     	 b .L12
 254              	.L13:
 454:../Dave/Generated/UCPROBE/lib_str.c ****     }
 455:../Dave/Generated/UCPROBE/lib_str.c **** 
 456:../Dave/Generated/UCPROBE/lib_str.c **** 
 457:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_copy_dest = pstr_dest;
 255              	 .loc 1 457 0
 256 0020 FB68     	 ldr r3,[r7,#12]
 257 0022 FB61     	 str r3,[r7,#28]
 458:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_copy_src  = pstr_src;
 258              	 .loc 1 458 0
 259 0024 BB68     	 ldr r3,[r7,#8]
 260 0026 BB61     	 str r3,[r7,#24]
 459:../Dave/Generated/UCPROBE/lib_str.c ****     len_copy       = 0u;
 261              	 .loc 1 459 0
 262 0028 0023     	 mov r3,#0
 263 002a 7B61     	 str r3,[r7,#20]
 460:../Dave/Generated/UCPROBE/lib_str.c **** 
 461:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_copy_dest != (      CPU_CHAR *)  0 ) &&       /* Copy str until NULL ptr(s)  [see
 264              	 .loc 1 461 0
 265 002c 0CE0     	 b .L14
 266              	.L16:
 462:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 463:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 464:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 465:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = *pstr_copy_src;
 267              	 .loc 1 465 0
 268 002e BB69     	 ldr r3,[r7,#24]
 269 0030 1A78     	 ldrb r2,[r3]
 270 0032 FB69     	 ldr r3,[r7,#28]
 271 0034 1A70     	 strb r2,[r3]
 466:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_dest++;
 272              	 .loc 1 466 0
 273 0036 FB69     	 ldr r3,[r7,#28]
 274 0038 0133     	 add r3,r3,#1
 275 003a FB61     	 str r3,[r7,#28]
 467:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_src++;
 276              	 .loc 1 467 0
 277 003c BB69     	 ldr r3,[r7,#24]
 278 003e 0133     	 add r3,r3,#1
 279 0040 BB61     	 str r3,[r7,#24]
 468:../Dave/Generated/UCPROBE/lib_str.c ****         len_copy++;
 280              	 .loc 1 468 0
 281 0042 7B69     	 ldr r3,[r7,#20]
 282 0044 0133     	 add r3,r3,#1
 283 0046 7B61     	 str r3,[r7,#20]
 284              	.L14:
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 285              	 .loc 1 461 0
 286 0048 FB69     	 ldr r3,[r7,#28]
 287 004a 002B     	 cmp r3,#0
 288 004c 0AD0     	 beq .L15
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 289              	 .loc 1 461 0 is_stmt 0 discriminator 1
 290 004e BB69     	 ldr r3,[r7,#24]
 291 0050 002B     	 cmp r3,#0
 292 0052 07D0     	 beq .L15
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 293              	 .loc 1 463 0 is_stmt 1
 294 0054 BB69     	 ldr r3,[r7,#24]
 295 0056 1B78     	 ldrb r3,[r3]
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 296              	 .loc 1 462 0
 297 0058 002B     	 cmp r3,#0
 298 005a 03D0     	 beq .L15
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 299              	 .loc 1 463 0
 300 005c 7A69     	 ldr r2,[r7,#20]
 301 005e 7B68     	 ldr r3,[r7,#4]
 302 0060 9A42     	 cmp r2,r3
 303 0062 E4D3     	 bcc .L16
 304              	.L15:
 469:../Dave/Generated/UCPROBE/lib_str.c ****     }
 470:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found  (
 471:../Dave/Generated/UCPROBE/lib_str.c ****     if ((pstr_copy_dest == (      CPU_CHAR *)0) ||
 305              	 .loc 1 471 0
 306 0064 FB69     	 ldr r3,[r7,#28]
 307 0066 002B     	 cmp r3,#0
 308 0068 02D0     	 beq .L17
 309              	 .loc 1 471 0 is_stmt 0 discriminator 1
 310 006a BB69     	 ldr r3,[r7,#24]
 311 006c 002B     	 cmp r3,#0
 312 006e 01D1     	 bne .L18
 313              	.L17:
 472:../Dave/Generated/UCPROBE/lib_str.c ****         (pstr_copy_src  == (const CPU_CHAR *)0)) {
 473:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 314              	 .loc 1 473 0 is_stmt 1
 315 0070 0023     	 mov r3,#0
 316 0072 07E0     	 b .L12
 317              	.L18:
 474:../Dave/Generated/UCPROBE/lib_str.c ****     }
 475:../Dave/Generated/UCPROBE/lib_str.c **** 
 476:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_copy < len_max) {                                   /* If  copy str len < max buf len (
 318              	 .loc 1 476 0
 319 0074 7A69     	 ldr r2,[r7,#20]
 320 0076 7B68     	 ldr r3,[r7,#4]
 321 0078 9A42     	 cmp r2,r3
 322 007a 02D2     	 bcs .L19
 477:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 323              	 .loc 1 477 0
 324 007c FB69     	 ldr r3,[r7,#28]
 325 007e 0022     	 mov r2,#0
 326 0080 1A70     	 strb r2,[r3]
 327              	.L19:
 478:../Dave/Generated/UCPROBE/lib_str.c ****     }
 479:../Dave/Generated/UCPROBE/lib_str.c **** 
 480:../Dave/Generated/UCPROBE/lib_str.c **** 
 481:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 328              	 .loc 1 481 0
 329 0082 FB68     	 ldr r3,[r7,#12]
 330              	.L12:
 482:../Dave/Generated/UCPROBE/lib_str.c **** }
 331              	 .loc 1 482 0
 332 0084 181C     	 mov r0,r3
 333 0086 BD46     	 mov sp,r7
 334 0088 08B0     	 add sp,sp,#32
 335              	 
 336 008a 80BD     	 pop {r7,pc}
 337              	 .cfi_endproc
 338              	.LFE3:
 340              	 .section .text.Str_Cat,"ax",%progbits
 341              	 .align 2
 342              	 .global Str_Cat
 343              	 .code 16
 344              	 .thumb_func
 346              	Str_Cat:
 347              	.LFB4:
 483:../Dave/Generated/UCPROBE/lib_str.c **** 
 484:../Dave/Generated/UCPROBE/lib_str.c **** 
 485:../Dave/Generated/UCPROBE/lib_str.c **** /*
 486:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 487:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Cat()
 488:../Dave/Generated/UCPROBE/lib_str.c **** *
 489:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Append concatenation string to destination string.
 490:../Dave/Generated/UCPROBE/lib_str.c **** *
 491:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 492:../Dave/Generated/UCPROBE/lib_str.c **** *
 493:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 494:../Dave/Generated/UCPROBE/lib_str.c **** *
 495:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 496:../Dave/Generated/UCPROBE/lib_str.c **** *
 497:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 498:../Dave/Generated/UCPROBE/lib_str.c **** *
 499:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 500:../Dave/Generated/UCPROBE/lib_str.c **** *
 501:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 502:../Dave/Generated/UCPROBE/lib_str.c **** *
 503:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire
 504:../Dave/Generated/UCPROBE/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 505:../Dave/Generated/UCPROBE/lib_str.c **** *
 506:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 507:../Dave/Generated/UCPROBE/lib_str.c **** *
 508:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 509:../Dave/Generated/UCPROBE/lib_str.c **** *
 510:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcat() function shall append a copy of the string pointed to by 
 511:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('pstr_cat') ... to the end of the string pointed to by 's1' ('pstr_des
 512:../Dave/Generated/UCPROBE/lib_str.c **** *
 513:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 514:../Dave/Generated/UCPROBE/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 515:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  A "terminating null byte" is appended at the end of the concatenat
 516:../Dave/Generated/UCPROBE/lib_str.c **** *                                destination strings.
 517:../Dave/Generated/UCPROBE/lib_str.c **** *
 518:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : RETURN VALUE' states tha
 519:../Dave/Generated/UCPROBE/lib_str.c **** *
 520:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcat() function shall return 's1' ('pstr_dest');" ...
 521:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 522:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 523:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 524:../Dave/Generated/UCPROBE/lib_str.c **** *
 525:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 526:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 527:../Dave/Generated/UCPROBE/lib_str.c **** *
 528:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String concatenation terminates when :
 529:../Dave/Generated/UCPROBE/lib_str.c **** *
 530:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 531:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 532:../Dave/Generated/UCPROBE/lib_str.c **** *
 533:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 534:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 535:../Dave/Generated/UCPROBE/lib_str.c **** *
 536:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 537:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 538:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 539:../Dave/Generated/UCPROBE/lib_str.c **** */
 540:../Dave/Generated/UCPROBE/lib_str.c **** 
 541:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Cat (       CPU_CHAR  *pstr_dest,
 542:../Dave/Generated/UCPROBE/lib_str.c ****                     const  CPU_CHAR  *pstr_cat)
 543:../Dave/Generated/UCPROBE/lib_str.c **** {
 348              	 .loc 1 543 0
 349              	 .cfi_startproc
 350 0000 80B5     	 push {r7,lr}
 351              	.LCFI12:
 352              	 .cfi_def_cfa_offset 8
 353              	 .cfi_offset 7,-8
 354              	 .cfi_offset 14,-4
 355 0002 84B0     	 sub sp,sp,#16
 356              	.LCFI13:
 357              	 .cfi_def_cfa_offset 24
 358 0004 00AF     	 add r7,sp,#0
 359              	.LCFI14:
 360              	 .cfi_def_cfa_register 7
 361 0006 7860     	 str r0,[r7,#4]
 362 0008 3960     	 str r1,[r7]
 544:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 545:../Dave/Generated/UCPROBE/lib_str.c **** 
 546:../Dave/Generated/UCPROBE/lib_str.c **** 
 547:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Cat_N(pstr_dest,
 363              	 .loc 1 547 0
 364 000a 7968     	 ldr r1,[r7,#4]
 365 000c 3A68     	 ldr r2,[r7]
 366 000e 0123     	 mov r3,#1
 367 0010 5B42     	 neg r3,r3
 368 0012 081C     	 mov r0,r1
 369 0014 111C     	 mov r1,r2
 370 0016 1A1C     	 mov r2,r3
 371 0018 FFF7FEFF 	 bl Str_Cat_N
 372 001c 031C     	 mov r3,r0
 373 001e FB60     	 str r3,[r7,#12]
 548:../Dave/Generated/UCPROBE/lib_str.c ****                          pstr_cat,
 549:../Dave/Generated/UCPROBE/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
 550:../Dave/Generated/UCPROBE/lib_str.c **** 
 551:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 374              	 .loc 1 551 0
 375 0020 FB68     	 ldr r3,[r7,#12]
 552:../Dave/Generated/UCPROBE/lib_str.c **** }
 376              	 .loc 1 552 0
 377 0022 181C     	 mov r0,r3
 378 0024 BD46     	 mov sp,r7
 379 0026 04B0     	 add sp,sp,#16
 380              	 
 381 0028 80BD     	 pop {r7,pc}
 382              	 .cfi_endproc
 383              	.LFE4:
 385 002a C046     	 .section .text.Str_Cat_N,"ax",%progbits
 386              	 .align 2
 387              	 .global Str_Cat_N
 388              	 .code 16
 389              	 .thumb_func
 391              	Str_Cat_N:
 392              	.LFB5:
 553:../Dave/Generated/UCPROBE/lib_str.c **** 
 554:../Dave/Generated/UCPROBE/lib_str.c **** 
 555:../Dave/Generated/UCPROBE/lib_str.c **** /*
 556:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 557:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Cat_N()
 558:../Dave/Generated/UCPROBE/lib_str.c **** *
 559:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Append concatenation string to destination string, up to a maximum number of charac
 560:../Dave/Generated/UCPROBE/lib_str.c **** *
 561:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 562:../Dave/Generated/UCPROBE/lib_str.c **** *
 563:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 564:../Dave/Generated/UCPROBE/lib_str.c **** *
 565:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to concatenate (see Notes #2a1B & #3d).
 566:../Dave/Generated/UCPROBE/lib_str.c **** *
 567:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 568:../Dave/Generated/UCPROBE/lib_str.c **** *
 569:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 570:../Dave/Generated/UCPROBE/lib_str.c **** *
 571:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 572:../Dave/Generated/UCPROBE/lib_str.c **** *
 573:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 574:../Dave/Generated/UCPROBE/lib_str.c **** *
 575:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire
 576:../Dave/Generated/UCPROBE/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 577:../Dave/Generated/UCPROBE/lib_str.c **** *
 578:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 579:../Dave/Generated/UCPROBE/lib_str.c **** *
 580:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 581:../Dave/Generated/UCPROBE/lib_str.c **** *
 582:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strncat() function shall append ... the array pointed to by 's
 583:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('pstr_cat') to the end of the string pointed to by 's1' ('pstr_des
 584:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes".
 585:../Dave/Generated/UCPROBE/lib_str.c **** *
 586:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 587:../Dave/Generated/UCPROBE/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 588:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "(a null byte and bytes that follow it are not appended)."
 589:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) "A terminating null byte is always appended to the result."
 590:../Dave/Generated/UCPROBE/lib_str.c **** *
 591:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : RETURN VALUE' states th
 592:../Dave/Generated/UCPROBE/lib_str.c **** *
 593:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncat() function shall return 's1' ('pstr_dest');" ...
 594:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 595:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 596:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 597:../Dave/Generated/UCPROBE/lib_str.c **** *
 598:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 599:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 600:../Dave/Generated/UCPROBE/lib_str.c **** *
 601:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String concatenation terminates when :
 602:../Dave/Generated/UCPROBE/lib_str.c **** *
 603:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 604:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 605:../Dave/Generated/UCPROBE/lib_str.c **** *
 606:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 607:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 608:../Dave/Generated/UCPROBE/lib_str.c **** *
 609:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 610:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 611:../Dave/Generated/UCPROBE/lib_str.c **** *
 612:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) 'len_max' number of characters concatenated.
 613:../Dave/Generated/UCPROBE/lib_str.c **** *
 614:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 615:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
 616:../Dave/Generated/UCPROBE/lib_str.c **** *
 617:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Null concatenations allowed (i.e. zero-length concatenations).
 618:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No string concatenation performed; destination string returned
 619:../Dave/Generated/UCPROBE/lib_str.c **** *                               (see Note #2b1).
 620:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 621:../Dave/Generated/UCPROBE/lib_str.c **** */
 622:../Dave/Generated/UCPROBE/lib_str.c **** 
 623:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Cat_N (       CPU_CHAR    *pstr_dest,
 624:../Dave/Generated/UCPROBE/lib_str.c ****                       const  CPU_CHAR    *pstr_cat,
 625:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_SIZE_T   len_max)
 626:../Dave/Generated/UCPROBE/lib_str.c **** {
 393              	 .loc 1 626 0
 394              	 .cfi_startproc
 395 0000 80B5     	 push {r7,lr}
 396              	.LCFI15:
 397              	 .cfi_def_cfa_offset 8
 398              	 .cfi_offset 7,-8
 399              	 .cfi_offset 14,-4
 400 0002 88B0     	 sub sp,sp,#32
 401              	.LCFI16:
 402              	 .cfi_def_cfa_offset 40
 403 0004 00AF     	 add r7,sp,#0
 404              	.LCFI17:
 405              	 .cfi_def_cfa_register 7
 406 0006 F860     	 str r0,[r7,#12]
 407 0008 B960     	 str r1,[r7,#8]
 408 000a 7A60     	 str r2,[r7,#4]
 627:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 628:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_cat_src;
 629:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_cat;
 630:../Dave/Generated/UCPROBE/lib_str.c **** 
 631:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 632:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 409              	 .loc 1 632 0
 410 000c FB68     	 ldr r3,[r7,#12]
 411 000e 002B     	 cmp r3,#0
 412 0010 01D1     	 bne .L23
 633:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 413              	 .loc 1 633 0
 414 0012 0023     	 mov r3,#0
 415 0014 47E0     	 b .L24
 416              	.L23:
 634:../Dave/Generated/UCPROBE/lib_str.c ****     }
 635:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_cat  == (const CPU_CHAR *)0) {
 417              	 .loc 1 635 0
 418 0016 BB68     	 ldr r3,[r7,#8]
 419 0018 002B     	 cmp r3,#0
 420 001a 01D1     	 bne .L25
 636:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 421              	 .loc 1 636 0
 422 001c 0023     	 mov r3,#0
 423 001e 42E0     	 b .L24
 424              	.L25:
 637:../Dave/Generated/UCPROBE/lib_str.c ****     }
 638:../Dave/Generated/UCPROBE/lib_str.c **** 
 639:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn dest str if cat len = 0 (see
 425              	 .loc 1 639 0
 426 0020 7B68     	 ldr r3,[r7,#4]
 427 0022 002B     	 cmp r3,#0
 428 0024 01D1     	 bne .L26
 640:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr_dest);
 429              	 .loc 1 640 0
 430 0026 FB68     	 ldr r3,[r7,#12]
 431 0028 3DE0     	 b .L24
 432              	.L26:
 641:../Dave/Generated/UCPROBE/lib_str.c ****     }
 642:../Dave/Generated/UCPROBE/lib_str.c **** 
 643:../Dave/Generated/UCPROBE/lib_str.c **** 
 644:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_cat_dest = pstr_dest;
 433              	 .loc 1 644 0
 434 002a FB68     	 ldr r3,[r7,#12]
 435 002c FB61     	 str r3,[r7,#28]
 645:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 436              	 .loc 1 645 0
 437 002e 02E0     	 b .L27
 438              	.L29:
 646:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 647:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 439              	 .loc 1 647 0
 440 0030 FB69     	 ldr r3,[r7,#28]
 441 0032 0133     	 add r3,r3,#1
 442 0034 FB61     	 str r3,[r7,#28]
 443              	.L27:
 645:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 444              	 .loc 1 645 0
 445 0036 FB69     	 ldr r3,[r7,#28]
 446 0038 002B     	 cmp r3,#0
 447 003a 03D0     	 beq .L28
 646:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 448              	 .loc 1 646 0 discriminator 1
 449 003c FB69     	 ldr r3,[r7,#28]
 450 003e 1B78     	 ldrb r3,[r3]
 645:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 451              	 .loc 1 645 0 discriminator 1
 452 0040 002B     	 cmp r3,#0
 453 0042 F5D1     	 bne .L29
 454              	.L28:
 648:../Dave/Generated/UCPROBE/lib_str.c ****     }
 649:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_cat_dest == (CPU_CHAR *)0) {                       /* Rtn NULL if NULL ptr found (see 
 455              	 .loc 1 649 0
 456 0044 FB69     	 ldr r3,[r7,#28]
 457 0046 002B     	 cmp r3,#0
 458 0048 01D1     	 bne .L30
 650:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 459              	 .loc 1 650 0
 460 004a 0023     	 mov r3,#0
 461 004c 2BE0     	 b .L24
 462              	.L30:
 651:../Dave/Generated/UCPROBE/lib_str.c ****     }
 652:../Dave/Generated/UCPROBE/lib_str.c **** 
 653:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_cat_src = pstr_cat;
 463              	 .loc 1 653 0
 464 004e BB68     	 ldr r3,[r7,#8]
 465 0050 BB61     	 str r3,[r7,#24]
 654:../Dave/Generated/UCPROBE/lib_str.c ****     len_cat      = 0u;
 466              	 .loc 1 654 0
 467 0052 0023     	 mov r3,#0
 468 0054 7B61     	 str r3,[r7,#20]
 655:../Dave/Generated/UCPROBE/lib_str.c **** 
 656:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (      CPU_CHAR *)  0 ) &&        /* Cat str until NULL ptr(s)  [see 
 469              	 .loc 1 656 0
 470 0056 0CE0     	 b .L31
 471              	.L33:
 657:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 658:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 659:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 660:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_cat_dest = *pstr_cat_src;
 472              	 .loc 1 660 0
 473 0058 BB69     	 ldr r3,[r7,#24]
 474 005a 1A78     	 ldrb r2,[r3]
 475 005c FB69     	 ldr r3,[r7,#28]
 476 005e 1A70     	 strb r2,[r3]
 661:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 477              	 .loc 1 661 0
 478 0060 FB69     	 ldr r3,[r7,#28]
 479 0062 0133     	 add r3,r3,#1
 480 0064 FB61     	 str r3,[r7,#28]
 662:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_src++;
 481              	 .loc 1 662 0
 482 0066 BB69     	 ldr r3,[r7,#24]
 483 0068 0133     	 add r3,r3,#1
 484 006a BB61     	 str r3,[r7,#24]
 663:../Dave/Generated/UCPROBE/lib_str.c ****         len_cat++;
 485              	 .loc 1 663 0
 486 006c 7B69     	 ldr r3,[r7,#20]
 487 006e 0133     	 add r3,r3,#1
 488 0070 7B61     	 str r3,[r7,#20]
 489              	.L31:
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 490              	 .loc 1 656 0
 491 0072 FB69     	 ldr r3,[r7,#28]
 492 0074 002B     	 cmp r3,#0
 493 0076 0AD0     	 beq .L32
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 494              	 .loc 1 656 0 is_stmt 0 discriminator 1
 495 0078 BB69     	 ldr r3,[r7,#24]
 496 007a 002B     	 cmp r3,#0
 497 007c 07D0     	 beq .L32
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 498              	 .loc 1 658 0 is_stmt 1
 499 007e BB69     	 ldr r3,[r7,#24]
 500 0080 1B78     	 ldrb r3,[r3]
 657:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 501              	 .loc 1 657 0
 502 0082 002B     	 cmp r3,#0
 503 0084 03D0     	 beq .L32
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 504              	 .loc 1 658 0
 505 0086 7A69     	 ldr r2,[r7,#20]
 506 0088 7B68     	 ldr r3,[r7,#4]
 507 008a 9A42     	 cmp r2,r3
 508 008c E4D3     	 bcc .L33
 509              	.L32:
 664:../Dave/Generated/UCPROBE/lib_str.c ****     }
 665:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found (s
 666:../Dave/Generated/UCPROBE/lib_str.c ****     if ((pstr_cat_dest == (      CPU_CHAR *)0) ||
 510              	 .loc 1 666 0
 511 008e FB69     	 ldr r3,[r7,#28]
 512 0090 002B     	 cmp r3,#0
 513 0092 02D0     	 beq .L34
 514              	 .loc 1 666 0 is_stmt 0 discriminator 1
 515 0094 BB69     	 ldr r3,[r7,#24]
 516 0096 002B     	 cmp r3,#0
 517 0098 01D1     	 bne .L35
 518              	.L34:
 667:../Dave/Generated/UCPROBE/lib_str.c ****         (pstr_cat_src  == (const CPU_CHAR *)0)) {
 668:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 519              	 .loc 1 668 0 is_stmt 1
 520 009a 0023     	 mov r3,#0
 521 009c 03E0     	 b .L24
 522              	.L35:
 669:../Dave/Generated/UCPROBE/lib_str.c ****     }
 670:../Dave/Generated/UCPROBE/lib_str.c **** 
 671:../Dave/Generated/UCPROBE/lib_str.c ****    *pstr_cat_dest = (CPU_CHAR)'\0';                             /* Append NULL char    (see Note #2
 523              	 .loc 1 671 0
 524 009e FB69     	 ldr r3,[r7,#28]
 525 00a0 0022     	 mov r2,#0
 526 00a2 1A70     	 strb r2,[r3]
 672:../Dave/Generated/UCPROBE/lib_str.c **** 
 673:../Dave/Generated/UCPROBE/lib_str.c **** 
 674:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 527              	 .loc 1 674 0
 528 00a4 FB68     	 ldr r3,[r7,#12]
 529              	.L24:
 675:../Dave/Generated/UCPROBE/lib_str.c **** }
 530              	 .loc 1 675 0
 531 00a6 181C     	 mov r0,r3
 532 00a8 BD46     	 mov sp,r7
 533 00aa 08B0     	 add sp,sp,#32
 534              	 
 535 00ac 80BD     	 pop {r7,pc}
 536              	 .cfi_endproc
 537              	.LFE5:
 539 00ae C046     	 .section .text.Str_Cmp,"ax",%progbits
 540              	 .align 2
 541              	 .global Str_Cmp
 542              	 .code 16
 543              	 .thumb_func
 545              	Str_Cmp:
 546              	.LFB6:
 676:../Dave/Generated/UCPROBE/lib_str.c **** 
 677:../Dave/Generated/UCPROBE/lib_str.c **** 
 678:../Dave/Generated/UCPROBE/lib_str.c **** /*
 679:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 680:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Cmp()
 681:../Dave/Generated/UCPROBE/lib_str.c **** *
 682:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical.
 683:../Dave/Generated/UCPROBE/lib_str.c **** *
 684:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 685:../Dave/Generated/UCPROBE/lib_str.c **** *
 686:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 687:../Dave/Generated/UCPROBE/lib_str.c **** *
 688:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 689:../Dave/Generated/UCPROBE/lib_str.c **** *
 690:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 691:../Dave/Generated/UCPROBE/lib_str.c **** *
 692:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 693:../Dave/Generated/UCPROBE/lib_str.c **** *
 694:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 695:../Dave/Generated/UCPROBE/lib_str.c **** *
 696:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 697:../Dave/Generated/UCPROBE/lib_str.c **** *
 698:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 699:../Dave/Generated/UCPROBE/lib_str.c **** *
 700:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' states that
 701:../Dave/Generated/UCPROBE/lib_str.c **** *                       strcmp() function shall compare the string pointed to by 's1' ('p1_str') to
 702:../Dave/Generated/UCPROBE/lib_str.c **** *                       string pointed to by 's2' ('p2_str)".
 703:../Dave/Generated/UCPROBE/lib_str.c **** *
 704:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : RETURN VALUE' states
 705:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strcmp() shall return an integer greater th
 706:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 707:../Dave/Generated/UCPROBE/lib_str.c **** *
 708:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 709:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 710:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 711:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 712:../Dave/Generated/UCPROBE/lib_str.c **** *
 713:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 714:../Dave/Generated/UCPROBE/lib_str.c **** *
 715:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 716:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 717:../Dave/Generated/UCPROBE/lib_str.c **** *
 718:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 719:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 720:../Dave/Generated/UCPROBE/lib_str.c **** *
 721:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 722:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 723:../Dave/Generated/UCPROBE/lib_str.c **** *
 724:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 725:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 726:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 727:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 728:../Dave/Generated/UCPROBE/lib_str.c **** *
 729:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 730:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 731:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 732:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 733:../Dave/Generated/UCPROBE/lib_str.c **** *
 734:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 735:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 736:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 737:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 738:../Dave/Generated/UCPROBE/lib_str.c **** *
 739:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 740:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
 741:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 742:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
 743:../Dave/Generated/UCPROBE/lib_str.c **** *
 744:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
 745:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 746:../Dave/Generated/UCPROBE/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 747:../Dave/Generated/UCPROBE/lib_str.c **** *
 748:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 749:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 750:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 751:../Dave/Generated/UCPROBE/lib_str.c **** */
 752:../Dave/Generated/UCPROBE/lib_str.c **** 
 753:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_Cmp (const  CPU_CHAR  *p1_str,
 754:../Dave/Generated/UCPROBE/lib_str.c ****                      const  CPU_CHAR  *p2_str)
 755:../Dave/Generated/UCPROBE/lib_str.c **** {
 547              	 .loc 1 755 0
 548              	 .cfi_startproc
 549 0000 90B5     	 push {r4,r7,lr}
 550              	.LCFI18:
 551              	 .cfi_def_cfa_offset 12
 552              	 .cfi_offset 4,-12
 553              	 .cfi_offset 7,-8
 554              	 .cfi_offset 14,-4
 555 0002 85B0     	 sub sp,sp,#20
 556              	.LCFI19:
 557              	 .cfi_def_cfa_offset 32
 558 0004 00AF     	 add r7,sp,#0
 559              	.LCFI20:
 560              	 .cfi_def_cfa_register 7
 561 0006 7860     	 str r0,[r7,#4]
 562 0008 3960     	 str r1,[r7]
 756:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
 757:../Dave/Generated/UCPROBE/lib_str.c **** 
 758:../Dave/Generated/UCPROBE/lib_str.c **** 
 759:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_val = Str_Cmp_N(p1_str,
 563              	 .loc 1 759 0
 564 000a 0E23     	 mov r3,#14
 565 000c FC18     	 add r4,r7,r3
 566 000e 7968     	 ldr r1,[r7,#4]
 567 0010 3A68     	 ldr r2,[r7]
 568 0012 0123     	 mov r3,#1
 569 0014 5B42     	 neg r3,r3
 570 0016 081C     	 mov r0,r1
 571 0018 111C     	 mov r1,r2
 572 001a 1A1C     	 mov r2,r3
 573 001c FFF7FEFF 	 bl Str_Cmp_N
 574 0020 031C     	 mov r3,r0
 575 0022 2380     	 strh r3,[r4]
 760:../Dave/Generated/UCPROBE/lib_str.c ****                         p2_str,
 761:../Dave/Generated/UCPROBE/lib_str.c ****                         DEF_INT_CPU_U_MAX_VAL);
 762:../Dave/Generated/UCPROBE/lib_str.c **** 
 763:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 576              	 .loc 1 763 0
 577 0024 0E23     	 mov r3,#14
 578 0026 FB18     	 add r3,r7,r3
 579 0028 1B88     	 ldrh r3,[r3]
 580 002a 1BB2     	 sxth r3,r3
 764:../Dave/Generated/UCPROBE/lib_str.c **** }
 581              	 .loc 1 764 0
 582 002c 181C     	 mov r0,r3
 583 002e BD46     	 mov sp,r7
 584 0030 05B0     	 add sp,sp,#20
 585              	 
 586 0032 90BD     	 pop {r4,r7,pc}
 587              	 .cfi_endproc
 588              	.LFE6:
 590              	 .section .text.Str_Cmp_N,"ax",%progbits
 591              	 .align 2
 592              	 .global Str_Cmp_N
 593              	 .code 16
 594              	 .thumb_func
 596              	Str_Cmp_N:
 597              	.LFB7:
 765:../Dave/Generated/UCPROBE/lib_str.c **** 
 766:../Dave/Generated/UCPROBE/lib_str.c **** 
 767:../Dave/Generated/UCPROBE/lib_str.c **** /*
 768:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 769:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Cmp_N()
 770:../Dave/Generated/UCPROBE/lib_str.c **** *
 771:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters.
 772:../Dave/Generated/UCPROBE/lib_str.c **** *
 773:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 774:../Dave/Generated/UCPROBE/lib_str.c **** *
 775:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 776:../Dave/Generated/UCPROBE/lib_str.c **** *
 777:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
 778:../Dave/Generated/UCPROBE/lib_str.c **** *
 779:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 780:../Dave/Generated/UCPROBE/lib_str.c **** *
 781:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 782:../Dave/Generated/UCPROBE/lib_str.c **** *
 783:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 784:../Dave/Generated/UCPROBE/lib_str.c **** *
 785:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 786:../Dave/Generated/UCPROBE/lib_str.c **** *
 787:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 788:../Dave/Generated/UCPROBE/lib_str.c **** *
 789:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 790:../Dave/Generated/UCPROBE/lib_str.c **** *
 791:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' states tha
 792:../Dave/Generated/UCPROBE/lib_str.c **** *
 793:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncmp() function shall compare ... the array pointed to by 's1' 
 794:../Dave/Generated/UCPROBE/lib_str.c **** *                            to the array pointed to by 's2' ('p2_str)" ...
 795:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2)  but "not more than 'n' ('len_max') bytes" of either array.
 796:../Dave/Generated/UCPROBE/lib_str.c **** *
 797:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : RETURN VALUE' state
 798:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strncmp() shall return an integer greater t
 799:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 800:../Dave/Generated/UCPROBE/lib_str.c **** *
 801:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' adds t
 802:../Dave/Generated/UCPROBE/lib_str.c **** *                          "the sign of a non-zero return value is determined by the sign of the di
 803:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 804:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 805:../Dave/Generated/UCPROBE/lib_str.c **** *
 806:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 807:../Dave/Generated/UCPROBE/lib_str.c **** *
 808:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 809:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 810:../Dave/Generated/UCPROBE/lib_str.c **** *
 811:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 812:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 813:../Dave/Generated/UCPROBE/lib_str.c **** *
 814:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 815:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 816:../Dave/Generated/UCPROBE/lib_str.c **** *
 817:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 818:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 819:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 820:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 821:../Dave/Generated/UCPROBE/lib_str.c **** *
 822:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 823:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 824:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 825:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 826:../Dave/Generated/UCPROBE/lib_str.c **** *
 827:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 828:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 829:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 830:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 831:../Dave/Generated/UCPROBE/lib_str.c **** *
 832:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 833:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
 834:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 835:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
 836:../Dave/Generated/UCPROBE/lib_str.c **** *
 837:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
 838:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 839:../Dave/Generated/UCPROBE/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 840:../Dave/Generated/UCPROBE/lib_str.c **** *
 841:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
 842:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
 843:../Dave/Generated/UCPROBE/lib_str.c **** *
 844:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
 845:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Strings identical; 0 returned.
 846:../Dave/Generated/UCPROBE/lib_str.c **** *
 847:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2a2.
 848:../Dave/Generated/UCPROBE/lib_str.c **** *
 849:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 850:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 851:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 852:../Dave/Generated/UCPROBE/lib_str.c **** */
 853:../Dave/Generated/UCPROBE/lib_str.c **** 
 854:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_Cmp_N (const  CPU_CHAR    *p1_str,
 855:../Dave/Generated/UCPROBE/lib_str.c ****                        const  CPU_CHAR    *p2_str,
 856:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 857:../Dave/Generated/UCPROBE/lib_str.c **** {
 598              	 .loc 1 857 0
 599              	 .cfi_startproc
 600 0000 80B5     	 push {r7,lr}
 601              	.LCFI21:
 602              	 .cfi_def_cfa_offset 8
 603              	 .cfi_offset 7,-8
 604              	 .cfi_offset 14,-4
 605 0002 8AB0     	 sub sp,sp,#40
 606              	.LCFI22:
 607              	 .cfi_def_cfa_offset 48
 608 0004 00AF     	 add r7,sp,#0
 609              	.LCFI23:
 610              	 .cfi_def_cfa_register 7
 611 0006 F860     	 str r0,[r7,#12]
 612 0008 B960     	 str r1,[r7,#8]
 613 000a 7A60     	 str r2,[r7,#4]
 858:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 859:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
 860:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
 861:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
 862:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S   cmp_val;
 863:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   cmp_len;
 864:../Dave/Generated/UCPROBE/lib_str.c **** 
 865:../Dave/Generated/UCPROBE/lib_str.c **** 
 866:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
 614              	 .loc 1 866 0
 615 000c 7B68     	 ldr r3,[r7,#4]
 616 000e 002B     	 cmp r3,#0
 617 0010 01D1     	 bne .L39
 867:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
 618              	 .loc 1 867 0
 619 0012 0023     	 mov r3,#0
 620 0014 90E0     	 b .L40
 621              	.L39:
 868:../Dave/Generated/UCPROBE/lib_str.c ****     }
 869:../Dave/Generated/UCPROBE/lib_str.c **** 
 870:../Dave/Generated/UCPROBE/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 622              	 .loc 1 870 0
 623 0016 FB68     	 ldr r3,[r7,#12]
 624 0018 002B     	 cmp r3,#0
 625 001a 10D1     	 bne .L41
 871:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 626              	 .loc 1 871 0
 627 001c BB68     	 ldr r3,[r7,#8]
 628 001e 002B     	 cmp r3,#0
 629 0020 01D1     	 bne .L42
 872:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 630              	 .loc 1 872 0
 631 0022 0023     	 mov r3,#0
 632 0024 88E0     	 b .L40
 633              	.L42:
 873:../Dave/Generated/UCPROBE/lib_str.c ****         }
 874:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)(*p2_str));
 634              	 .loc 1 874 0
 635 0026 BB68     	 ldr r3,[r7,#8]
 636 0028 1B78     	 ldrb r3,[r3]
 637 002a 9BB2     	 uxth r3,r3
 638 002c 5B42     	 neg r3,r3
 639 002e 9AB2     	 uxth r2,r3
 640 0030 1623     	 mov r3,#22
 641 0032 FB18     	 add r3,r7,r3
 642 0034 1A80     	 strh r2,[r3]
 875:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 643              	 .loc 1 875 0
 644 0036 1623     	 mov r3,#22
 645 0038 FB18     	 add r3,r7,r3
 646 003a 1B88     	 ldrh r3,[r3]
 647 003c 7CE0     	 b .L40
 648              	.L41:
 876:../Dave/Generated/UCPROBE/lib_str.c ****     }
 877:../Dave/Generated/UCPROBE/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 649              	 .loc 1 877 0
 650 003e BB68     	 ldr r3,[r7,#8]
 651 0040 002B     	 cmp r3,#0
 652 0042 08D1     	 bne .L43
 878:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 653              	 .loc 1 878 0
 654 0044 FB68     	 ldr r3,[r7,#12]
 655 0046 1A78     	 ldrb r2,[r3]
 656 0048 1623     	 mov r3,#22
 657 004a FB18     	 add r3,r7,r3
 658 004c 1A80     	 strh r2,[r3]
 879:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 659              	 .loc 1 879 0
 660 004e 1623     	 mov r3,#22
 661 0050 FB18     	 add r3,r7,r3
 662 0052 1B88     	 ldrh r3,[r3]
 663 0054 70E0     	 b .L40
 664              	.L43:
 880:../Dave/Generated/UCPROBE/lib_str.c ****     }
 881:../Dave/Generated/UCPROBE/lib_str.c **** 
 882:../Dave/Generated/UCPROBE/lib_str.c **** 
 883:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp      = p1_str;
 665              	 .loc 1 883 0
 666 0056 FB68     	 ldr r3,[r7,#12]
 667 0058 7B62     	 str r3,[r7,#36]
 884:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp      = p2_str;
 668              	 .loc 1 884 0
 669 005a BB68     	 ldr r3,[r7,#8]
 670 005c 3B62     	 str r3,[r7,#32]
 885:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 671              	 .loc 1 885 0
 672 005e 7B6A     	 ldr r3,[r7,#36]
 673 0060 FB61     	 str r3,[r7,#28]
 886:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 674              	 .loc 1 886 0
 675 0062 3B6A     	 ldr r3,[r7,#32]
 676 0064 BB61     	 str r3,[r7,#24]
 887:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next++;
 677              	 .loc 1 887 0
 678 0066 FB69     	 ldr r3,[r7,#28]
 679 0068 0133     	 add r3,r3,#1
 680 006a FB61     	 str r3,[r7,#28]
 888:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 681              	 .loc 1 888 0
 682 006c BB69     	 ldr r3,[r7,#24]
 683 006e 0133     	 add r3,r3,#1
 684 0070 BB61     	 str r3,[r7,#24]
 889:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 685              	 .loc 1 889 0
 686 0072 0023     	 mov r3,#0
 687 0074 3B61     	 str r3,[r7,#16]
 890:../Dave/Generated/UCPROBE/lib_str.c **** 
 891:../Dave/Generated/UCPROBE/lib_str.c ****     while ((*p1_str_cmp      == *p2_str_cmp)            &&      /* Cmp strs until non-matching char
 688              	 .loc 1 891 0
 689 0076 0EE0     	 b .L44
 690              	.L46:
 892:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 895:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 896:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp++;
 691              	 .loc 1 896 0
 692 0078 7B6A     	 ldr r3,[r7,#36]
 693 007a 0133     	 add r3,r3,#1
 694 007c 7B62     	 str r3,[r7,#36]
 897:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp++;
 695              	 .loc 1 897 0
 696 007e 3B6A     	 ldr r3,[r7,#32]
 697 0080 0133     	 add r3,r3,#1
 698 0082 3B62     	 str r3,[r7,#32]
 898:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp_next++;
 699              	 .loc 1 898 0
 700 0084 FB69     	 ldr r3,[r7,#28]
 701 0086 0133     	 add r3,r3,#1
 702 0088 FB61     	 str r3,[r7,#28]
 899:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 703              	 .loc 1 899 0
 704 008a BB69     	 ldr r3,[r7,#24]
 705 008c 0133     	 add r3,r3,#1
 706 008e BB61     	 str r3,[r7,#24]
 900:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 707              	 .loc 1 900 0
 708 0090 3B69     	 ldr r3,[r7,#16]
 709 0092 0133     	 add r3,r3,#1
 710 0094 3B61     	 str r3,[r7,#16]
 711              	.L44:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 712              	 .loc 1 891 0
 713 0096 7B6A     	 ldr r3,[r7,#36]
 714 0098 1A78     	 ldrb r2,[r3]
 715 009a 3B6A     	 ldr r3,[r7,#32]
 716 009c 1B78     	 ldrb r3,[r3]
 717 009e 9A42     	 cmp r2,r3
 718 00a0 0DD1     	 bne .L45
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 719              	 .loc 1 892 0 discriminator 1
 720 00a2 7B6A     	 ldr r3,[r7,#36]
 721 00a4 1B78     	 ldrb r3,[r3]
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 722              	 .loc 1 891 0 discriminator 1
 723 00a6 002B     	 cmp r3,#0
 724 00a8 09D0     	 beq .L45
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 725              	 .loc 1 892 0
 726 00aa FB69     	 ldr r3,[r7,#28]
 727 00ac 002B     	 cmp r3,#0
 728 00ae 06D0     	 beq .L45
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 729              	 .loc 1 893 0
 730 00b0 BB69     	 ldr r3,[r7,#24]
 731 00b2 002B     	 cmp r3,#0
 732 00b4 03D0     	 beq .L45
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 733              	 .loc 1 894 0
 734 00b6 3A69     	 ldr r2,[r7,#16]
 735 00b8 7B68     	 ldr r3,[r7,#4]
 736 00ba 9A42     	 cmp r2,r3
 737 00bc DCD3     	 bcc .L46
 738              	.L45:
 901:../Dave/Generated/UCPROBE/lib_str.c ****     }
 902:../Dave/Generated/UCPROBE/lib_str.c **** 
 903:../Dave/Generated/UCPROBE/lib_str.c **** 
 904:../Dave/Generated/UCPROBE/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 739              	 .loc 1 904 0
 740 00be 3A69     	 ldr r2,[r7,#16]
 741 00c0 7B68     	 ldr r3,[r7,#4]
 742 00c2 9A42     	 cmp r2,r3
 743 00c4 01D1     	 bne .L47
 905:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 744              	 .loc 1 905 0
 745 00c6 0023     	 mov r3,#0
 746 00c8 36E0     	 b .L40
 747              	.L47:
 906:../Dave/Generated/UCPROBE/lib_str.c ****     }
 907:../Dave/Generated/UCPROBE/lib_str.c **** 
 908:../Dave/Generated/UCPROBE/lib_str.c ****     if (*p1_str_cmp != *p2_str_cmp) {                           /* If strs NOT identical, ...      
 748              	 .loc 1 908 0
 749 00ca 7B6A     	 ldr r3,[r7,#36]
 750 00cc 1A78     	 ldrb r2,[r3]
 751 00ce 3B6A     	 ldr r3,[r7,#32]
 752 00d0 1B78     	 ldrb r3,[r3]
 753 00d2 9A42     	 cmp r2,r3
 754 00d4 0BD0     	 beq .L48
 909:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
 910:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)((CPU_INT16S)(*p1_str_cmp) - (CPU_INT16S)(*p2_str_cmp));
 755              	 .loc 1 910 0
 756 00d6 7B6A     	 ldr r3,[r7,#36]
 757 00d8 1B78     	 ldrb r3,[r3]
 758 00da 9AB2     	 uxth r2,r3
 759 00dc 3B6A     	 ldr r3,[r7,#32]
 760 00de 1B78     	 ldrb r3,[r3]
 761 00e0 9BB2     	 uxth r3,r3
 762 00e2 D31A     	 sub r3,r2,r3
 763 00e4 9AB2     	 uxth r2,r3
 764 00e6 1623     	 mov r3,#22
 765 00e8 FB18     	 add r3,r7,r3
 766 00ea 1A80     	 strh r2,[r3]
 767 00ec 21E0     	 b .L49
 768              	.L48:
 911:../Dave/Generated/UCPROBE/lib_str.c **** 
 912:../Dave/Generated/UCPROBE/lib_str.c ****     } else if (*p1_str_cmp  == (CPU_CHAR)'\0') {                /* If NULL char(s) found, ...      
 769              	 .loc 1 912 0
 770 00ee 7B6A     	 ldr r3,[r7,#36]
 771 00f0 1B78     	 ldrb r3,[r3]
 772 00f2 002B     	 cmp r3,#0
 773 00f4 04D1     	 bne .L50
 913:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 774              	 .loc 1 913 0
 775 00f6 1623     	 mov r3,#22
 776 00f8 FB18     	 add r3,r7,r3
 777 00fa 0022     	 mov r2,#0
 778 00fc 1A80     	 strh r2,[r3]
 779 00fe 18E0     	 b .L49
 780              	.L50:
 914:../Dave/Generated/UCPROBE/lib_str.c **** 
 915:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
 916:../Dave/Generated/UCPROBE/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 781              	 .loc 1 916 0
 782 0100 FB69     	 ldr r3,[r7,#28]
 783 0102 002B     	 cmp r3,#0
 784 0104 10D1     	 bne .L51
 917:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 785              	 .loc 1 917 0
 786 0106 BB69     	 ldr r3,[r7,#24]
 787 0108 002B     	 cmp r3,#0
 788 010a 04D1     	 bne .L52
 918:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 789              	 .loc 1 918 0
 790 010c 1623     	 mov r3,#22
 791 010e FB18     	 add r3,r7,r3
 792 0110 0022     	 mov r2,#0
 793 0112 1A80     	 strh r2,[r3]
 794 0114 0DE0     	 b .L49
 795              	.L52:
 919:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
 920:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
 921:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)(*p2_str_cmp_next));
 796              	 .loc 1 921 0
 797 0116 BB69     	 ldr r3,[r7,#24]
 798 0118 1B78     	 ldrb r3,[r3]
 799 011a 9BB2     	 uxth r3,r3
 800 011c 5B42     	 neg r3,r3
 801 011e 9AB2     	 uxth r2,r3
 802 0120 1623     	 mov r3,#22
 803 0122 FB18     	 add r3,r7,r3
 804 0124 1A80     	 strh r2,[r3]
 805 0126 04E0     	 b .L49
 806              	.L51:
 922:../Dave/Generated/UCPROBE/lib_str.c ****             }
 923:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
 924:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)(*p1_str_cmp_next);           /* ... rtn pos p1_str_cmp_next val 
 807              	 .loc 1 924 0
 808 0128 FB69     	 ldr r3,[r7,#28]
 809 012a 1A78     	 ldrb r2,[r3]
 810 012c 1623     	 mov r3,#22
 811 012e FB18     	 add r3,r7,r3
 812 0130 1A80     	 strh r2,[r3]
 813              	.L49:
 925:../Dave/Generated/UCPROBE/lib_str.c ****         }
 926:../Dave/Generated/UCPROBE/lib_str.c ****     }
 927:../Dave/Generated/UCPROBE/lib_str.c **** 
 928:../Dave/Generated/UCPROBE/lib_str.c **** 
 929:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 814              	 .loc 1 929 0
 815 0132 1623     	 mov r3,#22
 816 0134 FB18     	 add r3,r7,r3
 817 0136 1B88     	 ldrh r3,[r3]
 818              	.L40:
 819 0138 1BB2     	 sxth r3,r3
 930:../Dave/Generated/UCPROBE/lib_str.c **** }
 820              	 .loc 1 930 0
 821 013a 181C     	 mov r0,r3
 822 013c BD46     	 mov sp,r7
 823 013e 0AB0     	 add sp,sp,#40
 824              	 
 825 0140 80BD     	 pop {r7,pc}
 826              	 .cfi_endproc
 827              	.LFE7:
 829 0142 C046     	 .section .text.Str_CmpIgnoreCase,"ax",%progbits
 830              	 .align 2
 831              	 .global Str_CmpIgnoreCase
 832              	 .code 16
 833              	 .thumb_func
 835              	Str_CmpIgnoreCase:
 836              	.LFB8:
 931:../Dave/Generated/UCPROBE/lib_str.c **** 
 932:../Dave/Generated/UCPROBE/lib_str.c **** 
 933:../Dave/Generated/UCPROBE/lib_str.c **** /*
 934:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 935:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_CmpIgnoreCase()
 936:../Dave/Generated/UCPROBE/lib_str.c **** *
 937:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical, ignoring case.
 938:../Dave/Generated/UCPROBE/lib_str.c **** *
 939:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 940:../Dave/Generated/UCPROBE/lib_str.c **** *
 941:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 942:../Dave/Generated/UCPROBE/lib_str.c **** *
 943:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 944:../Dave/Generated/UCPROBE/lib_str.c **** *
 945:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 946:../Dave/Generated/UCPROBE/lib_str.c **** *
 947:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 948:../Dave/Generated/UCPROBE/lib_str.c **** *
 949:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 950:../Dave/Generated/UCPROBE/lib_str.c **** *
 951:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 952:../Dave/Generated/UCPROBE/lib_str.c **** *
 953:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 954:../Dave/Generated/UCPROBE/lib_str.c **** *
 955:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : DESCRIPTION' states 
 956:../Dave/Generated/UCPROBE/lib_str.c **** *
 957:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strcasecmp() function shall compare ... the string pointed to 
 958:../Dave/Generated/UCPROBE/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
 959:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "ignoring differences in case".
 960:../Dave/Generated/UCPROBE/lib_str.c **** *
 961:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "strcasecmp() ... shall behave as if the strings had been converted to 
 962:../Dave/Generated/UCPROBE/lib_str.c **** *                            and then a byte comparison performed."
 963:../Dave/Generated/UCPROBE/lib_str.c **** *
 964:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : RETURN VALUE' st
 965:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strcasecmp() shall return an integer greate
 966:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 967:../Dave/Generated/UCPROBE/lib_str.c **** *
 968:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 969:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 970:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 971:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 972:../Dave/Generated/UCPROBE/lib_str.c **** *
 973:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 974:../Dave/Generated/UCPROBE/lib_str.c **** *
 975:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 976:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 977:../Dave/Generated/UCPROBE/lib_str.c **** *
 978:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 979:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
 980:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
 981:../Dave/Generated/UCPROBE/lib_str.c **** *
 982:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 983:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
 984:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
 985:../Dave/Generated/UCPROBE/lib_str.c **** *
 986:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 987:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 988:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 989:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 990:../Dave/Generated/UCPROBE/lib_str.c **** *
 991:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 992:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 993:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 994:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 995:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
 996:../Dave/Generated/UCPROBE/lib_str.c **** *
 997:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 998:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 999:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1000:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1001:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1002:../Dave/Generated/UCPROBE/lib_str.c **** *
1003:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1004:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
1005:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1006:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
1007:../Dave/Generated/UCPROBE/lib_str.c **** *
1008:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
1009:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1010:../Dave/Generated/UCPROBE/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1011:../Dave/Generated/UCPROBE/lib_str.c **** *                           to lower case.
1012:../Dave/Generated/UCPROBE/lib_str.c **** *
1013:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1014:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1015:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1016:../Dave/Generated/UCPROBE/lib_str.c **** */
1017:../Dave/Generated/UCPROBE/lib_str.c **** 
1018:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase (const  CPU_CHAR  *p1_str,
1019:../Dave/Generated/UCPROBE/lib_str.c ****                                const  CPU_CHAR  *p2_str)
1020:../Dave/Generated/UCPROBE/lib_str.c **** {
 837              	 .loc 1 1020 0
 838              	 .cfi_startproc
 839 0000 90B5     	 push {r4,r7,lr}
 840              	.LCFI24:
 841              	 .cfi_def_cfa_offset 12
 842              	 .cfi_offset 4,-12
 843              	 .cfi_offset 7,-8
 844              	 .cfi_offset 14,-4
 845 0002 85B0     	 sub sp,sp,#20
 846              	.LCFI25:
 847              	 .cfi_def_cfa_offset 32
 848 0004 00AF     	 add r7,sp,#0
 849              	.LCFI26:
 850              	 .cfi_def_cfa_register 7
 851 0006 7860     	 str r0,[r7,#4]
 852 0008 3960     	 str r1,[r7]
1021:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
1022:../Dave/Generated/UCPROBE/lib_str.c **** 
1023:../Dave/Generated/UCPROBE/lib_str.c **** 
1024:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_val = Str_CmpIgnoreCase_N(p1_str,
 853              	 .loc 1 1024 0
 854 000a 0E23     	 mov r3,#14
 855 000c FC18     	 add r4,r7,r3
 856 000e 7968     	 ldr r1,[r7,#4]
 857 0010 3A68     	 ldr r2,[r7]
 858 0012 0123     	 mov r3,#1
 859 0014 5B42     	 neg r3,r3
 860 0016 081C     	 mov r0,r1
 861 0018 111C     	 mov r1,r2
 862 001a 1A1C     	 mov r2,r3
 863 001c FFF7FEFF 	 bl Str_CmpIgnoreCase_N
 864 0020 031C     	 mov r3,r0
 865 0022 2380     	 strh r3,[r4]
1025:../Dave/Generated/UCPROBE/lib_str.c ****                                   p2_str,
1026:../Dave/Generated/UCPROBE/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1027:../Dave/Generated/UCPROBE/lib_str.c **** 
1028:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 866              	 .loc 1 1028 0
 867 0024 0E23     	 mov r3,#14
 868 0026 FB18     	 add r3,r7,r3
 869 0028 1B88     	 ldrh r3,[r3]
 870 002a 1BB2     	 sxth r3,r3
1029:../Dave/Generated/UCPROBE/lib_str.c **** }
 871              	 .loc 1 1029 0
 872 002c 181C     	 mov r0,r3
 873 002e BD46     	 mov sp,r7
 874 0030 05B0     	 add sp,sp,#20
 875              	 
 876 0032 90BD     	 pop {r4,r7,pc}
 877              	 .cfi_endproc
 878              	.LFE8:
 880              	 .section .text.Str_CmpIgnoreCase_N,"ax",%progbits
 881              	 .align 2
 882              	 .global Str_CmpIgnoreCase_N
 883              	 .code 16
 884              	 .thumb_func
 886              	Str_CmpIgnoreCase_N:
 887              	.LFB9:
1030:../Dave/Generated/UCPROBE/lib_str.c **** 
1031:../Dave/Generated/UCPROBE/lib_str.c **** 
1032:../Dave/Generated/UCPROBE/lib_str.c **** /*
1033:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1034:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_CmpIgnoreCase_N()
1035:../Dave/Generated/UCPROBE/lib_str.c **** *
1036:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters,
1037:../Dave/Generated/UCPROBE/lib_str.c **** *                   ignoring case.
1038:../Dave/Generated/UCPROBE/lib_str.c **** *
1039:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
1040:../Dave/Generated/UCPROBE/lib_str.c **** *
1041:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
1042:../Dave/Generated/UCPROBE/lib_str.c **** *
1043:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
1044:../Dave/Generated/UCPROBE/lib_str.c **** *
1045:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
1046:../Dave/Generated/UCPROBE/lib_str.c **** *
1047:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
1048:../Dave/Generated/UCPROBE/lib_str.c **** *
1049:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
1050:../Dave/Generated/UCPROBE/lib_str.c **** *
1051:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
1052:../Dave/Generated/UCPROBE/lib_str.c **** *
1053:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1054:../Dave/Generated/UCPROBE/lib_str.c **** *
1055:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1056:../Dave/Generated/UCPROBE/lib_str.c **** *
1057:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : DESCRIPTION' states
1058:../Dave/Generated/UCPROBE/lib_str.c **** *
1059:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strncasecmp() function shall compare ... the string pointed to
1060:../Dave/Generated/UCPROBE/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
1061:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "ignoring differences in case"                           ...
1062:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C)  but "not more than 'n' ('len_max') bytes" of either string.
1063:../Dave/Generated/UCPROBE/lib_str.c **** *
1064:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "strncasecmp() shall behave as if the strings had been converted to low
1065:../Dave/Generated/UCPROBE/lib_str.c **** *                            and then a byte comparison performed."
1066:../Dave/Generated/UCPROBE/lib_str.c **** *
1067:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : RETURN VALUE' s
1068:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strncasecmp() shall return an integer great
1069:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
1070:../Dave/Generated/UCPROBE/lib_str.c **** *
1071:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
1072:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
1073:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
1074:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
1075:../Dave/Generated/UCPROBE/lib_str.c **** *
1076:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
1077:../Dave/Generated/UCPROBE/lib_str.c **** *
1078:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
1079:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
1080:../Dave/Generated/UCPROBE/lib_str.c **** *
1081:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
1082:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
1083:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
1084:../Dave/Generated/UCPROBE/lib_str.c **** *
1085:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
1086:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
1087:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
1088:../Dave/Generated/UCPROBE/lib_str.c **** *
1089:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
1090:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
1091:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
1092:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
1093:../Dave/Generated/UCPROBE/lib_str.c **** *
1094:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
1095:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
1096:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1097:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
1098:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1099:../Dave/Generated/UCPROBE/lib_str.c **** *
1100:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
1101:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1102:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1103:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1104:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1105:../Dave/Generated/UCPROBE/lib_str.c **** *
1106:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1107:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
1108:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1109:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
1110:../Dave/Generated/UCPROBE/lib_str.c **** *
1111:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
1112:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1113:../Dave/Generated/UCPROBE/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1114:../Dave/Generated/UCPROBE/lib_str.c **** *                           to lower case.
1115:../Dave/Generated/UCPROBE/lib_str.c **** *
1116:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
1117:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
1118:../Dave/Generated/UCPROBE/lib_str.c **** *
1119:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
1120:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Strings identical; 0 returned.
1121:../Dave/Generated/UCPROBE/lib_str.c **** *
1122:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2a1C.
1123:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
1124:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1125:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1126:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1127:../Dave/Generated/UCPROBE/lib_str.c **** */
1128:../Dave/Generated/UCPROBE/lib_str.c **** 
1129:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase_N (const  CPU_CHAR    *p1_str,
1130:../Dave/Generated/UCPROBE/lib_str.c ****                                  const  CPU_CHAR    *p2_str,
1131:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_SIZE_T   len_max)
1132:../Dave/Generated/UCPROBE/lib_str.c **** {
 888              	 .loc 1 1132 0
 889              	 .cfi_startproc
 890 0000 90B5     	 push {r4,r7,lr}
 891              	.LCFI27:
 892              	 .cfi_def_cfa_offset 12
 893              	 .cfi_offset 4,-12
 894              	 .cfi_offset 7,-8
 895              	 .cfi_offset 14,-4
 896 0002 8BB0     	 sub sp,sp,#44
 897              	.LCFI28:
 898              	 .cfi_def_cfa_offset 56
 899 0004 00AF     	 add r7,sp,#0
 900              	.LCFI29:
 901              	 .cfi_def_cfa_register 7
 902 0006 F860     	 str r0,[r7,#12]
 903 0008 B960     	 str r1,[r7,#8]
 904 000a 7A60     	 str r2,[r7,#4]
1133:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
1134:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
1135:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
1136:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
1137:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     char_1;
1138:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     char_2;
1139:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S   cmp_val;
1140:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   cmp_len;
1141:../Dave/Generated/UCPROBE/lib_str.c **** 
1142:../Dave/Generated/UCPROBE/lib_str.c **** 
1143:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
 905              	 .loc 1 1143 0
 906 000c 7B68     	 ldr r3,[r7,#4]
 907 000e 002B     	 cmp r3,#0
 908 0010 01D1     	 bne .L57
1144:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
 909              	 .loc 1 1144 0
 910 0012 0023     	 mov r3,#0
 911 0014 E3E0     	 b .L58
 912              	.L57:
1145:../Dave/Generated/UCPROBE/lib_str.c ****     }
1146:../Dave/Generated/UCPROBE/lib_str.c **** 
1147:../Dave/Generated/UCPROBE/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 913              	 .loc 1 1147 0
 914 0016 FB68     	 ldr r3,[r7,#12]
 915 0018 002B     	 cmp r3,#0
 916 001a 1AD1     	 bne .L59
1148:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 917              	 .loc 1 1148 0
 918 001c BB68     	 ldr r3,[r7,#8]
 919 001e 002B     	 cmp r3,#0
 920 0020 01D1     	 bne .L60
1149:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 921              	 .loc 1 1149 0
 922 0022 0023     	 mov r3,#0
 923 0024 DBE0     	 b .L58
 924              	.L60:
1150:../Dave/Generated/UCPROBE/lib_str.c ****         }
1151:../Dave/Generated/UCPROBE/lib_str.c ****         char_2  =  ASCII_ToLower(*p2_str);
 925              	 .loc 1 1151 0
 926 0026 BB68     	 ldr r3,[r7,#8]
 927 0028 1B78     	 ldrb r3,[r3]
 928 002a 1622     	 mov r2,#22
 929 002c BC18     	 add r4,r7,r2
 930 002e 181C     	 mov r0,r3
 931 0030 FFF7FEFF 	 bl ASCII_ToLower
 932 0034 031C     	 mov r3,r0
 933 0036 2370     	 strb r3,[r4]
1152:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
 934              	 .loc 1 1152 0
 935 0038 1623     	 mov r3,#22
 936 003a FB18     	 add r3,r7,r3
 937 003c 1B78     	 ldrb r3,[r3]
 938 003e 9BB2     	 uxth r3,r3
 939 0040 5B42     	 neg r3,r3
 940 0042 9AB2     	 uxth r2,r3
 941 0044 1423     	 mov r3,#20
 942 0046 FB18     	 add r3,r7,r3
 943 0048 1A80     	 strh r2,[r3]
1153:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 944              	 .loc 1 1153 0
 945 004a 1423     	 mov r3,#20
 946 004c FB18     	 add r3,r7,r3
 947 004e 1B88     	 ldrh r3,[r3]
 948 0050 C5E0     	 b .L58
 949              	.L59:
1154:../Dave/Generated/UCPROBE/lib_str.c ****     }
1155:../Dave/Generated/UCPROBE/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 950              	 .loc 1 1155 0
 951 0052 BB68     	 ldr r3,[r7,#8]
 952 0054 002B     	 cmp r3,#0
 953 0056 12D1     	 bne .L61
1156:../Dave/Generated/UCPROBE/lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
 954              	 .loc 1 1156 0
 955 0058 FB68     	 ldr r3,[r7,#12]
 956 005a 1B78     	 ldrb r3,[r3]
 957 005c 1722     	 mov r2,#23
 958 005e BC18     	 add r4,r7,r2
 959 0060 181C     	 mov r0,r3
 960 0062 FFF7FEFF 	 bl ASCII_ToLower
 961 0066 031C     	 mov r3,r0
 962 0068 2370     	 strb r3,[r4]
1157:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
 963              	 .loc 1 1157 0
 964 006a 1423     	 mov r3,#20
 965 006c FB18     	 add r3,r7,r3
 966 006e 1722     	 mov r2,#23
 967 0070 BA18     	 add r2,r7,r2
 968 0072 1278     	 ldrb r2,[r2]
 969 0074 1A80     	 strh r2,[r3]
1158:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 970              	 .loc 1 1158 0
 971 0076 1423     	 mov r3,#20
 972 0078 FB18     	 add r3,r7,r3
 973 007a 1B88     	 ldrh r3,[r3]
 974 007c AFE0     	 b .L58
 975              	.L61:
1159:../Dave/Generated/UCPROBE/lib_str.c ****     }
1160:../Dave/Generated/UCPROBE/lib_str.c **** 
1161:../Dave/Generated/UCPROBE/lib_str.c **** 
1162:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp      = p1_str;
 976              	 .loc 1 1162 0
 977 007e FB68     	 ldr r3,[r7,#12]
 978 0080 7B62     	 str r3,[r7,#36]
1163:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp      = p2_str;
 979              	 .loc 1 1163 0
 980 0082 BB68     	 ldr r3,[r7,#8]
 981 0084 3B62     	 str r3,[r7,#32]
1164:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 982              	 .loc 1 1164 0
 983 0086 7B6A     	 ldr r3,[r7,#36]
 984 0088 FB61     	 str r3,[r7,#28]
1165:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 985              	 .loc 1 1165 0
 986 008a 3B6A     	 ldr r3,[r7,#32]
 987 008c BB61     	 str r3,[r7,#24]
1166:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next++;
 988              	 .loc 1 1166 0
 989 008e FB69     	 ldr r3,[r7,#28]
 990 0090 0133     	 add r3,r3,#1
 991 0092 FB61     	 str r3,[r7,#28]
1167:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 992              	 .loc 1 1167 0
 993 0094 BB69     	 ldr r3,[r7,#24]
 994 0096 0133     	 add r3,r3,#1
 995 0098 BB61     	 str r3,[r7,#24]
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
 996              	 .loc 1 1168 0
 997 009a 7B6A     	 ldr r3,[r7,#36]
 998 009c 1B78     	 ldrb r3,[r3]
 999 009e 1722     	 mov r2,#23
 1000 00a0 BC18     	 add r4,r7,r2
 1001 00a2 181C     	 mov r0,r3
 1002 00a4 FFF7FEFF 	 bl ASCII_ToLower
 1003 00a8 031C     	 mov r3,r0
 1004 00aa 2370     	 strb r3,[r4]
1169:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1005              	 .loc 1 1169 0
 1006 00ac 3B6A     	 ldr r3,[r7,#32]
 1007 00ae 1B78     	 ldrb r3,[r3]
 1008 00b0 1622     	 mov r2,#22
 1009 00b2 BC18     	 add r4,r7,r2
 1010 00b4 181C     	 mov r0,r3
 1011 00b6 FFF7FEFF 	 bl ASCII_ToLower
 1012 00ba 031C     	 mov r3,r0
 1013 00bc 2370     	 strb r3,[r4]
1170:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 1014              	 .loc 1 1170 0
 1015 00be 0023     	 mov r3,#0
 1016 00c0 3B61     	 str r3,[r7,#16]
1171:../Dave/Generated/UCPROBE/lib_str.c **** 
1172:../Dave/Generated/UCPROBE/lib_str.c ****     while (( char_1          ==  char_2)                &&      /* Cmp strs until non-matching char
 1017              	 .loc 1 1172 0
 1018 00c2 20E0     	 b .L62
 1019              	.L64:
1173:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
1175:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
1176:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
1177:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp++;
 1020              	 .loc 1 1177 0
 1021 00c4 7B6A     	 ldr r3,[r7,#36]
 1022 00c6 0133     	 add r3,r3,#1
 1023 00c8 7B62     	 str r3,[r7,#36]
1178:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp++;
 1024              	 .loc 1 1178 0
 1025 00ca 3B6A     	 ldr r3,[r7,#32]
 1026 00cc 0133     	 add r3,r3,#1
 1027 00ce 3B62     	 str r3,[r7,#32]
1179:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp_next++;
 1028              	 .loc 1 1179 0
 1029 00d0 FB69     	 ldr r3,[r7,#28]
 1030 00d2 0133     	 add r3,r3,#1
 1031 00d4 FB61     	 str r3,[r7,#28]
1180:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 1032              	 .loc 1 1180 0
 1033 00d6 BB69     	 ldr r3,[r7,#24]
 1034 00d8 0133     	 add r3,r3,#1
 1035 00da BB61     	 str r3,[r7,#24]
1181:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 1036              	 .loc 1 1181 0
 1037 00dc 3B69     	 ldr r3,[r7,#16]
 1038 00de 0133     	 add r3,r3,#1
 1039 00e0 3B61     	 str r3,[r7,#16]
1182:../Dave/Generated/UCPROBE/lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
 1040              	 .loc 1 1182 0
 1041 00e2 7B6A     	 ldr r3,[r7,#36]
 1042 00e4 1B78     	 ldrb r3,[r3]
 1043 00e6 1722     	 mov r2,#23
 1044 00e8 BC18     	 add r4,r7,r2
 1045 00ea 181C     	 mov r0,r3
 1046 00ec FFF7FEFF 	 bl ASCII_ToLower
 1047 00f0 031C     	 mov r3,r0
 1048 00f2 2370     	 strb r3,[r4]
1183:../Dave/Generated/UCPROBE/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 1049              	 .loc 1 1183 0
 1050 00f4 3B6A     	 ldr r3,[r7,#32]
 1051 00f6 1B78     	 ldrb r3,[r3]
 1052 00f8 1622     	 mov r2,#22
 1053 00fa BC18     	 add r4,r7,r2
 1054 00fc 181C     	 mov r0,r3
 1055 00fe FFF7FEFF 	 bl ASCII_ToLower
 1056 0102 031C     	 mov r3,r0
 1057 0104 2370     	 strb r3,[r4]
 1058              	.L62:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1059              	 .loc 1 1172 0
 1060 0106 1723     	 mov r3,#23
 1061 0108 FA18     	 add r2,r7,r3
 1062 010a 1623     	 mov r3,#22
 1063 010c FB18     	 add r3,r7,r3
 1064 010e 1278     	 ldrb r2,[r2]
 1065 0110 1B78     	 ldrb r3,[r3]
 1066 0112 9A42     	 cmp r2,r3
 1067 0114 0DD1     	 bne .L63
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1068              	 .loc 1 1173 0 discriminator 1
 1069 0116 7B6A     	 ldr r3,[r7,#36]
 1070 0118 1B78     	 ldrb r3,[r3]
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1071              	 .loc 1 1172 0 discriminator 1
 1072 011a 002B     	 cmp r3,#0
 1073 011c 09D0     	 beq .L63
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1074              	 .loc 1 1173 0
 1075 011e FB69     	 ldr r3,[r7,#28]
 1076 0120 002B     	 cmp r3,#0
 1077 0122 06D0     	 beq .L63
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1078              	 .loc 1 1174 0
 1079 0124 BB69     	 ldr r3,[r7,#24]
 1080 0126 002B     	 cmp r3,#0
 1081 0128 03D0     	 beq .L63
1175:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1082              	 .loc 1 1175 0
 1083 012a 3A69     	 ldr r2,[r7,#16]
 1084 012c 7B68     	 ldr r3,[r7,#4]
 1085 012e 9A42     	 cmp r2,r3
 1086 0130 C8D3     	 bcc .L64
 1087              	.L63:
1184:../Dave/Generated/UCPROBE/lib_str.c ****     }
1185:../Dave/Generated/UCPROBE/lib_str.c **** 
1186:../Dave/Generated/UCPROBE/lib_str.c **** 
1187:../Dave/Generated/UCPROBE/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 1088              	 .loc 1 1187 0
 1089 0132 3A69     	 ldr r2,[r7,#16]
 1090 0134 7B68     	 ldr r3,[r7,#4]
 1091 0136 9A42     	 cmp r2,r3
 1092 0138 01D1     	 bne .L65
1188:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1093              	 .loc 1 1188 0
 1094 013a 0023     	 mov r3,#0
 1095 013c 4FE0     	 b .L58
 1096              	.L65:
1189:../Dave/Generated/UCPROBE/lib_str.c ****     }
1190:../Dave/Generated/UCPROBE/lib_str.c **** 
1191:../Dave/Generated/UCPROBE/lib_str.c ****     if (char_1 != char_2) {                                     /* If strs NOT identical, ...      
 1097              	 .loc 1 1191 0
 1098 013e 1723     	 mov r3,#23
 1099 0140 FA18     	 add r2,r7,r3
 1100 0142 1623     	 mov r3,#22
 1101 0144 FB18     	 add r3,r7,r3
 1102 0146 1278     	 ldrb r2,[r2]
 1103 0148 1B78     	 ldrb r3,[r3]
 1104 014a 9A42     	 cmp r2,r3
 1105 014c 0DD0     	 beq .L66
1192:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
1193:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)((CPU_INT16S)char_1 - (CPU_INT16S)char_2);
 1106              	 .loc 1 1193 0
 1107 014e 1723     	 mov r3,#23
 1108 0150 FB18     	 add r3,r7,r3
 1109 0152 1B78     	 ldrb r3,[r3]
 1110 0154 9AB2     	 uxth r2,r3
 1111 0156 1623     	 mov r3,#22
 1112 0158 FB18     	 add r3,r7,r3
 1113 015a 1B78     	 ldrb r3,[r3]
 1114 015c 9BB2     	 uxth r3,r3
 1115 015e D31A     	 sub r3,r2,r3
 1116 0160 9AB2     	 uxth r2,r3
 1117 0162 1423     	 mov r3,#20
 1118 0164 FB18     	 add r3,r7,r3
 1119 0166 1A80     	 strh r2,[r3]
 1120 0168 36E0     	 b .L67
 1121              	.L66:
1194:../Dave/Generated/UCPROBE/lib_str.c **** 
1195:../Dave/Generated/UCPROBE/lib_str.c ****     } else if (char_1 == (CPU_CHAR)'\0') {                      /* If NULL char(s) found, ...      
 1122              	 .loc 1 1195 0
 1123 016a 1723     	 mov r3,#23
 1124 016c FB18     	 add r3,r7,r3
 1125 016e 1B78     	 ldrb r3,[r3]
 1126 0170 002B     	 cmp r3,#0
 1127 0172 04D1     	 bne .L68
1196:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 1128              	 .loc 1 1196 0
 1129 0174 1423     	 mov r3,#20
 1130 0176 FB18     	 add r3,r7,r3
 1131 0178 0022     	 mov r2,#0
 1132 017a 1A80     	 strh r2,[r3]
 1133 017c 2CE0     	 b .L67
 1134              	.L68:
1197:../Dave/Generated/UCPROBE/lib_str.c **** 
1198:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
1199:../Dave/Generated/UCPROBE/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 1135              	 .loc 1 1199 0
 1136 017e FB69     	 ldr r3,[r7,#28]
 1137 0180 002B     	 cmp r3,#0
 1138 0182 1AD1     	 bne .L69
1200:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 1139              	 .loc 1 1200 0
 1140 0184 BB69     	 ldr r3,[r7,#24]
 1141 0186 002B     	 cmp r3,#0
 1142 0188 04D1     	 bne .L70
1201:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1143              	 .loc 1 1201 0
 1144 018a 1423     	 mov r3,#20
 1145 018c FB18     	 add r3,r7,r3
 1146 018e 0022     	 mov r2,#0
 1147 0190 1A80     	 strh r2,[r3]
 1148 0192 21E0     	 b .L67
 1149              	.L70:
1202:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
1203:../Dave/Generated/UCPROBE/lib_str.c ****                 char_2  =  ASCII_ToLower(*p2_str_cmp_next);
 1150              	 .loc 1 1203 0
 1151 0194 BB69     	 ldr r3,[r7,#24]
 1152 0196 1B78     	 ldrb r3,[r3]
 1153 0198 1622     	 mov r2,#22
 1154 019a BC18     	 add r4,r7,r2
 1155 019c 181C     	 mov r0,r3
 1156 019e FFF7FEFF 	 bl ASCII_ToLower
 1157 01a2 031C     	 mov r3,r0
 1158 01a4 2370     	 strb r3,[r4]
1204:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
1205:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
 1159              	 .loc 1 1205 0
 1160 01a6 1623     	 mov r3,#22
 1161 01a8 FB18     	 add r3,r7,r3
 1162 01aa 1B78     	 ldrb r3,[r3]
 1163 01ac 9BB2     	 uxth r3,r3
 1164 01ae 5B42     	 neg r3,r3
 1165 01b0 9AB2     	 uxth r2,r3
 1166 01b2 1423     	 mov r3,#20
 1167 01b4 FB18     	 add r3,r7,r3
 1168 01b6 1A80     	 strh r2,[r3]
 1169 01b8 0EE0     	 b .L67
 1170              	.L69:
1206:../Dave/Generated/UCPROBE/lib_str.c ****             }
1207:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
1208:../Dave/Generated/UCPROBE/lib_str.c ****             char_1  =  ASCII_ToLower(*p1_str_cmp_next);
 1171              	 .loc 1 1208 0
 1172 01ba FB69     	 ldr r3,[r7,#28]
 1173 01bc 1B78     	 ldrb r3,[r3]
 1174 01be 1722     	 mov r2,#23
 1175 01c0 BC18     	 add r4,r7,r2
 1176 01c2 181C     	 mov r0,r3
 1177 01c4 FFF7FEFF 	 bl ASCII_ToLower
 1178 01c8 031C     	 mov r3,r0
 1179 01ca 2370     	 strb r3,[r4]
1209:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
 1180              	 .loc 1 1209 0
 1181 01cc 1423     	 mov r3,#20
 1182 01ce FB18     	 add r3,r7,r3
 1183 01d0 1722     	 mov r2,#23
 1184 01d2 BA18     	 add r2,r7,r2
 1185 01d4 1278     	 ldrb r2,[r2]
 1186 01d6 1A80     	 strh r2,[r3]
 1187              	.L67:
1210:../Dave/Generated/UCPROBE/lib_str.c ****         }
1211:../Dave/Generated/UCPROBE/lib_str.c ****     }
1212:../Dave/Generated/UCPROBE/lib_str.c **** 
1213:../Dave/Generated/UCPROBE/lib_str.c **** 
1214:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 1188              	 .loc 1 1214 0
 1189 01d8 1423     	 mov r3,#20
 1190 01da FB18     	 add r3,r7,r3
 1191 01dc 1B88     	 ldrh r3,[r3]
 1192              	.L58:
 1193 01de 1BB2     	 sxth r3,r3
1215:../Dave/Generated/UCPROBE/lib_str.c **** }
 1194              	 .loc 1 1215 0
 1195 01e0 181C     	 mov r0,r3
 1196 01e2 BD46     	 mov sp,r7
 1197 01e4 0BB0     	 add sp,sp,#44
 1198              	 
 1199 01e6 90BD     	 pop {r4,r7,pc}
 1200              	 .cfi_endproc
 1201              	.LFE9:
 1203              	 .section .text.Str_Char,"ax",%progbits
 1204              	 .align 2
 1205              	 .global Str_Char
 1206              	 .code 16
 1207              	 .thumb_func
 1209              	Str_Char:
 1210              	.LFB10:
1216:../Dave/Generated/UCPROBE/lib_str.c **** 
1217:../Dave/Generated/UCPROBE/lib_str.c **** 
1218:../Dave/Generated/UCPROBE/lib_str.c **** /*
1219:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1220:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Char()
1221:../Dave/Generated/UCPROBE/lib_str.c **** *
1222:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurrence of specific character.
1223:../Dave/Generated/UCPROBE/lib_str.c **** *
1224:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1225:../Dave/Generated/UCPROBE/lib_str.c **** *
1226:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1227:../Dave/Generated/UCPROBE/lib_str.c **** *
1228:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1229:../Dave/Generated/UCPROBE/lib_str.c **** *
1230:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1231:../Dave/Generated/UCPROBE/lib_str.c **** *
1232:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1233:../Dave/Generated/UCPROBE/lib_str.c **** *
1234:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1235:../Dave/Generated/UCPROBE/lib_str.c **** *
1236:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1237:../Dave/Generated/UCPROBE/lib_str.c **** *
1238:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1239:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1240:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1241:../Dave/Generated/UCPROBE/lib_str.c **** *
1242:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1243:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon completion, strchr() shall return" :
1244:../Dave/Generated/UCPROBE/lib_str.c **** *
1245:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte," ...
1246:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1247:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for
1248:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1249:../Dave/Generated/UCPROBE/lib_str.c **** *
1250:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1251:../Dave/Generated/UCPROBE/lib_str.c **** *
1252:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1253:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1254:../Dave/Generated/UCPROBE/lib_str.c **** *
1255:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1256:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1257:../Dave/Generated/UCPROBE/lib_str.c **** *
1258:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1259:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1260:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1261:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1262:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1263:../Dave/Generated/UCPROBE/lib_str.c **** *
1264:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1265:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1266:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1267:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1268:../Dave/Generated/UCPROBE/lib_str.c **** */
1269:../Dave/Generated/UCPROBE/lib_str.c **** 
1270:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char (const  CPU_CHAR  *pstr,
1271:../Dave/Generated/UCPROBE/lib_str.c ****                             CPU_CHAR   srch_char)
1272:../Dave/Generated/UCPROBE/lib_str.c **** {
 1211              	 .loc 1 1272 0
 1212              	 .cfi_startproc
 1213 0000 80B5     	 push {r7,lr}
 1214              	.LCFI30:
 1215              	 .cfi_def_cfa_offset 8
 1216              	 .cfi_offset 7,-8
 1217              	 .cfi_offset 14,-4
 1218 0002 84B0     	 sub sp,sp,#16
 1219              	.LCFI31:
 1220              	 .cfi_def_cfa_offset 24
 1221 0004 00AF     	 add r7,sp,#0
 1222              	.LCFI32:
 1223              	 .cfi_def_cfa_register 7
 1224 0006 7860     	 str r0,[r7,#4]
 1225 0008 0A1C     	 mov r2,r1
 1226 000a FB1C     	 add r3,r7,#3
 1227 000c 1A70     	 strb r2,[r3]
1273:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1274:../Dave/Generated/UCPROBE/lib_str.c **** 
1275:../Dave/Generated/UCPROBE/lib_str.c **** 
1276:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_N(pstr,
 1228              	 .loc 1 1276 0
 1229 000e 7968     	 ldr r1,[r7,#4]
 1230 0010 0123     	 mov r3,#1
 1231 0012 5A42     	 neg r2,r3
 1232 0014 FB1C     	 add r3,r7,#3
 1233 0016 1B78     	 ldrb r3,[r3]
 1234 0018 081C     	 mov r0,r1
 1235 001a 111C     	 mov r1,r2
 1236 001c 1A1C     	 mov r2,r3
 1237 001e FFF7FEFF 	 bl Str_Char_N
 1238 0022 031C     	 mov r3,r0
 1239 0024 FB60     	 str r3,[r7,#12]
1277:../Dave/Generated/UCPROBE/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL,
1278:../Dave/Generated/UCPROBE/lib_str.c ****                           srch_char);
1279:../Dave/Generated/UCPROBE/lib_str.c **** 
1280:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1240              	 .loc 1 1280 0
 1241 0026 FB68     	 ldr r3,[r7,#12]
1281:../Dave/Generated/UCPROBE/lib_str.c **** }
 1242              	 .loc 1 1281 0
 1243 0028 181C     	 mov r0,r3
 1244 002a BD46     	 mov sp,r7
 1245 002c 04B0     	 add sp,sp,#16
 1246              	 
 1247 002e 80BD     	 pop {r7,pc}
 1248              	 .cfi_endproc
 1249              	.LFE10:
 1251              	 .section .text.Str_Char_N,"ax",%progbits
 1252              	 .align 2
 1253              	 .global Str_Char_N
 1254              	 .code 16
 1255              	 .thumb_func
 1257              	Str_Char_N:
 1258              	.LFB11:
1282:../Dave/Generated/UCPROBE/lib_str.c **** 
1283:../Dave/Generated/UCPROBE/lib_str.c **** 
1284:../Dave/Generated/UCPROBE/lib_str.c **** /*
1285:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1286:../Dave/Generated/UCPROBE/lib_str.c **** *                                            Str_Char_N()
1287:../Dave/Generated/UCPROBE/lib_str.c **** *
1288:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurrence of specific character, up to a maximum number
1289:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1290:../Dave/Generated/UCPROBE/lib_str.c **** *
1291:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1292:../Dave/Generated/UCPROBE/lib_str.c **** *
1293:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1294:../Dave/Generated/UCPROBE/lib_str.c **** *
1295:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1296:../Dave/Generated/UCPROBE/lib_str.c **** *
1297:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1298:../Dave/Generated/UCPROBE/lib_str.c **** *
1299:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1300:../Dave/Generated/UCPROBE/lib_str.c **** *
1301:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1302:../Dave/Generated/UCPROBE/lib_str.c **** *
1303:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1304:../Dave/Generated/UCPROBE/lib_str.c **** *
1305:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1306:../Dave/Generated/UCPROBE/lib_str.c **** *
1307:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1308:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1309:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1310:../Dave/Generated/UCPROBE/lib_str.c **** *
1311:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1312:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon completion, strchr() shall return" :
1313:../Dave/Generated/UCPROBE/lib_str.c **** *
1314:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte," ...
1315:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1316:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for
1317:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1318:../Dave/Generated/UCPROBE/lib_str.c **** *
1319:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1320:../Dave/Generated/UCPROBE/lib_str.c **** *                       argument list for consistency with all other custom string library function
1321:../Dave/Generated/UCPROBE/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1322:../Dave/Generated/UCPROBE/lib_str.c **** *                       to comply with most standard library's strnchr() argument list.
1323:../Dave/Generated/UCPROBE/lib_str.c **** *
1324:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1325:../Dave/Generated/UCPROBE/lib_str.c **** *
1326:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1327:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1328:../Dave/Generated/UCPROBE/lib_str.c **** *
1329:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1330:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1331:../Dave/Generated/UCPROBE/lib_str.c **** *
1332:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1333:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1334:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1335:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1336:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1337:../Dave/Generated/UCPROBE/lib_str.c **** *
1338:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1339:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1340:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1341:../Dave/Generated/UCPROBE/lib_str.c **** *
1342:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1343:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1344:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1345:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1346:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1347:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1348:../Dave/Generated/UCPROBE/lib_str.c **** */
1349:../Dave/Generated/UCPROBE/lib_str.c **** 
1350:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_N (const  CPU_CHAR    *pstr,
1351:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max,
1352:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     srch_char)
1353:../Dave/Generated/UCPROBE/lib_str.c **** {
 1259              	 .loc 1 1353 0
 1260              	 .cfi_startproc
 1261 0000 80B5     	 push {r7,lr}
 1262              	.LCFI33:
 1263              	 .cfi_def_cfa_offset 8
 1264              	 .cfi_offset 7,-8
 1265              	 .cfi_offset 14,-4
 1266 0002 86B0     	 sub sp,sp,#24
 1267              	.LCFI34:
 1268              	 .cfi_def_cfa_offset 32
 1269 0004 00AF     	 add r7,sp,#0
 1270              	.LCFI35:
 1271              	 .cfi_def_cfa_register 7
 1272 0006 F860     	 str r0,[r7,#12]
 1273 0008 B960     	 str r1,[r7,#8]
 1274 000a FB1D     	 add r3,r7,#7
 1275 000c 1A70     	 strb r2,[r3]
1354:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1355:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_srch;
1356:../Dave/Generated/UCPROBE/lib_str.c **** 
1357:../Dave/Generated/UCPROBE/lib_str.c **** 
1358:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1276              	 .loc 1 1358 0
 1277 000e FB68     	 ldr r3,[r7,#12]
 1278 0010 002B     	 cmp r3,#0
 1279 0012 01D1     	 bne .L75
1359:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1280              	 .loc 1 1359 0
 1281 0014 0023     	 mov r3,#0
 1282 0016 34E0     	 b .L76
 1283              	.L75:
1360:../Dave/Generated/UCPROBE/lib_str.c ****     }
1361:../Dave/Generated/UCPROBE/lib_str.c **** 
1362:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1284              	 .loc 1 1362 0
 1285 0018 BB68     	 ldr r3,[r7,#8]
 1286 001a 002B     	 cmp r3,#0
 1287 001c 01D1     	 bne .L77
1363:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1288              	 .loc 1 1363 0
 1289 001e 0023     	 mov r3,#0
 1290 0020 2FE0     	 b .L76
 1291              	.L77:
1364:../Dave/Generated/UCPROBE/lib_str.c ****     }
1365:../Dave/Generated/UCPROBE/lib_str.c **** 
1366:../Dave/Generated/UCPROBE/lib_str.c **** 
1367:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char = pstr;
 1292              	 .loc 1 1367 0
 1293 0022 FB68     	 ldr r3,[r7,#12]
 1294 0024 7B61     	 str r3,[r7,#20]
1368:../Dave/Generated/UCPROBE/lib_str.c ****     len_srch  = 0u;
 1295              	 .loc 1 1368 0
 1296 0026 0023     	 mov r3,#0
 1297 0028 3B61     	 str r3,[r7,#16]
1369:../Dave/Generated/UCPROBE/lib_str.c **** 
1370:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)  0 )      &&       /* Srch str until NULL ptr     [see
 1298              	 .loc 1 1370 0
 1299 002a 05E0     	 b .L78
 1300              	.L80:
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
1372:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
1373:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
1374:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char++;
 1301              	 .loc 1 1374 0
 1302 002c 7B69     	 ldr r3,[r7,#20]
 1303 002e 0133     	 add r3,r3,#1
 1304 0030 7B61     	 str r3,[r7,#20]
1375:../Dave/Generated/UCPROBE/lib_str.c ****         len_srch++;
 1305              	 .loc 1 1375 0
 1306 0032 3B69     	 ldr r3,[r7,#16]
 1307 0034 0133     	 add r3,r3,#1
 1308 0036 3B61     	 str r3,[r7,#16]
 1309              	.L78:
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1310              	 .loc 1 1370 0
 1311 0038 7B69     	 ldr r3,[r7,#20]
 1312 003a 002B     	 cmp r3,#0
 1313 003c 0DD0     	 beq .L79
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1314              	 .loc 1 1371 0 discriminator 1
 1315 003e 7B69     	 ldr r3,[r7,#20]
 1316 0040 1B78     	 ldrb r3,[r3]
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1317              	 .loc 1 1370 0 discriminator 1
 1318 0042 002B     	 cmp r3,#0
 1319 0044 09D0     	 beq .L79
1372:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
 1320              	 .loc 1 1372 0
 1321 0046 7B69     	 ldr r3,[r7,#20]
 1322 0048 1B78     	 ldrb r3,[r3]
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1323              	 .loc 1 1371 0
 1324 004a FA1D     	 add r2,r7,#7
 1325 004c 1278     	 ldrb r2,[r2]
 1326 004e 9A42     	 cmp r2,r3
 1327 0050 03D0     	 beq .L79
1372:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
 1328              	 .loc 1 1372 0
 1329 0052 3A69     	 ldr r2,[r7,#16]
 1330 0054 BB68     	 ldr r3,[r7,#8]
 1331 0056 9A42     	 cmp r2,r3
 1332 0058 E8D3     	 bcc .L80
 1333              	.L79:
1376:../Dave/Generated/UCPROBE/lib_str.c ****     }
1377:../Dave/Generated/UCPROBE/lib_str.c **** 
1378:../Dave/Generated/UCPROBE/lib_str.c **** 
1379:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
 1334              	 .loc 1 1379 0
 1335 005a 7B69     	 ldr r3,[r7,#20]
 1336 005c 002B     	 cmp r3,#0
 1337 005e 01D1     	 bne .L81
1380:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1338              	 .loc 1 1380 0
 1339 0060 0023     	 mov r3,#0
 1340 0062 0EE0     	 b .L76
 1341              	.L81:
1381:../Dave/Generated/UCPROBE/lib_str.c ****     }
1382:../Dave/Generated/UCPROBE/lib_str.c **** 
1383:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_srch >= len_max) {                                  /* Rtn NULL if srch char NOT found 
 1342              	 .loc 1 1383 0
 1343 0064 3A69     	 ldr r2,[r7,#16]
 1344 0066 BB68     	 ldr r3,[r7,#8]
 1345 0068 9A42     	 cmp r2,r3
 1346 006a 01D3     	 bcc .L82
1384:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1347              	 .loc 1 1384 0
 1348 006c 0023     	 mov r3,#0
 1349 006e 08E0     	 b .L76
 1350              	.L82:
1385:../Dave/Generated/UCPROBE/lib_str.c ****     }
1386:../Dave/Generated/UCPROBE/lib_str.c **** 
1387:../Dave/Generated/UCPROBE/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
 1351              	 .loc 1 1387 0
 1352 0070 7B69     	 ldr r3,[r7,#20]
 1353 0072 1B78     	 ldrb r3,[r3]
 1354 0074 FA1D     	 add r2,r7,#7
 1355 0076 1278     	 ldrb r2,[r2]
 1356 0078 9A42     	 cmp r2,r3
 1357 007a 01D0     	 beq .L83
1388:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 1358              	 .loc 1 1388 0
 1359 007c 0023     	 mov r3,#0
 1360 007e 00E0     	 b .L76
 1361              	.L83:
1389:../Dave/Generated/UCPROBE/lib_str.c ****     }
1390:../Dave/Generated/UCPROBE/lib_str.c **** 
1391:../Dave/Generated/UCPROBE/lib_str.c **** 
1392:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
 1362              	 .loc 1 1392 0
 1363 0080 7B69     	 ldr r3,[r7,#20]
 1364              	.L76:
1393:../Dave/Generated/UCPROBE/lib_str.c **** }
 1365              	 .loc 1 1393 0
 1366 0082 181C     	 mov r0,r3
 1367 0084 BD46     	 mov sp,r7
 1368 0086 06B0     	 add sp,sp,#24
 1369              	 
 1370 0088 80BD     	 pop {r7,pc}
 1371              	 .cfi_endproc
 1372              	.LFE11:
 1374 008a C046     	 .section .text.Str_Char_Last,"ax",%progbits
 1375              	 .align 2
 1376              	 .global Str_Char_Last
 1377              	 .code 16
 1378              	 .thumb_func
 1380              	Str_Char_Last:
 1381              	.LFB12:
1394:../Dave/Generated/UCPROBE/lib_str.c **** 
1395:../Dave/Generated/UCPROBE/lib_str.c **** 
1396:../Dave/Generated/UCPROBE/lib_str.c **** /*
1397:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1398:../Dave/Generated/UCPROBE/lib_str.c **** *                                           Str_Char_Last()
1399:../Dave/Generated/UCPROBE/lib_str.c **** *
1400:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for last occurrence of specific character.
1401:../Dave/Generated/UCPROBE/lib_str.c **** *
1402:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1403:../Dave/Generated/UCPROBE/lib_str.c **** *
1404:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1405:../Dave/Generated/UCPROBE/lib_str.c **** *
1406:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1407:../Dave/Generated/UCPROBE/lib_str.c **** *
1408:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1409:../Dave/Generated/UCPROBE/lib_str.c **** *
1410:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1411:../Dave/Generated/UCPROBE/lib_str.c **** *
1412:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1413:../Dave/Generated/UCPROBE/lib_str.c **** *
1414:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1415:../Dave/Generated/UCPROBE/lib_str.c **** *
1416:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1417:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1418:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1419:../Dave/Generated/UCPROBE/lib_str.c **** *
1420:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1421:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1422:../Dave/Generated/UCPROBE/lib_str.c **** *
1423:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte" ...
1424:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1425:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for
1426:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1427:../Dave/Generated/UCPROBE/lib_str.c **** *
1428:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1429:../Dave/Generated/UCPROBE/lib_str.c **** *
1430:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1431:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1432:../Dave/Generated/UCPROBE/lib_str.c **** *
1433:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1434:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1435:../Dave/Generated/UCPROBE/lib_str.c **** *
1436:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String searched from end to beginning.
1437:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1438:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1439:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1440:../Dave/Generated/UCPROBE/lib_str.c **** *
1441:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1442:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string
1443:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1444:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1445:../Dave/Generated/UCPROBE/lib_str.c **** */
1446:../Dave/Generated/UCPROBE/lib_str.c **** 
1447:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Last (const  CPU_CHAR  *pstr,
1448:../Dave/Generated/UCPROBE/lib_str.c ****                                  CPU_CHAR   srch_char)
1449:../Dave/Generated/UCPROBE/lib_str.c **** {
 1382              	 .loc 1 1449 0
 1383              	 .cfi_startproc
 1384 0000 80B5     	 push {r7,lr}
 1385              	.LCFI36:
 1386              	 .cfi_def_cfa_offset 8
 1387              	 .cfi_offset 7,-8
 1388              	 .cfi_offset 14,-4
 1389 0002 84B0     	 sub sp,sp,#16
 1390              	.LCFI37:
 1391              	 .cfi_def_cfa_offset 24
 1392 0004 00AF     	 add r7,sp,#0
 1393              	.LCFI38:
 1394              	 .cfi_def_cfa_register 7
 1395 0006 7860     	 str r0,[r7,#4]
 1396 0008 0A1C     	 mov r2,r1
 1397 000a FB1C     	 add r3,r7,#3
 1398 000c 1A70     	 strb r2,[r3]
1450:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1451:../Dave/Generated/UCPROBE/lib_str.c **** 
1452:../Dave/Generated/UCPROBE/lib_str.c **** 
1453:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_Last_N(pstr,
 1399              	 .loc 1 1453 0
 1400 000e 7968     	 ldr r1,[r7,#4]
 1401 0010 0123     	 mov r3,#1
 1402 0012 5A42     	 neg r2,r3
 1403 0014 FB1C     	 add r3,r7,#3
 1404 0016 1B78     	 ldrb r3,[r3]
 1405 0018 081C     	 mov r0,r1
 1406 001a 111C     	 mov r1,r2
 1407 001c 1A1C     	 mov r2,r3
 1408 001e FFF7FEFF 	 bl Str_Char_Last_N
 1409 0022 031C     	 mov r3,r0
 1410 0024 FB60     	 str r3,[r7,#12]
1454:../Dave/Generated/UCPROBE/lib_str.c ****                                DEF_INT_CPU_U_MAX_VAL,
1455:../Dave/Generated/UCPROBE/lib_str.c ****                                srch_char);
1456:../Dave/Generated/UCPROBE/lib_str.c **** 
1457:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1411              	 .loc 1 1457 0
 1412 0026 FB68     	 ldr r3,[r7,#12]
1458:../Dave/Generated/UCPROBE/lib_str.c **** }
 1413              	 .loc 1 1458 0
 1414 0028 181C     	 mov r0,r3
 1415 002a BD46     	 mov sp,r7
 1416 002c 04B0     	 add sp,sp,#16
 1417              	 
 1418 002e 80BD     	 pop {r7,pc}
 1419              	 .cfi_endproc
 1420              	.LFE12:
 1422              	 .section .text.Str_Char_Last_N,"ax",%progbits
 1423              	 .align 2
 1424              	 .global Str_Char_Last_N
 1425              	 .code 16
 1426              	 .thumb_func
 1428              	Str_Char_Last_N:
 1429              	.LFB13:
1459:../Dave/Generated/UCPROBE/lib_str.c **** 
1460:../Dave/Generated/UCPROBE/lib_str.c **** 
1461:../Dave/Generated/UCPROBE/lib_str.c **** /*
1462:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1463:../Dave/Generated/UCPROBE/lib_str.c **** *                                          Str_Char_Last_N()
1464:../Dave/Generated/UCPROBE/lib_str.c **** *
1465:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for last occurrence of specific character, up to a maximum number
1466:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1467:../Dave/Generated/UCPROBE/lib_str.c **** *
1468:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1469:../Dave/Generated/UCPROBE/lib_str.c **** *
1470:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1471:../Dave/Generated/UCPROBE/lib_str.c **** *
1472:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1473:../Dave/Generated/UCPROBE/lib_str.c **** *
1474:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1475:../Dave/Generated/UCPROBE/lib_str.c **** *
1476:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1477:../Dave/Generated/UCPROBE/lib_str.c **** *
1478:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1479:../Dave/Generated/UCPROBE/lib_str.c **** *
1480:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1481:../Dave/Generated/UCPROBE/lib_str.c **** *
1482:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1483:../Dave/Generated/UCPROBE/lib_str.c **** *
1484:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1485:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1486:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1487:../Dave/Generated/UCPROBE/lib_str.c **** *
1488:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1489:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1490:../Dave/Generated/UCPROBE/lib_str.c **** *
1491:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte" ...
1492:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1493:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for
1494:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1495:../Dave/Generated/UCPROBE/lib_str.c **** *
1496:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1497:../Dave/Generated/UCPROBE/lib_str.c **** *                       argument list for consistency with all other custom string library function
1498:../Dave/Generated/UCPROBE/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1499:../Dave/Generated/UCPROBE/lib_str.c **** *                       to comply with most standard library's strnrchr() argument list.
1500:../Dave/Generated/UCPROBE/lib_str.c **** *
1501:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also 'Str_Char_N()  Note #2c'.
1502:../Dave/Generated/UCPROBE/lib_str.c **** *
1503:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1504:../Dave/Generated/UCPROBE/lib_str.c **** *
1505:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1506:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1507:../Dave/Generated/UCPROBE/lib_str.c **** *
1508:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1509:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1510:../Dave/Generated/UCPROBE/lib_str.c **** *
1511:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String searched from end to beginning.
1512:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1513:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1514:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1515:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1516:../Dave/Generated/UCPROBE/lib_str.c **** *
1517:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1518:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string
1519:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1520:../Dave/Generated/UCPROBE/lib_str.c **** *
1521:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1522:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within last 'len_max' numbe
1523:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1524:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1525:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1526:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1527:../Dave/Generated/UCPROBE/lib_str.c **** */
1528:../Dave/Generated/UCPROBE/lib_str.c **** 
1529:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Last_N (const  CPU_CHAR    *pstr,
1530:../Dave/Generated/UCPROBE/lib_str.c ****                                    CPU_SIZE_T   len_max,
1531:../Dave/Generated/UCPROBE/lib_str.c ****                                    CPU_CHAR     srch_char)
1532:../Dave/Generated/UCPROBE/lib_str.c **** {
 1430              	 .loc 1 1532 0
 1431              	 .cfi_startproc
 1432 0000 80B5     	 push {r7,lr}
 1433              	.LCFI39:
 1434              	 .cfi_def_cfa_offset 8
 1435              	 .cfi_offset 7,-8
 1436              	 .cfi_offset 14,-4
 1437 0002 88B0     	 sub sp,sp,#32
 1438              	.LCFI40:
 1439              	 .cfi_def_cfa_offset 40
 1440 0004 00AF     	 add r7,sp,#0
 1441              	.LCFI41:
 1442              	 .cfi_def_cfa_register 7
 1443 0006 F860     	 str r0,[r7,#12]
 1444 0008 B960     	 str r1,[r7,#8]
 1445 000a FB1D     	 add r3,r7,#7
 1446 000c 1A70     	 strb r2,[r3]
1533:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1534:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   str_len_max;
1535:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   str_len;
1536:../Dave/Generated/UCPROBE/lib_str.c **** 
1537:../Dave/Generated/UCPROBE/lib_str.c **** 
1538:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1447              	 .loc 1 1538 0
 1448 000e FB68     	 ldr r3,[r7,#12]
 1449 0010 002B     	 cmp r3,#0
 1450 0012 01D1     	 bne .L87
1539:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1451              	 .loc 1 1539 0
 1452 0014 0023     	 mov r3,#0
 1453 0016 31E0     	 b .L88
 1454              	.L87:
1540:../Dave/Generated/UCPROBE/lib_str.c ****     }
1541:../Dave/Generated/UCPROBE/lib_str.c **** 
1542:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1455              	 .loc 1 1542 0
 1456 0018 BB68     	 ldr r3,[r7,#8]
 1457 001a 002B     	 cmp r3,#0
 1458 001c 01D1     	 bne .L89
1543:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1459              	 .loc 1 1543 0
 1460 001e 0023     	 mov r3,#0
 1461 0020 2CE0     	 b .L88
 1462              	.L89:
1544:../Dave/Generated/UCPROBE/lib_str.c ****     }
1545:../Dave/Generated/UCPROBE/lib_str.c **** 
1546:../Dave/Generated/UCPROBE/lib_str.c **** 
1547:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char    = pstr;
 1463              	 .loc 1 1547 0
 1464 0022 FB68     	 ldr r3,[r7,#12]
 1465 0024 FB61     	 str r3,[r7,#28]
1548:../Dave/Generated/UCPROBE/lib_str.c ****      str_len_max = len_max - sizeof((CPU_CHAR)'\0');            /* Str len adj'd for NULL char len.
 1466              	 .loc 1 1548 0
 1467 0026 BB68     	 ldr r3,[r7,#8]
 1468 0028 013B     	 sub r3,r3,#1
 1469 002a BB61     	 str r3,[r7,#24]
1549:../Dave/Generated/UCPROBE/lib_str.c ****      str_len     = Str_Len_N(pstr_char, str_len_max);
 1470              	 .loc 1 1549 0
 1471 002c FA69     	 ldr r2,[r7,#28]
 1472 002e BB69     	 ldr r3,[r7,#24]
 1473 0030 101C     	 mov r0,r2
 1474 0032 191C     	 mov r1,r3
 1475 0034 FFF7FEFF 	 bl Str_Len_N
 1476 0038 031C     	 mov r3,r0
 1477 003a 7B61     	 str r3,[r7,#20]
1550:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char   += str_len;
 1478              	 .loc 1 1550 0
 1479 003c FA69     	 ldr r2,[r7,#28]
 1480 003e 7B69     	 ldr r3,[r7,#20]
 1481 0040 D318     	 add r3,r2,r3
 1482 0042 FB61     	 str r3,[r7,#28]
1551:../Dave/Generated/UCPROBE/lib_str.c **** 
1552:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
 1483              	 .loc 1 1552 0
 1484 0044 FB69     	 ldr r3,[r7,#28]
 1485 0046 002B     	 cmp r3,#0
 1486 0048 01D1     	 bne .L90
1553:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1487              	 .loc 1 1553 0
 1488 004a 0023     	 mov r3,#0
 1489 004c 16E0     	 b .L88
 1490              	.L90:
1554:../Dave/Generated/UCPROBE/lib_str.c ****     }
1555:../Dave/Generated/UCPROBE/lib_str.c **** 
1556:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != pstr) &&                              /* Srch str from end until beginnin
 1491              	 .loc 1 1556 0
 1492 004e 02E0     	 b .L91
 1493              	.L93:
1557:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
1558:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char--;
 1494              	 .loc 1 1558 0
 1495 0050 FB69     	 ldr r3,[r7,#28]
 1496 0052 013B     	 sub r3,r3,#1
 1497 0054 FB61     	 str r3,[r7,#28]
 1498              	.L91:
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1499              	 .loc 1 1556 0
 1500 0056 FA69     	 ldr r2,[r7,#28]
 1501 0058 FB68     	 ldr r3,[r7,#12]
 1502 005a 9A42     	 cmp r2,r3
 1503 005c 05D0     	 beq .L92
1557:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1504              	 .loc 1 1557 0 discriminator 1
 1505 005e FB69     	 ldr r3,[r7,#28]
 1506 0060 1B78     	 ldrb r3,[r3]
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1507              	 .loc 1 1556 0 discriminator 1
 1508 0062 FA1D     	 add r2,r7,#7
 1509 0064 1278     	 ldrb r2,[r2]
 1510 0066 9A42     	 cmp r2,r3
 1511 0068 F2D1     	 bne .L93
 1512              	.L92:
1559:../Dave/Generated/UCPROBE/lib_str.c ****     }
1560:../Dave/Generated/UCPROBE/lib_str.c **** 
1561:../Dave/Generated/UCPROBE/lib_str.c **** 
1562:../Dave/Generated/UCPROBE/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
 1513              	 .loc 1 1562 0
 1514 006a FB69     	 ldr r3,[r7,#28]
 1515 006c 1B78     	 ldrb r3,[r3]
 1516 006e FA1D     	 add r2,r7,#7
 1517 0070 1278     	 ldrb r2,[r2]
 1518 0072 9A42     	 cmp r2,r3
 1519 0074 01D0     	 beq .L94
1563:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 1520              	 .loc 1 1563 0
 1521 0076 0023     	 mov r3,#0
 1522 0078 00E0     	 b .L88
 1523              	.L94:
1564:../Dave/Generated/UCPROBE/lib_str.c ****     }
1565:../Dave/Generated/UCPROBE/lib_str.c **** 
1566:../Dave/Generated/UCPROBE/lib_str.c **** 
1567:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
 1524              	 .loc 1 1567 0
 1525 007a FB69     	 ldr r3,[r7,#28]
 1526              	.L88:
1568:../Dave/Generated/UCPROBE/lib_str.c **** }
 1527              	 .loc 1 1568 0
 1528 007c 181C     	 mov r0,r3
 1529 007e BD46     	 mov sp,r7
 1530 0080 08B0     	 add sp,sp,#32
 1531              	 
 1532 0082 80BD     	 pop {r7,pc}
 1533              	 .cfi_endproc
 1534              	.LFE13:
 1536              	 .section .text.Str_Char_Replace,"ax",%progbits
 1537              	 .align 2
 1538              	 .global Str_Char_Replace
 1539              	 .code 16
 1540              	 .thumb_func
 1542              	Str_Char_Replace:
 1543              	.LFB14:
1569:../Dave/Generated/UCPROBE/lib_str.c **** 
1570:../Dave/Generated/UCPROBE/lib_str.c **** 
1571:../Dave/Generated/UCPROBE/lib_str.c **** /*
1572:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1573:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_Char_Replace()
1574:../Dave/Generated/UCPROBE/lib_str.c **** *
1575:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for specific character and replace it by another specific character.
1576:../Dave/Generated/UCPROBE/lib_str.c **** *
1577:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1578:../Dave/Generated/UCPROBE/lib_str.c **** *
1579:../Dave/Generated/UCPROBE/lib_str.c **** *               char_srch       Search character.
1580:../Dave/Generated/UCPROBE/lib_str.c **** *
1581:../Dave/Generated/UCPROBE/lib_str.c **** *               char_replace    Replace character.
1582:../Dave/Generated/UCPROBE/lib_str.c **** *
1583:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1584:../Dave/Generated/UCPROBE/lib_str.c **** *
1585:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,   otherwise.
1586:../Dave/Generated/UCPROBE/lib_str.c **** *
1587:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1588:../Dave/Generated/UCPROBE/lib_str.c **** *
1589:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer modified.
1590:../Dave/Generated/UCPROBE/lib_str.c **** *
1591:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) String search terminates when :
1592:../Dave/Generated/UCPROBE/lib_str.c **** *
1593:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1594:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1595:../Dave/Generated/UCPROBE/lib_str.c **** *
1596:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1597:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1598:../Dave/Generated/UCPROBE/lib_str.c **** *
1599:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1600:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1601:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1602:../Dave/Generated/UCPROBE/lib_str.c **** *
1603:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1604:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Replace character found by the specified character.
1605:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1606:../Dave/Generated/UCPROBE/lib_str.c **** */
1607:../Dave/Generated/UCPROBE/lib_str.c **** 
1608:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Replace (CPU_CHAR  *pstr,
1609:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_CHAR   char_srch,
1610:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_CHAR   char_replace)
1611:../Dave/Generated/UCPROBE/lib_str.c **** {
 1544              	 .loc 1 1611 0
 1545              	 .cfi_startproc
 1546 0000 80B5     	 push {r7,lr}
 1547              	.LCFI42:
 1548              	 .cfi_def_cfa_offset 8
 1549              	 .cfi_offset 7,-8
 1550              	 .cfi_offset 14,-4
 1551 0002 84B0     	 sub sp,sp,#16
 1552              	.LCFI43:
 1553              	 .cfi_def_cfa_offset 24
 1554 0004 00AF     	 add r7,sp,#0
 1555              	.LCFI44:
 1556              	 .cfi_def_cfa_register 7
 1557 0006 7860     	 str r0,[r7,#4]
 1558 0008 081C     	 mov r0,r1
 1559 000a 111C     	 mov r1,r2
 1560 000c FB1C     	 add r3,r7,#3
 1561 000e 021C     	 add r2,r0,#0
 1562 0010 1A70     	 strb r2,[r3]
 1563 0012 BB1C     	 add r3,r7,#2
 1564 0014 0A1C     	 add r2,r1,#0
 1565 0016 1A70     	 strb r2,[r3]
1612:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1613:../Dave/Generated/UCPROBE/lib_str.c **** 
1614:../Dave/Generated/UCPROBE/lib_str.c **** 
1615:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_Replace_N(pstr,
 1566              	 .loc 1 1615 0
 1567 0018 7868     	 ldr r0,[r7,#4]
 1568 001a FB1C     	 add r3,r7,#3
 1569 001c 1978     	 ldrb r1,[r3]
 1570 001e BB1C     	 add r3,r7,#2
 1571 0020 1A78     	 ldrb r2,[r3]
 1572 0022 0123     	 mov r3,#1
 1573 0024 5B42     	 neg r3,r3
 1574 0026 FFF7FEFF 	 bl Str_Char_Replace_N
 1575 002a 031C     	 mov r3,r0
 1576 002c FB60     	 str r3,[r7,#12]
1616:../Dave/Generated/UCPROBE/lib_str.c ****                                   char_srch,
1617:../Dave/Generated/UCPROBE/lib_str.c ****                                   char_replace,
1618:../Dave/Generated/UCPROBE/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1619:../Dave/Generated/UCPROBE/lib_str.c **** 
1620:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1577              	 .loc 1 1620 0
 1578 002e FB68     	 ldr r3,[r7,#12]
1621:../Dave/Generated/UCPROBE/lib_str.c **** }
 1579              	 .loc 1 1621 0
 1580 0030 181C     	 mov r0,r3
 1581 0032 BD46     	 mov sp,r7
 1582 0034 04B0     	 add sp,sp,#16
 1583              	 
 1584 0036 80BD     	 pop {r7,pc}
 1585              	 .cfi_endproc
 1586              	.LFE14:
 1588              	 .section .text.Str_Char_Replace_N,"ax",%progbits
 1589              	 .align 2
 1590              	 .global Str_Char_Replace_N
 1591              	 .code 16
 1592              	 .thumb_func
 1594              	Str_Char_Replace_N:
 1595              	.LFB15:
1622:../Dave/Generated/UCPROBE/lib_str.c **** 
1623:../Dave/Generated/UCPROBE/lib_str.c **** 
1624:../Dave/Generated/UCPROBE/lib_str.c **** /*
1625:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1626:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_Char_Replace_N()
1627:../Dave/Generated/UCPROBE/lib_str.c **** *
1628:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for specific character and replace it by another specific character, 
1629:../Dave/Generated/UCPROBE/lib_str.c **** *               a maximum number of characters.
1630:../Dave/Generated/UCPROBE/lib_str.c **** *
1631:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1632:../Dave/Generated/UCPROBE/lib_str.c **** *
1633:../Dave/Generated/UCPROBE/lib_str.c **** *               char_srch       Search character.
1634:../Dave/Generated/UCPROBE/lib_str.c **** *
1635:../Dave/Generated/UCPROBE/lib_str.c **** *               char_replace    Replace character.
1636:../Dave/Generated/UCPROBE/lib_str.c **** *
1637:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1638:../Dave/Generated/UCPROBE/lib_str.c **** *
1639:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1640:../Dave/Generated/UCPROBE/lib_str.c **** *
1641:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,   otherwise.
1642:../Dave/Generated/UCPROBE/lib_str.c **** *
1643:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1644:../Dave/Generated/UCPROBE/lib_str.c **** *
1645:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer modified.
1646:../Dave/Generated/UCPROBE/lib_str.c **** *
1647:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) String search terminates when :
1648:../Dave/Generated/UCPROBE/lib_str.c **** *
1649:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1650:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1651:../Dave/Generated/UCPROBE/lib_str.c **** *
1652:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1653:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1654:../Dave/Generated/UCPROBE/lib_str.c **** *
1655:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1656:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1657:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1658:../Dave/Generated/UCPROBE/lib_str.c **** *
1659:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1660:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Replace character found by the specified character.
1661:../Dave/Generated/UCPROBE/lib_str.c **** *
1662:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1663:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1664:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1665:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1666:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1667:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1668:../Dave/Generated/UCPROBE/lib_str.c **** */
1669:../Dave/Generated/UCPROBE/lib_str.c **** 
1670:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Replace_N (CPU_CHAR    *pstr,
1671:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_CHAR     char_srch,
1672:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_CHAR     char_replace,
1673:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_SIZE_T   len_max)
1674:../Dave/Generated/UCPROBE/lib_str.c **** {
 1596              	 .loc 1 1674 0
 1597              	 .cfi_startproc
 1598 0000 80B5     	 push {r7,lr}
 1599              	.LCFI45:
 1600              	 .cfi_def_cfa_offset 8
 1601              	 .cfi_offset 7,-8
 1602              	 .cfi_offset 14,-4
 1603 0002 86B0     	 sub sp,sp,#24
 1604              	.LCFI46:
 1605              	 .cfi_def_cfa_offset 32
 1606 0004 00AF     	 add r7,sp,#0
 1607              	.LCFI47:
 1608              	 .cfi_def_cfa_register 7
 1609 0006 F860     	 str r0,[r7,#12]
 1610 0008 081C     	 mov r0,r1
 1611 000a 111C     	 mov r1,r2
 1612 000c 7B60     	 str r3,[r7,#4]
 1613 000e 0B23     	 mov r3,#11
 1614 0010 FB18     	 add r3,r7,r3
 1615 0012 021C     	 add r2,r0,#0
 1616 0014 1A70     	 strb r2,[r3]
 1617 0016 0A23     	 mov r3,#10
 1618 0018 FB18     	 add r3,r7,r3
 1619 001a 0A1C     	 add r2,r1,#0
 1620 001c 1A70     	 strb r2,[r3]
1675:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR    *pstr_char;
1676:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_SIZE_T   len;
1677:../Dave/Generated/UCPROBE/lib_str.c **** 
1678:../Dave/Generated/UCPROBE/lib_str.c **** 
1679:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1621              	 .loc 1 1679 0
 1622 001e FB68     	 ldr r3,[r7,#12]
 1623 0020 002B     	 cmp r3,#0
 1624 0022 01D1     	 bne .L98
1680:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1625              	 .loc 1 1680 0
 1626 0024 0023     	 mov r3,#0
 1627 0026 26E0     	 b .L99
 1628              	.L98:
1681:../Dave/Generated/UCPROBE/lib_str.c ****     }
1682:../Dave/Generated/UCPROBE/lib_str.c **** 
1683:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1629              	 .loc 1 1683 0
 1630 0028 7B68     	 ldr r3,[r7,#4]
 1631 002a 002B     	 cmp r3,#0
 1632 002c 01D1     	 bne .L100
1684:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1633              	 .loc 1 1684 0
 1634 002e 0023     	 mov r3,#0
 1635 0030 21E0     	 b .L99
 1636              	.L100:
1685:../Dave/Generated/UCPROBE/lib_str.c ****     }
1686:../Dave/Generated/UCPROBE/lib_str.c **** 
1687:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char = pstr;
 1637              	 .loc 1 1687 0
 1638 0032 FB68     	 ldr r3,[r7,#12]
 1639 0034 7B61     	 str r3,[r7,#20]
1688:../Dave/Generated/UCPROBE/lib_str.c ****     len       = len_max;
 1640              	 .loc 1 1688 0
 1641 0036 7B68     	 ldr r3,[r7,#4]
 1642 0038 3B61     	 str r3,[r7,#16]
1689:../Dave/Generated/UCPROBE/lib_str.c **** 
1690:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)0) &&               /* Srch str until NULL ptr     [see
 1643              	 .loc 1 1690 0
 1644 003a 11E0     	 b .L101
 1645              	.L104:
1691:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
1692:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
1693:../Dave/Generated/UCPROBE/lib_str.c **** 
1694:../Dave/Generated/UCPROBE/lib_str.c ****         if (*pstr_char == char_srch) {
 1646              	 .loc 1 1694 0
 1647 003c 7B69     	 ldr r3,[r7,#20]
 1648 003e 1B78     	 ldrb r3,[r3]
 1649 0040 0B22     	 mov r2,#11
 1650 0042 BA18     	 add r2,r7,r2
 1651 0044 1278     	 ldrb r2,[r2]
 1652 0046 9A42     	 cmp r2,r3
 1653 0048 04D1     	 bne .L102
1695:../Dave/Generated/UCPROBE/lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
 1654              	 .loc 1 1695 0
 1655 004a 7B69     	 ldr r3,[r7,#20]
 1656 004c 0A22     	 mov r2,#10
 1657 004e BA18     	 add r2,r7,r2
 1658 0050 1278     	 ldrb r2,[r2]
 1659 0052 1A70     	 strb r2,[r3]
 1660              	.L102:
1696:../Dave/Generated/UCPROBE/lib_str.c ****         }
1697:../Dave/Generated/UCPROBE/lib_str.c **** 
1698:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char++;
 1661              	 .loc 1 1698 0
 1662 0054 7B69     	 ldr r3,[r7,#20]
 1663 0056 0133     	 add r3,r3,#1
 1664 0058 7B61     	 str r3,[r7,#20]
1699:../Dave/Generated/UCPROBE/lib_str.c ****         len--;
 1665              	 .loc 1 1699 0
 1666 005a 3B69     	 ldr r3,[r7,#16]
 1667 005c 013B     	 sub r3,r3,#1
 1668 005e 3B61     	 str r3,[r7,#16]
 1669              	.L101:
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 1670              	 .loc 1 1690 0
 1671 0060 7B69     	 ldr r3,[r7,#20]
 1672 0062 002B     	 cmp r3,#0
 1673 0064 06D0     	 beq .L103
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 1674              	 .loc 1 1691 0 discriminator 1
 1675 0066 7B69     	 ldr r3,[r7,#20]
 1676 0068 1B78     	 ldrb r3,[r3]
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 1677              	 .loc 1 1690 0 discriminator 1
 1678 006a 002B     	 cmp r3,#0
 1679 006c 02D0     	 beq .L103
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 1680              	 .loc 1 1691 0
 1681 006e 3B69     	 ldr r3,[r7,#16]
 1682 0070 002B     	 cmp r3,#0
 1683 0072 E3D1     	 bne .L104
 1684              	.L103:
1700:../Dave/Generated/UCPROBE/lib_str.c ****     }
1701:../Dave/Generated/UCPROBE/lib_str.c **** 
1702:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);
 1685              	 .loc 1 1702 0
 1686 0074 FB68     	 ldr r3,[r7,#12]
 1687              	.L99:
1703:../Dave/Generated/UCPROBE/lib_str.c **** }
 1688              	 .loc 1 1703 0
 1689 0076 181C     	 mov r0,r3
 1690 0078 BD46     	 mov sp,r7
 1691 007a 06B0     	 add sp,sp,#24
 1692              	 
 1693 007c 80BD     	 pop {r7,pc}
 1694              	 .cfi_endproc
 1695              	.LFE15:
 1697 007e C046     	 .section .text.Str_Str,"ax",%progbits
 1698              	 .align 2
 1699              	 .global Str_Str
 1700              	 .code 16
 1701              	 .thumb_func
 1703              	Str_Str:
 1704              	.LFB16:
1704:../Dave/Generated/UCPROBE/lib_str.c **** 
1705:../Dave/Generated/UCPROBE/lib_str.c **** 
1706:../Dave/Generated/UCPROBE/lib_str.c **** /*
1707:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1708:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Str()
1709:../Dave/Generated/UCPROBE/lib_str.c **** *
1710:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurence of a specific search string.
1711:../Dave/Generated/UCPROBE/lib_str.c **** *
1712:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1713:../Dave/Generated/UCPROBE/lib_str.c **** *
1714:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1715:../Dave/Generated/UCPROBE/lib_str.c **** *
1716:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1717:../Dave/Generated/UCPROBE/lib_str.c **** *
1718:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1719:../Dave/Generated/UCPROBE/lib_str.c **** *
1720:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1721:../Dave/Generated/UCPROBE/lib_str.c **** *
1722:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1723:../Dave/Generated/UCPROBE/lib_str.c **** *
1724:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1725:../Dave/Generated/UCPROBE/lib_str.c **** *
1726:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1727:../Dave/Generated/UCPROBE/lib_str.c **** *
1728:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1729:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1730:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1731:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1732:../Dave/Generated/UCPROBE/lib_str.c **** *
1733:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1734:../Dave/Generated/UCPROBE/lib_str.c **** *
1735:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1736:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "a pointer to the located string" ...
1737:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1738:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1739:../Dave/Generated/UCPROBE/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1740:../Dave/Generated/UCPROBE/lib_str.c **** *
1741:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1742:../Dave/Generated/UCPROBE/lib_str.c **** *                            shall return 's1' ('pstr')."
1743:../Dave/Generated/UCPROBE/lib_str.c **** *
1744:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1745:../Dave/Generated/UCPROBE/lib_str.c **** *
1746:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1747:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1748:../Dave/Generated/UCPROBE/lib_str.c **** *
1749:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1750:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1751:../Dave/Generated/UCPROBE/lib_str.c **** *
1752:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Search string length equal to zero.
1753:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1754:../Dave/Generated/UCPROBE/lib_str.c **** *
1755:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search string length greater than string length.
1756:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1757:../Dave/Generated/UCPROBE/lib_str.c **** *
1758:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Entire string has been searched.
1759:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1760:../Dave/Generated/UCPROBE/lib_str.c **** *
1761:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Search string found.
1762:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1763:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1764:../Dave/Generated/UCPROBE/lib_str.c **** */
1765:../Dave/Generated/UCPROBE/lib_str.c **** 
1766:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Str (const  CPU_CHAR  *pstr,
1767:../Dave/Generated/UCPROBE/lib_str.c ****                     const  CPU_CHAR  *pstr_srch)
1768:../Dave/Generated/UCPROBE/lib_str.c **** {
 1705              	 .loc 1 1768 0
 1706              	 .cfi_startproc
 1707 0000 80B5     	 push {r7,lr}
 1708              	.LCFI48:
 1709              	 .cfi_def_cfa_offset 8
 1710              	 .cfi_offset 7,-8
 1711              	 .cfi_offset 14,-4
 1712 0002 84B0     	 sub sp,sp,#16
 1713              	.LCFI49:
 1714              	 .cfi_def_cfa_offset 24
 1715 0004 00AF     	 add r7,sp,#0
 1716              	.LCFI50:
 1717              	 .cfi_def_cfa_register 7
 1718 0006 7860     	 str r0,[r7,#4]
 1719 0008 3960     	 str r1,[r7]
1769:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1770:../Dave/Generated/UCPROBE/lib_str.c **** 
1771:../Dave/Generated/UCPROBE/lib_str.c **** 
1772:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Str_N(pstr,
 1720              	 .loc 1 1772 0
 1721 000a 7968     	 ldr r1,[r7,#4]
 1722 000c 3A68     	 ldr r2,[r7]
 1723 000e 0123     	 mov r3,#1
 1724 0010 5B42     	 neg r3,r3
 1725 0012 081C     	 mov r0,r1
 1726 0014 111C     	 mov r1,r2
 1727 0016 1A1C     	 mov r2,r3
 1728 0018 FFF7FEFF 	 bl Str_Str_N
 1729 001c 031C     	 mov r3,r0
 1730 001e FB60     	 str r3,[r7,#12]
1773:../Dave/Generated/UCPROBE/lib_str.c ****                          pstr_srch,
1774:../Dave/Generated/UCPROBE/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
1775:../Dave/Generated/UCPROBE/lib_str.c **** 
1776:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1731              	 .loc 1 1776 0
 1732 0020 FB68     	 ldr r3,[r7,#12]
1777:../Dave/Generated/UCPROBE/lib_str.c **** }
 1733              	 .loc 1 1777 0
 1734 0022 181C     	 mov r0,r3
 1735 0024 BD46     	 mov sp,r7
 1736 0026 04B0     	 add sp,sp,#16
 1737              	 
 1738 0028 80BD     	 pop {r7,pc}
 1739              	 .cfi_endproc
 1740              	.LFE16:
 1742 002a C046     	 .section .text.Str_Str_N,"ax",%progbits
 1743              	 .align 2
 1744              	 .global Str_Str_N
 1745              	 .code 16
 1746              	 .thumb_func
 1748              	Str_Str_N:
 1749              	.LFB17:
1778:../Dave/Generated/UCPROBE/lib_str.c **** 
1779:../Dave/Generated/UCPROBE/lib_str.c **** 
1780:../Dave/Generated/UCPROBE/lib_str.c **** /*
1781:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1782:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Str_N()
1783:../Dave/Generated/UCPROBE/lib_str.c **** *
1784:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurence of a specific search string, up to a maximum numb
1785:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1786:../Dave/Generated/UCPROBE/lib_str.c **** *
1787:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1788:../Dave/Generated/UCPROBE/lib_str.c **** *
1789:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1790:../Dave/Generated/UCPROBE/lib_str.c **** *
1791:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Note #3g).
1792:../Dave/Generated/UCPROBE/lib_str.c **** *
1793:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1794:../Dave/Generated/UCPROBE/lib_str.c **** *
1795:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1796:../Dave/Generated/UCPROBE/lib_str.c **** *
1797:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1798:../Dave/Generated/UCPROBE/lib_str.c **** *
1799:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1800:../Dave/Generated/UCPROBE/lib_str.c **** *
1801:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1802:../Dave/Generated/UCPROBE/lib_str.c **** *
1803:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1804:../Dave/Generated/UCPROBE/lib_str.c **** *
1805:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1806:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1807:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1808:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1809:../Dave/Generated/UCPROBE/lib_str.c **** *
1810:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1811:../Dave/Generated/UCPROBE/lib_str.c **** *
1812:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1813:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "a pointer to the located string" ...
1814:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1815:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1816:../Dave/Generated/UCPROBE/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1817:../Dave/Generated/UCPROBE/lib_str.c **** *
1818:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1819:../Dave/Generated/UCPROBE/lib_str.c **** *                            shall return 's1' ('pstr')."
1820:../Dave/Generated/UCPROBE/lib_str.c **** *
1821:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1822:../Dave/Generated/UCPROBE/lib_str.c **** *
1823:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1824:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1825:../Dave/Generated/UCPROBE/lib_str.c **** *
1826:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1827:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1828:../Dave/Generated/UCPROBE/lib_str.c **** *
1829:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Search string length equal to zero.
1830:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1831:../Dave/Generated/UCPROBE/lib_str.c **** *
1832:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search string length greater than string length.
1833:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1834:../Dave/Generated/UCPROBE/lib_str.c **** *
1835:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Entire string has been searched.
1836:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1837:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Maximum size of the search is defined as the subtraction of the
1838:../Dave/Generated/UCPROBE/lib_str.c **** *                           search string length from the string length.
1839:../Dave/Generated/UCPROBE/lib_str.c **** *
1840:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Search string found.
1841:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1842:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Search string found via Str_Cmp_N().
1843:../Dave/Generated/UCPROBE/lib_str.c **** *
1844:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) 'len_max' number of characters searched.
1845:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include terminating NULL charac
1846:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1847:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1848:../Dave/Generated/UCPROBE/lib_str.c **** */
1849:../Dave/Generated/UCPROBE/lib_str.c **** 
1850:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Str_N (const  CPU_CHAR    *pstr,
1851:../Dave/Generated/UCPROBE/lib_str.c ****                       const  CPU_CHAR    *pstr_srch,
1852:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_SIZE_T   len_max)
1853:../Dave/Generated/UCPROBE/lib_str.c **** {
 1750              	 .loc 1 1853 0
 1751              	 .cfi_startproc
 1752 0000 90B5     	 push {r4,r7,lr}
 1753              	.LCFI51:
 1754              	 .cfi_def_cfa_offset 12
 1755              	 .cfi_offset 4,-12
 1756              	 .cfi_offset 7,-8
 1757              	 .cfi_offset 14,-4
 1758 0002 8FB0     	 sub sp,sp,#60
 1759              	.LCFI52:
 1760              	 .cfi_def_cfa_offset 72
 1761 0004 00AF     	 add r7,sp,#0
 1762              	.LCFI53:
 1763              	 .cfi_def_cfa_register 7
 1764 0006 F860     	 str r0,[r7,#12]
 1765 0008 B960     	 str r1,[r7,#8]
 1766 000a 7A60     	 str r2,[r7,#4]
1854:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len;
1855:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len_srch;
1856:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    len_max_srch;
1857:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    srch_len;
1858:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    srch_ix;
1859:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   srch_done;
1860:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S    srch_cmp;
1861:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_str;
1862:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_srch_ix;
1863:../Dave/Generated/UCPROBE/lib_str.c **** 
1864:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
1865:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {
 1767              	 .loc 1 1865 0
 1768 000c FB68     	 ldr r3,[r7,#12]
 1769 000e 002B     	 cmp r3,#0
 1770 0010 01D1     	 bne .L108
1866:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1771              	 .loc 1 1866 0
 1772 0012 0023     	 mov r3,#0
 1773 0014 7AE0     	 b .L109
 1774              	.L108:
1867:../Dave/Generated/UCPROBE/lib_str.c ****     }
1868:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_srch == (const CPU_CHAR *)0) {
 1775              	 .loc 1 1868 0
 1776 0016 BB68     	 ldr r3,[r7,#8]
 1777 0018 002B     	 cmp r3,#0
 1778 001a 01D1     	 bne .L110
1869:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1779              	 .loc 1 1869 0
 1780 001c 0023     	 mov r3,#0
 1781 001e 75E0     	 b .L109
 1782              	.L110:
1870:../Dave/Generated/UCPROBE/lib_str.c ****     }
1871:../Dave/Generated/UCPROBE/lib_str.c **** 
1872:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0    (see
 1783              	 .loc 1 1872 0
 1784 0020 7B68     	 ldr r3,[r7,#4]
 1785 0022 002B     	 cmp r3,#0
 1786 0024 01D1     	 bne .L111
1873:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1787              	 .loc 1 1873 0
 1788 0026 0023     	 mov r3,#0
 1789 0028 70E0     	 b .L109
 1790              	.L111:
1874:../Dave/Generated/UCPROBE/lib_str.c ****     }
1875:../Dave/Generated/UCPROBE/lib_str.c **** 
1876:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Lim max srch str len (to chk > s
1877:../Dave/Generated/UCPROBE/lib_str.c ****     len_max_srch = (len_max <       DEF_INT_CPU_U_MAX_VAL)
1878:../Dave/Generated/UCPROBE/lib_str.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
 1791              	 .loc 1 1878 0
 1792 002a 7B68     	 ldr r3,[r7,#4]
 1793 002c 0133     	 add r3,r3,#1
 1794 002e 02D0     	 beq .L112
 1795              	 .loc 1 1878 0 is_stmt 0 discriminator 1
 1796 0030 7B68     	 ldr r3,[r7,#4]
 1797 0032 0133     	 add r3,r3,#1
 1798 0034 01E0     	 b .L113
 1799              	.L112:
 1800              	 .loc 1 1878 0 discriminator 2
 1801 0036 0123     	 mov r3,#1
 1802 0038 5B42     	 neg r3,r3
 1803              	.L113:
1877:../Dave/Generated/UCPROBE/lib_str.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
 1804              	 .loc 1 1877 0 is_stmt 1
 1805 003a 3B63     	 str r3,[r7,#48]
1879:../Dave/Generated/UCPROBE/lib_str.c **** 
1880:../Dave/Generated/UCPROBE/lib_str.c ****     str_len      = Str_Len_N(pstr,      len_max);
 1806              	 .loc 1 1880 0
 1807 003c FA68     	 ldr r2,[r7,#12]
 1808 003e 7B68     	 ldr r3,[r7,#4]
 1809 0040 101C     	 mov r0,r2
 1810 0042 191C     	 mov r1,r3
 1811 0044 FFF7FEFF 	 bl Str_Len_N
 1812 0048 031C     	 mov r3,r0
 1813 004a FB62     	 str r3,[r7,#44]
1881:../Dave/Generated/UCPROBE/lib_str.c ****     str_len_srch = Str_Len_N(pstr_srch, len_max_srch);
 1814              	 .loc 1 1881 0
 1815 004c BA68     	 ldr r2,[r7,#8]
 1816 004e 3B6B     	 ldr r3,[r7,#48]
 1817 0050 101C     	 mov r0,r2
 1818 0052 191C     	 mov r1,r3
 1819 0054 FFF7FEFF 	 bl Str_Len_N
 1820 0058 031C     	 mov r3,r0
 1821 005a BB62     	 str r3,[r7,#40]
1882:../Dave/Generated/UCPROBE/lib_str.c ****     if (str_len_srch < 1) {                                     /* Rtn ptr to str if srch str len =
 1822              	 .loc 1 1882 0
 1823 005c BB6A     	 ldr r3,[r7,#40]
 1824 005e 002B     	 cmp r3,#0
 1825 0060 01D1     	 bne .L114
1883:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr);
 1826              	 .loc 1 1883 0
 1827 0062 FB68     	 ldr r3,[r7,#12]
 1828 0064 52E0     	 b .L109
 1829              	.L114:
1884:../Dave/Generated/UCPROBE/lib_str.c ****     }
1885:../Dave/Generated/UCPROBE/lib_str.c ****     if (str_len_srch > str_len) {                               /* Rtn NULL if srch str len > str l
 1830              	 .loc 1 1885 0
 1831 0066 BA6A     	 ldr r2,[r7,#40]
 1832 0068 FB6A     	 ldr r3,[r7,#44]
 1833 006a 9A42     	 cmp r2,r3
 1834 006c 01D9     	 bls .L115
1886:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1835              	 .loc 1 1886 0
 1836 006e 0023     	 mov r3,#0
 1837 0070 4CE0     	 b .L109
 1838              	.L115:
1887:../Dave/Generated/UCPROBE/lib_str.c ****     }
1888:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr found      
1889:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_str = pstr      + str_len;
 1839              	 .loc 1 1889 0
 1840 0072 FA68     	 ldr r2,[r7,#12]
 1841 0074 FB6A     	 ldr r3,[r7,#44]
 1842 0076 D318     	 add r3,r2,r3
 1843 0078 7B62     	 str r3,[r7,#36]
1890:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 1844              	 .loc 1 1890 0
 1845 007a 7B6A     	 ldr r3,[r7,#36]
 1846 007c 002B     	 cmp r3,#0
 1847 007e 01D1     	 bne .L116
1891:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1848              	 .loc 1 1891 0
 1849 0080 0023     	 mov r3,#0
 1850 0082 43E0     	 b .L109
 1851              	.L116:
1892:../Dave/Generated/UCPROBE/lib_str.c ****     }
1893:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_str = pstr_srch + str_len_srch;
 1852              	 .loc 1 1893 0
 1853 0084 BA68     	 ldr r2,[r7,#8]
 1854 0086 BB6A     	 ldr r3,[r7,#40]
 1855 0088 D318     	 add r3,r2,r3
 1856 008a 7B62     	 str r3,[r7,#36]
1894:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 1857              	 .loc 1 1894 0
 1858 008c 7B6A     	 ldr r3,[r7,#36]
 1859 008e 002B     	 cmp r3,#0
 1860 0090 01D1     	 bne .L117
1895:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1861              	 .loc 1 1895 0
 1862 0092 0023     	 mov r3,#0
 1863 0094 3AE0     	 b .L109
 1864              	.L117:
1896:../Dave/Generated/UCPROBE/lib_str.c ****     }
1897:../Dave/Generated/UCPROBE/lib_str.c **** 
1898:../Dave/Generated/UCPROBE/lib_str.c **** 
1899:../Dave/Generated/UCPROBE/lib_str.c ****     srch_len  = str_len - str_len_srch;                         /* Calc srch len (see Note #3e2).  
 1865              	 .loc 1 1899 0
 1866 0096 FA6A     	 ldr r2,[r7,#44]
 1867 0098 BB6A     	 ldr r3,[r7,#40]
 1868 009a D31A     	 sub r3,r2,r3
 1869 009c 3B62     	 str r3,[r7,#32]
1900:../Dave/Generated/UCPROBE/lib_str.c ****     srch_ix   = 0u;
 1870              	 .loc 1 1900 0
 1871 009e 0023     	 mov r3,#0
 1872 00a0 7B63     	 str r3,[r7,#52]
1901:../Dave/Generated/UCPROBE/lib_str.c ****     srch_done = DEF_NO;
 1873              	 .loc 1 1901 0
 1874 00a2 1F23     	 mov r3,#31
 1875 00a4 FB18     	 add r3,r7,r3
 1876 00a6 0022     	 mov r2,#0
 1877 00a8 1A70     	 strb r2,[r3]
 1878              	.L121:
1902:../Dave/Generated/UCPROBE/lib_str.c **** 
1903:../Dave/Generated/UCPROBE/lib_str.c ****     do {
1904:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_srch_ix = (const CPU_CHAR *)(pstr + srch_ix);
 1879              	 .loc 1 1904 0
 1880 00aa FA68     	 ldr r2,[r7,#12]
 1881 00ac 7B6B     	 ldr r3,[r7,#52]
 1882 00ae D318     	 add r3,r2,r3
 1883 00b0 BB61     	 str r3,[r7,#24]
1905:../Dave/Generated/UCPROBE/lib_str.c ****         srch_cmp     =  Str_Cmp_N(pstr_srch_ix, pstr_srch, str_len_srch);
 1884              	 .loc 1 1905 0
 1885 00b2 1623     	 mov r3,#22
 1886 00b4 FC18     	 add r4,r7,r3
 1887 00b6 B969     	 ldr r1,[r7,#24]
 1888 00b8 BA68     	 ldr r2,[r7,#8]
 1889 00ba BB6A     	 ldr r3,[r7,#40]
 1890 00bc 081C     	 mov r0,r1
 1891 00be 111C     	 mov r1,r2
 1892 00c0 1A1C     	 mov r2,r3
 1893 00c2 FFF7FEFF 	 bl Str_Cmp_N
 1894 00c6 031C     	 mov r3,r0
 1895 00c8 2380     	 strh r3,[r4]
1906:../Dave/Generated/UCPROBE/lib_str.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 1896              	 .loc 1 1906 0
 1897 00ca 1623     	 mov r3,#22
 1898 00cc FB18     	 add r3,r7,r3
 1899 00ce 0022     	 mov r2,#0
 1900 00d0 9B5E     	 ldrsh r3,[r3,r2]
 1901 00d2 002B     	 cmp r3,#0
 1902 00d4 01D1     	 bne .L118
 1903              	 .loc 1 1906 0 is_stmt 0 discriminator 1
 1904 00d6 0122     	 mov r2,#1
 1905 00d8 00E0     	 b .L119
 1906              	.L118:
 1907              	 .loc 1 1906 0 discriminator 2
 1908 00da 0022     	 mov r2,#0
 1909              	.L119:
 1910              	 .loc 1 1906 0 discriminator 4
 1911 00dc 1F23     	 mov r3,#31
 1912 00de FB18     	 add r3,r7,r3
 1913 00e0 1A70     	 strb r2,[r3]
1907:../Dave/Generated/UCPROBE/lib_str.c ****         srch_ix++;
 1914              	 .loc 1 1907 0 is_stmt 1 discriminator 4
 1915 00e2 7B6B     	 ldr r3,[r7,#52]
 1916 00e4 0133     	 add r3,r3,#1
 1917 00e6 7B63     	 str r3,[r7,#52]
1908:../Dave/Generated/UCPROBE/lib_str.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 1918              	 .loc 1 1908 0 discriminator 4
 1919 00e8 1F23     	 mov r3,#31
 1920 00ea FB18     	 add r3,r7,r3
 1921 00ec 1B78     	 ldrb r3,[r3]
 1922 00ee 002B     	 cmp r3,#0
 1923 00f0 03D1     	 bne .L120
 1924              	 .loc 1 1908 0 is_stmt 0 discriminator 1
 1925 00f2 7A6B     	 ldr r2,[r7,#52]
 1926 00f4 3B6A     	 ldr r3,[r7,#32]
 1927 00f6 9A42     	 cmp r2,r3
 1928 00f8 D7D9     	 bls .L121
 1929              	.L120:
1909:../Dave/Generated/UCPROBE/lib_str.c **** 
1910:../Dave/Generated/UCPROBE/lib_str.c **** 
1911:../Dave/Generated/UCPROBE/lib_str.c ****     if (srch_cmp != 0) {                                        /* Rtn NULL if srch str NOT found (
 1930              	 .loc 1 1911 0 is_stmt 1
 1931 00fa 1623     	 mov r3,#22
 1932 00fc FB18     	 add r3,r7,r3
 1933 00fe 0022     	 mov r2,#0
 1934 0100 9B5E     	 ldrsh r3,[r3,r2]
 1935 0102 002B     	 cmp r3,#0
 1936 0104 01D0     	 beq .L122
1912:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1937              	 .loc 1 1912 0
 1938 0106 0023     	 mov r3,#0
 1939 0108 00E0     	 b .L109
 1940              	.L122:
1913:../Dave/Generated/UCPROBE/lib_str.c ****     }
1914:../Dave/Generated/UCPROBE/lib_str.c **** 
1915:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_srch_ix);                          /* Else rtn ptr to found srch str (
 1941              	 .loc 1 1915 0
 1942 010a BB69     	 ldr r3,[r7,#24]
 1943              	.L109:
1916:../Dave/Generated/UCPROBE/lib_str.c **** }
 1944              	 .loc 1 1916 0
 1945 010c 181C     	 mov r0,r3
 1946 010e BD46     	 mov sp,r7
 1947 0110 0FB0     	 add sp,sp,#60
 1948              	 
 1949 0112 90BD     	 pop {r4,r7,pc}
 1950              	 .cfi_endproc
 1951              	.LFE17:
 1953              	 .section .text.Str_FmtNbr_Int32U,"ax",%progbits
 1954              	 .align 2
 1955              	 .global Str_FmtNbr_Int32U
 1956              	 .code 16
 1957              	 .thumb_func
 1959              	Str_FmtNbr_Int32U:
 1960              	.LFB18:
1917:../Dave/Generated/UCPROBE/lib_str.c **** 
1918:../Dave/Generated/UCPROBE/lib_str.c **** 
1919:../Dave/Generated/UCPROBE/lib_str.c **** /*
1920:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1921:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32U()
1922:../Dave/Generated/UCPROBE/lib_str.c **** *
1923:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit unsigned integer into a multi-digit character string.
1924:../Dave/Generated/UCPROBE/lib_str.c **** *
1925:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
1926:../Dave/Generated/UCPROBE/lib_str.c **** *
1927:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
1928:../Dave/Generated/UCPROBE/lib_str.c **** *
1929:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number of digits to format
1930:../Dave/Generated/UCPROBE/lib_str.c **** *
1931:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MIN     Minimum number of 32-bit unsigned d
1932:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MAX     Maximum number of 32-bit unsigned d
1933:../Dave/Generated/UCPROBE/lib_str.c **** *
1934:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
1935:../Dave/Generated/UCPROBE/lib_str.c **** *
1936:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number base :
1937:../Dave/Generated/UCPROBE/lib_str.c **** *
1938:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
1939:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
1940:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
1941:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
1942:../Dave/Generated/UCPROBE/lib_str.c **** *
1943:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
1944:../Dave/Generated/UCPROBE/lib_str.c **** *
1945:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
1946:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
1947:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
1948:../Dave/Generated/UCPROBE/lib_str.c **** *
1949:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
1950:../Dave/Generated/UCPROBE/lib_str.c **** *
1951:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
1952:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
1953:../Dave/Generated/UCPROBE/lib_str.c **** *
1954:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
1955:../Dave/Generated/UCPROBE/lib_str.c **** *
1956:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
1957:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
1958:../Dave/Generated/UCPROBE/lib_str.c **** *
1959:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
1960:../Dave/Generated/UCPROBE/lib_str.c **** *
1961:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
1962:../Dave/Generated/UCPROBE/lib_str.c **** *
1963:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
1964:../Dave/Generated/UCPROBE/lib_str.c **** *
1965:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1966:../Dave/Generated/UCPROBE/lib_str.c **** *
1967:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting
1968:../Dave/Generated/UCPROBE/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
1969:../Dave/Generated/UCPROBE/lib_str.c **** *
1970:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
1971:../Dave/Generated/UCPROBE/lib_str.c **** *
1972:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
1973:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 0
1974:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
1975:../Dave/Generated/UCPROBE/lib_str.c **** *
1976:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = ""                   See Note #6a
1977:../Dave/Generated/UCPROBE/lib_str.c **** *
1978:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of
1979:../Dave/Generated/UCPROBE/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
1980:../Dave/Generated/UCPROBE/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
1981:../Dave/Generated/UCPROBE/lib_str.c **** *
1982:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
1983:../Dave/Generated/UCPROBE/lib_str.c **** *
1984:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
1985:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 3
1986:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
1987:../Dave/Generated/UCPROBE/lib_str.c **** *
1988:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "???"                See Note #6b
1989:../Dave/Generated/UCPROBE/lib_str.c **** *
1990:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
1991:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
1992:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
1993:../Dave/Generated/UCPROBE/lib_str.c **** *
1994:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
1995:../Dave/Generated/UCPROBE/lib_str.c **** *
1996:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
1997:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
1998:../Dave/Generated/UCPROBE/lib_str.c **** *
1999:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) The number of leading characters is such that the total number of significa
2000:../Dave/Generated/UCPROBE/lib_str.c **** *                       integer digits plus the number of leading characters is equal to the reques
2001:../Dave/Generated/UCPROBE/lib_str.c **** *                       number of integer digits to format ('nbr_dig').
2002:../Dave/Generated/UCPROBE/lib_str.c **** *
2003:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2004:../Dave/Generated/UCPROBE/lib_str.c **** *
2005:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr       = 23456
2006:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig   = 7
2007:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base  = 10
2008:../Dave/Generated/UCPROBE/lib_str.c **** *                               lead_char = ' '
2009:../Dave/Generated/UCPROBE/lib_str.c **** *
2010:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr      = "  23456"
2011:../Dave/Generated/UCPROBE/lib_str.c **** *
2012:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2013:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2014:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2015:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2016:../Dave/Generated/UCPROBE/lib_str.c **** *
2017:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2018:../Dave/Generated/UCPROBE/lib_str.c **** *
2019:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2020:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2021:../Dave/Generated/UCPROBE/lib_str.c **** *
2022:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2023:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2024:../Dave/Generated/UCPROBE/lib_str.c **** *
2025:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2026:../Dave/Generated/UCPROBE/lib_str.c **** *
2027:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2028:../Dave/Generated/UCPROBE/lib_str.c **** *
2029:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2030:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2031:../Dave/Generated/UCPROBE/lib_str.c **** *
2032:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2033:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2034:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2035:../Dave/Generated/UCPROBE/lib_str.c **** *
2036:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2037:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
2038:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2039:../Dave/Generated/UCPROBE/lib_str.c **** *
2040:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2041:../Dave/Generated/UCPROBE/lib_str.c **** */
2042:../Dave/Generated/UCPROBE/lib_str.c **** 
2043:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32U (CPU_INT32U    nbr,
2044:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_dig,
2045:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_base,
2046:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR      lead_char,
2047:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2048:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   nul,
2049:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     *pstr)
2050:../Dave/Generated/UCPROBE/lib_str.c **** {
 1961              	 .loc 1 2050 0
 1962              	 .cfi_startproc
 1963 0000 90B5     	 push {r4,r7,lr}
 1964              	.LCFI54:
 1965              	 .cfi_def_cfa_offset 12
 1966              	 .cfi_offset 4,-12
 1967              	 .cfi_offset 7,-8
 1968              	 .cfi_offset 14,-4
 1969 0002 89B0     	 sub sp,sp,#36
 1970              	.LCFI55:
 1971              	 .cfi_def_cfa_offset 48
 1972 0004 04AF     	 add r7,sp,#16
 1973              	.LCFI56:
 1974              	 .cfi_def_cfa 7,32
 1975 0006 7860     	 str r0,[r7,#4]
 1976 0008 0C1C     	 mov r4,r1
 1977 000a 101C     	 mov r0,r2
 1978 000c 191C     	 mov r1,r3
 1979 000e FB1C     	 add r3,r7,#3
 1980 0010 221C     	 add r2,r4,#0
 1981 0012 1A70     	 strb r2,[r3]
 1982 0014 BB1C     	 add r3,r7,#2
 1983 0016 021C     	 add r2,r0,#0
 1984 0018 1A70     	 strb r2,[r3]
 1985 001a 7B1C     	 add r3,r7,#1
 1986 001c 0A1C     	 add r2,r1,#0
 1987 001e 1A70     	 strb r2,[r3]
2051:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_fmt;
2052:../Dave/Generated/UCPROBE/lib_str.c **** 
2053:../Dave/Generated/UCPROBE/lib_str.c **** 
2054:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32(nbr,                            /* Fmt unsigned int into str.      
 1988              	 .loc 1 2054 0
 1989 0020 7868     	 ldr r0,[r7,#4]
 1990 0022 FB1C     	 add r3,r7,#3
 1991 0024 1978     	 ldrb r1,[r3]
 1992 0026 BB1C     	 add r3,r7,#2
 1993 0028 1A78     	 ldrb r2,[r3]
 1994 002a 7B1C     	 add r3,r7,#1
 1995 002c 1B78     	 ldrb r3,[r3]
 1996 002e 0093     	 str r3,[sp]
 1997 0030 2023     	 mov r3,#32
 1998 0032 FB18     	 add r3,r7,r3
 1999 0034 1B78     	 ldrb r3,[r3]
 2000 0036 0193     	 str r3,[sp,#4]
 2001 0038 2423     	 mov r3,#36
 2002 003a FB18     	 add r3,r7,r3
 2003 003c 1B78     	 ldrb r3,[r3]
 2004 003e 0293     	 str r3,[sp,#8]
 2005 0040 BB6A     	 ldr r3,[r7,#40]
 2006 0042 0393     	 str r3,[sp,#12]
 2007 0044 0023     	 mov r3,#0
 2008 0046 FFF7FEFF 	 bl Str_FmtNbr_Int32
 2009 004a 031C     	 mov r3,r0
 2010 004c FB60     	 str r3,[r7,#12]
2055:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_dig,
2056:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_base,
2057:../Dave/Generated/UCPROBE/lib_str.c ****                                 DEF_NO,
2058:../Dave/Generated/UCPROBE/lib_str.c ****                                 lead_char,
2059:../Dave/Generated/UCPROBE/lib_str.c ****                                 lower_case,
2060:../Dave/Generated/UCPROBE/lib_str.c ****                                 nul,
2061:../Dave/Generated/UCPROBE/lib_str.c ****                                 pstr);
2062:../Dave/Generated/UCPROBE/lib_str.c **** 
2063:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_fmt);
 2011              	 .loc 1 2063 0
 2012 004e FB68     	 ldr r3,[r7,#12]
2064:../Dave/Generated/UCPROBE/lib_str.c **** }
 2013              	 .loc 1 2064 0
 2014 0050 181C     	 mov r0,r3
 2015 0052 BD46     	 mov sp,r7
 2016 0054 05B0     	 add sp,sp,#20
 2017              	 
 2018 0056 90BD     	 pop {r4,r7,pc}
 2019              	 .cfi_endproc
 2020              	.LFE18:
 2022              	 .section .text.Str_FmtNbr_Int32S,"ax",%progbits
 2023              	 .align 2
 2024              	 .global Str_FmtNbr_Int32S
 2025              	 .code 16
 2026              	 .thumb_func
 2028              	Str_FmtNbr_Int32S:
 2029              	.LFB19:
2065:../Dave/Generated/UCPROBE/lib_str.c **** 
2066:../Dave/Generated/UCPROBE/lib_str.c **** 
2067:../Dave/Generated/UCPROBE/lib_str.c **** /*
2068:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2069:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32S()
2070:../Dave/Generated/UCPROBE/lib_str.c **** *
2071:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit signed integer into a multi-digit character string.
2072:../Dave/Generated/UCPROBE/lib_str.c **** *
2073:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
2074:../Dave/Generated/UCPROBE/lib_str.c **** *
2075:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
2076:../Dave/Generated/UCPROBE/lib_str.c **** *
2077:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number of digits to format
2078:../Dave/Generated/UCPROBE/lib_str.c **** *
2079:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MIN + 1     Minimum number of 32-bit signed
2080:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MAX + 1     Maximum number of 32-bit signed
2081:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                   (plus 1 digit for possible nega
2082:../Dave/Generated/UCPROBE/lib_str.c **** *
2083:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
2084:../Dave/Generated/UCPROBE/lib_str.c **** *
2085:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number base :
2086:../Dave/Generated/UCPROBE/lib_str.c **** *
2087:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
2088:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
2089:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
2090:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
2091:../Dave/Generated/UCPROBE/lib_str.c **** *
2092:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
2093:../Dave/Generated/UCPROBE/lib_str.c **** *
2094:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2095:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
2096:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
2097:../Dave/Generated/UCPROBE/lib_str.c **** *
2098:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
2099:../Dave/Generated/UCPROBE/lib_str.c **** *
2100:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
2101:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
2102:../Dave/Generated/UCPROBE/lib_str.c **** *
2103:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2104:../Dave/Generated/UCPROBE/lib_str.c **** *
2105:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2106:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2107:../Dave/Generated/UCPROBE/lib_str.c **** *
2108:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2109:../Dave/Generated/UCPROBE/lib_str.c **** *
2110:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
2111:../Dave/Generated/UCPROBE/lib_str.c **** *
2112:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
2113:../Dave/Generated/UCPROBE/lib_str.c **** *
2114:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2115:../Dave/Generated/UCPROBE/lib_str.c **** *
2116:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting
2117:../Dave/Generated/UCPROBE/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
2118:../Dave/Generated/UCPROBE/lib_str.c **** *
2119:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2120:../Dave/Generated/UCPROBE/lib_str.c **** *
2121:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = -23456
2122:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  =  0
2123:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2124:../Dave/Generated/UCPROBE/lib_str.c **** *
2125:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = ""                   See Note #6a
2126:../Dave/Generated/UCPROBE/lib_str.c **** *
2127:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of
2128:../Dave/Generated/UCPROBE/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
2129:../Dave/Generated/UCPROBE/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
2130:../Dave/Generated/UCPROBE/lib_str.c **** *
2131:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2132:../Dave/Generated/UCPROBE/lib_str.c **** *
2133:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
2134:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 3
2135:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2136:../Dave/Generated/UCPROBE/lib_str.c **** *
2137:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "???"                See Note #6b
2138:../Dave/Generated/UCPROBE/lib_str.c **** *
2139:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) If the number to format ('nbr') is negative but the number of digits to for
2140:../Dave/Generated/UCPROBE/lib_str.c **** *                       ('nbr_dig') is equal to the number of significant integer digits of the num
2141:../Dave/Generated/UCPROBE/lib_str.c **** *                       to format ('nbr'); then an invalid string is formatted instead of truncatin
2142:../Dave/Generated/UCPROBE/lib_str.c **** *                       the negative sign.
2143:../Dave/Generated/UCPROBE/lib_str.c **** *
2144:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2145:../Dave/Generated/UCPROBE/lib_str.c **** *
2146:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = -23456
2147:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  =  5
2148:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2149:../Dave/Generated/UCPROBE/lib_str.c **** *
2150:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "?????"              See Note #6b
2151:../Dave/Generated/UCPROBE/lib_str.c **** *
2152:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
2153:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2154:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2155:../Dave/Generated/UCPROBE/lib_str.c **** *
2156:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2157:../Dave/Generated/UCPROBE/lib_str.c **** *
2158:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
2159:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
2160:../Dave/Generated/UCPROBE/lib_str.c **** *
2161:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2162:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2163:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2164:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
2165:../Dave/Generated/UCPROBE/lib_str.c **** *
2166:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
2167:../Dave/Generated/UCPROBE/lib_str.c **** *
2168:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456
2169:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
2170:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
2171:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2172:../Dave/Generated/UCPROBE/lib_str.c **** *
2173:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456"
2174:../Dave/Generated/UCPROBE/lib_str.c **** *
2175:../Dave/Generated/UCPROBE/lib_str.c **** *
2176:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456
2177:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   =  7
2178:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
2179:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2180:../Dave/Generated/UCPROBE/lib_str.c **** *
2181:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456"
2182:../Dave/Generated/UCPROBE/lib_str.c **** *
2183:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2184:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
2185:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2186:../Dave/Generated/UCPROBE/lib_str.c **** *
2187:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2188:../Dave/Generated/UCPROBE/lib_str.c **** *
2189:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
2190:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2191:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
2192:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
2193:../Dave/Generated/UCPROBE/lib_str.c **** *
2194:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-0023456"
2195:../Dave/Generated/UCPROBE/lib_str.c **** *
2196:../Dave/Generated/UCPROBE/lib_str.c **** *
2197:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
2198:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2199:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
2200:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
2201:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_NO
2202:../Dave/Generated/UCPROBE/lib_str.c **** *
2203:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-000ABCD"
2204:../Dave/Generated/UCPROBE/lib_str.c **** *
2205:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2206:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
2207:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2208:../Dave/Generated/UCPROBE/lib_str.c **** *
2209:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2210:../Dave/Generated/UCPROBE/lib_str.c **** *
2211:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
2212:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2213:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
2214:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
2215:../Dave/Generated/UCPROBE/lib_str.c **** *
2216:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "##-23456"
2217:../Dave/Generated/UCPROBE/lib_str.c **** *
2218:../Dave/Generated/UCPROBE/lib_str.c **** *
2219:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
2220:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2221:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
2222:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
2223:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_YES
2224:../Dave/Generated/UCPROBE/lib_str.c **** *
2225:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "###-abcd"
2226:../Dave/Generated/UCPROBE/lib_str.c **** *
2227:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2228:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2229:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2230:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2231:../Dave/Generated/UCPROBE/lib_str.c **** *
2232:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2233:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2234:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2235:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2236:../Dave/Generated/UCPROBE/lib_str.c **** *
2237:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2238:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2239:../Dave/Generated/UCPROBE/lib_str.c **** *
2240:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2241:../Dave/Generated/UCPROBE/lib_str.c **** *
2242:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2243:../Dave/Generated/UCPROBE/lib_str.c **** *
2244:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2245:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
2246:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2247:../Dave/Generated/UCPROBE/lib_str.c **** *
2248:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2249:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2250:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2251:../Dave/Generated/UCPROBE/lib_str.c **** *
2252:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2253:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
2254:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2255:../Dave/Generated/UCPROBE/lib_str.c **** *
2256:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2257:../Dave/Generated/UCPROBE/lib_str.c **** */
2258:../Dave/Generated/UCPROBE/lib_str.c **** 
2259:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32S (CPU_INT32S    nbr,
2260:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_dig,
2261:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_base,
2262:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR      lead_char,
2263:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2264:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   nul,
2265:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     *pstr)
2266:../Dave/Generated/UCPROBE/lib_str.c **** {
 2030              	 .loc 1 2266 0
 2031              	 .cfi_startproc
 2032 0000 90B5     	 push {r4,r7,lr}
 2033              	.LCFI57:
 2034              	 .cfi_def_cfa_offset 12
 2035              	 .cfi_offset 4,-12
 2036              	 .cfi_offset 7,-8
 2037              	 .cfi_offset 14,-4
 2038 0002 8BB0     	 sub sp,sp,#44
 2039              	.LCFI58:
 2040              	 .cfi_def_cfa_offset 56
 2041 0004 04AF     	 add r7,sp,#16
 2042              	.LCFI59:
 2043              	 .cfi_def_cfa 7,40
 2044 0006 7860     	 str r0,[r7,#4]
 2045 0008 0C1C     	 mov r4,r1
 2046 000a 101C     	 mov r0,r2
 2047 000c 191C     	 mov r1,r3
 2048 000e FB1C     	 add r3,r7,#3
 2049 0010 221C     	 add r2,r4,#0
 2050 0012 1A70     	 strb r2,[r3]
 2051 0014 BB1C     	 add r3,r7,#2
 2052 0016 021C     	 add r2,r0,#0
 2053 0018 1A70     	 strb r2,[r3]
 2054 001a 7B1C     	 add r3,r7,#1
 2055 001c 0A1C     	 add r2,r1,#0
 2056 001e 1A70     	 strb r2,[r3]
2267:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2268:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S    nbr_fmt;
2269:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2270:../Dave/Generated/UCPROBE/lib_str.c **** 
2271:../Dave/Generated/UCPROBE/lib_str.c **** 
2272:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr < 0) {                                              /* If nbr neg, ...                 
 2057              	 .loc 1 2272 0
 2058 0020 7B68     	 ldr r3,[r7,#4]
 2059 0022 002B     	 cmp r3,#0
 2060 0024 07DA     	 bge .L126
2273:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt = -nbr;                                         /* ... negate nbr.                 
 2061              	 .loc 1 2273 0
 2062 0026 7B68     	 ldr r3,[r7,#4]
 2063 0028 5B42     	 neg r3,r3
 2064 002a 7B61     	 str r3,[r7,#20]
2274:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg =  DEF_YES;
 2065              	 .loc 1 2274 0
 2066 002c 1323     	 mov r3,#19
 2067 002e FB18     	 add r3,r7,r3
 2068 0030 0122     	 mov r2,#1
 2069 0032 1A70     	 strb r2,[r3]
 2070 0034 05E0     	 b .L127
 2071              	.L126:
2275:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
2276:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt =  nbr;
 2072              	 .loc 1 2276 0
 2073 0036 7B68     	 ldr r3,[r7,#4]
 2074 0038 7B61     	 str r3,[r7,#20]
2277:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg =  DEF_NO;
 2075              	 .loc 1 2277 0
 2076 003a 1323     	 mov r3,#19
 2077 003c FB18     	 add r3,r7,r3
 2078 003e 0022     	 mov r2,#0
 2079 0040 1A70     	 strb r2,[r3]
 2080              	.L127:
2278:../Dave/Generated/UCPROBE/lib_str.c ****     }
2279:../Dave/Generated/UCPROBE/lib_str.c **** 
2280:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32((CPU_INT32U)nbr_fmt,            /* Fmt signed int into str.        
 2081              	 .loc 1 2280 0
 2082 0042 7869     	 ldr r0,[r7,#20]
 2083 0044 FB1C     	 add r3,r7,#3
 2084 0046 1978     	 ldrb r1,[r3]
 2085 0048 BB1C     	 add r3,r7,#2
 2086 004a 1A78     	 ldrb r2,[r3]
 2087 004c 1323     	 mov r3,#19
 2088 004e FB18     	 add r3,r7,r3
 2089 0050 1C78     	 ldrb r4,[r3]
 2090 0052 7B1C     	 add r3,r7,#1
 2091 0054 1B78     	 ldrb r3,[r3]
 2092 0056 0093     	 str r3,[sp]
 2093 0058 2823     	 mov r3,#40
 2094 005a FB18     	 add r3,r7,r3
 2095 005c 1B78     	 ldrb r3,[r3]
 2096 005e 0193     	 str r3,[sp,#4]
 2097 0060 2C23     	 mov r3,#44
 2098 0062 FB18     	 add r3,r7,r3
 2099 0064 1B78     	 ldrb r3,[r3]
 2100 0066 0293     	 str r3,[sp,#8]
 2101 0068 3B6B     	 ldr r3,[r7,#48]
 2102 006a 0393     	 str r3,[sp,#12]
 2103 006c 231C     	 mov r3,r4
 2104 006e FFF7FEFF 	 bl Str_FmtNbr_Int32
 2105 0072 031C     	 mov r3,r0
 2106 0074 FB60     	 str r3,[r7,#12]
2281:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_dig,
2282:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_base,
2283:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_neg,
2284:../Dave/Generated/UCPROBE/lib_str.c ****                                             lead_char,
2285:../Dave/Generated/UCPROBE/lib_str.c ****                                             lower_case,
2286:../Dave/Generated/UCPROBE/lib_str.c ****                                             nul,
2287:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr);
2288:../Dave/Generated/UCPROBE/lib_str.c **** 
2289:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_fmt);
 2107              	 .loc 1 2289 0
 2108 0076 FB68     	 ldr r3,[r7,#12]
2290:../Dave/Generated/UCPROBE/lib_str.c **** }
 2109              	 .loc 1 2290 0
 2110 0078 181C     	 mov r0,r3
 2111 007a BD46     	 mov sp,r7
 2112 007c 07B0     	 add sp,sp,#28
 2113              	 
 2114 007e 90BD     	 pop {r4,r7,pc}
 2115              	 .cfi_endproc
 2116              	.LFE19:
 2118              	 .section .text.Str_ParseNbr_Int32U,"ax",%progbits
 2119              	 .align 2
 2120              	 .global Str_ParseNbr_Int32U
 2121              	 .code 16
 2122              	 .thumb_func
 2124              	Str_ParseNbr_Int32U:
 2125              	.LFB20:
2291:../Dave/Generated/UCPROBE/lib_str.c **** 
2292:../Dave/Generated/UCPROBE/lib_str.c **** 
2293:../Dave/Generated/UCPROBE/lib_str.c **** /*
2294:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2295:../Dave/Generated/UCPROBE/lib_str.c **** *                                           Str_FmtNbr_32()
2296:../Dave/Generated/UCPROBE/lib_str.c **** *
2297:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format number into a multi-digit character string.
2298:../Dave/Generated/UCPROBE/lib_str.c **** *
2299:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number                         to format (see Note #1).
2300:../Dave/Generated/UCPROBE/lib_str.c **** *
2301:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of decimal       digits to format (see Note #2).
2302:../Dave/Generated/UCPROBE/lib_str.c **** *
2303:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dp          Number of decimal point digits to format.
2304:../Dave/Generated/UCPROBE/lib_str.c **** *
2305:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character (see Note #3) :
2306:../Dave/Generated/UCPROBE/lib_str.c **** *
2307:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2308:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
2309:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6d).
2310:../Dave/Generated/UCPROBE/lib_str.c **** *
2311:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2312:../Dave/Generated/UCPROBE/lib_str.c **** *
2313:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2314:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2315:../Dave/Generated/UCPROBE/lib_str.c **** *
2316:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2317:../Dave/Generated/UCPROBE/lib_str.c **** *
2318:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6c].
2319:../Dave/Generated/UCPROBE/lib_str.c **** *
2320:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
2321:../Dave/Generated/UCPROBE/lib_str.c **** *
2322:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2323:../Dave/Generated/UCPROBE/lib_str.c **** *
2324:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) The maximum accuracy for 32-bit floating-point numbers :
2325:../Dave/Generated/UCPROBE/lib_str.c **** *
2326:../Dave/Generated/UCPROBE/lib_str.c **** *
2327:../Dave/Generated/UCPROBE/lib_str.c **** *                                 Maximum Accuracy            log [Internal-Base ^ (Number-Internal
2328:../Dave/Generated/UCPROBE/lib_str.c **** *                           32-bit Floating-point Number  =  --------------------------------------
2329:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                             log [External-Base]
2330:../Dave/Generated/UCPROBE/lib_str.c **** *
2331:../Dave/Generated/UCPROBE/lib_str.c **** *                                                             log [2 ^ 24]
2332:../Dave/Generated/UCPROBE/lib_str.c **** *                                                         =  --------------
2333:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               log [10]
2334:../Dave/Generated/UCPROBE/lib_str.c **** *
2335:../Dave/Generated/UCPROBE/lib_str.c **** *                                                         <  7.225  Base-10 Digits
2336:../Dave/Generated/UCPROBE/lib_str.c **** *
2337:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
2338:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Internal-Base                   Internal number base of flo
2339:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           point numbers (i.e.  2)
2340:../Dave/Generated/UCPROBE/lib_str.c **** *                                       External-Base                   External number base of flo
2341:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           point numbers (i.e. 10)
2342:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Number-Internal-Base-Digits     Number of internal number b
2343:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           significant digits (i.e
2344:../Dave/Generated/UCPROBE/lib_str.c **** *
2345:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Some CPUs' &/or compilers' floating-point implementations MAY further reduc
2346:../Dave/Generated/UCPROBE/lib_str.c **** *                       maximum accuracy.
2347:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2348:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) If the total number of digits to format ('nbr_dig + nbr_dp') is zero; then 
2349:../Dave/Generated/UCPROBE/lib_str.c **** *                       formatting is performed except possible NULL-termination of the string (see
2350:../Dave/Generated/UCPROBE/lib_str.c **** *
2351:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2352:../Dave/Generated/UCPROBE/lib_str.c **** *
2353:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr     = -23456.789
2354:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig =  0
2355:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dp  =  0
2356:../Dave/Generated/UCPROBE/lib_str.c **** *
2357:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr    = ""                        See Note #7a
2358:../Dave/Generated/UCPROBE/lib_str.c **** *
2359:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is less than the number o
2360:../Dave/Generated/UCPROBE/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
2361:../Dave/Generated/UCPROBE/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
2362:../Dave/Generated/UCPROBE/lib_str.c **** *
2363:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2364:../Dave/Generated/UCPROBE/lib_str.c **** *
2365:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = 23456.789
2366:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig = 3
2367:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  = 2
2368:../Dave/Generated/UCPROBE/lib_str.c **** *
2369:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "??????"              See Note #7d
2370:../Dave/Generated/UCPROBE/lib_str.c **** *
2371:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) If the number to format ('nbr') is negative but the number of digits to
2372:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
2373:../Dave/Generated/UCPROBE/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
2374:../Dave/Generated/UCPROBE/lib_str.c **** *                           the negative sign.
2375:../Dave/Generated/UCPROBE/lib_str.c **** *
2376:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2377:../Dave/Generated/UCPROBE/lib_str.c **** *
2378:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = -23456.789
2379:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig =  5
2380:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  =  2
2381:../Dave/Generated/UCPROBE/lib_str.c **** *
2382:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "????????"            See Note #7d
2383:../Dave/Generated/UCPROBE/lib_str.c **** *
2384:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of significa
2385:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits is zero, & the number of digits to format ('nbr_dig') is
2386:../Dave/Generated/UCPROBE/lib_str.c **** *                           but the number of decimal point digits to format ('nbr_dp') is zero; th
2387:../Dave/Generated/UCPROBE/lib_str.c **** *                           an invalid string is formatted instead of truncating the negative sign.
2388:../Dave/Generated/UCPROBE/lib_str.c **** *
2389:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2390:../Dave/Generated/UCPROBE/lib_str.c **** *
2391:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = -0.7895
2392:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig =  1
2393:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  =  0
2394:../Dave/Generated/UCPROBE/lib_str.c **** *
2395:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "?"                   See Note #7d
2396:../Dave/Generated/UCPROBE/lib_str.c **** *
2397:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) (A) If the number to format ('nbr') is negative but the number of signi
2398:../Dave/Generated/UCPROBE/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2399:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2400:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero; then the negative sign immediately prefixes the decimal point
2401:../Dave/Generated/UCPROBE/lib_str.c **** *                               with NO decimal digits formatted, NOT even a single decimal digit o
2402:../Dave/Generated/UCPROBE/lib_str.c **** *
2403:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2404:../Dave/Generated/UCPROBE/lib_str.c **** *
2405:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr     = -0.7895
2406:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig =  0
2407:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp  =  2
2408:../Dave/Generated/UCPROBE/lib_str.c **** *
2409:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr    = "-.78"
2410:../Dave/Generated/UCPROBE/lib_str.c **** *
2411:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is positive but the number of signi
2412:../Dave/Generated/UCPROBE/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2413:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2414:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero; then a single decimal digit of '0' prefixes the decimal point
2415:../Dave/Generated/UCPROBE/lib_str.c **** *
2416:../Dave/Generated/UCPROBE/lib_str.c **** *                               This '0' digit is used whenever a negative sign is not formatted (s
2417:../Dave/Generated/UCPROBE/lib_str.c **** *                               Note #2b4A) so that the formatted string's decimal point is not flo
2418:../Dave/Generated/UCPROBE/lib_str.c **** *                               but fixed in the string as the 2nd character.
2419:../Dave/Generated/UCPROBE/lib_str.c **** *
2420:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2421:../Dave/Generated/UCPROBE/lib_str.c **** *
2422:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr     =  0.7895
2423:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig =  0
2424:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp  =  2
2425:../Dave/Generated/UCPROBE/lib_str.c **** *
2426:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr    = "0.78"
2427:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2428:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the total number of digits to format ('nbr_dig + nbr_dp') is greater
2429:../Dave/Generated/UCPROBE/lib_str.c **** *
2430:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) ... the maximum accuracy of the CPU's &/or compiler's 32-bit floati
2431:../Dave/Generated/UCPROBE/lib_str.c **** *                               numbers, digits following all significantly-accurate digits of the 
2432:../Dave/Generated/UCPROBE/lib_str.c **** *                               format ('nbr') will be inaccurate; ...
2433:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) ... the configured maximum accuracy ('LIB_STR_CFG_FP_MAX_NBR_DIG_SI
2434:../Dave/Generated/UCPROBE/lib_str.c **** *                               digits or decimal places following all significantly-accurate digit
2435:../Dave/Generated/UCPROBE/lib_str.c **** *                               number to format ('nbr') will be replaced & formatted with zeros ('
2436:../Dave/Generated/UCPROBE/lib_str.c **** *
2437:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2438:../Dave/Generated/UCPROBE/lib_str.c **** *
2439:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr                            = 123456789.012345
2440:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig                        = 9
2441:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp                         = 6
2442:../Dave/Generated/UCPROBE/lib_str.c **** *                                       LIB_STR_CFG_FP_MAX_NBR_DIG_SIG = 7
2443:../Dave/Generated/UCPROBE/lib_str.c **** *
2444:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr                           = "123456700.000000"
2445:../Dave/Generated/UCPROBE/lib_str.c **** *
2446:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Therefore, one or more least-significant digit(s) of the number to form
2447:../Dave/Generated/UCPROBE/lib_str.c **** *                           MAY be rounded & not necessarily truncated due to the inaccuracy of the
2448:../Dave/Generated/UCPROBE/lib_str.c **** *                           &/or compiler's floating-point implementation.
2449:../Dave/Generated/UCPROBE/lib_str.c **** *
2450:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #1.
2451:../Dave/Generated/UCPROBE/lib_str.c **** *
2452:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2453:../Dave/Generated/UCPROBE/lib_str.c **** *
2454:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2455:../Dave/Generated/UCPROBE/lib_str.c **** *
2456:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a base-10 digit, ...
2457:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
2458:../Dave/Generated/UCPROBE/lib_str.c **** *
2459:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2460:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2461:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2462:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
2463:../Dave/Generated/UCPROBE/lib_str.c **** *
2464:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
2465:../Dave/Generated/UCPROBE/lib_str.c **** *
2466:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456.789
2467:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
2468:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp    = 2
2469:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2470:../Dave/Generated/UCPROBE/lib_str.c **** *
2471:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456.78"
2472:../Dave/Generated/UCPROBE/lib_str.c **** *
2473:../Dave/Generated/UCPROBE/lib_str.c **** *
2474:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456.789
2475:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   =  7
2476:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp    =  2
2477:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2478:../Dave/Generated/UCPROBE/lib_str.c **** *
2479:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456.78"
2480:../Dave/Generated/UCPROBE/lib_str.c **** *
2481:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2482:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
2483:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2484:../Dave/Generated/UCPROBE/lib_str.c **** *
2485:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2486:../Dave/Generated/UCPROBE/lib_str.c **** *
2487:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr       = -23456.789
2488:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig   =  8
2489:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp    =  2
2490:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char = '0'
2491:../Dave/Generated/UCPROBE/lib_str.c **** *
2492:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr      = "-0023456.78"
2493:../Dave/Generated/UCPROBE/lib_str.c **** *
2494:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2495:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
2496:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2497:../Dave/Generated/UCPROBE/lib_str.c **** *
2498:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2499:../Dave/Generated/UCPROBE/lib_str.c **** *
2500:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr       = -23456.789
2501:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig   =  8
2502:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp    =  2
2503:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char = '#'
2504:../Dave/Generated/UCPROBE/lib_str.c **** *
2505:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr      = "##-23456.78"
2506:../Dave/Generated/UCPROBE/lib_str.c **** *
2507:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the integer value of the number to format is zero & ...
2508:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... the number of digits to format is greater than one ...
2509:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... OR  the number is NOT negative,                    ...
2510:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... but NO leading character available;                ...
2511:../Dave/Generated/UCPROBE/lib_str.c **** *                       (5) ... then one digit of '0' value is formatted.
2512:../Dave/Generated/UCPROBE/lib_str.c **** *
2513:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2514:../Dave/Generated/UCPROBE/lib_str.c **** *
2515:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2b4B.
2516:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2517:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2518:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2519:../Dave/Generated/UCPROBE/lib_str.c **** *
2520:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2521:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2522:../Dave/Generated/UCPROBE/lib_str.c **** *
2523:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2524:../Dave/Generated/UCPROBE/lib_str.c **** *
2525:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2526:../Dave/Generated/UCPROBE/lib_str.c **** *
2527:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2528:../Dave/Generated/UCPROBE/lib_str.c **** *                                                              'nbr_dp'           +
2529:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
2530:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 decimal point   +
2531:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2532:../Dave/Generated/UCPROBE/lib_str.c **** *
2533:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) String format terminates when :
2534:../Dave/Generated/UCPROBE/lib_str.c **** *
2535:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
2536:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
2537:../Dave/Generated/UCPROBE/lib_str.c **** *
2538:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Total number of digits to format ('nbr_dig + nbr_dp') is zero.
2539:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
2540:../Dave/Generated/UCPROBE/lib_str.c **** *
2541:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant
2542:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible
2543:../Dave/Generated/UCPROBE/lib_str.c **** *                           negative sign.
2544:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2545:../Dave/Generated/UCPROBE/lib_str.c **** *
2546:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Lead character is NOT a valid, printable character (see Note #3a).
2547:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2548:../Dave/Generated/UCPROBE/lib_str.c **** *
2549:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Number successfully formatted into character string array.
2550:../Dave/Generated/UCPROBE/lib_str.c **** *
2551:../Dave/Generated/UCPROBE/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
2552:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2553:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits ('nbr_dig') & number of decimal point digits ('nbr_dp') to for
2554:../Dave/Generated/UCPROBE/lib_str.c **** *
2555:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (a)    0 (NULL string)          ,  if 'nbr_dig' = 0 
2556:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2557:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {
2558:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (b)   'nbr_dig'                 ,  if 'nbr_dig' > 0 
2559:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2560:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {
2561:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {  (c)  ['nbr_dp'               +  ,  if 'nbr_dig' = 0 
2562:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {         1 (for decimal point) +        'nbr_dp'  > 0
2563:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {         1 (for negative sign) ]
2564:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {
2565:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (d)  ['nbr_dig'              +  ,  if 'nbr_dig' > 0 
2566:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {        'nbr_dp'               +        'nbr_dp'  > 0
2567:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {         1 (for decimal point) ]
2568:../Dave/Generated/UCPROBE/lib_str.c **** *
2569:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2570:../Dave/Generated/UCPROBE/lib_str.c **** */
2571:../Dave/Generated/UCPROBE/lib_str.c **** 
2572:../Dave/Generated/UCPROBE/lib_str.c **** #if (LIB_STR_CFG_FP_EN == DEF_ENABLED)
2573:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_32 (CPU_FP32      nbr,
2574:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_INT08U    nbr_dig,
2575:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_INT08U    nbr_dp,
2576:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_CHAR      lead_char,
2577:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_BOOLEAN   nul,
2578:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_CHAR     *pstr)
2579:../Dave/Generated/UCPROBE/lib_str.c **** {
2580:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2581:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_DATA      i;
2582:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      nbr_fmt;
2583:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      nbr_log;
2584:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_shiftd;
2585:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16U    nbr_dig_max;
2586:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16U    nbr_dig_sig;
2587:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
2588:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    dig_val;
2589:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      dig_exp;
2590:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      dp_exp;
2591:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
2592:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_fmtd;
2593:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
2594:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
2595:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   print_char;
2596:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2597:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
2598:../Dave/Generated/UCPROBE/lib_str.c **** 
2599:../Dave/Generated/UCPROBE/lib_str.c **** 
2600:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
2601:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
2602:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
2603:../Dave/Generated/UCPROBE/lib_str.c ****     }
2604:../Dave/Generated/UCPROBE/lib_str.c **** 
2605:../Dave/Generated/UCPROBE/lib_str.c ****     dig_exp     =  1.0f;
2606:../Dave/Generated/UCPROBE/lib_str.c ****     fmt_invalid =  DEF_NO;
2607:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = (lead_char == '0') ? DEF_YES : DEF_NO;        /* Chk if lead char a '0' dig (see 
2608:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_fmt     =  0.0f;
2609:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_neg     =  DEF_NO;
2610:../Dave/Generated/UCPROBE/lib_str.c **** 
2611:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_dig < 1) && (nbr_dp < 1)) {                        /* If nbr digs/dps = 0, ...        
2612:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
2613:../Dave/Generated/UCPROBE/lib_str.c ****     }
2614:../Dave/Generated/UCPROBE/lib_str.c **** 
2615:../Dave/Generated/UCPROBE/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
2616:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
2617:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable  (see
2618:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str         (see
2619:../Dave/Generated/UCPROBE/lib_str.c **** 
2620:../Dave/Generated/UCPROBE/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 dig.    
2621:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_dig = ASCII_IsDig(lead_char);
2622:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If  lead char     non-0 dig (see
2623:../Dave/Generated/UCPROBE/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str         (see
2624:../Dave/Generated/UCPROBE/lib_str.c ****             }
2625:../Dave/Generated/UCPROBE/lib_str.c ****         }
2626:../Dave/Generated/UCPROBE/lib_str.c ****     }
2627:../Dave/Generated/UCPROBE/lib_str.c **** 
2628:../Dave/Generated/UCPROBE/lib_str.c **** 
2629:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
2630:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = pstr;
2631:../Dave/Generated/UCPROBE/lib_str.c **** 
2632:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid == DEF_NO) {
2633:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr < 0.0f) {                                       /* If nbr neg, ...                 
2634:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_fmt      = -nbr;                                /* ... negate nbr.                 
2635:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_sign =  1u;
2636:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg      =  DEF_YES;
2637:../Dave/Generated/UCPROBE/lib_str.c ****         } else {
2638:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_fmt      =  nbr;
2639:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_sign =  0u;
2640:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg      =  DEF_NO;
2641:../Dave/Generated/UCPROBE/lib_str.c ****         }
2642:../Dave/Generated/UCPROBE/lib_str.c **** 
2643:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_log     = nbr_fmt;
2644:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_max = 0u;
2645:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= 1.0f) {                               /* While base-10 digs avail, ...   
2646:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
2647:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= 10.0f;
2648:../Dave/Generated/UCPROBE/lib_str.c ****         }
2649:../Dave/Generated/UCPROBE/lib_str.c **** 
2650:../Dave/Generated/UCPROBE/lib_str.c ****         if (((nbr_dig >= (nbr_dig_max + nbr_neg_sign)) ||       /* If req'd nbr digs >= (max nbr di
2651:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_dig_max < 1))                        &&       /* .. or NO nbr digs,              
2652:../Dave/Generated/UCPROBE/lib_str.c ****             ((nbr_dig     > 1) ||                               /* .. but NOT [(req'd nbr dig = 1) 
2653:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_dp      > 0) ||                               /* ..          (req'd nbr dp  = 0) 
2654:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_neg == DEF_NO))) {                            /* ..          (      nbr neg    )]
2655:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* .. prepare nbr digs to fmt.     
2656:../Dave/Generated/UCPROBE/lib_str.c ****             for (i = 1u; i < nbr_dig; i++) {
2657:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_exp *= 10.0f;
2658:../Dave/Generated/UCPROBE/lib_str.c ****             }
2659:../Dave/Generated/UCPROBE/lib_str.c **** 
2660:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd   =  DEF_NO;
2661:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_sig    =  0u;
2662:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_fmtd =  DEF_NO;
2663:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
2664:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
2665:../Dave/Generated/UCPROBE/lib_str.c ****         }
2666:../Dave/Generated/UCPROBE/lib_str.c ****     }
2667:../Dave/Generated/UCPROBE/lib_str.c **** 
2668:../Dave/Generated/UCPROBE/lib_str.c **** 
2669:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
2670:../Dave/Generated/UCPROBE/lib_str.c ****     for (i = nbr_dig; i > 0; i--) {                             /* Fmt str for desired nbr digs :  
2671:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
2672:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_dig_sig < LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) { /* If nbr sig digs < max, fmt str d
2673:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_shiftd = (CPU_INT32U)(nbr_fmt / dig_exp);
2674:../Dave/Generated/UCPROBE/lib_str.c ****                 if ((nbr_shiftd > 0) ||                         /* If shifted nbr > 0              
2675:../Dave/Generated/UCPROBE/lib_str.c ****                     (i == 1u)) {                                /* ... OR on one's dig to fmt (see 
2676:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
2677:../Dave/Generated/UCPROBE/lib_str.c ****                     if ((nbr_neg      == DEF_YES) &&            /* If  nbr neg                     
2678:../Dave/Generated/UCPROBE/lib_str.c ****                         (nbr_neg_fmtd == DEF_NO )) {            /* ... but neg sign NOT yet fmt'd; 
2679:../Dave/Generated/UCPROBE/lib_str.c **** 
2680:../Dave/Generated/UCPROBE/lib_str.c ****                         if (lead_char_fmtd == DEF_YES) {        /* ... & if lead char(s) fmt'd,    
2681:../Dave/Generated/UCPROBE/lib_str.c ****                             pstr_fmt--;                         /* ... replace last lead char w/   
2682:../Dave/Generated/UCPROBE/lib_str.c ****                         }
2683:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++   = '-';                     /* ... prepend neg sign (see Notes 
2684:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr_neg_fmtd = DEF_YES;
2685:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2686:../Dave/Generated/UCPROBE/lib_str.c **** 
2687:../Dave/Generated/UCPROBE/lib_str.c ****                     if (nbr_shiftd > 0) {                       /* If shifted nbr > 0,        ...  
2688:../Dave/Generated/UCPROBE/lib_str.c ****                         dig_val    = (CPU_INT08U)(nbr_shiftd % 10u);
2689:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++ = (CPU_CHAR  )(dig_val    + '0');
2690:../Dave/Generated/UCPROBE/lib_str.c **** 
2691:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr_dig_sig++;                          /* ... inc nbr sig digs;      ...  
2692:../Dave/Generated/UCPROBE/lib_str.c **** 
2693:../Dave/Generated/UCPROBE/lib_str.c ****                     } else if ((nbr_dig > 1) ||                 /* ... else if req'd digs > 1 ...  
2694:../Dave/Generated/UCPROBE/lib_str.c ****                                (nbr_neg == DEF_NO)) {           /* ... or non-neg nbr,        ...  
2695:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++ = '0';                       /* ... fmt one '0' char (see Note #
2696:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2697:../Dave/Generated/UCPROBE/lib_str.c **** 
2698:../Dave/Generated/UCPROBE/lib_str.c ****                 } else if ((nbr_neg      == DEF_YES) &&         /* ... else if nbr neg             
2699:../Dave/Generated/UCPROBE/lib_str.c ****                            (lead_char_0  == DEF_YES) &&         /* ... & lead char a '0' dig       
2700:../Dave/Generated/UCPROBE/lib_str.c ****                            (nbr_neg_fmtd == DEF_NO )) {         /* ... but neg sign NOT yet fmt'd, 
2701:../Dave/Generated/UCPROBE/lib_str.c **** 
2702:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++   = '-';                         /* ... prepend neg sign (see Note #
2703:../Dave/Generated/UCPROBE/lib_str.c ****                     nbr_neg_fmtd = DEF_YES;
2704:../Dave/Generated/UCPROBE/lib_str.c **** 
2705:../Dave/Generated/UCPROBE/lib_str.c ****                 } else if (lead_char != (CPU_CHAR)'\0') {       /* ... else if avail,              
2706:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++     = lead_char;                 /* ... fmt lead char.              
2707:../Dave/Generated/UCPROBE/lib_str.c ****                     lead_char_fmtd = DEF_YES;
2708:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2709:../Dave/Generated/UCPROBE/lib_str.c **** 
2710:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_exp /= 10.0f;                               /* Shift to next least-sig dig.    
2711:../Dave/Generated/UCPROBE/lib_str.c **** 
2712:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* ... else append non-sig 0's (see
2713:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt++ = '0';
2714:../Dave/Generated/UCPROBE/lib_str.c ****             }
2715:../Dave/Generated/UCPROBE/lib_str.c **** 
2716:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2717:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '?';
2718:../Dave/Generated/UCPROBE/lib_str.c ****         }
2719:../Dave/Generated/UCPROBE/lib_str.c ****     }
2720:../Dave/Generated/UCPROBE/lib_str.c **** 
2721:../Dave/Generated/UCPROBE/lib_str.c **** 
2722:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_dp > 0) {                                           /* Fmt str for desired nbr dp :    
2723:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_dig < 1) {                                      /* If NO digs fmt'd;               
2724:../Dave/Generated/UCPROBE/lib_str.c ****             if (fmt_invalid == DEF_NO) {                        /* ... nbr fmt valid,              
2725:../Dave/Generated/UCPROBE/lib_str.c ****                 if ((nbr_neg      == DEF_YES) &&                /* ... nbr neg                     
2726:../Dave/Generated/UCPROBE/lib_str.c ****                     (nbr_neg_fmtd == DEF_NO )) {                /* ... but neg sign NOT yet fmt'd, 
2727:../Dave/Generated/UCPROBE/lib_str.c ****                     *pstr_fmt++ = '-';                          /* ... prepend neg sign (see Notes 
2728:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {                                        /* ... else prepend 1 dig of '0' (s
2729:../Dave/Generated/UCPROBE/lib_str.c ****                     *pstr_fmt++ = '0';
2730:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2731:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* ... else fmt '?' for invalid str
2732:../Dave/Generated/UCPROBE/lib_str.c ****                 *pstr_fmt++ = '?';
2733:../Dave/Generated/UCPROBE/lib_str.c ****             }
2734:../Dave/Generated/UCPROBE/lib_str.c ****         }
2735:../Dave/Generated/UCPROBE/lib_str.c **** 
2736:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {                            /* If nbr fmt valid, ...           
2737:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '.';                                   /* ... append dp prior to dp conver
2738:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2739:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '?';
2740:../Dave/Generated/UCPROBE/lib_str.c ****         }
2741:../Dave/Generated/UCPROBE/lib_str.c **** 
2742:../Dave/Generated/UCPROBE/lib_str.c ****         dp_exp = 10.0f;
2743:../Dave/Generated/UCPROBE/lib_str.c ****         for (i = 0u; i < nbr_dp; i++) {
2744:../Dave/Generated/UCPROBE/lib_str.c ****             if (fmt_invalid == DEF_NO) {
2745:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* If nbr sig digs < max, fmt str d
2746:../Dave/Generated/UCPROBE/lib_str.c ****                 if (nbr_dig_sig <  LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) {
2747:../Dave/Generated/UCPROBE/lib_str.c ****                     nbr_shiftd  = (CPU_INT32U)(nbr_fmt * dp_exp);
2748:../Dave/Generated/UCPROBE/lib_str.c ****                     dig_val     = (CPU_INT08U)(nbr_shiftd % 10u);
2749:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++  = (CPU_CHAR  )(dig_val    + '0');
2750:../Dave/Generated/UCPROBE/lib_str.c ****                     dp_exp     *=  10.0f;                       /* Shift to next least-sig dp.     
2751:../Dave/Generated/UCPROBE/lib_str.c **** 
2752:../Dave/Generated/UCPROBE/lib_str.c ****                     if ((nbr_shiftd  > 0) ||                    /* If shifted nbr > 0              
2753:../Dave/Generated/UCPROBE/lib_str.c ****                         (nbr_dig_sig > 0)) {                    /* ... OR  > 0 sig digs already fmt
2754:../Dave/Generated/UCPROBE/lib_str.c ****                          nbr_dig_sig++;                         /* ... inc nbr sig digs.           
2755:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2756:../Dave/Generated/UCPROBE/lib_str.c **** 
2757:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {                                        /* ... else append non-sig 0's (see
2758:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++ = '0';
2759:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2760:../Dave/Generated/UCPROBE/lib_str.c **** 
2761:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* Else fmt '?' for invalid str (se
2762:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt++ = '?';
2763:../Dave/Generated/UCPROBE/lib_str.c ****             }
2764:../Dave/Generated/UCPROBE/lib_str.c ****         }
2765:../Dave/Generated/UCPROBE/lib_str.c ****     }
2766:../Dave/Generated/UCPROBE/lib_str.c **** 
2767:../Dave/Generated/UCPROBE/lib_str.c **** 
2768:../Dave/Generated/UCPROBE/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
2769:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
2770:../Dave/Generated/UCPROBE/lib_str.c ****     }
2771:../Dave/Generated/UCPROBE/lib_str.c **** 
2772:../Dave/Generated/UCPROBE/lib_str.c **** 
2773:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
2774:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
2775:../Dave/Generated/UCPROBE/lib_str.c ****     }
2776:../Dave/Generated/UCPROBE/lib_str.c **** 
2777:../Dave/Generated/UCPROBE/lib_str.c **** 
2778:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
2779:../Dave/Generated/UCPROBE/lib_str.c **** }
2780:../Dave/Generated/UCPROBE/lib_str.c **** #endif
2781:../Dave/Generated/UCPROBE/lib_str.c **** 
2782:../Dave/Generated/UCPROBE/lib_str.c **** 
2783:../Dave/Generated/UCPROBE/lib_str.c **** /*
2784:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2785:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32U()
2786:../Dave/Generated/UCPROBE/lib_str.c **** *
2787:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit unsigned integer from string.
2788:../Dave/Generated/UCPROBE/lib_str.c **** *
2789:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
2790:../Dave/Generated/UCPROBE/lib_str.c **** *
2791:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
2792:../Dave/Generated/UCPROBE/lib_str.c **** *
2793:../Dave/Generated/UCPROBE/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
2794:../Dave/Generated/UCPROBE/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
2795:../Dave/Generated/UCPROBE/lib_str.c **** *                               (b) Return a pointer to 'pstr',
2796:../Dave/Generated/UCPROBE/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
2797:../Dave/Generated/UCPROBE/lib_str.c **** *
2798:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
2799:../Dave/Generated/UCPROBE/lib_str.c **** *
2800:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
2801:../Dave/Generated/UCPROBE/lib_str.c **** *
2802:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
2803:../Dave/Generated/UCPROBE/lib_str.c **** *
2804:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
2805:../Dave/Generated/UCPROBE/lib_str.c **** *
2806:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2807:../Dave/Generated/UCPROBE/lib_str.c **** *
2808:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
2809:../Dave/Generated/UCPROBE/lib_str.c **** *
2810:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : DESCRIPTION' states tha
2811:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
2812:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type unsigned long ... representation" :
2813:../Dave/Generated/UCPROBE/lib_str.c **** *
2814:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
2815:../Dave/Generated/UCPROBE/lib_str.c **** *
2816:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
2817:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
2818:../Dave/Generated/UCPROBE/lib_str.c **** *
2819:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
2820:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
2821:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
2822:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
2823:../Dave/Generated/UCPROBE/lib_str.c **** *
2824:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
2825:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
2826:../Dave/Generated/UCPROBE/lib_str.c **** *
2827:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
2828:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
2829:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
2830:../Dave/Generated/UCPROBE/lib_str.c **** *
2831:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
2832:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
2833:../Dave/Generated/UCPROBE/lib_str.c **** *
2834:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
2835:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
2836:../Dave/Generated/UCPROBE/lib_str.c **** *
2837:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
2838:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
2839:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
2840:../Dave/Generated/UCPROBE/lib_str.c **** *
2841:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
2842:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
2843:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
2844:../Dave/Generated/UCPROBE/lib_str.c **** *
2845:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
2846:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
2847:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
2848:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
2849:../Dave/Generated/UCPROBE/lib_str.c **** *
2850:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
2851:../Dave/Generated/UCPROBE/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
2852:../Dave/Generated/UCPROBE/lib_str.c **** *
2853:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
2854:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
2855:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
2856:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
2857:../Dave/Generated/UCPROBE/lib_str.c **** *
2858:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
2859:../Dave/Generated/UCPROBE/lib_str.c **** *
2860:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
2861:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.
2862:../Dave/Generated/UCPROBE/lib_str.c **** *
2863:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
2864:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
2865:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
2866:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2867:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an unsig
2868:../Dave/Generated/UCPROBE/lib_str.c **** *
2869:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
2870:../Dave/Generated/UCPROBE/lib_str.c **** *
2871:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion [is] performed"; ...
2872:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') [is] stored in the object pointed 
2873:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
2874:../Dave/Generated/UCPROBE/lib_str.c **** *
2875:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
2876:../Dave/Generated/UCPROBE/lib_str.c **** *
2877:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
2878:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
2879:../Dave/Generated/UCPROBE/lib_str.c **** *
2880:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
2881:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
2882:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
2883:../Dave/Generated/UCPROBE/lib_str.c **** *
2884:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
2885:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
2886:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
2887:../Dave/Generated/UCPROBE/lib_str.c **** *
2888:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : RETURN VALU
2889:../Dave/Generated/UCPROBE/lib_str.c **** *
2890:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
2891:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
2892:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ... shall be returned."
2893:../Dave/Generated/UCPROBE/lib_str.c **** *
2894:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
2895:../Dave/Generated/UCPROBE/lib_str.c **** *
2896:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2897:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
2898:../Dave/Generated/UCPROBE/lib_str.c **** *
2899:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
2900:../Dave/Generated/UCPROBE/lib_str.c **** *
2901:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
2902:../Dave/Generated/UCPROBE/lib_str.c **** *
2903:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2904:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
2905:../Dave/Generated/UCPROBE/lib_str.c **** *
2906:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
2907:../Dave/Generated/UCPROBE/lib_str.c **** *
2908:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
2909:../Dave/Generated/UCPROBE/lib_str.c **** *
2910:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
2911:../Dave/Generated/UCPROBE/lib_str.c **** *
2912:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
2913:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
2914:../Dave/Generated/UCPROBE/lib_str.c **** *
2915:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
2916:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
2917:../Dave/Generated/UCPROBE/lib_str.c **** *
2918:../Dave/Generated/UCPROBE/lib_str.c **** *
2919:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
2920:../Dave/Generated/UCPROBE/lib_str.c **** *
2921:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
2922:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2923:../Dave/Generated/UCPROBE/lib_str.c **** *
2924:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2925:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
2926:../Dave/Generated/UCPROBE/lib_str.c **** *
2927:../Dave/Generated/UCPROBE/lib_str.c **** *
2928:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
2929:../Dave/Generated/UCPROBE/lib_str.c **** *
2930:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
2931:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
2932:../Dave/Generated/UCPROBE/lib_str.c **** *
2933:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2934:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
2935:../Dave/Generated/UCPROBE/lib_str.c **** *
2936:../Dave/Generated/UCPROBE/lib_str.c **** *
2937:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
2938:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
2939:../Dave/Generated/UCPROBE/lib_str.c **** *
2940:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
2941:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
2942:../Dave/Generated/UCPROBE/lib_str.c **** *
2943:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2944:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
2945:../Dave/Generated/UCPROBE/lib_str.c **** *
2946:../Dave/Generated/UCPROBE/lib_str.c **** *
2947:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
2948:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
2949:../Dave/Generated/UCPROBE/lib_str.c **** *
2950:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
2951:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
2952:../Dave/Generated/UCPROBE/lib_str.c **** *
2953:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2954:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
2955:../Dave/Generated/UCPROBE/lib_str.c **** *
2956:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2957:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
2958:../Dave/Generated/UCPROBE/lib_str.c **** *
2959:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
2960:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2961:../Dave/Generated/UCPROBE/lib_str.c **** *
2962:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
2963:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
2964:../Dave/Generated/UCPROBE/lib_str.c **** *
2965:../Dave/Generated/UCPROBE/lib_str.c **** *
2966:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Invalid negative unsigned parse string :
2967:../Dave/Generated/UCPROBE/lib_str.c **** *
2968:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
2969:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2970:../Dave/Generated/UCPROBE/lib_str.c **** *
2971:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 0
2972:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "  -12345678901234567890*123456"
2973:../Dave/Generated/UCPROBE/lib_str.c **** *
2974:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2975:../Dave/Generated/UCPROBE/lib_str.c **** */
2976:../Dave/Generated/UCPROBE/lib_str.c **** 
2977:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT32U  Str_ParseNbr_Int32U (const  CPU_CHAR     *pstr,
2978:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_CHAR    **pstr_next,
2979:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_INT08U    nbr_base)
2980:../Dave/Generated/UCPROBE/lib_str.c **** {
 2126              	 .loc 1 2980 0
 2127              	 .cfi_startproc
 2128 0000 80B5     	 push {r7,lr}
 2129              	.LCFI60:
 2130              	 .cfi_def_cfa_offset 8
 2131              	 .cfi_offset 7,-8
 2132              	 .cfi_offset 14,-4
 2133 0002 88B0     	 sub sp,sp,#32
 2134              	.LCFI61:
 2135              	 .cfi_def_cfa_offset 40
 2136 0004 02AF     	 add r7,sp,#8
 2137              	.LCFI62:
 2138              	 .cfi_def_cfa 7,32
 2139 0006 F860     	 str r0,[r7,#12]
 2140 0008 B960     	 str r1,[r7,#8]
 2141 000a FB1D     	 add r3,r7,#7
 2142 000c 1A70     	 strb r2,[r3]
2981:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U  nbr;
2982:../Dave/Generated/UCPROBE/lib_str.c **** 
2983:../Dave/Generated/UCPROBE/lib_str.c **** 
2984:../Dave/Generated/UCPROBE/lib_str.c ****     nbr = Str_ParseNbr_Int32(               pstr,               /* Parse/convert str ...           
 2143              	 .loc 1 2984 0
 2144 000e F868     	 ldr r0,[r7,#12]
 2145 0010 B968     	 ldr r1,[r7,#8]
 2146 0012 FB1D     	 add r3,r7,#7
 2147 0014 1A78     	 ldrb r2,[r3]
 2148 0016 0023     	 mov r3,#0
 2149 0018 0093     	 str r3,[sp]
 2150 001a 0023     	 mov r3,#0
 2151 001c FFF7FEFF 	 bl Str_ParseNbr_Int32
 2152 0020 031C     	 mov r3,r0
 2153 0022 7B61     	 str r3,[r7,#20]
2985:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr_next,
2986:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_base,
2987:../Dave/Generated/UCPROBE/lib_str.c ****                                             DEF_NO,             /* ... as unsigned int (see Note #2
2988:../Dave/Generated/UCPROBE/lib_str.c ****                              (CPU_BOOLEAN *)0);
2989:../Dave/Generated/UCPROBE/lib_str.c **** 
2990:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
 2154              	 .loc 1 2990 0
 2155 0024 7B69     	 ldr r3,[r7,#20]
2991:../Dave/Generated/UCPROBE/lib_str.c **** }
 2156              	 .loc 1 2991 0
 2157 0026 181C     	 mov r0,r3
 2158 0028 BD46     	 mov sp,r7
 2159 002a 06B0     	 add sp,sp,#24
 2160              	 
 2161 002c 80BD     	 pop {r7,pc}
 2162              	 .cfi_endproc
 2163              	.LFE20:
 2165 002e C046     	 .section .text.Str_ParseNbr_Int32S,"ax",%progbits
 2166              	 .align 2
 2167              	 .global Str_ParseNbr_Int32S
 2168              	 .code 16
 2169              	 .thumb_func
 2171              	Str_ParseNbr_Int32S:
 2172              	.LFB21:
2992:../Dave/Generated/UCPROBE/lib_str.c **** 
2993:../Dave/Generated/UCPROBE/lib_str.c **** 
2994:../Dave/Generated/UCPROBE/lib_str.c **** /*
2995:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2996:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32S()
2997:../Dave/Generated/UCPROBE/lib_str.c **** *
2998:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit signed integer from string.
2999:../Dave/Generated/UCPROBE/lib_str.c **** *
3000:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
3001:../Dave/Generated/UCPROBE/lib_str.c **** *
3002:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
3003:../Dave/Generated/UCPROBE/lib_str.c **** *
3004:../Dave/Generated/UCPROBE/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
3005:../Dave/Generated/UCPROBE/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
3006:../Dave/Generated/UCPROBE/lib_str.c **** *                               (b) Return a pointer to 'pstr',
3007:../Dave/Generated/UCPROBE/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
3008:../Dave/Generated/UCPROBE/lib_str.c **** *
3009:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
3010:../Dave/Generated/UCPROBE/lib_str.c **** *
3011:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO over- or underflow (see Note #2a3A).
3012:../Dave/Generated/UCPROBE/lib_str.c **** *
3013:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32S_MIN_VAL, if integer parsed but negatively underflowed (see Note #2a3A1a
3014:../Dave/Generated/UCPROBE/lib_str.c **** *
3015:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but positively overflowed  (see Note #2a3A1b
3016:../Dave/Generated/UCPROBE/lib_str.c **** *
3017:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                                    (see Note #2a3B).
3018:../Dave/Generated/UCPROBE/lib_str.c **** *
3019:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
3020:../Dave/Generated/UCPROBE/lib_str.c **** *
3021:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3022:../Dave/Generated/UCPROBE/lib_str.c **** *
3023:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3024:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3025:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type long ... representation" :
3026:../Dave/Generated/UCPROBE/lib_str.c **** *
3027:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3028:../Dave/Generated/UCPROBE/lib_str.c **** *
3029:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3030:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
3031:../Dave/Generated/UCPROBE/lib_str.c **** *
3032:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3033:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3034:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3035:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3036:../Dave/Generated/UCPROBE/lib_str.c **** *
3037:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3038:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3039:../Dave/Generated/UCPROBE/lib_str.c **** *
3040:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3041:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3042:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
3043:../Dave/Generated/UCPROBE/lib_str.c **** *
3044:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3045:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
3046:../Dave/Generated/UCPROBE/lib_str.c **** *
3047:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3048:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3049:../Dave/Generated/UCPROBE/lib_str.c **** *
3050:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3051:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3052:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3053:../Dave/Generated/UCPROBE/lib_str.c **** *
3054:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3055:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3056:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3057:../Dave/Generated/UCPROBE/lib_str.c **** *
3058:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3059:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3060:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3061:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
3062:../Dave/Generated/UCPROBE/lib_str.c **** *
3063:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3064:../Dave/Generated/UCPROBE/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
3065:../Dave/Generated/UCPROBE/lib_str.c **** *
3066:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3067:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3068:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3069:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3070:../Dave/Generated/UCPROBE/lib_str.c **** *
3071:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3072:../Dave/Generated/UCPROBE/lib_str.c **** *
3073:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
3074:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.
3075:../Dave/Generated/UCPROBE/lib_str.c **** *
3076:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3077:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3078:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3079:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3080:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3081:../Dave/Generated/UCPROBE/lib_str.c **** *
3082:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3083:../Dave/Generated/UCPROBE/lib_str.c **** *
3084:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion is performed"; ...
3085:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3086:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3087:../Dave/Generated/UCPROBE/lib_str.c **** *
3088:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3089:../Dave/Generated/UCPROBE/lib_str.c **** *
3090:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3091:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3092:../Dave/Generated/UCPROBE/lib_str.c **** *
3093:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3094:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3095:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3096:../Dave/Generated/UCPROBE/lib_str.c **** *
3097:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3098:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3099:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
3100:../Dave/Generated/UCPROBE/lib_str.c **** *
3101:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3102:../Dave/Generated/UCPROBE/lib_str.c **** *
3103:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3104:../Dave/Generated/UCPROBE/lib_str.c **** *
3105:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3106:../Dave/Generated/UCPROBE/lib_str.c **** *                                    of the following "shall be returned" :
3107:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "{LONG_MIN}" or ...
3108:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "{LONG_MAX}"
3109:../Dave/Generated/UCPROBE/lib_str.c **** *
3110:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3111:../Dave/Generated/UCPROBE/lib_str.c **** *
3112:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3113:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
3114:../Dave/Generated/UCPROBE/lib_str.c **** *
3115:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3116:../Dave/Generated/UCPROBE/lib_str.c **** *
3117:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3118:../Dave/Generated/UCPROBE/lib_str.c **** *
3119:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3120:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
3121:../Dave/Generated/UCPROBE/lib_str.c **** *
3122:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3123:../Dave/Generated/UCPROBE/lib_str.c **** *
3124:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3125:../Dave/Generated/UCPROBE/lib_str.c **** *
3126:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
3127:../Dave/Generated/UCPROBE/lib_str.c **** *
3128:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3129:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3130:../Dave/Generated/UCPROBE/lib_str.c **** *
3131:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
3132:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
3133:../Dave/Generated/UCPROBE/lib_str.c **** *
3134:../Dave/Generated/UCPROBE/lib_str.c **** *
3135:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
3136:../Dave/Generated/UCPROBE/lib_str.c **** *
3137:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
3138:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3139:../Dave/Generated/UCPROBE/lib_str.c **** *
3140:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3141:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3142:../Dave/Generated/UCPROBE/lib_str.c **** *
3143:../Dave/Generated/UCPROBE/lib_str.c **** *
3144:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3145:../Dave/Generated/UCPROBE/lib_str.c **** *
3146:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3147:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3148:../Dave/Generated/UCPROBE/lib_str.c **** *
3149:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3150:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3151:../Dave/Generated/UCPROBE/lib_str.c **** *
3152:../Dave/Generated/UCPROBE/lib_str.c **** *
3153:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3154:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
3155:../Dave/Generated/UCPROBE/lib_str.c **** *
3156:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3157:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3158:../Dave/Generated/UCPROBE/lib_str.c **** *
3159:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3160:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3161:../Dave/Generated/UCPROBE/lib_str.c **** *
3162:../Dave/Generated/UCPROBE/lib_str.c **** *
3163:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3164:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
3165:../Dave/Generated/UCPROBE/lib_str.c **** *
3166:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
3167:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3168:../Dave/Generated/UCPROBE/lib_str.c **** *
3169:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3170:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
3171:../Dave/Generated/UCPROBE/lib_str.c **** *
3172:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3173:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
3174:../Dave/Generated/UCPROBE/lib_str.c **** *
3175:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3176:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3177:../Dave/Generated/UCPROBE/lib_str.c **** *
3178:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MAX_VAL
3179:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3180:../Dave/Generated/UCPROBE/lib_str.c **** *
3181:../Dave/Generated/UCPROBE/lib_str.c **** *
3182:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Parse string integer underflow :
3183:../Dave/Generated/UCPROBE/lib_str.c **** *
3184:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3185:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3186:../Dave/Generated/UCPROBE/lib_str.c **** *
3187:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3188:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3189:../Dave/Generated/UCPROBE/lib_str.c **** *
3190:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3191:../Dave/Generated/UCPROBE/lib_str.c **** */
3192:../Dave/Generated/UCPROBE/lib_str.c **** 
3193:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT32S  Str_ParseNbr_Int32S (const  CPU_CHAR     *pstr,
3194:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_CHAR    **pstr_next,
3195:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_INT08U    nbr_base)
3196:../Dave/Generated/UCPROBE/lib_str.c **** {
 2173              	 .loc 1 3196 0
 2174              	 .cfi_startproc
 2175 0000 80B5     	 push {r7,lr}
 2176              	.LCFI63:
 2177              	 .cfi_def_cfa_offset 8
 2178              	 .cfi_offset 7,-8
 2179              	 .cfi_offset 14,-4
 2180 0002 8AB0     	 sub sp,sp,#40
 2181              	.LCFI64:
 2182              	 .cfi_def_cfa_offset 48
 2183 0004 02AF     	 add r7,sp,#8
 2184              	.LCFI65:
 2185              	 .cfi_def_cfa 7,40
 2186 0006 F860     	 str r0,[r7,#12]
 2187 0008 B960     	 str r1,[r7,#8]
 2188 000a FB1D     	 add r3,r7,#7
 2189 000c 1A70     	 strb r2,[r3]
3197:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S   nbr;
3198:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U   nbr_abs;
3199:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN  nbr_neg;
3200:../Dave/Generated/UCPROBE/lib_str.c **** 
3201:../Dave/Generated/UCPROBE/lib_str.c **** 
3202:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_abs = Str_ParseNbr_Int32(pstr,                          /* Parse/convert str ...           
 2190              	 .loc 1 3202 0
 2191 000e F868     	 ldr r0,[r7,#12]
 2192 0010 B968     	 ldr r1,[r7,#8]
 2193 0012 FB1D     	 add r3,r7,#7
 2194 0014 1A78     	 ldrb r2,[r3]
 2195 0016 1723     	 mov r3,#23
 2196 0018 FB18     	 add r3,r7,r3
 2197 001a 0093     	 str r3,[sp]
 2198 001c 0123     	 mov r3,#1
 2199 001e FFF7FEFF 	 bl Str_ParseNbr_Int32
 2200 0022 031C     	 mov r3,r0
 2201 0024 BB61     	 str r3,[r7,#24]
3203:../Dave/Generated/UCPROBE/lib_str.c ****                                  pstr_next,
3204:../Dave/Generated/UCPROBE/lib_str.c ****                                  nbr_base,
3205:../Dave/Generated/UCPROBE/lib_str.c ****                                  DEF_YES,                       /* ... as signed int (see Note #2a2
3206:../Dave/Generated/UCPROBE/lib_str.c ****                                 &nbr_neg);
3207:../Dave/Generated/UCPROBE/lib_str.c **** 
3208:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_neg == DEF_NO) {                                    /* Chk for neg nbr & ovf/undf (see 
 2202              	 .loc 1 3208 0
 2203 0026 1723     	 mov r3,#23
 2204 0028 FB18     	 add r3,r7,r3
 2205 002a 1B78     	 ldrb r3,[r3]
 2206 002c 002B     	 cmp r3,#0
 2207 002e 07D1     	 bne .L132
3209:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
 2208              	 .loc 1 3209 0
 2209 0030 BB69     	 ldr r3,[r7,#24]
3210:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     :  (CPU_INT32S)nbr_abs;
 2210              	 .loc 1 3210 0
 2211 0032 002B     	 cmp r3,#0
 2212 0034 01DB     	 blt .L133
 2213              	 .loc 1 3210 0 is_stmt 0 discriminator 1
 2214 0036 BB69     	 ldr r3,[r7,#24]
 2215 0038 00E0     	 b .L134
 2216              	.L133:
 2217              	 .loc 1 3210 0 discriminator 2
 2218 003a 084B     	 ldr r3,.L139
 2219              	.L134:
3209:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
 2220              	 .loc 1 3209 0 is_stmt 1
 2221 003c FB61     	 str r3,[r7,#28]
 2222 003e 08E0     	 b .L135
 2223              	.L132:
3211:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
3212:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U)-DEF_INT_32S_MIN_VAL_ONES_CPL) ?  (CPU_INT32S)DEF_INT_32S_MIN_
 2224              	 .loc 1 3212 0
 2225 0040 BB69     	 ldr r3,[r7,#24]
3213:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     : -(CPU_INT32S)nbr_abs;
 2226              	 .loc 1 3213 0
 2227 0042 002B     	 cmp r3,#0
 2228 0044 02DB     	 blt .L136
 2229              	 .loc 1 3213 0 is_stmt 0 discriminator 1
 2230 0046 BB69     	 ldr r3,[r7,#24]
 2231 0048 5B42     	 neg r3,r3
 2232 004a 01E0     	 b .L137
 2233              	.L136:
 2234              	 .loc 1 3213 0 discriminator 2
 2235 004c 8023     	 mov r3,#128
 2236 004e 1B06     	 lsl r3,r3,#24
 2237              	.L137:
3212:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     : -(CPU_INT32S)nbr_abs;
 2238              	 .loc 1 3212 0 is_stmt 1
 2239 0050 FB61     	 str r3,[r7,#28]
 2240              	.L135:
3214:../Dave/Generated/UCPROBE/lib_str.c ****     }
3215:../Dave/Generated/UCPROBE/lib_str.c **** 
3216:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
 2241              	 .loc 1 3216 0
 2242 0052 FB69     	 ldr r3,[r7,#28]
3217:../Dave/Generated/UCPROBE/lib_str.c **** }
 2243              	 .loc 1 3217 0
 2244 0054 181C     	 mov r0,r3
 2245 0056 BD46     	 mov sp,r7
 2246 0058 08B0     	 add sp,sp,#32
 2247              	 
 2248 005a 80BD     	 pop {r7,pc}
 2249              	.L140:
 2250              	 .align 2
 2251              	.L139:
 2252 005c FFFFFF7F 	 .word 2147483647
 2253              	 .cfi_endproc
 2254              	.LFE21:
 2256              	 .global __aeabi_uidiv
 2257              	 .global __aeabi_uidivmod
 2258              	 .section .text.Str_FmtNbr_Int32,"ax",%progbits
 2259              	 .align 2
 2260              	 .code 16
 2261              	 .thumb_func
 2263              	Str_FmtNbr_Int32:
 2264              	.LFB22:
3218:../Dave/Generated/UCPROBE/lib_str.c **** 
3219:../Dave/Generated/UCPROBE/lib_str.c **** 
3220:../Dave/Generated/UCPROBE/lib_str.c **** /*
3221:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3222:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3223:../Dave/Generated/UCPROBE/lib_str.c **** *                                           LOCAL FUNCTIONS
3224:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3225:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3226:../Dave/Generated/UCPROBE/lib_str.c **** */
3227:../Dave/Generated/UCPROBE/lib_str.c **** 
3228:../Dave/Generated/UCPROBE/lib_str.c **** /*
3229:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3230:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32()
3231:../Dave/Generated/UCPROBE/lib_str.c **** *
3232:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit integer into a multi-digit character string.
3233:../Dave/Generated/UCPROBE/lib_str.c **** *
3234:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
3235:../Dave/Generated/UCPROBE/lib_str.c **** *
3236:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
3237:../Dave/Generated/UCPROBE/lib_str.c **** *
3238:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
3239:../Dave/Generated/UCPROBE/lib_str.c **** *
3240:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_neg         Indicates whether number to format is negative :
3241:../Dave/Generated/UCPROBE/lib_str.c **** *               -------
3242:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Number is non-negative.
3243:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Number is     negative.
3244:../Dave/Generated/UCPROBE/lib_str.c **** *
3245:../Dave/Generated/UCPROBE/lib_str.c **** *                               Argument validated in Str_FmtNbr_Int32U(),
3246:../Dave/Generated/UCPROBE/lib_str.c **** *                                                     Str_FmtNbr_Int32S().
3247:../Dave/Generated/UCPROBE/lib_str.c **** *
3248:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
3249:../Dave/Generated/UCPROBE/lib_str.c **** *
3250:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
3251:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
3252:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6e).
3253:../Dave/Generated/UCPROBE/lib_str.c **** *
3254:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
3255:../Dave/Generated/UCPROBE/lib_str.c **** *
3256:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
3257:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
3258:../Dave/Generated/UCPROBE/lib_str.c **** *
3259:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
3260:../Dave/Generated/UCPROBE/lib_str.c **** *
3261:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
3262:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
3263:../Dave/Generated/UCPROBE/lib_str.c **** *
3264:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
3265:../Dave/Generated/UCPROBE/lib_str.c **** *
3266:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6f].
3267:../Dave/Generated/UCPROBE/lib_str.c **** *
3268:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
3269:../Dave/Generated/UCPROBE/lib_str.c **** *
3270:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Str_FmtNbr_Int32U(),
3271:../Dave/Generated/UCPROBE/lib_str.c **** *               Str_FmtNbr_Int32S().
3272:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3273:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) The maximum number of digits to format for 32-bit integer numbers :
3274:../Dave/Generated/UCPROBE/lib_str.c **** *
3275:../Dave/Generated/UCPROBE/lib_str.c **** *
3276:../Dave/Generated/UCPROBE/lib_str.c **** *                               Maximum Number of             [  log (Number)      ]
3277:../Dave/Generated/UCPROBE/lib_str.c **** *                             32-bit Integer Digits  =  floor [ -------------- + 1 ]
3278:../Dave/Generated/UCPROBE/lib_str.c **** *                                   to Format                 [   log (Base)       ]
3279:../Dave/Generated/UCPROBE/lib_str.c **** *
3280:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
3281:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Number                  Number to format
3282:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Base            Base of number to format
3283:../Dave/Generated/UCPROBE/lib_str.c **** *
3284:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is zero; then NO formatti
3285:../Dave/Generated/UCPROBE/lib_str.c **** *                           is performed except possible NULL-termination of the string (see Note #
3286:../Dave/Generated/UCPROBE/lib_str.c **** *
3287:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3288:../Dave/Generated/UCPROBE/lib_str.c **** *
3289:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = -23456
3290:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  =  0
3291:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3292:../Dave/Generated/UCPROBE/lib_str.c **** *
3293:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = ""                   See Note #7a
3294:../Dave/Generated/UCPROBE/lib_str.c **** *
3295:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) If the number of digits to format ('nbr_dig') is less than the number o
3296:../Dave/Generated/UCPROBE/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
3297:../Dave/Generated/UCPROBE/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
3298:../Dave/Generated/UCPROBE/lib_str.c **** *
3299:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3300:../Dave/Generated/UCPROBE/lib_str.c **** *
3301:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = 23456
3302:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  = 3
3303:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3304:../Dave/Generated/UCPROBE/lib_str.c **** *
3305:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = "???"                See Note #7b
3306:../Dave/Generated/UCPROBE/lib_str.c **** *
3307:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of digits to
3308:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
3309:../Dave/Generated/UCPROBE/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
3310:../Dave/Generated/UCPROBE/lib_str.c **** *                           the negative sign.
3311:../Dave/Generated/UCPROBE/lib_str.c **** *
3312:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3313:../Dave/Generated/UCPROBE/lib_str.c **** *
3314:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = -23456
3315:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  =  5
3316:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3317:../Dave/Generated/UCPROBE/lib_str.c **** *
3318:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = "?????"              See Note #7b
3319:../Dave/Generated/UCPROBE/lib_str.c **** *
3320:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
3321:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3322:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
3323:../Dave/Generated/UCPROBE/lib_str.c **** *
3324:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
3325:../Dave/Generated/UCPROBE/lib_str.c **** *
3326:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
3327:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
3328:../Dave/Generated/UCPROBE/lib_str.c **** *
3329:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
3330:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
3331:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
3332:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
3333:../Dave/Generated/UCPROBE/lib_str.c **** *
3334:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
3335:../Dave/Generated/UCPROBE/lib_str.c **** *
3336:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456
3337:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
3338:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
3339:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
3340:../Dave/Generated/UCPROBE/lib_str.c **** *
3341:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456"
3342:../Dave/Generated/UCPROBE/lib_str.c **** *
3343:../Dave/Generated/UCPROBE/lib_str.c **** *
3344:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456
3345:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
3346:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
3347:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
3348:../Dave/Generated/UCPROBE/lib_str.c **** *
3349:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456"
3350:../Dave/Generated/UCPROBE/lib_str.c **** *
3351:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
3352:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
3353:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
3354:../Dave/Generated/UCPROBE/lib_str.c **** *
3355:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
3356:../Dave/Generated/UCPROBE/lib_str.c **** *
3357:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
3358:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3359:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
3360:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
3361:../Dave/Generated/UCPROBE/lib_str.c **** *
3362:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-0023456"
3363:../Dave/Generated/UCPROBE/lib_str.c **** *
3364:../Dave/Generated/UCPROBE/lib_str.c **** *
3365:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
3366:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3367:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
3368:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
3369:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_NO
3370:../Dave/Generated/UCPROBE/lib_str.c **** *
3371:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-000ABCD"
3372:../Dave/Generated/UCPROBE/lib_str.c **** *
3373:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
3374:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
3375:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
3376:../Dave/Generated/UCPROBE/lib_str.c **** *
3377:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
3378:../Dave/Generated/UCPROBE/lib_str.c **** *
3379:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
3380:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3381:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
3382:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
3383:../Dave/Generated/UCPROBE/lib_str.c **** *
3384:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "##-23456"
3385:../Dave/Generated/UCPROBE/lib_str.c **** *
3386:../Dave/Generated/UCPROBE/lib_str.c **** *
3387:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
3388:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3389:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
3390:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
3391:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_YES
3392:../Dave/Generated/UCPROBE/lib_str.c **** *
3393:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "###-abcd"
3394:../Dave/Generated/UCPROBE/lib_str.c **** *
3395:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
3396:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
3397:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
3398:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
3399:../Dave/Generated/UCPROBE/lib_str.c **** *
3400:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
3401:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3402:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
3403:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
3404:../Dave/Generated/UCPROBE/lib_str.c **** *
3405:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
3406:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
3407:../Dave/Generated/UCPROBE/lib_str.c **** *
3408:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
3409:../Dave/Generated/UCPROBE/lib_str.c **** *
3410:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
3411:../Dave/Generated/UCPROBE/lib_str.c **** *
3412:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
3413:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
3414:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
3415:../Dave/Generated/UCPROBE/lib_str.c **** *
3416:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) String format terminates when :
3417:../Dave/Generated/UCPROBE/lib_str.c **** *
3418:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
3419:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
3420:../Dave/Generated/UCPROBE/lib_str.c **** *
3421:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Number of digits to format ('nbr_dig') is zero.
3422:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
3423:../Dave/Generated/UCPROBE/lib_str.c **** *
3424:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant
3425:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible
3426:../Dave/Generated/UCPROBE/lib_str.c **** *                           negative sign.
3427:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3428:../Dave/Generated/UCPROBE/lib_str.c **** *
3429:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Base is passed an invalid base (see Note #2).
3430:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string format performed; NULL pointer returned.
3431:../Dave/Generated/UCPROBE/lib_str.c **** *
3432:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Lead character is NOT a valid, printable character (see Note #3a).
3433:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3434:../Dave/Generated/UCPROBE/lib_str.c **** *
3435:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Number successfully formatted into character string array.
3436:../Dave/Generated/UCPROBE/lib_str.c **** *
3437:../Dave/Generated/UCPROBE/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
3438:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
3439:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
3440:../Dave/Generated/UCPROBE/lib_str.c **** *
3441:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
3442:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
3443:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
3444:../Dave/Generated/UCPROBE/lib_str.c **** *
3445:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3446:../Dave/Generated/UCPROBE/lib_str.c **** */
3447:../Dave/Generated/UCPROBE/lib_str.c **** 
3448:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_CHAR  *Str_FmtNbr_Int32 (CPU_INT32U    nbr,
3449:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_INT08U    nbr_dig,
3450:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_INT08U    nbr_base,
3451:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   nbr_neg,
3452:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_CHAR      lead_char,
3453:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   lower_case,
3454:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   nul,
3455:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_CHAR     *pstr)
3456:../Dave/Generated/UCPROBE/lib_str.c **** {
 2265              	 .loc 1 3456 0
 2266              	 .cfi_startproc
 2267 0000 90B5     	 push {r4,r7,lr}
 2268              	.LCFI66:
 2269              	 .cfi_def_cfa_offset 12
 2270              	 .cfi_offset 4,-12
 2271              	 .cfi_offset 7,-8
 2272              	 .cfi_offset 14,-4
 2273 0002 8BB0     	 sub sp,sp,#44
 2274              	.LCFI67:
 2275              	 .cfi_def_cfa_offset 56
 2276 0004 00AF     	 add r7,sp,#0
 2277              	.LCFI68:
 2278              	 .cfi_def_cfa_register 7
 2279 0006 7860     	 str r0,[r7,#4]
 2280 0008 0C1C     	 mov r4,r1
 2281 000a 101C     	 mov r0,r2
 2282 000c 191C     	 mov r1,r3
 2283 000e FB1C     	 add r3,r7,#3
 2284 0010 221C     	 add r2,r4,#0
 2285 0012 1A70     	 strb r2,[r3]
 2286 0014 BB1C     	 add r3,r7,#2
 2287 0016 021C     	 add r2,r0,#0
 2288 0018 1A70     	 strb r2,[r3]
 2289 001a 7B1C     	 add r3,r7,#1
 2290 001c 0A1C     	 add r2,r1,#0
 2291 001e 1A70     	 strb r2,[r3]
3457:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
3458:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_DATA      i;
3459:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_fmt;
3460:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_log;
3461:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_max;
3462:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_min;
3463:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_fmtd;
3464:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
3465:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_lead_char;
3466:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    dig_val;
3467:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    lead_char_delta_0;
3468:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    lead_char_delta_a;
3469:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
3470:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
3471:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
3472:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   print_char;
3473:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
3474:../Dave/Generated/UCPROBE/lib_str.c **** 
3475:../Dave/Generated/UCPROBE/lib_str.c **** 
3476:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
3477:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
 2292              	 .loc 1 3477 0
 2293 0020 7B6C     	 ldr r3,[r7,#68]
 2294 0022 002B     	 cmp r3,#0
 2295 0024 01D1     	 bne .L142
3478:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2296              	 .loc 1 3478 0
 2297 0026 0023     	 mov r3,#0
 2298 0028 B9E1     	 b .L143
 2299              	.L142:
3479:../Dave/Generated/UCPROBE/lib_str.c ****     }
3480:../Dave/Generated/UCPROBE/lib_str.c **** 
3481:../Dave/Generated/UCPROBE/lib_str.c ****     fmt_invalid = DEF_NO;
 2300              	 .loc 1 3481 0
 2301 002a 1223     	 mov r3,#18
 2302 002c FB18     	 add r3,r7,r3
 2303 002e 0022     	 mov r2,#0
 2304 0030 1A70     	 strb r2,[r3]
3482:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
 2305              	 .loc 1 3482 0
 2306 0032 1323     	 mov r3,#19
 2307 0034 FB18     	 add r3,r7,r3
 2308 0036 0022     	 mov r2,#0
 2309 0038 1A70     	 strb r2,[r3]
3483:../Dave/Generated/UCPROBE/lib_str.c **** 
3484:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_dig < 1) {                                          /* If nbr digs = 0, ...            
 2310              	 .loc 1 3484 0
 2311 003a FB1C     	 add r3,r7,#3
 2312 003c 1B78     	 ldrb r3,[r3]
 2313 003e 002B     	 cmp r3,#0
 2314 0040 03D1     	 bne .L144
3485:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 2315              	 .loc 1 3485 0
 2316 0042 1223     	 mov r3,#18
 2317 0044 FB18     	 add r3,r7,r3
 2318 0046 0122     	 mov r2,#1
 2319 0048 1A70     	 strb r2,[r3]
 2320              	.L144:
3486:../Dave/Generated/UCPROBE/lib_str.c ****     }
3487:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* If invalid base, ...            
3488:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_base <  2u) ||
 2321              	 .loc 1 3488 0
 2322 004a BB1C     	 add r3,r7,#2
 2323 004c 1B78     	 ldrb r3,[r3]
 2324 004e 012B     	 cmp r3,#1
 2325 0050 03D9     	 bls .L145
 2326              	 .loc 1 3488 0 is_stmt 0 discriminator 1
 2327 0052 BB1C     	 add r3,r7,#2
 2328 0054 1B78     	 ldrb r3,[r3]
 2329 0056 242B     	 cmp r3,#36
 2330 0058 03D9     	 bls .L146
 2331              	.L145:
3489:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
3490:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 2332              	 .loc 1 3490 0 is_stmt 1
 2333 005a 1223     	 mov r3,#18
 2334 005c FB18     	 add r3,r7,r3
 2335 005e 0122     	 mov r2,#1
 2336 0060 1A70     	 strb r2,[r3]
 2337              	.L146:
3491:../Dave/Generated/UCPROBE/lib_str.c ****     }
3492:../Dave/Generated/UCPROBE/lib_str.c **** 
3493:../Dave/Generated/UCPROBE/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
 2338              	 .loc 1 3493 0
 2339 0062 3823     	 mov r3,#56
 2340 0064 FB18     	 add r3,r7,r3
 2341 0066 1B78     	 ldrb r3,[r3]
 2342 0068 002B     	 cmp r3,#0
 2343 006a 5ED0     	 beq .L147
3494:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
 2344              	 .loc 1 3494 0
 2345 006c 1023     	 mov r3,#16
 2346 006e FC18     	 add r4,r7,r3
 2347 0070 3823     	 mov r3,#56
 2348 0072 FB18     	 add r3,r7,r3
 2349 0074 1B78     	 ldrb r3,[r3]
 2350 0076 181C     	 mov r0,r3
 2351 0078 FFF7FEFF 	 bl ASCII_IsPrint
 2352 007c 031C     	 mov r3,r0
 2353 007e 2370     	 strb r3,[r4]
3495:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable (see 
 2354              	 .loc 1 3495 0
 2355 0080 1023     	 mov r3,#16
 2356 0082 FB18     	 add r3,r7,r3
 2357 0084 1B78     	 ldrb r3,[r3]
 2358 0086 012B     	 cmp r3,#1
 2359 0088 04D0     	 beq .L148
3496:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str        (see 
 2360              	 .loc 1 3496 0
 2361 008a 1223     	 mov r3,#18
 2362 008c FB18     	 add r3,r7,r3
 2363 008e 0122     	 mov r2,#1
 2364 0090 1A70     	 strb r2,[r3]
 2365 0092 4AE0     	 b .L147
 2366              	.L148:
3497:../Dave/Generated/UCPROBE/lib_str.c **** 
3498:../Dave/Generated/UCPROBE/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 nbr base
 2367              	 .loc 1 3498 0
 2368 0094 3823     	 mov r3,#56
 2369 0096 FB18     	 add r3,r7,r3
 2370 0098 1B78     	 ldrb r3,[r3]
 2371 009a 302B     	 cmp r3,#48
 2372 009c 45D0     	 beq .L147
3499:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_delta_0 = (CPU_INT08U)(lead_char - '0');
 2373              	 .loc 1 3499 0
 2374 009e 0F23     	 mov r3,#15
 2375 00a0 FB18     	 add r3,r7,r3
 2376 00a2 3822     	 mov r2,#56
 2377 00a4 BA18     	 add r2,r7,r2
 2378 00a6 1278     	 ldrb r2,[r2]
 2379 00a8 303A     	 sub r2,r2,#48
 2380 00aa 1A70     	 strb r2,[r3]
3500:../Dave/Generated/UCPROBE/lib_str.c ****             if (lower_case != DEF_YES) {
 2381              	 .loc 1 3500 0
 2382 00ac 3C23     	 mov r3,#60
 2383 00ae FB18     	 add r3,r7,r3
 2384 00b0 1B78     	 ldrb r3,[r3]
 2385 00b2 012B     	 cmp r3,#1
 2386 00b4 07D0     	 beq .L149
3501:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
 2387              	 .loc 1 3501 0
 2388 00b6 1423     	 mov r3,#20
 2389 00b8 FB18     	 add r3,r7,r3
 2390 00ba 3822     	 mov r2,#56
 2391 00bc BA18     	 add r2,r7,r2
 2392 00be 1278     	 ldrb r2,[r2]
 2393 00c0 413A     	 sub r2,r2,#65
 2394 00c2 1A70     	 strb r2,[r3]
 2395 00c4 06E0     	 b .L150
 2396              	.L149:
3502:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3503:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'a');
 2397              	 .loc 1 3503 0
 2398 00c6 1423     	 mov r3,#20
 2399 00c8 FB18     	 add r3,r7,r3
 2400 00ca 3822     	 mov r2,#56
 2401 00cc BA18     	 add r2,r7,r2
 2402 00ce 1278     	 ldrb r2,[r2]
 2403 00d0 613A     	 sub r2,r2,#97
 2404 00d2 1A70     	 strb r2,[r3]
 2405              	.L150:
3504:../Dave/Generated/UCPROBE/lib_str.c ****             }
3505:../Dave/Generated/UCPROBE/lib_str.c **** 
3506:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_dig = (((nbr_base <= 10u) &&  (lead_char_delta_0 <  nbr_base))      ||
 2406              	 .loc 1 3506 0
 2407 00d4 BB1C     	 add r3,r7,#2
 2408 00d6 1B78     	 ldrb r3,[r3]
 2409 00d8 0A2B     	 cmp r3,#10
 2410 00da 06D8     	 bhi .L151
 2411              	 .loc 1 3506 0 is_stmt 0 discriminator 1
 2412 00dc 0F23     	 mov r3,#15
 2413 00de FA18     	 add r2,r7,r3
 2414 00e0 BB1C     	 add r3,r7,#2
 2415 00e2 1278     	 ldrb r2,[r2]
 2416 00e4 1B78     	 ldrb r3,[r3]
 2417 00e6 9A42     	 cmp r2,r3
 2418 00e8 10D3     	 bcc .L152
 2419              	.L151:
 2420              	 .loc 1 3506 0 discriminator 4
 2421 00ea BB1C     	 add r3,r7,#2
 2422 00ec 1B78     	 ldrb r3,[r3]
 2423 00ee 0A2B     	 cmp r3,#10
 2424 00f0 0ED9     	 bls .L153
3507:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2425              	 .loc 1 3507 0 is_stmt 1
 2426 00f2 0F23     	 mov r3,#15
 2427 00f4 FB18     	 add r3,r7,r3
 2428 00f6 1B78     	 ldrb r3,[r3]
 2429 00f8 092B     	 cmp r3,#9
 2430 00fa 07D9     	 bls .L152
3508:../Dave/Generated/UCPROBE/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 2431              	 .loc 1 3508 0 discriminator 1
 2432 00fc 1423     	 mov r3,#20
 2433 00fe FB18     	 add r3,r7,r3
 2434 0100 1A78     	 ldrb r2,[r3]
 2435 0102 BB1C     	 add r3,r7,#2
 2436 0104 1B78     	 ldrb r3,[r3]
 2437 0106 0A3B     	 sub r3,r3,#10
3507:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2438              	 .loc 1 3507 0 discriminator 1
 2439 0108 9A42     	 cmp r2,r3
 2440 010a 01D2     	 bcs .L153
 2441              	.L152:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2442              	 .loc 1 3506 0 discriminator 3
 2443 010c 0122     	 mov r2,#1
 2444 010e 00E0     	 b .L154
 2445              	.L153:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2446              	 .loc 1 3506 0 is_stmt 0 discriminator 5
 2447 0110 0022     	 mov r2,#0
 2448              	.L154:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2449              	 .loc 1 3506 0 discriminator 7
 2450 0112 0E23     	 mov r3,#14
 2451 0114 FB18     	 add r3,r7,r3
 2452 0116 1A70     	 strb r2,[r3]
3509:../Dave/Generated/UCPROBE/lib_str.c **** 
3510:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If lead char non-0 nbr base dig 
 2453              	 .loc 1 3510 0 is_stmt 1 discriminator 7
 2454 0118 0E23     	 mov r3,#14
 2455 011a FB18     	 add r3,r7,r3
 2456 011c 1B78     	 ldrb r3,[r3]
 2457 011e 012B     	 cmp r3,#1
 2458 0120 03D1     	 bne .L147
3511:../Dave/Generated/UCPROBE/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str             
 2459              	 .loc 1 3511 0
 2460 0122 1223     	 mov r3,#18
 2461 0124 FB18     	 add r3,r7,r3
 2462 0126 0122     	 mov r2,#1
 2463 0128 1A70     	 strb r2,[r3]
 2464              	.L147:
3512:../Dave/Generated/UCPROBE/lib_str.c ****             }
3513:../Dave/Generated/UCPROBE/lib_str.c ****         }
3514:../Dave/Generated/UCPROBE/lib_str.c ****     }
3515:../Dave/Generated/UCPROBE/lib_str.c **** 
3516:../Dave/Generated/UCPROBE/lib_str.c **** 
3517:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
3518:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt    = pstr;
 2465              	 .loc 1 3518 0
 2466 012a 7B6C     	 ldr r3,[r7,#68]
 2467 012c 7B62     	 str r3,[r7,#36]
3519:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
 2468              	 .loc 1 3519 0
 2469 012e 1323     	 mov r3,#19
 2470 0130 FB18     	 add r3,r7,r3
 2471 0132 0022     	 mov r2,#0
 2472 0134 1A70     	 strb r2,[r3]
3520:../Dave/Generated/UCPROBE/lib_str.c **** 
3521:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid == DEF_NO) {
 2473              	 .loc 1 3521 0
 2474 0136 1223     	 mov r3,#18
 2475 0138 FB18     	 add r3,r7,r3
 2476 013a 1B78     	 ldrb r3,[r3]
 2477 013c 002B     	 cmp r3,#0
 2478 013e 00D0     	 beq .LCB2175
 2479 0140 7EE0     	 b .L155
 2480              	.LCB2175:
3522:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt     = nbr;
 2481              	 .loc 1 3522 0
 2482 0142 7B68     	 ldr r3,[r7,#4]
 2483 0144 FB61     	 str r3,[r7,#28]
3523:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_log     = nbr;
 2484              	 .loc 1 3523 0
 2485 0146 7B68     	 ldr r3,[r7,#4]
 2486 0148 BB61     	 str r3,[r7,#24]
3524:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_max = 1u;
 2487              	 .loc 1 3524 0
 2488 014a 1723     	 mov r3,#23
 2489 014c FB18     	 add r3,r7,r3
 2490 014e 0122     	 mov r2,#1
 2491 0150 1A70     	 strb r2,[r3]
3525:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= nbr_base) {                           /* While nbr base digs avail, ...  
 2492              	 .loc 1 3525 0
 2493 0152 0EE0     	 b .L156
 2494              	.L157:
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 2495              	 .loc 1 3526 0
 2496 0154 1723     	 mov r3,#23
 2497 0156 FB18     	 add r3,r7,r3
 2498 0158 1A78     	 ldrb r2,[r3]
 2499 015a 1723     	 mov r3,#23
 2500 015c FB18     	 add r3,r7,r3
 2501 015e 0132     	 add r2,r2,#1
 2502 0160 1A70     	 strb r2,[r3]
3527:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
 2503              	 .loc 1 3527 0
 2504 0162 BB1C     	 add r3,r7,#2
 2505 0164 1B78     	 ldrb r3,[r3]
 2506 0166 B869     	 ldr r0,[r7,#24]
 2507 0168 191C     	 mov r1,r3
 2508 016a FFF7FEFF 	 bl __aeabi_uidiv
 2509 016e 031C     	 mov r3,r0
 2510 0170 BB61     	 str r3,[r7,#24]
 2511              	.L156:
3525:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= nbr_base) {                           /* While nbr base digs avail, ...  
 2512              	 .loc 1 3525 0
 2513 0172 BB1C     	 add r3,r7,#2
 2514 0174 1A78     	 ldrb r2,[r3]
 2515 0176 BB69     	 ldr r3,[r7,#24]
 2516 0178 9A42     	 cmp r2,r3
 2517 017a EBD9     	 bls .L157
3528:../Dave/Generated/UCPROBE/lib_str.c ****         }
3529:../Dave/Generated/UCPROBE/lib_str.c **** 
3530:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg_sign = (nbr_neg == DEF_YES) ? 1u : 0u;
 2518              	 .loc 1 3530 0
 2519 017c 7B1C     	 add r3,r7,#1
 2520 017e 1B78     	 ldrb r3,[r3]
 2521 0180 012B     	 cmp r3,#1
 2522 0182 01D1     	 bne .L158
 2523              	 .loc 1 3530 0 is_stmt 0 discriminator 1
 2524 0184 0122     	 mov r2,#1
 2525 0186 00E0     	 b .L159
 2526              	.L158:
 2527              	 .loc 1 3530 0 discriminator 2
 2528 0188 0022     	 mov r2,#0
 2529              	.L159:
 2530              	 .loc 1 3530 0 discriminator 4
 2531 018a 0D23     	 mov r3,#13
 2532 018c FB18     	 add r3,r7,r3
 2533 018e 1A70     	 strb r2,[r3]
3531:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_dig >= (nbr_dig_max + nbr_neg_sign)) {          /* If req'd nbr digs >= (max nbr di
 2534              	 .loc 1 3531 0 is_stmt 1 discriminator 4
 2535 0190 FB1C     	 add r3,r7,#3
 2536 0192 1A78     	 ldrb r2,[r3]
 2537 0194 1723     	 mov r3,#23
 2538 0196 FB18     	 add r3,r7,r3
 2539 0198 1978     	 ldrb r1,[r3]
 2540 019a 0D23     	 mov r3,#13
 2541 019c FB18     	 add r3,r7,r3
 2542 019e 1B78     	 ldrb r3,[r3]
 2543 01a0 CB18     	 add r3,r1,r3
 2544 01a2 9A42     	 cmp r2,r3
 2545 01a4 48DB     	 blt .L160
3532:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd = DEF_NO;
 2546              	 .loc 1 3532 0
 2547 01a6 1123     	 mov r3,#17
 2548 01a8 FB18     	 add r3,r7,r3
 2549 01aa 0022     	 mov r2,#0
 2550 01ac 1A70     	 strb r2,[r3]
3533:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_min  = DEF_MIN(nbr_dig_max, nbr_dig);
 2551              	 .loc 1 3533 0
 2552 01ae 0C23     	 mov r3,#12
 2553 01b0 FA18     	 add r2,r7,r3
 2554 01b2 FB1C     	 add r3,r7,#3
 2555 01b4 1721     	 mov r1,#23
 2556 01b6 7918     	 add r1,r7,r1
 2557 01b8 0C78     	 ldrb r4,[r1]
 2558 01ba 1B78     	 ldrb r3,[r3]
 2559 01bc D8B2     	 uxtb r0,r3
 2560 01be E1B2     	 uxtb r1,r4
 2561 01c0 8842     	 cmp r0,r1
 2562 01c2 00D9     	 bls .L161
 2563 01c4 231C     	 add r3,r4,#0
 2564              	.L161:
 2565 01c6 1370     	 strb r3,[r2]
3534:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
3535:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char != (CPU_CHAR)'\0') {
 2566              	 .loc 1 3535 0
 2567 01c8 3823     	 mov r3,#56
 2568 01ca FB18     	 add r3,r7,r3
 2569 01cc 1B78     	 ldrb r3,[r3]
 2570 01ce 002B     	 cmp r3,#0
 2571 01d0 13D0     	 beq .L162
3536:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 2572              	 .loc 1 3536 0
 2573 01d2 1623     	 mov r3,#22
 2574 01d4 FB18     	 add r3,r7,r3
 2575 01d6 FA1C     	 add r2,r7,#3
 2576 01d8 1278     	 ldrb r2,[r2]
 2577 01da 1A70     	 strb r2,[r3]
3537:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_lead_char = nbr_dig     -
 2578              	 .loc 1 3537 0
 2579 01dc FA1C     	 add r2,r7,#3
 2580 01de 0C23     	 mov r3,#12
 2581 01e0 FB18     	 add r3,r7,r3
 2582 01e2 1278     	 ldrb r2,[r2]
 2583 01e4 1B78     	 ldrb r3,[r3]
 2584 01e6 D31A     	 sub r3,r2,r3
 2585 01e8 D9B2     	 uxtb r1,r3
 2586 01ea 1523     	 mov r3,#21
 2587 01ec FB18     	 add r3,r7,r3
 2588 01ee 0D22     	 mov r2,#13
 2589 01f0 BA18     	 add r2,r7,r2
 2590 01f2 1278     	 ldrb r2,[r2]
 2591 01f4 8A1A     	 sub r2,r1,r2
 2592 01f6 1A70     	 strb r2,[r3]
 2593 01f8 0DE0     	 b .L163
 2594              	.L162:
3538:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_dig_min - nbr_neg_sign;
3539:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3540:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig_min + nbr_neg_sign;
 2595              	 .loc 1 3540 0
 2596 01fa 1623     	 mov r3,#22
 2597 01fc FB18     	 add r3,r7,r3
 2598 01fe 0C22     	 mov r2,#12
 2599 0200 B918     	 add r1,r7,r2
 2600 0202 0D22     	 mov r2,#13
 2601 0204 BA18     	 add r2,r7,r2
 2602 0206 0978     	 ldrb r1,[r1]
 2603 0208 1278     	 ldrb r2,[r2]
 2604 020a 8A18     	 add r2,r1,r2
 2605 020c 1A70     	 strb r2,[r3]
3541:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_lead_char = 0u;
 2606              	 .loc 1 3541 0
 2607 020e 1523     	 mov r3,#21
 2608 0210 FB18     	 add r3,r7,r3
 2609 0212 0022     	 mov r2,#0
 2610 0214 1A70     	 strb r2,[r3]
 2611              	.L163:
3542:../Dave/Generated/UCPROBE/lib_str.c ****             }
3543:../Dave/Generated/UCPROBE/lib_str.c **** 
3544:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_lead_char > 0) {                            /* If lead chars to fmt, ...       
 2612              	 .loc 1 3544 0
 2613 0216 1523     	 mov r3,#21
 2614 0218 FB18     	 add r3,r7,r3
 2615 021a 1B78     	 ldrb r3,[r3]
 2616 021c 002B     	 cmp r3,#0
 2617 021e 0FD0     	 beq .L155
3545:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_0 = (lead_char == '0')                /* ... chk if lead char a '0' dig (
 2618              	 .loc 1 3545 0
 2619 0220 3823     	 mov r3,#56
 2620 0222 FB18     	 add r3,r7,r3
 2621 0224 1B78     	 ldrb r3,[r3]
 2622 0226 302B     	 cmp r3,#48
 2623 0228 01D1     	 bne .L165
 2624              	 .loc 1 3545 0 is_stmt 0 discriminator 1
 2625 022a 0122     	 mov r2,#1
 2626 022c 00E0     	 b .L166
 2627              	.L165:
 2628              	 .loc 1 3545 0 discriminator 2
 2629 022e 0022     	 mov r2,#0
 2630              	.L166:
 2631              	 .loc 1 3545 0 discriminator 4
 2632 0230 1323     	 mov r3,#19
 2633 0232 FB18     	 add r3,r7,r3
 2634 0234 1A70     	 strb r2,[r3]
 2635 0236 03E0     	 b .L155
 2636              	.L160:
3546:../Dave/Generated/UCPROBE/lib_str.c ****                             ?  DEF_YES : DEF_NO;
3547:../Dave/Generated/UCPROBE/lib_str.c ****             }
3548:../Dave/Generated/UCPROBE/lib_str.c **** 
3549:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
3550:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
 2637              	 .loc 1 3550 0 is_stmt 1
 2638 0238 1223     	 mov r3,#18
 2639 023a FB18     	 add r3,r7,r3
 2640 023c 0122     	 mov r2,#1
 2641 023e 1A70     	 strb r2,[r3]
 2642              	.L155:
3551:../Dave/Generated/UCPROBE/lib_str.c ****         }
3552:../Dave/Generated/UCPROBE/lib_str.c ****     }
3553:../Dave/Generated/UCPROBE/lib_str.c **** 
3554:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {
 2643              	 .loc 1 3554 0
 2644 0240 1223     	 mov r3,#18
 2645 0242 FB18     	 add r3,r7,r3
 2646 0244 1B78     	 ldrb r3,[r3]
 2647 0246 002B     	 cmp r3,#0
 2648 0248 04D0     	 beq .L167
3555:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_fmtd = nbr_dig;
 2649              	 .loc 1 3555 0
 2650 024a 1623     	 mov r3,#22
 2651 024c FB18     	 add r3,r7,r3
 2652 024e FA1C     	 add r2,r7,#3
 2653 0250 1278     	 ldrb r2,[r2]
 2654 0252 1A70     	 strb r2,[r3]
 2655              	.L167:
3556:../Dave/Generated/UCPROBE/lib_str.c ****     }
3557:../Dave/Generated/UCPROBE/lib_str.c **** 
3558:../Dave/Generated/UCPROBE/lib_str.c **** 
3559:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
3560:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt += nbr_dig_fmtd;                                   /* Start fmt @ least-sig dig.      
 2656              	 .loc 1 3560 0
 2657 0254 1623     	 mov r3,#22
 2658 0256 FB18     	 add r3,r7,r3
 2659 0258 1B78     	 ldrb r3,[r3]
 2660 025a 7A6A     	 ldr r2,[r7,#36]
 2661 025c D318     	 add r3,r2,r3
 2662 025e 7B62     	 str r3,[r7,#36]
3561:../Dave/Generated/UCPROBE/lib_str.c **** 
3562:../Dave/Generated/UCPROBE/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
 2663              	 .loc 1 3562 0
 2664 0260 4023     	 mov r3,#64
 2665 0262 FB18     	 add r3,r7,r3
 2666 0264 1B78     	 ldrb r3,[r3]
 2667 0266 002B     	 cmp r3,#0
 2668 0268 02D0     	 beq .L168
3563:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 2669              	 .loc 1 3563 0
 2670 026a 7B6A     	 ldr r3,[r7,#36]
 2671 026c 0022     	 mov r2,#0
 2672 026e 1A70     	 strb r2,[r3]
 2673              	.L168:
3564:../Dave/Generated/UCPROBE/lib_str.c ****     }
3565:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt--;
 2674              	 .loc 1 3565 0
 2675 0270 7B6A     	 ldr r3,[r7,#36]
 2676 0272 013B     	 sub r3,r3,#1
 2677 0274 7B62     	 str r3,[r7,#36]
3566:../Dave/Generated/UCPROBE/lib_str.c **** 
3567:../Dave/Generated/UCPROBE/lib_str.c **** 
3568:../Dave/Generated/UCPROBE/lib_str.c ****     for (i = 0u; i < nbr_dig_fmtd; i++) {                       /* Fmt str for desired nbr digs :  
 2678              	 .loc 1 3568 0
 2679 0276 0023     	 mov r3,#0
 2680 0278 3B62     	 str r3,[r7,#32]
 2681 027a 81E0     	 b .L169
 2682              	.L181:
3569:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 2683              	 .loc 1 3569 0
 2684 027c 1223     	 mov r3,#18
 2685 027e FB18     	 add r3,r7,r3
 2686 0280 1B78     	 ldrb r3,[r3]
 2687 0282 002B     	 cmp r3,#0
 2688 0284 00D0     	 beq .LCB2370
 2689 0286 73E0     	 b .L170
 2690              	.LCB2370:
3570:../Dave/Generated/UCPROBE/lib_str.c ****             if ((nbr_fmt > 0) ||                                /* If fmt nbr > 0                  
 2691              	 .loc 1 3570 0
 2692 0288 FB69     	 ldr r3,[r7,#28]
 2693 028a 002B     	 cmp r3,#0
 2694 028c 02D1     	 bne .L171
 2695              	 .loc 1 3570 0 is_stmt 0 discriminator 1
 2696 028e 3B6A     	 ldr r3,[r7,#32]
 2697 0290 002B     	 cmp r3,#0
 2698 0292 3BD1     	 bne .L172
 2699              	.L171:
3571:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
3572:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_val = (CPU_INT08U)(nbr_fmt % nbr_base);
 2700              	 .loc 1 3573 0 is_stmt 1
 2701 0294 BB1C     	 add r3,r7,#2
 2702 0296 1B78     	 ldrb r3,[r3]
 2703 0298 FA69     	 ldr r2,[r7,#28]
 2704 029a 101C     	 mov r0,r2
 2705 029c 191C     	 mov r1,r3
 2706 029e FFF7FEFF 	 bl __aeabi_uidivmod
 2707 02a2 0B1C     	 mov r3,r1
 2708 02a4 1A1C     	 mov r2,r3
 2709 02a6 0B23     	 mov r3,#11
 2710 02a8 FB18     	 add r3,r7,r3
 2711 02aa 1A70     	 strb r2,[r3]
3574:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 2712              	 .loc 1 3574 0
 2713 02ac 0B23     	 mov r3,#11
 2714 02ae FB18     	 add r3,r7,r3
 2715 02b0 1B78     	 ldrb r3,[r3]
 2716 02b2 092B     	 cmp r3,#9
 2717 02b4 09D8     	 bhi .L173
3575:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 2718              	 .loc 1 3575 0
 2719 02b6 7B6A     	 ldr r3,[r7,#36]
 2720 02b8 5A1E     	 sub r2,r3,#1
 2721 02ba 7A62     	 str r2,[r7,#36]
 2722 02bc 0B22     	 mov r2,#11
 2723 02be BA18     	 add r2,r7,r2
 2724 02c0 1278     	 ldrb r2,[r2]
 2725 02c2 3032     	 add r2,r2,#48
 2726 02c4 D2B2     	 uxtb r2,r2
 2727 02c6 1A70     	 strb r2,[r3]
 2728 02c8 17E0     	 b .L174
 2729              	.L173:
3576:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
3577:../Dave/Generated/UCPROBE/lib_str.c ****                     if (lower_case !=  DEF_YES) {
 2730              	 .loc 1 3577 0
 2731 02ca 3C23     	 mov r3,#60
 2732 02cc FB18     	 add r3,r7,r3
 2733 02ce 1B78     	 ldrb r3,[r3]
 2734 02d0 012B     	 cmp r3,#1
 2735 02d2 09D0     	 beq .L175
3578:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 2736              	 .loc 1 3578 0
 2737 02d4 7B6A     	 ldr r3,[r7,#36]
 2738 02d6 5A1E     	 sub r2,r3,#1
 2739 02d8 7A62     	 str r2,[r7,#36]
 2740 02da 0B22     	 mov r2,#11
 2741 02dc BA18     	 add r2,r7,r2
 2742 02de 1278     	 ldrb r2,[r2]
 2743 02e0 3732     	 add r2,r2,#55
 2744 02e2 D2B2     	 uxtb r2,r2
 2745 02e4 1A70     	 strb r2,[r3]
 2746 02e6 08E0     	 b .L174
 2747              	.L175:
3579:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
3580:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'a');
 2748              	 .loc 1 3580 0
 2749 02e8 7B6A     	 ldr r3,[r7,#36]
 2750 02ea 5A1E     	 sub r2,r3,#1
 2751 02ec 7A62     	 str r2,[r7,#36]
 2752 02ee 0B22     	 mov r2,#11
 2753 02f0 BA18     	 add r2,r7,r2
 2754 02f2 1278     	 ldrb r2,[r2]
 2755 02f4 5732     	 add r2,r2,#87
 2756 02f6 D2B2     	 uxtb r2,r2
 2757 02f8 1A70     	 strb r2,[r3]
 2758              	.L174:
3581:../Dave/Generated/UCPROBE/lib_str.c ****                     }
3582:../Dave/Generated/UCPROBE/lib_str.c ****                 }
3583:../Dave/Generated/UCPROBE/lib_str.c **** 
3584:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_fmt /= nbr_base;                            /* Shift to next more-sig dig.     
 2759              	 .loc 1 3584 0
 2760 02fa BB1C     	 add r3,r7,#2
 2761 02fc 1B78     	 ldrb r3,[r3]
 2762 02fe F869     	 ldr r0,[r7,#28]
 2763 0300 191C     	 mov r1,r3
 2764 0302 FFF7FEFF 	 bl __aeabi_uidiv
 2765 0306 031C     	 mov r3,r0
 2766 0308 FB61     	 str r3,[r7,#28]
 2767 030a 30E0     	 b .L176
 2768              	.L172:
3585:../Dave/Generated/UCPROBE/lib_str.c **** 
3586:../Dave/Generated/UCPROBE/lib_str.c ****             } else if ((nbr_neg      == DEF_YES)  &&            /* ... else if nbr neg             
 2769              	 .loc 1 3586 0
 2770 030c 7B1C     	 add r3,r7,#1
 2771 030e 1B78     	 ldrb r3,[r3]
 2772 0310 012B     	 cmp r3,#1
 2773 0312 1FD1     	 bne .L177
 2774              	 .loc 1 3586 0 is_stmt 0 discriminator 1
 2775 0314 1323     	 mov r3,#19
 2776 0316 FB18     	 add r3,r7,r3
 2777 0318 1B78     	 ldrb r3,[r3]
 2778 031a 002B     	 cmp r3,#0
 2779 031c 04D1     	 bne .L178
3587:../Dave/Generated/UCPROBE/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
 2780              	 .loc 1 3587 0 is_stmt 1
 2781 031e 1123     	 mov r3,#17
 2782 0320 FB18     	 add r3,r7,r3
 2783 0322 1B78     	 ldrb r3,[r3]
 2784 0324 002B     	 cmp r3,#0
 2785 0326 0BD0     	 beq .L179
 2786              	.L178:
3588:../Dave/Generated/UCPROBE/lib_str.c ****                        (nbr_neg_fmtd == DEF_NO )) ||            /* ... but neg sign NOT yet fmt'd  
 2787              	 .loc 1 3588 0
 2788 0328 1323     	 mov r3,#19
 2789 032a FB18     	 add r3,r7,r3
 2790 032c 1B78     	 ldrb r3,[r3]
 2791 032e 002B     	 cmp r3,#0
 2792 0330 10D0     	 beq .L177
3589:../Dave/Generated/UCPROBE/lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
3590:../Dave/Generated/UCPROBE/lib_str.c ****                        (i == (nbr_dig_fmtd - 1u))))) {          /* ... & on most-sig dig to fmt,   
 2793              	 .loc 1 3590 0
 2794 0332 1623     	 mov r3,#22
 2795 0334 FB18     	 add r3,r7,r3
 2796 0336 1B78     	 ldrb r3,[r3]
 2797 0338 5A1E     	 sub r2,r3,#1
3589:../Dave/Generated/UCPROBE/lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
 2798              	 .loc 1 3589 0
 2799 033a 3B6A     	 ldr r3,[r7,#32]
 2800 033c 9A42     	 cmp r2,r3
 2801 033e 09D1     	 bne .L177
 2802              	.L179:
3591:../Dave/Generated/UCPROBE/lib_str.c **** 
3592:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt--   = '-';                             /* ... prepend neg sign (see Note #
 2803              	 .loc 1 3592 0
 2804 0340 7B6A     	 ldr r3,[r7,#36]
 2805 0342 5A1E     	 sub r2,r3,#1
 2806 0344 7A62     	 str r2,[r7,#36]
 2807 0346 2D22     	 mov r2,#45
 2808 0348 1A70     	 strb r2,[r3]
3593:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 2809              	 .loc 1 3593 0
 2810 034a 1123     	 mov r3,#17
 2811 034c FB18     	 add r3,r7,r3
 2812 034e 0122     	 mov r2,#1
 2813 0350 1A70     	 strb r2,[r3]
 2814 0352 0CE0     	 b .L176
 2815              	.L177:
3594:../Dave/Generated/UCPROBE/lib_str.c **** 
3595:../Dave/Generated/UCPROBE/lib_str.c ****             } else if (lead_char != (CPU_CHAR)'\0') {           /* ... else if avail,              
 2816              	 .loc 1 3595 0
 2817 0354 3823     	 mov r3,#56
 2818 0356 FB18     	 add r3,r7,r3
 2819 0358 1B78     	 ldrb r3,[r3]
 2820 035a 002B     	 cmp r3,#0
 2821 035c 0DD0     	 beq .L180
3596:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt-- = lead_char;                         /* ... fmt lead char.              
 2822              	 .loc 1 3596 0
 2823 035e 7B6A     	 ldr r3,[r7,#36]
 2824 0360 5A1E     	 sub r2,r3,#1
 2825 0362 7A62     	 str r2,[r7,#36]
 2826 0364 3822     	 mov r2,#56
 2827 0366 BA18     	 add r2,r7,r2
 2828 0368 1278     	 ldrb r2,[r2]
 2829 036a 1A70     	 strb r2,[r3]
 2830 036c 05E0     	 b .L180
 2831              	.L176:
 2832 036e 04E0     	 b .L180
 2833              	.L170:
3597:../Dave/Generated/UCPROBE/lib_str.c ****             }
3598:../Dave/Generated/UCPROBE/lib_str.c **** 
3599:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
3600:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt-- = '?';
 2834              	 .loc 1 3600 0
 2835 0370 7B6A     	 ldr r3,[r7,#36]
 2836 0372 5A1E     	 sub r2,r3,#1
 2837 0374 7A62     	 str r2,[r7,#36]
 2838 0376 3F22     	 mov r2,#63
 2839 0378 1A70     	 strb r2,[r3]
 2840              	.L180:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 2841              	 .loc 1 3568 0 discriminator 2
 2842 037a 3B6A     	 ldr r3,[r7,#32]
 2843 037c 0133     	 add r3,r3,#1
 2844 037e 3B62     	 str r3,[r7,#32]
 2845              	.L169:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 2846              	 .loc 1 3568 0 is_stmt 0 discriminator 1
 2847 0380 1623     	 mov r3,#22
 2848 0382 FB18     	 add r3,r7,r3
 2849 0384 1A78     	 ldrb r2,[r3]
 2850 0386 3B6A     	 ldr r3,[r7,#32]
 2851 0388 9A42     	 cmp r2,r3
 2852 038a 00D9     	 bls .LCB2525
 2853 038c 76E7     	 b .L181
 2854              	.LCB2525:
3601:../Dave/Generated/UCPROBE/lib_str.c ****         }
3602:../Dave/Generated/UCPROBE/lib_str.c ****     }
3603:../Dave/Generated/UCPROBE/lib_str.c **** 
3604:../Dave/Generated/UCPROBE/lib_str.c **** 
3605:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
 2855              	 .loc 1 3605 0 is_stmt 1
 2856 038e 1223     	 mov r3,#18
 2857 0390 FB18     	 add r3,r7,r3
 2858 0392 1B78     	 ldrb r3,[r3]
 2859 0394 002B     	 cmp r3,#0
 2860 0396 01D0     	 beq .L182
3606:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2861              	 .loc 1 3606 0
 2862 0398 0023     	 mov r3,#0
 2863 039a 00E0     	 b .L143
 2864              	.L182:
3607:../Dave/Generated/UCPROBE/lib_str.c ****     }
3608:../Dave/Generated/UCPROBE/lib_str.c **** 
3609:../Dave/Generated/UCPROBE/lib_str.c **** 
3610:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
 2865              	 .loc 1 3610 0
 2866 039c 7B6C     	 ldr r3,[r7,#68]
 2867              	.L143:
3611:../Dave/Generated/UCPROBE/lib_str.c **** }
 2868              	 .loc 1 3611 0
 2869 039e 181C     	 mov r0,r3
 2870 03a0 BD46     	 mov sp,r7
 2871 03a2 0BB0     	 add sp,sp,#44
 2872              	 
 2873 03a4 90BD     	 pop {r4,r7,pc}
 2874              	 .cfi_endproc
 2875              	.LFE22:
 2877 03a6 C046     	 .section .text.Str_ParseNbr_Int32,"ax",%progbits
 2878              	 .align 2
 2879              	 .code 16
 2880              	 .thumb_func
 2882              	Str_ParseNbr_Int32:
 2883              	.LFB23:
3612:../Dave/Generated/UCPROBE/lib_str.c **** 
3613:../Dave/Generated/UCPROBE/lib_str.c **** 
3614:../Dave/Generated/UCPROBE/lib_str.c **** /*
3615:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3616:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32()
3617:../Dave/Generated/UCPROBE/lib_str.c **** *
3618:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit integer from string.
3619:../Dave/Generated/UCPROBE/lib_str.c **** *
3620:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Notes #1 & #2a).
3621:../Dave/Generated/UCPROBE/lib_str.c **** *
3622:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next       Optional pointer to a variable to ... :
3623:../Dave/Generated/UCPROBE/lib_str.c **** *
3624:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return a pointer to first character following the integer s
3625:../Dave/Generated/UCPROBE/lib_str.c **** *                                           if NO error(s) [see Note #2a2B2];
3626:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Return a pointer to 'pstr',
3627:../Dave/Generated/UCPROBE/lib_str.c **** *                                           otherwise      (see Note #2a2A2).
3628:../Dave/Generated/UCPROBE/lib_str.c **** *
3629:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base of number to parse (see Notes #2a1B1 & #2a2B1).
3630:../Dave/Generated/UCPROBE/lib_str.c **** *
3631:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_signed      Indicates whether number to parse is signed :
3632:../Dave/Generated/UCPROBE/lib_str.c **** *
3633:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO                  Number is unsigned.
3634:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                 Number is   signed.
3635:../Dave/Generated/UCPROBE/lib_str.c **** *
3636:../Dave/Generated/UCPROBE/lib_str.c **** *               pnbr_neg        Pointer to a variable to return if the parsed (signed) number is ne
3637:../Dave/Generated/UCPROBE/lib_str.c **** *
3638:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO                  Number is non-negative.
3639:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                 Number is     negative.
3640:../Dave/Generated/UCPROBE/lib_str.c **** *
3641:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
3642:../Dave/Generated/UCPROBE/lib_str.c **** *
3643:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
3644:../Dave/Generated/UCPROBE/lib_str.c **** *
3645:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
3646:../Dave/Generated/UCPROBE/lib_str.c **** *
3647:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Str_ParseNbr_Int32U(),
3648:../Dave/Generated/UCPROBE/lib_str.c **** *               Str_ParseNbr_Int32S().
3649:../Dave/Generated/UCPROBE/lib_str.c **** *
3650:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3651:../Dave/Generated/UCPROBE/lib_str.c **** *
3652:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3653:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3654:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type long ... representation" :
3655:../Dave/Generated/UCPROBE/lib_str.c **** *
3656:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3657:../Dave/Generated/UCPROBE/lib_str.c **** *
3658:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3659:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
3660:../Dave/Generated/UCPROBE/lib_str.c **** *
3661:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3662:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3663:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3664:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3665:../Dave/Generated/UCPROBE/lib_str.c **** *
3666:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3667:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3668:../Dave/Generated/UCPROBE/lib_str.c **** *
3669:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3670:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3671:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
3672:../Dave/Generated/UCPROBE/lib_str.c **** *
3673:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3674:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
3675:../Dave/Generated/UCPROBE/lib_str.c **** *
3676:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3677:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3678:../Dave/Generated/UCPROBE/lib_str.c **** *
3679:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3680:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3681:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3682:../Dave/Generated/UCPROBE/lib_str.c **** *
3683:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3684:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3685:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3686:../Dave/Generated/UCPROBE/lib_str.c **** *
3687:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3688:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3689:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3690:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
3691:../Dave/Generated/UCPROBE/lib_str.c **** *
3692:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3693:../Dave/Generated/UCPROBE/lib_str.c **** *                                               '0X' may optionally precede the sequence of letters
3694:../Dave/Generated/UCPROBE/lib_str.c **** *
3695:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3696:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3697:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3698:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3699:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3700:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3701:../Dave/Generated/UCPROBE/lib_str.c **** *
3702:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) It does NOT seem reasonable to parse & convert a negative n
3703:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.  However, a negati
3704:../Dave/Generated/UCPROBE/lib_str.c **** *                                       for an unsigned integer will automatically be parsed as an 
3705:../Dave/Generated/UCPROBE/lib_str.c **** *                                       character (see Note #2aC1).
3706:../Dave/Generated/UCPROBE/lib_str.c **** *
3707:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3708:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3709:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3710:../Dave/Generated/UCPROBE/lib_str.c **** *
3711:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3712:../Dave/Generated/UCPROBE/lib_str.c **** *
3713:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3714:../Dave/Generated/UCPROBE/lib_str.c **** *
3715:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion is performed"; ...
3716:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3717:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3718:../Dave/Generated/UCPROBE/lib_str.c **** *
3719:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3720:../Dave/Generated/UCPROBE/lib_str.c **** *
3721:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3722:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3723:../Dave/Generated/UCPROBE/lib_str.c **** *
3724:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3725:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3726:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3727:../Dave/Generated/UCPROBE/lib_str.c **** *
3728:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3729:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3730:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
3731:../Dave/Generated/UCPROBE/lib_str.c **** *
3732:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3733:../Dave/Generated/UCPROBE/lib_str.c **** *
3734:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3735:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3736:../Dave/Generated/UCPROBE/lib_str.c **** *                                    [or] {LONG_MAX} ... shall be returned."
3737:../Dave/Generated/UCPROBE/lib_str.c **** *
3738:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3739:../Dave/Generated/UCPROBE/lib_str.c **** *
3740:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3741:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
3742:../Dave/Generated/UCPROBE/lib_str.c **** *
3743:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3744:../Dave/Generated/UCPROBE/lib_str.c **** *
3745:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3746:../Dave/Generated/UCPROBE/lib_str.c **** *
3747:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3748:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
3749:../Dave/Generated/UCPROBE/lib_str.c **** *
3750:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3751:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3752:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3753:../Dave/Generated/UCPROBE/lib_str.c **** *
3754:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
3755:../Dave/Generated/UCPROBE/lib_str.c **** *
3756:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3757:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3758:../Dave/Generated/UCPROBE/lib_str.c **** *
3759:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
3760:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
3761:../Dave/Generated/UCPROBE/lib_str.c **** *
3762:../Dave/Generated/UCPROBE/lib_str.c **** *
3763:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
3764:../Dave/Generated/UCPROBE/lib_str.c **** *
3765:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
3766:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3767:../Dave/Generated/UCPROBE/lib_str.c **** *
3768:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3769:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3770:../Dave/Generated/UCPROBE/lib_str.c **** *
3771:../Dave/Generated/UCPROBE/lib_str.c **** *
3772:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3773:../Dave/Generated/UCPROBE/lib_str.c **** *
3774:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3775:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3776:../Dave/Generated/UCPROBE/lib_str.c **** *
3777:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3778:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3779:../Dave/Generated/UCPROBE/lib_str.c **** *
3780:../Dave/Generated/UCPROBE/lib_str.c **** *
3781:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3782:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
3783:../Dave/Generated/UCPROBE/lib_str.c **** *
3784:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3785:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3786:../Dave/Generated/UCPROBE/lib_str.c **** *
3787:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3788:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3789:../Dave/Generated/UCPROBE/lib_str.c **** *
3790:../Dave/Generated/UCPROBE/lib_str.c **** *
3791:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3792:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
3793:../Dave/Generated/UCPROBE/lib_str.c **** *
3794:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
3795:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3796:../Dave/Generated/UCPROBE/lib_str.c **** *
3797:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3798:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
3799:../Dave/Generated/UCPROBE/lib_str.c **** *
3800:../Dave/Generated/UCPROBE/lib_str.c **** *
3801:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
3802:../Dave/Generated/UCPROBE/lib_str.c **** *
3803:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3804:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3805:../Dave/Generated/UCPROBE/lib_str.c **** *
3806:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
3807:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3808:../Dave/Generated/UCPROBE/lib_str.c **** *
3809:../Dave/Generated/UCPROBE/lib_str.c **** *
3810:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Parse string integer underflow :
3811:../Dave/Generated/UCPROBE/lib_str.c **** *
3812:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3813:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3814:../Dave/Generated/UCPROBE/lib_str.c **** *
3815:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3816:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3817:../Dave/Generated/UCPROBE/lib_str.c **** *
3818:../Dave/Generated/UCPROBE/lib_str.c **** *
3819:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) String parse terminates when :
3820:../Dave/Generated/UCPROBE/lib_str.c **** *
3821:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Base passed an invalid base (see Note #2a1B1b).
3822:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No conversion performed; 0 returned.
3823:../Dave/Generated/UCPROBE/lib_str.c **** *
3824:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) Parse string passed a NULL pointer OR empty integer sequence (see Note 
3825:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No conversion performed; 0 returned.
3826:../Dave/Generated/UCPROBE/lib_str.c **** *
3827:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Invalid parse string character found (see Note #2a1C).
3828:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Parsed integer returned.
3829:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) 'pstr_next' points to invalid character.
3830:../Dave/Generated/UCPROBE/lib_str.c **** *
3831:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Entire  parse string converted (see Note #2a2B).
3832:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Parsed integer returned.
3833:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) 'pstr_next' points to terminating NULL character.
3834:../Dave/Generated/UCPROBE/lib_str.c **** *
3835:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) Pointers to variables that return values MUST be initialized PRIOR to all other
3836:../Dave/Generated/UCPROBE/lib_str.c **** *                   validation or function handling in case of any error(s).
3837:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3838:../Dave/Generated/UCPROBE/lib_str.c **** */
3839:../Dave/Generated/UCPROBE/lib_str.c **** 
3840:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_INT32U  Str_ParseNbr_Int32 (const  CPU_CHAR      *pstr,
3841:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR     **pstr_next,
3842:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
3843:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
3844:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg)
3845:../Dave/Generated/UCPROBE/lib_str.c **** {
 2884              	 .loc 1 3845 0
 2885              	 .cfi_startproc
 2886 0000 90B5     	 push {r4,r7,lr}
 2887              	.LCFI69:
 2888              	 .cfi_def_cfa_offset 12
 2889              	 .cfi_offset 4,-12
 2890              	 .cfi_offset 7,-8
 2891              	 .cfi_offset 14,-4
 2892 0002 8FB0     	 sub sp,sp,#60
 2893              	.LCFI70:
 2894              	 .cfi_def_cfa_offset 72
 2895 0004 00AF     	 add r7,sp,#0
 2896              	.LCFI71:
 2897              	 .cfi_def_cfa_register 7
 2898 0006 F860     	 str r0,[r7,#12]
 2899 0008 B960     	 str r1,[r7,#8]
 2900 000a 191C     	 mov r1,r3
 2901 000c FB1D     	 add r3,r7,#7
 2902 000e 1A70     	 strb r2,[r3]
 2903 0010 BB1D     	 add r3,r7,#6
 2904 0012 0A1C     	 add r2,r1,#0
 2905 0014 1A70     	 strb r2,[r3]
3846:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_parse;
3847:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_parse_nbr;
3848:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     *pstr_parse_unused;
3849:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR      parse_char;
3850:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT08U    parse_dig;
3851:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT32U    nbr;
3852:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_neg_unused;
3853:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_dig;
3854:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_alpha;
3855:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_hex;
3856:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_hex_lower;
3857:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   whitespace;
3858:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   neg;
3859:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   ovf;
3860:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   done;
3861:../Dave/Generated/UCPROBE/lib_str.c **** 
3862:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* --------------- VALIDATE PARSE A
3863:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_next == (CPU_CHAR **) 0) {                         /* If NOT avail, ...               
 2906              	 .loc 1 3863 0
 2907 0016 BB68     	 ldr r3,[r7,#8]
 2908 0018 002B     	 cmp r3,#0
 2909 001a 02D1     	 bne .L184
3864:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_next  = (CPU_CHAR **)&pstr_parse_unused;           /* ... re-cfg NULL rtn ptr to unuse
 2910              	 .loc 1 3864 0
 2911 001c 1823     	 mov r3,#24
 2912 001e FB18     	 add r3,r7,r3
 2913 0020 BB60     	 str r3,[r7,#8]
 2914              	.L184:
3865:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&pstr_parse_unused;                                /* Prevent possible 'variable unuse
3866:../Dave/Generated/UCPROBE/lib_str.c ****     }
3867:../Dave/Generated/UCPROBE/lib_str.c ****    *pstr_next = (CPU_CHAR *)pstr;                               /* Init rtn str for err (see Note #
 2915              	 .loc 1 3867 0
 2916 0022 BB68     	 ldr r3,[r7,#8]
 2917 0024 FA68     	 ldr r2,[r7,#12]
 2918 0026 1A60     	 str r2,[r3]
3868:../Dave/Generated/UCPROBE/lib_str.c **** 
3869:../Dave/Generated/UCPROBE/lib_str.c ****     if (pnbr_neg == (CPU_BOOLEAN *) 0) {                        /* If NOT avail, ...               
 2919              	 .loc 1 3869 0
 2920 0028 BB6C     	 ldr r3,[r7,#72]
 2921 002a 002B     	 cmp r3,#0
 2922 002c 02D1     	 bne .L185
3870:../Dave/Generated/UCPROBE/lib_str.c ****         pnbr_neg  = (CPU_BOOLEAN *)&nbr_neg_unused;             /* ... re-cfg NULL rtn ptr to unuse
 2923              	 .loc 1 3870 0
 2924 002e 1723     	 mov r3,#23
 2925 0030 FB18     	 add r3,r7,r3
 2926 0032 BB64     	 str r3,[r7,#72]
 2927              	.L185:
3871:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&nbr_neg_unused;                                   /* Prevent possible 'variable unuse
3872:../Dave/Generated/UCPROBE/lib_str.c ****     }
3873:../Dave/Generated/UCPROBE/lib_str.c ****    *pnbr_neg = DEF_NO;                                          /* Init nbr neg for err (see Note #
 2928              	 .loc 1 3873 0
 2929 0034 BB6C     	 ldr r3,[r7,#72]
 2930 0036 0022     	 mov r2,#0
 2931 0038 1A70     	 strb r2,[r3]
3874:../Dave/Generated/UCPROBE/lib_str.c **** 
3875:../Dave/Generated/UCPROBE/lib_str.c **** 
3876:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn zero if str ptr NULL (see No
 2932              	 .loc 1 3876 0
 2933 003a FB68     	 ldr r3,[r7,#12]
 2934 003c 002B     	 cmp r3,#0
 2935 003e 01D1     	 bne .L186
3877:../Dave/Generated/UCPROBE/lib_str.c ****         return (0u);
 2936              	 .loc 1 3877 0
 2937 0040 0023     	 mov r3,#0
 2938 0042 68E1     	 b .L227
 2939              	.L186:
3878:../Dave/Generated/UCPROBE/lib_str.c ****     }
3879:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn zero if invalid base (see No
3880:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_base == 1u) ||
 2940              	 .loc 1 3880 0
 2941 0044 FB1D     	 add r3,r7,#7
 2942 0046 1B78     	 ldrb r3,[r3]
 2943 0048 012B     	 cmp r3,#1
 2944 004a 03D0     	 beq .L188
 2945              	 .loc 1 3880 0 is_stmt 0 discriminator 1
 2946 004c FB1D     	 add r3,r7,#7
 2947 004e 1B78     	 ldrb r3,[r3]
 2948 0050 242B     	 cmp r3,#36
 2949 0052 01D9     	 bls .L189
 2950              	.L188:
3881:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
3882:../Dave/Generated/UCPROBE/lib_str.c ****         return (0u);
 2951              	 .loc 1 3882 0 is_stmt 1
 2952 0054 0023     	 mov r3,#0
 2953 0056 5EE1     	 b .L227
 2954              	.L189:
3883:../Dave/Generated/UCPROBE/lib_str.c ****     }
3884:../Dave/Generated/UCPROBE/lib_str.c **** 
3885:../Dave/Generated/UCPROBE/lib_str.c **** 
3886:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------- IGNORE PRECEDING C
3887:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_parse = pstr;                                          /* Save ptr to init'l str for err (
 2955              	 .loc 1 3887 0
 2956 0058 FB68     	 ldr r3,[r7,#12]
 2957 005a 7B63     	 str r3,[r7,#52]
3888:../Dave/Generated/UCPROBE/lib_str.c **** 
3889:../Dave/Generated/UCPROBE/lib_str.c ****     whitespace = ASCII_IsSpace(*pstr_parse);
 2958              	 .loc 1 3889 0
 2959 005c 7B6B     	 ldr r3,[r7,#52]
 2960 005e 1B78     	 ldrb r3,[r3]
 2961 0060 2B22     	 mov r2,#43
 2962 0062 BC18     	 add r4,r7,r2
 2963 0064 181C     	 mov r0,r3
 2964 0066 FFF7FEFF 	 bl ASCII_IsSpace
 2965 006a 031C     	 mov r3,r0
 2966 006c 2370     	 strb r3,[r4]
3890:../Dave/Generated/UCPROBE/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 2967              	 .loc 1 3890 0
 2968 006e 0BE0     	 b .L190
 2969              	.L191:
3891:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_parse++;
 2970              	 .loc 1 3891 0
 2971 0070 7B6B     	 ldr r3,[r7,#52]
 2972 0072 0133     	 add r3,r3,#1
 2973 0074 7B63     	 str r3,[r7,#52]
3892:../Dave/Generated/UCPROBE/lib_str.c ****         whitespace = ASCII_IsSpace(*pstr_parse);
 2974              	 .loc 1 3892 0
 2975 0076 7B6B     	 ldr r3,[r7,#52]
 2976 0078 1B78     	 ldrb r3,[r3]
 2977 007a 2B22     	 mov r2,#43
 2978 007c BC18     	 add r4,r7,r2
 2979 007e 181C     	 mov r0,r3
 2980 0080 FFF7FEFF 	 bl ASCII_IsSpace
 2981 0084 031C     	 mov r3,r0
 2982 0086 2370     	 strb r3,[r4]
 2983              	.L190:
3890:../Dave/Generated/UCPROBE/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 2984              	 .loc 1 3890 0
 2985 0088 2B23     	 mov r3,#43
 2986 008a FB18     	 add r3,r7,r3
 2987 008c 1B78     	 ldrb r3,[r3]
 2988 008e 012B     	 cmp r3,#1
 2989 0090 EED0     	 beq .L191
3893:../Dave/Generated/UCPROBE/lib_str.c ****     }
3894:../Dave/Generated/UCPROBE/lib_str.c **** 
3895:../Dave/Generated/UCPROBE/lib_str.c ****     switch (*pstr_parse) {
 2990              	 .loc 1 3895 0
 2991 0092 7B6B     	 ldr r3,[r7,#52]
 2992 0094 1B78     	 ldrb r3,[r3]
 2993 0096 2B2B     	 cmp r3,#43
 2994 0098 02D0     	 beq .L193
 2995 009a 2D2B     	 cmp r3,#45
 2996 009c 08D0     	 beq .L194
 2997 009e 13E0     	 b .L228
 2998              	.L193:
3896:../Dave/Generated/UCPROBE/lib_str.c ****         case '+':                                               /* Ignore   pos sign (see Note #2a1
3897:../Dave/Generated/UCPROBE/lib_str.c ****              pstr_parse++;
 2999              	 .loc 1 3897 0
 3000 00a0 7B6B     	 ldr r3,[r7,#52]
 3001 00a2 0133     	 add r3,r3,#1
 3002 00a4 7B63     	 str r3,[r7,#52]
3898:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_NO;
 3003              	 .loc 1 3898 0
 3004 00a6 2A23     	 mov r3,#42
 3005 00a8 FB18     	 add r3,r7,r3
 3006 00aa 0022     	 mov r2,#0
 3007 00ac 1A70     	 strb r2,[r3]
3899:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 3008              	 .loc 1 3899 0
 3009 00ae 10E0     	 b .L195
 3010              	.L194:
3900:../Dave/Generated/UCPROBE/lib_str.c **** 
3901:../Dave/Generated/UCPROBE/lib_str.c **** 
3902:../Dave/Generated/UCPROBE/lib_str.c ****         case '-':                                               /* Validate neg sign (see Note #2a1
3903:../Dave/Generated/UCPROBE/lib_str.c ****              if (nbr_signed == DEF_YES) {
 3011              	 .loc 1 3903 0
 3012 00b0 BB1D     	 add r3,r7,#6
 3013 00b2 1B78     	 ldrb r3,[r3]
 3014 00b4 012B     	 cmp r3,#1
 3015 00b6 02D1     	 bne .L196
3904:../Dave/Generated/UCPROBE/lib_str.c ****                  pstr_parse++;
 3016              	 .loc 1 3904 0
 3017 00b8 7B6B     	 ldr r3,[r7,#52]
 3018 00ba 0133     	 add r3,r3,#1
 3019 00bc 7B63     	 str r3,[r7,#52]
 3020              	.L196:
3905:../Dave/Generated/UCPROBE/lib_str.c ****              }
3906:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_YES;
 3021              	 .loc 1 3906 0
 3022 00be 2A23     	 mov r3,#42
 3023 00c0 FB18     	 add r3,r7,r3
 3024 00c2 0122     	 mov r2,#1
 3025 00c4 1A70     	 strb r2,[r3]
3907:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 3026              	 .loc 1 3907 0
 3027 00c6 04E0     	 b .L195
 3028              	.L228:
3908:../Dave/Generated/UCPROBE/lib_str.c **** 
3909:../Dave/Generated/UCPROBE/lib_str.c **** 
3910:../Dave/Generated/UCPROBE/lib_str.c ****         default:
3911:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_NO;
 3029              	 .loc 1 3911 0
 3030 00c8 2A23     	 mov r3,#42
 3031 00ca FB18     	 add r3,r7,r3
 3032 00cc 0022     	 mov r2,#0
 3033 00ce 1A70     	 strb r2,[r3]
3912:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 3034              	 .loc 1 3912 0
 3035 00d0 C046     	 mov r8,r8
 3036              	.L195:
3913:../Dave/Generated/UCPROBE/lib_str.c ****     }
3914:../Dave/Generated/UCPROBE/lib_str.c **** 
3915:../Dave/Generated/UCPROBE/lib_str.c **** 
3916:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* --------- IGNORE NBR BASE PRECED
3917:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_parse_nbr = pstr_parse;                                /* Save ptr to str's nbr (see Note 
 3037              	 .loc 1 3917 0
 3038 00d2 7B6B     	 ldr r3,[r7,#52]
 3039 00d4 7B62     	 str r3,[r7,#36]
3918:../Dave/Generated/UCPROBE/lib_str.c **** 
3919:../Dave/Generated/UCPROBE/lib_str.c ****     switch (nbr_base) {
 3040              	 .loc 1 3919 0
 3041 00d6 FB1D     	 add r3,r7,#7
 3042 00d8 1B78     	 ldrb r3,[r3]
 3043 00da 082B     	 cmp r3,#8
 3044 00dc 36D0     	 beq .L198
 3045 00de 102B     	 cmp r3,#16
 3046 00e0 3DD0     	 beq .L199
 3047 00e2 002B     	 cmp r3,#0
 3048 00e4 00D0     	 beq .L200
3920:../Dave/Generated/UCPROBE/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
3921:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3922:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3923:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
3924:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
3925:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'X':
3926:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_base   = 16u;                    /* ... set nbr base = 16    (see No
3927:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3928:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
3929:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
3930:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
3931:../Dave/Generated/UCPROBE/lib_str.c ****                            }
3932:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3933:../Dave/Generated/UCPROBE/lib_str.c **** 
3934:../Dave/Generated/UCPROBE/lib_str.c **** 
3935:../Dave/Generated/UCPROBE/lib_str.c ****                       default:                                  /* For '0'  prefix, ...            
3936:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_base =  8u;                      /* ... set nbr base =  8    (see No
3937:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3938:../Dave/Generated/UCPROBE/lib_str.c ****                   }
3939:../Dave/Generated/UCPROBE/lib_str.c **** 
3940:../Dave/Generated/UCPROBE/lib_str.c ****              } else {                                           /* For non-'0' prefix, ...         
3941:../Dave/Generated/UCPROBE/lib_str.c ****                  nbr_base = 10u;                                /* ... set nbr base = 10    (see No
3942:../Dave/Generated/UCPROBE/lib_str.c ****              }
3943:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3944:../Dave/Generated/UCPROBE/lib_str.c **** 
3945:../Dave/Generated/UCPROBE/lib_str.c **** 
3946:../Dave/Generated/UCPROBE/lib_str.c ****         case  8u:                                               /* See Note #2a1B1a2.              
3947:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3948:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3949:../Dave/Generated/UCPROBE/lib_str.c ****              }
3950:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3951:../Dave/Generated/UCPROBE/lib_str.c **** 
3952:../Dave/Generated/UCPROBE/lib_str.c **** 
3953:../Dave/Generated/UCPROBE/lib_str.c ****         case 16u:                                               /* See Note #2a1B1a3.              
3954:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3955:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3956:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
3957:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':
3958:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'X':
3959:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3960:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
3961:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
3962:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
3963:../Dave/Generated/UCPROBE/lib_str.c ****                            }
3964:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3965:../Dave/Generated/UCPROBE/lib_str.c **** 
3966:../Dave/Generated/UCPROBE/lib_str.c **** 
3967:../Dave/Generated/UCPROBE/lib_str.c ****                       default:
3968:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3969:../Dave/Generated/UCPROBE/lib_str.c ****                   }
3970:../Dave/Generated/UCPROBE/lib_str.c ****              }
3971:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3972:../Dave/Generated/UCPROBE/lib_str.c **** 
3973:../Dave/Generated/UCPROBE/lib_str.c **** 
3974:../Dave/Generated/UCPROBE/lib_str.c ****         default:                                                /* See Note #2a1B1b.               
3975:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 3049              	 .loc 1 3975 0
 3050 00e6 62E0     	 b .L207
 3051              	.L200:
3921:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 3052              	 .loc 1 3921 0
 3053 00e8 7B6B     	 ldr r3,[r7,#52]
 3054 00ea 1B78     	 ldrb r3,[r3]
 3055 00ec 302B     	 cmp r3,#48
 3056 00ee 29D1     	 bne .L201
3922:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
 3057              	 .loc 1 3922 0
 3058 00f0 7B6B     	 ldr r3,[r7,#52]
 3059 00f2 0133     	 add r3,r3,#1
 3060 00f4 7B63     	 str r3,[r7,#52]
3923:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
 3061              	 .loc 1 3923 0
 3062 00f6 7B6B     	 ldr r3,[r7,#52]
 3063 00f8 1B78     	 ldrb r3,[r3]
 3064 00fa 582B     	 cmp r3,#88
 3065 00fc 01D0     	 beq .L203
 3066 00fe 782B     	 cmp r3,#120
 3067 0100 1BD1     	 bne .L229
 3068              	.L203:
3926:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
 3069              	 .loc 1 3926 0
 3070 0102 FB1D     	 add r3,r7,#7
 3071 0104 1022     	 mov r2,#16
 3072 0106 1A70     	 strb r2,[r3]
3927:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 3073              	 .loc 1 3927 0
 3074 0108 2323     	 mov r3,#35
 3075 010a FB18     	 add r3,r7,r3
 3076 010c 7A6B     	 ldr r2,[r7,#52]
 3077 010e 5278     	 ldrb r2,[r2,#1]
 3078 0110 1A70     	 strb r2,[r3]
3928:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 3079              	 .loc 1 3928 0
 3080 0112 2223     	 mov r3,#34
 3081 0114 FC18     	 add r4,r7,r3
 3082 0116 2323     	 mov r3,#35
 3083 0118 FB18     	 add r3,r7,r3
 3084 011a 1B78     	 ldrb r3,[r3]
 3085 011c 181C     	 mov r0,r3
 3086 011e FFF7FEFF 	 bl ASCII_IsDigHex
 3087 0122 031C     	 mov r3,r0
 3088 0124 2370     	 strb r3,[r4]
3929:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 3089              	 .loc 1 3929 0
 3090 0126 2223     	 mov r3,#34
 3091 0128 FB18     	 add r3,r7,r3
 3092 012a 1B78     	 ldrb r3,[r3]
 3093 012c 012B     	 cmp r3,#1
 3094 012e 03D1     	 bne .L204
3930:../Dave/Generated/UCPROBE/lib_str.c ****                            }
 3095              	 .loc 1 3930 0
 3096 0130 7B6B     	 ldr r3,[r7,#52]
 3097 0132 0133     	 add r3,r3,#1
 3098 0134 7B63     	 str r3,[r7,#52]
3932:../Dave/Generated/UCPROBE/lib_str.c **** 
 3099              	 .loc 1 3932 0
 3100 0136 04E0     	 b .L205
 3101              	.L204:
 3102 0138 03E0     	 b .L205
 3103              	.L229:
3936:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
 3104              	 .loc 1 3936 0
 3105 013a FB1D     	 add r3,r7,#7
 3106 013c 0822     	 mov r2,#8
 3107 013e 1A70     	 strb r2,[r3]
3937:../Dave/Generated/UCPROBE/lib_str.c ****                   }
 3108              	 .loc 1 3937 0
 3109 0140 C046     	 mov r8,r8
 3110              	.L205:
3943:../Dave/Generated/UCPROBE/lib_str.c **** 
 3111              	 .loc 1 3943 0 discriminator 1
 3112 0142 34E0     	 b .L207
 3113              	.L201:
3941:../Dave/Generated/UCPROBE/lib_str.c ****              }
 3114              	 .loc 1 3941 0
 3115 0144 FB1D     	 add r3,r7,#7
 3116 0146 0A22     	 mov r2,#10
 3117 0148 1A70     	 strb r2,[r3]
3943:../Dave/Generated/UCPROBE/lib_str.c **** 
 3118              	 .loc 1 3943 0
 3119 014a 30E0     	 b .L207
 3120              	.L198:
3947:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 3121              	 .loc 1 3947 0
 3122 014c 7B6B     	 ldr r3,[r7,#52]
 3123 014e 1B78     	 ldrb r3,[r3]
 3124 0150 302B     	 cmp r3,#48
 3125 0152 03D1     	 bne .L208
3948:../Dave/Generated/UCPROBE/lib_str.c ****              }
 3126              	 .loc 1 3948 0
 3127 0154 7B6B     	 ldr r3,[r7,#52]
 3128 0156 0133     	 add r3,r3,#1
 3129 0158 7B63     	 str r3,[r7,#52]
3950:../Dave/Generated/UCPROBE/lib_str.c **** 
 3130              	 .loc 1 3950 0
 3131 015a 28E0     	 b .L207
 3132              	.L208:
 3133 015c 27E0     	 b .L207
 3134              	.L199:
3954:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 3135              	 .loc 1 3954 0
 3136 015e 7B6B     	 ldr r3,[r7,#52]
 3137 0160 1B78     	 ldrb r3,[r3]
 3138 0162 302B     	 cmp r3,#48
 3139 0164 22D1     	 bne .L209
3955:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
 3140              	 .loc 1 3955 0
 3141 0166 7B6B     	 ldr r3,[r7,#52]
 3142 0168 0133     	 add r3,r3,#1
 3143 016a 7B63     	 str r3,[r7,#52]
3956:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':
 3144              	 .loc 1 3956 0
 3145 016c 7B6B     	 ldr r3,[r7,#52]
 3146 016e 1B78     	 ldrb r3,[r3]
 3147 0170 582B     	 cmp r3,#88
 3148 0172 02D0     	 beq .L211
 3149 0174 782B     	 cmp r3,#120
 3150 0176 00D0     	 beq .L211
3968:../Dave/Generated/UCPROBE/lib_str.c ****                   }
 3151              	 .loc 1 3968 0
 3152 0178 18E0     	 b .L209
 3153              	.L211:
3959:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 3154              	 .loc 1 3959 0
 3155 017a 2323     	 mov r3,#35
 3156 017c FB18     	 add r3,r7,r3
 3157 017e 7A6B     	 ldr r2,[r7,#52]
 3158 0180 5278     	 ldrb r2,[r2,#1]
 3159 0182 1A70     	 strb r2,[r3]
3960:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 3160              	 .loc 1 3960 0
 3161 0184 2223     	 mov r3,#34
 3162 0186 FC18     	 add r4,r7,r3
 3163 0188 2323     	 mov r3,#35
 3164 018a FB18     	 add r3,r7,r3
 3165 018c 1B78     	 ldrb r3,[r3]
 3166 018e 181C     	 mov r0,r3
 3167 0190 FFF7FEFF 	 bl ASCII_IsDigHex
 3168 0194 031C     	 mov r3,r0
 3169 0196 2370     	 strb r3,[r4]
3961:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 3170              	 .loc 1 3961 0
 3171 0198 2223     	 mov r3,#34
 3172 019a FB18     	 add r3,r7,r3
 3173 019c 1B78     	 ldrb r3,[r3]
 3174 019e 012B     	 cmp r3,#1
 3175 01a0 03D1     	 bne .L212
3962:../Dave/Generated/UCPROBE/lib_str.c ****                            }
 3176              	 .loc 1 3962 0
 3177 01a2 7B6B     	 ldr r3,[r7,#52]
 3178 01a4 0133     	 add r3,r3,#1
 3179 01a6 7B63     	 str r3,[r7,#52]
3964:../Dave/Generated/UCPROBE/lib_str.c **** 
 3180              	 .loc 1 3964 0
 3181 01a8 FFE7     	 b .L230
 3182              	.L212:
 3183              	.L230:
 3184 01aa C046     	 mov r8,r8
 3185              	.L209:
3971:../Dave/Generated/UCPROBE/lib_str.c **** 
 3186              	 .loc 1 3971 0 discriminator 3
 3187 01ac C046     	 mov r8,r8
 3188              	.L207:
3976:../Dave/Generated/UCPROBE/lib_str.c ****     }
3977:../Dave/Generated/UCPROBE/lib_str.c **** 
3978:../Dave/Generated/UCPROBE/lib_str.c **** 
3979:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------ PARSE INT STR
3980:../Dave/Generated/UCPROBE/lib_str.c ****     nbr  = 0u;
 3189              	 .loc 1 3980 0
 3190 01ae 0023     	 mov r3,#0
 3191 01b0 FB62     	 str r3,[r7,#44]
3981:../Dave/Generated/UCPROBE/lib_str.c ****     ovf  = DEF_NO;
 3192              	 .loc 1 3981 0
 3193 01b2 2923     	 mov r3,#41
 3194 01b4 FB18     	 add r3,r7,r3
 3195 01b6 0022     	 mov r2,#0
 3196 01b8 1A70     	 strb r2,[r3]
3982:../Dave/Generated/UCPROBE/lib_str.c ****     done = DEF_NO;
 3197              	 .loc 1 3982 0
 3198 01ba 2823     	 mov r3,#40
 3199 01bc FB18     	 add r3,r7,r3
 3200 01be 0022     	 mov r2,#0
 3201 01c0 1A70     	 strb r2,[r3]
3983:../Dave/Generated/UCPROBE/lib_str.c **** 
3984:../Dave/Generated/UCPROBE/lib_str.c ****     while (done == DEF_NO) {                                    /* Parse str for desired nbr base d
 3202              	 .loc 1 3984 0
 3203 01c2 89E0     	 b .L213
 3204              	.L223:
3985:../Dave/Generated/UCPROBE/lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
 3205              	 .loc 1 3985 0
 3206 01c4 2323     	 mov r3,#35
 3207 01c6 FB18     	 add r3,r7,r3
 3208 01c8 7A6B     	 ldr r2,[r7,#52]
 3209 01ca 1278     	 ldrb r2,[r2]
 3210 01cc 1A70     	 strb r2,[r3]
3986:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_alpha  =  ASCII_IsAlphaNum(parse_char);
 3211              	 .loc 1 3986 0
 3212 01ce 2123     	 mov r3,#33
 3213 01d0 FC18     	 add r4,r7,r3
 3214 01d2 2323     	 mov r3,#35
 3215 01d4 FB18     	 add r3,r7,r3
 3216 01d6 1B78     	 ldrb r3,[r3]
 3217 01d8 181C     	 mov r0,r3
 3218 01da FFF7FEFF 	 bl ASCII_IsAlphaNum
 3219 01de 031C     	 mov r3,r0
 3220 01e0 2370     	 strb r3,[r4]
3987:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_alpha == DEF_YES) {                             /* If valid alpha num nbr dig avail
 3221              	 .loc 1 3987 0
 3222 01e2 2123     	 mov r3,#33
 3223 01e4 FB18     	 add r3,r7,r3
 3224 01e6 1B78     	 ldrb r3,[r3]
 3225 01e8 012B     	 cmp r3,#1
 3226 01ea 6BD1     	 bne .L214
3988:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... convert parse char into nbr 
3989:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig = ASCII_IsDig(parse_char);
 3227              	 .loc 1 3989 0
 3228 01ec 2023     	 mov r3,#32
 3229 01ee FC18     	 add r4,r7,r3
 3230 01f0 2323     	 mov r3,#35
 3231 01f2 FB18     	 add r3,r7,r3
 3232 01f4 1B78     	 ldrb r3,[r3]
 3233 01f6 181C     	 mov r0,r3
 3234 01f8 FFF7FEFF 	 bl ASCII_IsDig
 3235 01fc 031C     	 mov r3,r0
 3236 01fe 2370     	 strb r3,[r4]
3990:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_dig == DEF_YES) {
 3237              	 .loc 1 3990 0
 3238 0200 2023     	 mov r3,#32
 3239 0202 FB18     	 add r3,r7,r3
 3240 0204 1B78     	 ldrb r3,[r3]
 3241 0206 012B     	 cmp r3,#1
 3242 0208 07D1     	 bne .L215
3991:../Dave/Generated/UCPROBE/lib_str.c ****                 parse_dig = (CPU_INT08U)(parse_char - '0');
 3243              	 .loc 1 3991 0
 3244 020a 3323     	 mov r3,#51
 3245 020c FB18     	 add r3,r7,r3
 3246 020e 2322     	 mov r2,#35
 3247 0210 BA18     	 add r2,r7,r2
 3248 0212 1278     	 ldrb r2,[r2]
 3249 0214 303A     	 sub r2,r2,#48
 3250 0216 1A70     	 strb r2,[r3]
 3251 0218 1DE0     	 b .L216
 3252              	.L215:
3992:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3993:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_hex_lower = ASCII_IsLower(parse_char);
 3253              	 .loc 1 3993 0
 3254 021a 1F23     	 mov r3,#31
 3255 021c FC18     	 add r4,r7,r3
 3256 021e 2323     	 mov r3,#35
 3257 0220 FB18     	 add r3,r7,r3
 3258 0222 1B78     	 ldrb r3,[r3]
 3259 0224 181C     	 mov r0,r3
 3260 0226 FFF7FEFF 	 bl ASCII_IsLower
 3261 022a 031C     	 mov r3,r0
 3262 022c 2370     	 strb r3,[r4]
3994:../Dave/Generated/UCPROBE/lib_str.c ****                 if (nbr_hex_lower == DEF_YES) {
 3263              	 .loc 1 3994 0
 3264 022e 1F23     	 mov r3,#31
 3265 0230 FB18     	 add r3,r7,r3
 3266 0232 1B78     	 ldrb r3,[r3]
 3267 0234 012B     	 cmp r3,#1
 3268 0236 07D1     	 bne .L217
3995:../Dave/Generated/UCPROBE/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'a') + 10u);
 3269              	 .loc 1 3995 0
 3270 0238 3323     	 mov r3,#51
 3271 023a FB18     	 add r3,r7,r3
 3272 023c 2322     	 mov r2,#35
 3273 023e BA18     	 add r2,r7,r2
 3274 0240 1278     	 ldrb r2,[r2]
 3275 0242 573A     	 sub r2,r2,#87
 3276 0244 1A70     	 strb r2,[r3]
 3277 0246 06E0     	 b .L216
 3278              	.L217:
3996:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
3997:../Dave/Generated/UCPROBE/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'A') + 10u);
 3279              	 .loc 1 3997 0
 3280 0248 3323     	 mov r3,#51
 3281 024a FB18     	 add r3,r7,r3
 3282 024c 2322     	 mov r2,#35
 3283 024e BA18     	 add r2,r7,r2
 3284 0250 1278     	 ldrb r2,[r2]
 3285 0252 373A     	 sub r2,r2,#55
 3286 0254 1A70     	 strb r2,[r3]
 3287              	.L216:
3998:../Dave/Generated/UCPROBE/lib_str.c ****                 }
3999:../Dave/Generated/UCPROBE/lib_str.c ****             }
4000:../Dave/Generated/UCPROBE/lib_str.c **** 
4001:../Dave/Generated/UCPROBE/lib_str.c ****             if (parse_dig < nbr_base) {                         /* If parse char valid for nbr base
 3288              	 .loc 1 4001 0
 3289 0256 3323     	 mov r3,#51
 3290 0258 FA18     	 add r2,r7,r3
 3291 025a FB1D     	 add r3,r7,#7
 3292 025c 1278     	 ldrb r2,[r2]
 3293 025e 1B78     	 ldrb r3,[r3]
 3294 0260 9A42     	 cmp r2,r3
 3295 0262 2AD2     	 bcs .L218
4002:../Dave/Generated/UCPROBE/lib_str.c ****                 if (ovf == DEF_NO) {                            /* ... & nbr NOT yet ovf'd,        
 3296              	 .loc 1 4002 0
 3297 0264 2923     	 mov r3,#41
 3298 0266 FB18     	 add r3,r7,r3
 3299 0268 1B78     	 ldrb r3,[r3]
 3300 026a 002B     	 cmp r3,#0
 3301 026c 21D1     	 bne .L219
4003:../Dave/Generated/UCPROBE/lib_str.c ****                     if (nbr <= Str_MultOvfThTbl_Int32U[nbr_base]) {
 3302              	 .loc 1 4003 0
 3303 026e FB1D     	 add r3,r7,#7
 3304 0270 1A78     	 ldrb r2,[r3]
 3305 0272 2B4B     	 ldr r3,.L231
 3306 0274 9200     	 lsl r2,r2,#2
 3307 0276 D258     	 ldr r2,[r2,r3]
 3308 0278 FB6A     	 ldr r3,[r7,#44]
 3309 027a 9A42     	 cmp r2,r3
 3310 027c 15D3     	 bcc .L220
4004:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... merge parse char dig into nb
4005:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr *= nbr_base;
 3311              	 .loc 1 4005 0
 3312 027e FB1D     	 add r3,r7,#7
 3313 0280 1A78     	 ldrb r2,[r3]
 3314 0282 FB6A     	 ldr r3,[r7,#44]
 3315 0284 5343     	 mul r3,r2
 3316 0286 FB62     	 str r3,[r7,#44]
4006:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr += parse_dig;
 3317              	 .loc 1 4006 0
 3318 0288 3323     	 mov r3,#51
 3319 028a FB18     	 add r3,r7,r3
 3320 028c 1B78     	 ldrb r3,[r3]
 3321 028e FA6A     	 ldr r2,[r7,#44]
 3322 0290 D318     	 add r3,r2,r3
 3323 0292 FB62     	 str r3,[r7,#44]
4007:../Dave/Generated/UCPROBE/lib_str.c ****                         if (nbr < parse_dig) {
 3324              	 .loc 1 4007 0
 3325 0294 3323     	 mov r3,#51
 3326 0296 FB18     	 add r3,r7,r3
 3327 0298 1A78     	 ldrb r2,[r3]
 3328 029a FB6A     	 ldr r3,[r7,#44]
 3329 029c 9A42     	 cmp r2,r3
 3330 029e 08D9     	 bls .L219
4008:../Dave/Generated/UCPROBE/lib_str.c ****                             ovf = DEF_YES;
 3331              	 .loc 1 4008 0
 3332 02a0 2923     	 mov r3,#41
 3333 02a2 FB18     	 add r3,r7,r3
 3334 02a4 0122     	 mov r2,#1
 3335 02a6 1A70     	 strb r2,[r3]
 3336 02a8 03E0     	 b .L219
 3337              	.L220:
4009:../Dave/Generated/UCPROBE/lib_str.c ****                         }
4010:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
4011:../Dave/Generated/UCPROBE/lib_str.c ****                         ovf = DEF_YES;
 3338              	 .loc 1 4011 0
 3339 02aa 2923     	 mov r3,#41
 3340 02ac FB18     	 add r3,r7,r3
 3341 02ae 0122     	 mov r2,#1
 3342 02b0 1A70     	 strb r2,[r3]
 3343              	.L219:
4012:../Dave/Generated/UCPROBE/lib_str.c ****                     }
4013:../Dave/Generated/UCPROBE/lib_str.c ****                 }
4014:../Dave/Generated/UCPROBE/lib_str.c ****                 pstr_parse++;
 3344              	 .loc 1 4014 0
 3345 02b2 7B6B     	 ldr r3,[r7,#52]
 3346 02b4 0133     	 add r3,r3,#1
 3347 02b6 7B63     	 str r3,[r7,#52]
 3348 02b8 0EE0     	 b .L213
 3349              	.L218:
4015:../Dave/Generated/UCPROBE/lib_str.c **** 
4016:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* Invalid         char parsed (see
4017:../Dave/Generated/UCPROBE/lib_str.c ****                 done = DEF_YES;
 3350              	 .loc 1 4017 0
 3351 02ba 2823     	 mov r3,#40
 3352 02bc FB18     	 add r3,r7,r3
 3353 02be 0122     	 mov r2,#1
 3354 02c0 1A70     	 strb r2,[r3]
 3355 02c2 09E0     	 b .L213
 3356              	.L214:
4018:../Dave/Generated/UCPROBE/lib_str.c ****             }
4019:../Dave/Generated/UCPROBE/lib_str.c **** 
4020:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Invalid OR NULL char parsed (see
4021:../Dave/Generated/UCPROBE/lib_str.c ****             done = DEF_YES;
 3357              	 .loc 1 4021 0
 3358 02c4 2823     	 mov r3,#40
 3359 02c6 FB18     	 add r3,r7,r3
 3360 02c8 0122     	 mov r2,#1
 3361 02ca 1A70     	 strb r2,[r3]
 3362 02cc 2923     	 mov r3,#41
 3363 02ce FB18     	 add r3,r7,r3
 3364 02d0 2922     	 mov r2,#41
 3365 02d2 BA18     	 add r2,r7,r2
 3366 02d4 1278     	 ldrb r2,[r2]
 3367 02d6 1A70     	 strb r2,[r3]
 3368              	.L213:
3984:../Dave/Generated/UCPROBE/lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
 3369              	 .loc 1 3984 0
 3370 02d8 2823     	 mov r3,#40
 3371 02da FB18     	 add r3,r7,r3
 3372 02dc 1B78     	 ldrb r3,[r3]
 3373 02de 002B     	 cmp r3,#0
 3374 02e0 00D1     	 bne .LCB3014
 3375 02e2 6FE7     	 b .L223
 3376              	.LCB3014:
4022:../Dave/Generated/UCPROBE/lib_str.c ****         }
4023:../Dave/Generated/UCPROBE/lib_str.c ****     }
4024:../Dave/Generated/UCPROBE/lib_str.c **** 
4025:../Dave/Generated/UCPROBE/lib_str.c ****     if (ovf == DEF_YES) {                                       /* If nbr ovf'd, ...               
 3377              	 .loc 1 4025 0
 3378 02e4 2923     	 mov r3,#41
 3379 02e6 FB18     	 add r3,r7,r3
 3380 02e8 1B78     	 ldrb r3,[r3]
 3381 02ea 012B     	 cmp r3,#1
 3382 02ec 02D1     	 bne .L224
4026:../Dave/Generated/UCPROBE/lib_str.c ****         nbr  = DEF_INT_32U_MAX_VAL;                             /* ... rtn max int val (see Note #2
 3383              	 .loc 1 4026 0
 3384 02ee 0123     	 mov r3,#1
 3385 02f0 5B42     	 neg r3,r3
 3386 02f2 FB62     	 str r3,[r7,#44]
 3387              	.L224:
4027:../Dave/Generated/UCPROBE/lib_str.c ****     }
4028:../Dave/Generated/UCPROBE/lib_str.c **** 
4029:../Dave/Generated/UCPROBE/lib_str.c **** 
4030:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_parse !=             pstr_parse_nbr) {             /* If final parse str != init'l par
 3388              	 .loc 1 4030 0
 3389 02f4 7A6B     	 ldr r2,[r7,#52]
 3390 02f6 7B6A     	 ldr r3,[r7,#36]
 3391 02f8 9A42     	 cmp r2,r3
 3392 02fa 03D0     	 beq .L225
4031:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr_parse;                   /* .. rtn   parse str's next char (
 3393              	 .loc 1 4031 0
 3394 02fc BB68     	 ldr r3,[r7,#8]
 3395 02fe 7A6B     	 ldr r2,[r7,#52]
 3396 0300 1A60     	 str r2,[r3]
 3397 0302 02E0     	 b .L226
 3398              	.L225:
4032:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
4033:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr;                         /* .. else rtn initial parse str  (
 3399              	 .loc 1 4033 0
 3400 0304 BB68     	 ldr r3,[r7,#8]
 3401 0306 FA68     	 ldr r2,[r7,#12]
 3402 0308 1A60     	 str r2,[r3]
 3403              	.L226:
4034:../Dave/Generated/UCPROBE/lib_str.c ****     }
4035:../Dave/Generated/UCPROBE/lib_str.c **** 
4036:../Dave/Generated/UCPROBE/lib_str.c ****    *pnbr_neg = neg;                                             /* Rtn neg nbr status.             
 3404              	 .loc 1 4036 0
 3405 030a BB6C     	 ldr r3,[r7,#72]
 3406 030c 2A22     	 mov r2,#42
 3407 030e BA18     	 add r2,r7,r2
 3408 0310 1278     	 ldrb r2,[r2]
 3409 0312 1A70     	 strb r2,[r3]
4037:../Dave/Generated/UCPROBE/lib_str.c **** 
4038:../Dave/Generated/UCPROBE/lib_str.c **** 
4039:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
 3410              	 .loc 1 4039 0
 3411 0314 FB6A     	 ldr r3,[r7,#44]
 3412              	.L227:
4040:../Dave/Generated/UCPROBE/lib_str.c **** }
 3413              	 .loc 1 4040 0 discriminator 5
 3414 0316 181C     	 mov r0,r3
 3415 0318 BD46     	 mov sp,r7
 3416 031a 0FB0     	 add sp,sp,#60
 3417              	 
 3418 031c 90BD     	 pop {r4,r7,pc}
 3419              	.L232:
 3420 031e C046     	 .align 2
 3421              	.L231:
 3422 0320 00000000 	 .word Str_MultOvfThTbl_Int32U
 3423              	 .cfi_endproc
 3424              	.LFE23:
 3426              	 .text
 3427              	.Letext0:
 3428              	 .file 2 "../Dave/Generated/UCPROBE/cpu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lib_str.c
    {standard input}:18     .rodata.Str_MultOvfThTbl_Int32U:00000000 $d
    {standard input}:21     .rodata.Str_MultOvfThTbl_Int32U:00000000 Str_MultOvfThTbl_Int32U
    {standard input}:60     .text.Str_Len:00000000 $t
    {standard input}:65     .text.Str_Len:00000000 Str_Len
    {standard input}:108    .text.Str_Len_N:00000000 Str_Len_N
    {standard input}:103    .text.Str_Len_N:00000000 $t
    {standard input}:171    .text.Str_Copy:00000000 $t
    {standard input}:176    .text.Str_Copy:00000000 Str_Copy
    {standard input}:221    .text.Str_Copy_N:00000000 Str_Copy_N
    {standard input}:216    .text.Str_Copy_N:00000000 $t
    {standard input}:341    .text.Str_Cat:00000000 $t
    {standard input}:346    .text.Str_Cat:00000000 Str_Cat
    {standard input}:391    .text.Str_Cat_N:00000000 Str_Cat_N
    {standard input}:386    .text.Str_Cat_N:00000000 $t
    {standard input}:540    .text.Str_Cmp:00000000 $t
    {standard input}:545    .text.Str_Cmp:00000000 Str_Cmp
    {standard input}:596    .text.Str_Cmp_N:00000000 Str_Cmp_N
    {standard input}:591    .text.Str_Cmp_N:00000000 $t
    {standard input}:830    .text.Str_CmpIgnoreCase:00000000 $t
    {standard input}:835    .text.Str_CmpIgnoreCase:00000000 Str_CmpIgnoreCase
    {standard input}:886    .text.Str_CmpIgnoreCase_N:00000000 Str_CmpIgnoreCase_N
    {standard input}:881    .text.Str_CmpIgnoreCase_N:00000000 $t
    {standard input}:1204   .text.Str_Char:00000000 $t
    {standard input}:1209   .text.Str_Char:00000000 Str_Char
    {standard input}:1257   .text.Str_Char_N:00000000 Str_Char_N
    {standard input}:1252   .text.Str_Char_N:00000000 $t
    {standard input}:1375   .text.Str_Char_Last:00000000 $t
    {standard input}:1380   .text.Str_Char_Last:00000000 Str_Char_Last
    {standard input}:1428   .text.Str_Char_Last_N:00000000 Str_Char_Last_N
    {standard input}:1423   .text.Str_Char_Last_N:00000000 $t
    {standard input}:1537   .text.Str_Char_Replace:00000000 $t
    {standard input}:1542   .text.Str_Char_Replace:00000000 Str_Char_Replace
    {standard input}:1594   .text.Str_Char_Replace_N:00000000 Str_Char_Replace_N
    {standard input}:1589   .text.Str_Char_Replace_N:00000000 $t
    {standard input}:1698   .text.Str_Str:00000000 $t
    {standard input}:1703   .text.Str_Str:00000000 Str_Str
    {standard input}:1748   .text.Str_Str_N:00000000 Str_Str_N
    {standard input}:1743   .text.Str_Str_N:00000000 $t
    {standard input}:1954   .text.Str_FmtNbr_Int32U:00000000 $t
    {standard input}:1959   .text.Str_FmtNbr_Int32U:00000000 Str_FmtNbr_Int32U
    {standard input}:2263   .text.Str_FmtNbr_Int32:00000000 Str_FmtNbr_Int32
    {standard input}:2023   .text.Str_FmtNbr_Int32S:00000000 $t
    {standard input}:2028   .text.Str_FmtNbr_Int32S:00000000 Str_FmtNbr_Int32S
    {standard input}:2119   .text.Str_ParseNbr_Int32U:00000000 $t
    {standard input}:2124   .text.Str_ParseNbr_Int32U:00000000 Str_ParseNbr_Int32U
    {standard input}:2882   .text.Str_ParseNbr_Int32:00000000 Str_ParseNbr_Int32
    {standard input}:2166   .text.Str_ParseNbr_Int32S:00000000 $t
    {standard input}:2171   .text.Str_ParseNbr_Int32S:00000000 Str_ParseNbr_Int32S
    {standard input}:2252   .text.Str_ParseNbr_Int32S:0000005c $d
    {standard input}:2259   .text.Str_FmtNbr_Int32:00000000 $t
    {standard input}:2878   .text.Str_ParseNbr_Int32:00000000 $t
    {standard input}:3422   .text.Str_ParseNbr_Int32:00000320 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ASCII_ToLower
__aeabi_uidiv
__aeabi_uidivmod
ASCII_IsPrint
ASCII_IsSpace
ASCII_IsDigHex
ASCII_IsAlphaNum
ASCII_IsDig
ASCII_IsLower
