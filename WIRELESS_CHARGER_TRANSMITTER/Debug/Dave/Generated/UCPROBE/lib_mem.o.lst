   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "lib_mem.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm Mem_Heap,1024,4
  18              	 .comm Mem_SegHeap,20,4
  19              	 .comm Mem_SegHeadPtr,4,4
  20              	 .section .rodata
  21              	 .align 2
  22              	.LC2:
  23 0000 48656170 	 .ascii "Heap\000"
  23      00
  24              	 .section .text.Mem_Init,"ax",%progbits
  25              	 .align 2
  26              	 .global Mem_Init
  27              	 .code 16
  28              	 .thumb_func
  30              	Mem_Init:
  31              	.LFB0:
  32              	 .file 1 "../Dave/Generated/UCPROBE/lib_mem.c"
   1:../Dave/Generated/UCPROBE/lib_mem.c **** /*
   2:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
   3:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                uC/LIB
   4:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        CUSTOM LIBRARY MODULES
   5:../Dave/Generated/UCPROBE/lib_mem.c **** *
   6:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (c) Copyright 2004-2014; Micrium, Inc.; Weston, FL
   7:../Dave/Generated/UCPROBE/lib_mem.c **** *
   8:../Dave/Generated/UCPROBE/lib_mem.c **** *                  All rights reserved.  Protected by international copyright laws.
   9:../Dave/Generated/UCPROBE/lib_mem.c **** *
  10:../Dave/Generated/UCPROBE/lib_mem.c **** *                  uC/LIB is provided in source form to registered licensees ONLY.  It is
  11:../Dave/Generated/UCPROBE/lib_mem.c **** *                  illegal to distribute this source code to any third party unless you receive
  12:../Dave/Generated/UCPROBE/lib_mem.c **** *                  written permission by an authorized Micrium representative.  Knowledge of
  13:../Dave/Generated/UCPROBE/lib_mem.c **** *                  the source code may NOT be used to develop a similar product.
  14:../Dave/Generated/UCPROBE/lib_mem.c **** *
  15:../Dave/Generated/UCPROBE/lib_mem.c **** *                  Please help us continue to provide the Embedded community with the finest
  16:../Dave/Generated/UCPROBE/lib_mem.c **** *                  software available.  Your honesty is greatly appreciated.
  17:../Dave/Generated/UCPROBE/lib_mem.c **** *
  18:../Dave/Generated/UCPROBE/lib_mem.c **** *                  You can find our product's user manual, API reference, release notes and
  19:../Dave/Generated/UCPROBE/lib_mem.c **** *                  more information at: https://doc.micrium.com
  20:../Dave/Generated/UCPROBE/lib_mem.c **** *
  21:../Dave/Generated/UCPROBE/lib_mem.c **** *                  You can contact us at: http://www.micrium.com
  22:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  23:../Dave/Generated/UCPROBE/lib_mem.c **** */
  24:../Dave/Generated/UCPROBE/lib_mem.c **** 
  25:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  26:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  27:../Dave/Generated/UCPROBE/lib_mem.c **** *
  28:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     STANDARD MEMORY OPERATIONS
  29:../Dave/Generated/UCPROBE/lib_mem.c **** *
  30:../Dave/Generated/UCPROBE/lib_mem.c **** * Filename      : lib_mem.c
  31:../Dave/Generated/UCPROBE/lib_mem.c **** * Version       : V1.38.01
  32:../Dave/Generated/UCPROBE/lib_mem.c **** * Programmer(s) : ITJ
  33:../Dave/Generated/UCPROBE/lib_mem.c **** *                 FGK
  34:../Dave/Generated/UCPROBE/lib_mem.c **** *                 JFD
  35:../Dave/Generated/UCPROBE/lib_mem.c **** *                 FBJ
  36:../Dave/Generated/UCPROBE/lib_mem.c **** *                 EJ
  37:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  38:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  39:../Dave/Generated/UCPROBE/lib_mem.c **** *
  40:../Dave/Generated/UCPROBE/lib_mem.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  41:../Dave/Generated/UCPROBE/lib_mem.c **** *
  42:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  43:../Dave/Generated/UCPROBE/lib_mem.c **** *
  44:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  45:../Dave/Generated/UCPROBE/lib_mem.c **** *
  46:../Dave/Generated/UCPROBE/lib_mem.c **** *                               where
  47:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <Custom Library Directory>      directory path for custom l
  48:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <cpu>                           directory name for specific
  49:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <compiler>                      directory name for specific
  50:../Dave/Generated/UCPROBE/lib_mem.c **** *
  51:../Dave/Generated/UCPROBE/lib_mem.c **** *                     (b) Product-specific library functions are implemented in individual products
  52:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  53:../Dave/Generated/UCPROBE/lib_mem.c **** */
  54:../Dave/Generated/UCPROBE/lib_mem.c **** 
  55:../Dave/Generated/UCPROBE/lib_mem.c **** 
  56:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  57:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  58:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            INCLUDE FILES
  59:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  60:../Dave/Generated/UCPROBE/lib_mem.c **** */
  61:../Dave/Generated/UCPROBE/lib_mem.c **** 
  62:../Dave/Generated/UCPROBE/lib_mem.c **** #define    MICRIUM_SOURCE
  63:../Dave/Generated/UCPROBE/lib_mem.c **** #define    LIB_MEM_MODULE
  64:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_mem.h"
  65:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_math.h"
  66:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_str.h"
  67:../Dave/Generated/UCPROBE/lib_mem.c **** 
  68:../Dave/Generated/UCPROBE/lib_mem.c **** 
  69:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  70:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  71:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            LOCAL DEFINES
  72:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  73:../Dave/Generated/UCPROBE/lib_mem.c **** */
  74:../Dave/Generated/UCPROBE/lib_mem.c **** 
  75:../Dave/Generated/UCPROBE/lib_mem.c **** 
  76:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  77:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  78:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           LOCAL CONSTANTS
  79:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  80:../Dave/Generated/UCPROBE/lib_mem.c **** */
  81:../Dave/Generated/UCPROBE/lib_mem.c **** 
  82:../Dave/Generated/UCPROBE/lib_mem.c **** 
  83:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  84:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  85:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          LOCAL DATA TYPES
  86:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  87:../Dave/Generated/UCPROBE/lib_mem.c **** */
  88:../Dave/Generated/UCPROBE/lib_mem.c **** 
  89:../Dave/Generated/UCPROBE/lib_mem.c **** 
  90:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  91:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  92:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            LOCAL TABLES
  93:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  94:../Dave/Generated/UCPROBE/lib_mem.c **** */
  95:../Dave/Generated/UCPROBE/lib_mem.c **** 
  96:../Dave/Generated/UCPROBE/lib_mem.c **** 
  97:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  98:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  99:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       LOCAL GLOBAL VARIABLES
 100:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 101:../Dave/Generated/UCPROBE/lib_mem.c **** */
 102:../Dave/Generated/UCPROBE/lib_mem.c **** 
 103:../Dave/Generated/UCPROBE/lib_mem.c **** 
 104:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 105:../Dave/Generated/UCPROBE/lib_mem.c **** #ifndef  LIB_MEM_CFG_HEAP_BASE_ADDR
 106:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_INT08U   Mem_Heap[LIB_MEM_CFG_HEAP_SIZE];                   /* Mem heap.                       
 107:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 108:../Dave/Generated/UCPROBE/lib_mem.c **** 
 109:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_SEG      Mem_SegHeap;                                       /* Heap mem seg.                   
 110:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 111:../Dave/Generated/UCPROBE/lib_mem.c **** 
 112:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_SEG     *Mem_SegHeadPtr;                                    /* Ptr to head of seg list.        
 113:../Dave/Generated/UCPROBE/lib_mem.c **** 
 114:../Dave/Generated/UCPROBE/lib_mem.c **** 
 115:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 116:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 117:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      LOCAL FUNCTION PROTOTYPES
 118:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 119:../Dave/Generated/UCPROBE/lib_mem.c **** */
 120:../Dave/Generated/UCPROBE/lib_mem.c **** 
 121:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_SegCreateCritical    (const  CPU_CHAR      *p_name,
 122:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 123:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_ADDR       seg_base_addr,
 124:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 125:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size);
 126:../Dave/Generated/UCPROBE/lib_mem.c **** 
 127:../Dave/Generated/UCPROBE/lib_mem.c **** static  MEM_SEG      *Mem_SegOverlapChkCritical(       CPU_ADDR       seg_base_addr,
 128:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 129:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 130:../Dave/Generated/UCPROBE/lib_mem.c **** 
 131:../Dave/Generated/UCPROBE/lib_mem.c **** static  void         *Mem_SegAllocInternal     (const  CPU_CHAR      *p_name,
 132:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 133:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 134:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     align,
 135:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 136:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 137:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 138:../Dave/Generated/UCPROBE/lib_mem.c **** 
 139:../Dave/Generated/UCPROBE/lib_mem.c **** static  void         *Mem_SegAllocExtCritical  (       MEM_SEG       *p_seg,
 140:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 141:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     align,
 142:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 143:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 144:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 145:../Dave/Generated/UCPROBE/lib_mem.c **** 
 146:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_DynPoolCreateInternal(const  CPU_CHAR      *p_name,
 147:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_DYN_POOL  *p_pool,
 148:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 149:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_size,
 150:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_align,
 151:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_padding_align,
 152:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_init,
 153:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_max,
 154:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 155:../Dave/Generated/UCPROBE/lib_mem.c **** 
 156:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
 157:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_SegAllocTrackCritical(const  CPU_CHAR      *p_name,
 158:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 159:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 160:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 161:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 162:../Dave/Generated/UCPROBE/lib_mem.c **** 
 163:../Dave/Generated/UCPROBE/lib_mem.c **** #if ((LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED) && \
 164:../Dave/Generated/UCPROBE/lib_mem.c ****      (LIB_MEM_CFG_HEAP_SIZE      >  0u))
 165:../Dave/Generated/UCPROBE/lib_mem.c **** static  CPU_BOOLEAN   Mem_PoolBlkIsValidAddr   (       MEM_POOL      *p_pool,
 166:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        void          *p_mem);
 167:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 168:../Dave/Generated/UCPROBE/lib_mem.c **** 
 169:../Dave/Generated/UCPROBE/lib_mem.c **** 
 170:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 171:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 172:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     LOCAL CONFIGURATION ERRORS
 173:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 174:../Dave/Generated/UCPROBE/lib_mem.c **** */
 175:../Dave/Generated/UCPROBE/lib_mem.c **** 
 176:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 177:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 178:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 179:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            GLOBAL FUNCTIONS
 180:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 181:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 182:../Dave/Generated/UCPROBE/lib_mem.c **** */
 183:../Dave/Generated/UCPROBE/lib_mem.c **** 
 184:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 185:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 186:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Init()
 187:../Dave/Generated/UCPROBE/lib_mem.c **** *
 188:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : (1) Initializes Memory Management Module :
 189:../Dave/Generated/UCPROBE/lib_mem.c **** *
 190:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) Initialize heap memory pool
 191:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Initialize      memory pool table
 192:../Dave/Generated/UCPROBE/lib_mem.c **** *
 193:../Dave/Generated/UCPROBE/lib_mem.c **** *
 194:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : none.
 195:../Dave/Generated/UCPROBE/lib_mem.c **** *
 196:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 197:../Dave/Generated/UCPROBE/lib_mem.c **** *
 198:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 199:../Dave/Generated/UCPROBE/lib_mem.c **** *
 200:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (2) Mem_Init() MUST be called ... :
 201:../Dave/Generated/UCPROBE/lib_mem.c **** *
 202:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) ONLY ONCE from a product's application; ...
 203:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) BEFORE product's application calls any memory library module function(s)
 204:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 205:../Dave/Generated/UCPROBE/lib_mem.c **** */
 206:../Dave/Generated/UCPROBE/lib_mem.c **** 
 207:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Init (void)
 208:../Dave/Generated/UCPROBE/lib_mem.c **** {
  33              	 .loc 1 208 0
  34              	 .cfi_startproc
  35 0000 90B5     	 push {r4,r7,lr}
  36              	.LCFI0:
  37              	 .cfi_def_cfa_offset 12
  38              	 .cfi_offset 4,-12
  39              	 .cfi_offset 7,-8
  40              	 .cfi_offset 14,-4
  41 0002 85B0     	 sub sp,sp,#20
  42              	.LCFI1:
  43              	 .cfi_def_cfa_offset 32
  44 0004 02AF     	 add r7,sp,#8
  45              	.LCFI2:
  46              	 .cfi_def_cfa 7,24
 209:../Dave/Generated/UCPROBE/lib_mem.c **** 
 210:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT SEG LIST
 211:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegHeadPtr = DEF_NULL;
  47              	 .loc 1 211 0
  48 0006 0D4B     	 ldr r3,.L3
  49 0008 0022     	 mov r2,#0
  50 000a 1A60     	 str r2,[r3]
  51              	.LBB2:
 212:../Dave/Generated/UCPROBE/lib_mem.c **** 
 213:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 214:../Dave/Generated/UCPROBE/lib_mem.c ****     {
 215:../Dave/Generated/UCPROBE/lib_mem.c ****         LIB_ERR   err;
 216:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_ADDR  heap_base_addr;
 217:../Dave/Generated/UCPROBE/lib_mem.c **** 
 218:../Dave/Generated/UCPROBE/lib_mem.c **** 
 219:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT HEAP SEG
 220:../Dave/Generated/UCPROBE/lib_mem.c **** #ifdef  LIB_MEM_CFG_HEAP_BASE_ADDR
 221:../Dave/Generated/UCPROBE/lib_mem.c ****         heap_base_addr = LIB_MEM_CFG_HEAP_BASE_ADDR;
 222:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 223:../Dave/Generated/UCPROBE/lib_mem.c ****         heap_base_addr = (CPU_ADDR)&Mem_Heap[0u];
  52              	 .loc 1 223 0
  53 000c 0C4B     	 ldr r3,.L3+4
  54 000e 7B60     	 str r3,[r7,#4]
 224:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 225:../Dave/Generated/UCPROBE/lib_mem.c **** 
 226:../Dave/Generated/UCPROBE/lib_mem.c ****         Mem_SegCreate("Heap",
  55              	 .loc 1 226 0
  56 0010 0C48     	 ldr r0,.L3+8
  57 0012 0D49     	 ldr r1,.L3+12
  58 0014 7A68     	 ldr r2,[r7,#4]
  59 0016 8023     	 mov r3,#128
  60 0018 DC00     	 lsl r4,r3,#3
  61 001a 0123     	 mov r3,#1
  62 001c 0093     	 str r3,[sp]
  63 001e BB1C     	 add r3,r7,#2
  64 0020 0193     	 str r3,[sp,#4]
  65 0022 231C     	 mov r3,r4
  66 0024 FFF7FEFF 	 bl Mem_SegCreate
 227:../Dave/Generated/UCPROBE/lib_mem.c ****                       &Mem_SegHeap,                             /* Create heap seg.                
 228:../Dave/Generated/UCPROBE/lib_mem.c ****                        heap_base_addr,
 229:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_MEM_CFG_HEAP_SIZE,
 230:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_MEM_PADDING_ALIGN_NONE,
 231:../Dave/Generated/UCPROBE/lib_mem.c ****                       &err);
 232:../Dave/Generated/UCPROBE/lib_mem.c ****         if (err != LIB_MEM_ERR_NONE) {
  67              	 .loc 1 232 0
  68 0028 BB1C     	 add r3,r7,#2
  69 002a 1B88     	 ldrh r3,[r3]
  70 002c 074A     	 ldr r2,.L3+16
  71 002e 9342     	 cmp r3,r2
  72 0030 01D0     	 beq .L1
 233:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_SW_EXCEPTION(;);
  73              	 .loc 1 233 0
  74 0032 FFF7FEFF 	 bl CPU_SW_Exception
  75              	.L1:
  76              	.LBE2:
 234:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 235:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 236:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 237:../Dave/Generated/UCPROBE/lib_mem.c **** }
  77              	 .loc 1 237 0
  78 0036 BD46     	 mov sp,r7
  79 0038 03B0     	 add sp,sp,#12
  80              	 
  81 003a 90BD     	 pop {r4,r7,pc}
  82              	.L4:
  83              	 .align 2
  84              	.L3:
  85 003c 00000000 	 .word Mem_SegHeadPtr
  86 0040 00000000 	 .word Mem_Heap
  87 0044 00000000 	 .word .LC2
  88 0048 00000000 	 .word Mem_SegHeap
  89 004c 10270000 	 .word 10000
  90              	 .cfi_endproc
  91              	.LFE0:
  93              	 .section .text.Mem_Clr,"ax",%progbits
  94              	 .align 2
  95              	 .global Mem_Clr
  96              	 .code 16
  97              	 .thumb_func
  99              	Mem_Clr:
 100              	.LFB1:
 238:../Dave/Generated/UCPROBE/lib_mem.c **** 
 239:../Dave/Generated/UCPROBE/lib_mem.c **** 
 240:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 241:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 242:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Clr()
 243:../Dave/Generated/UCPROBE/lib_mem.c **** *
 244:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears data buffer (see Note #2).
 245:../Dave/Generated/UCPROBE/lib_mem.c **** *
 246:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to clear.
 247:../Dave/Generated/UCPROBE/lib_mem.c **** *
 248:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to clear (see Note #1).
 249:../Dave/Generated/UCPROBE/lib_mem.c **** *
 250:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 251:../Dave/Generated/UCPROBE/lib_mem.c **** *
 252:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 253:../Dave/Generated/UCPROBE/lib_mem.c **** *
 254:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null clears allowed (i.e. zero-length clears).
 255:../Dave/Generated/UCPROBE/lib_mem.c **** *
 256:../Dave/Generated/UCPROBE/lib_mem.c **** *                   See also 'Mem_Set()  Note #1'.
 257:../Dave/Generated/UCPROBE/lib_mem.c **** *
 258:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Clear data by setting each data octet to 0.
 259:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 260:../Dave/Generated/UCPROBE/lib_mem.c **** */
 261:../Dave/Generated/UCPROBE/lib_mem.c **** 
 262:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Clr (void        *pmem,
 263:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_SIZE_T   size)
 264:../Dave/Generated/UCPROBE/lib_mem.c **** {
 101              	 .loc 1 264 0
 102              	 .cfi_startproc
 103 0000 80B5     	 push {r7,lr}
 104              	.LCFI3:
 105              	 .cfi_def_cfa_offset 8
 106              	 .cfi_offset 7,-8
 107              	 .cfi_offset 14,-4
 108 0002 82B0     	 sub sp,sp,#8
 109              	.LCFI4:
 110              	 .cfi_def_cfa_offset 16
 111 0004 00AF     	 add r7,sp,#0
 112              	.LCFI5:
 113              	 .cfi_def_cfa_register 7
 114 0006 7860     	 str r0,[r7,#4]
 115 0008 3960     	 str r1,[r7]
 265:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_Set(pmem,
 116              	 .loc 1 265 0
 117 000a 7A68     	 ldr r2,[r7,#4]
 118 000c 3B68     	 ldr r3,[r7]
 119 000e 101C     	 mov r0,r2
 120 0010 0021     	 mov r1,#0
 121 0012 1A1C     	 mov r2,r3
 122 0014 FFF7FEFF 	 bl Mem_Set
 266:../Dave/Generated/UCPROBE/lib_mem.c ****             0u,                                                 /* See Note #2.                    
 267:../Dave/Generated/UCPROBE/lib_mem.c ****             size);
 268:../Dave/Generated/UCPROBE/lib_mem.c **** }
 123              	 .loc 1 268 0
 124 0018 BD46     	 mov sp,r7
 125 001a 02B0     	 add sp,sp,#8
 126              	 
 127 001c 80BD     	 pop {r7,pc}
 128              	 .cfi_endproc
 129              	.LFE1:
 131 001e C046     	 .section .text.Mem_Set,"ax",%progbits
 132              	 .align 2
 133              	 .global Mem_Set
 134              	 .code 16
 135              	 .thumb_func
 137              	Mem_Set:
 138              	.LFB2:
 269:../Dave/Generated/UCPROBE/lib_mem.c **** 
 270:../Dave/Generated/UCPROBE/lib_mem.c **** 
 271:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 272:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 273:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Set()
 274:../Dave/Generated/UCPROBE/lib_mem.c **** *
 275:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Fills data buffer with specified data octet.
 276:../Dave/Generated/UCPROBE/lib_mem.c **** *
 277:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to fill with specified data octet.
 278:../Dave/Generated/UCPROBE/lib_mem.c **** *
 279:../Dave/Generated/UCPROBE/lib_mem.c **** *               data_val    Data fill octet value.
 280:../Dave/Generated/UCPROBE/lib_mem.c **** *
 281:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to fill (see Note #1).
 282:../Dave/Generated/UCPROBE/lib_mem.c **** *
 283:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 284:../Dave/Generated/UCPROBE/lib_mem.c **** *
 285:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 286:../Dave/Generated/UCPROBE/lib_mem.c **** *
 287:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null sets allowed (i.e. zero-length sets).
 288:../Dave/Generated/UCPROBE/lib_mem.c **** *
 289:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) For best CPU performance, optimized to fill data buffer using 'CPU_ALIGN'-sized
 290:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 291:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 292:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 293:../Dave/Generated/UCPROBE/lib_mem.c **** *
 294:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 295:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 296:../Dave/Generated/UCPROBE/lib_mem.c **** *
 297:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 298:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 299:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 300:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 301:../Dave/Generated/UCPROBE/lib_mem.c **** */
 302:../Dave/Generated/UCPROBE/lib_mem.c **** 
 303:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Set (void        *pmem,
 304:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_INT08U   data_val,
 305:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_SIZE_T   size)
 306:../Dave/Generated/UCPROBE/lib_mem.c **** {
 139              	 .loc 1 306 0
 140              	 .cfi_startproc
 141 0000 80B5     	 push {r7,lr}
 142              	.LCFI6:
 143              	 .cfi_def_cfa_offset 8
 144              	 .cfi_offset 7,-8
 145              	 .cfi_offset 14,-4
 146 0002 8AB0     	 sub sp,sp,#40
 147              	.LCFI7:
 148              	 .cfi_def_cfa_offset 48
 149 0004 00AF     	 add r7,sp,#0
 150              	.LCFI8:
 151              	 .cfi_def_cfa_register 7
 152 0006 F860     	 str r0,[r7,#12]
 153 0008 7A60     	 str r2,[r7,#4]
 154 000a 0B23     	 mov r3,#11
 155 000c FB18     	 add r3,r7,r3
 156 000e 0A1C     	 add r2,r1,#0
 157 0010 1A70     	 strb r2,[r3]
 307:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   size_rem;
 308:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ALIGN    data_align;
 309:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ALIGN   *pmem_align;
 310:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *pmem_08;
 311:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_DATA     mem_align_mod;
 312:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_DATA     i;
 313:../Dave/Generated/UCPROBE/lib_mem.c **** 
 314:../Dave/Generated/UCPROBE/lib_mem.c **** 
 315:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 316:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 317:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 318:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 319:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pmem == (void *)0) {
 320:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 321:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 322:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 323:../Dave/Generated/UCPROBE/lib_mem.c **** 
 324:../Dave/Generated/UCPROBE/lib_mem.c **** 
 325:../Dave/Generated/UCPROBE/lib_mem.c ****     data_align = 0u;
 158              	 .loc 1 325 0
 159 0012 0023     	 mov r3,#0
 160 0014 3B62     	 str r3,[r7,#32]
 326:../Dave/Generated/UCPROBE/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 161              	 .loc 1 326 0
 162 0016 0023     	 mov r3,#0
 163 0018 7B61     	 str r3,[r7,#20]
 164 001a 0BE0     	 b .L7
 165              	.L8:
 327:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 166              	 .loc 1 327 0 discriminator 3
 167 001c 3B6A     	 ldr r3,[r7,#32]
 168 001e 1B02     	 lsl r3,r3,#8
 169 0020 3B62     	 str r3,[r7,#32]
 328:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 170              	 .loc 1 328 0 discriminator 3
 171 0022 0B23     	 mov r3,#11
 172 0024 FB18     	 add r3,r7,r3
 173 0026 1B78     	 ldrb r3,[r3]
 174 0028 3A6A     	 ldr r2,[r7,#32]
 175 002a 1343     	 orr r3,r2
 176 002c 3B62     	 str r3,[r7,#32]
 326:../Dave/Generated/UCPROBE/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 177              	 .loc 1 326 0 discriminator 3
 178 002e 7B69     	 ldr r3,[r7,#20]
 179 0030 0133     	 add r3,r3,#1
 180 0032 7B61     	 str r3,[r7,#20]
 181              	.L7:
 326:../Dave/Generated/UCPROBE/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 182              	 .loc 1 326 0 is_stmt 0 discriminator 1
 183 0034 7B69     	 ldr r3,[r7,#20]
 184 0036 032B     	 cmp r3,#3
 185 0038 F0D9     	 bls .L8
 329:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 330:../Dave/Generated/UCPROBE/lib_mem.c **** 
 331:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem      =  size;
 186              	 .loc 1 331 0 is_stmt 1
 187 003a 7B68     	 ldr r3,[r7,#4]
 188 003c 7B62     	 str r3,[r7,#36]
 332:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod = (CPU_INT08U)((CPU_ADDR)pmem % sizeof(CPU_ALIGN));   /* See Note #3.            
 189              	 .loc 1 332 0
 190 003e FB68     	 ldr r3,[r7,#12]
 191 0040 DBB2     	 uxtb r3,r3
 192 0042 1A1C     	 mov r2,r3
 193 0044 0323     	 mov r3,#3
 194 0046 1340     	 and r3,r2
 195 0048 3B61     	 str r3,[r7,#16]
 333:../Dave/Generated/UCPROBE/lib_mem.c **** 
 334:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem;
 196              	 .loc 1 334 0
 197 004a FB68     	 ldr r3,[r7,#12]
 198 004c BB61     	 str r3,[r7,#24]
 335:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_align_mod != 0u) {                                  /* If leading octets avail,        
 199              	 .loc 1 335 0
 200 004e 3B69     	 ldr r3,[r7,#16]
 201 0050 002B     	 cmp r3,#0
 202 0052 15D0     	 beq .L9
 336:../Dave/Generated/UCPROBE/lib_mem.c ****         i = mem_align_mod;
 203              	 .loc 1 336 0
 204 0054 3B69     	 ldr r3,[r7,#16]
 205 0056 7B61     	 str r3,[r7,#20]
 337:../Dave/Generated/UCPROBE/lib_mem.c ****         while ((size_rem > 0) &&                                /* ... start mem buf fill with lead
 206              	 .loc 1 337 0
 207 0058 0CE0     	 b .L10
 208              	.L11:
 338:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 339:../Dave/Generated/UCPROBE/lib_mem.c ****            *pmem_08++ = data_val;
 209              	 .loc 1 339 0
 210 005a BB69     	 ldr r3,[r7,#24]
 211 005c 5A1C     	 add r2,r3,#1
 212 005e BA61     	 str r2,[r7,#24]
 213 0060 0B22     	 mov r2,#11
 214 0062 BA18     	 add r2,r7,r2
 215 0064 1278     	 ldrb r2,[r2]
 216 0066 1A70     	 strb r2,[r3]
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 217              	 .loc 1 340 0
 218 0068 7B6A     	 ldr r3,[r7,#36]
 219 006a 013B     	 sub r3,r3,#1
 220 006c 7B62     	 str r3,[r7,#36]
 341:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 221              	 .loc 1 341 0
 222 006e 7B69     	 ldr r3,[r7,#20]
 223 0070 0133     	 add r3,r3,#1
 224 0072 7B61     	 str r3,[r7,#20]
 225              	.L10:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 226              	 .loc 1 337 0
 227 0074 7B6A     	 ldr r3,[r7,#36]
 228 0076 002B     	 cmp r3,#0
 229 0078 02D0     	 beq .L9
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 230              	 .loc 1 337 0 is_stmt 0 discriminator 1
 231 007a 7B69     	 ldr r3,[r7,#20]
 232 007c 032B     	 cmp r3,#3
 233 007e ECD9     	 bls .L11
 234              	.L9:
 342:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 343:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 344:../Dave/Generated/UCPROBE/lib_mem.c **** 
 345:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_align = (CPU_ALIGN *)pmem_08;                          /* See Note #2.                    
 235              	 .loc 1 345 0 is_stmt 1
 236 0080 BB69     	 ldr r3,[r7,#24]
 237 0082 FB61     	 str r3,[r7,#28]
 346:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 238              	 .loc 1 346 0
 239 0084 07E0     	 b .L12
 240              	.L13:
 347:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 241              	 .loc 1 347 0
 242 0086 FB69     	 ldr r3,[r7,#28]
 243 0088 1A1D     	 add r2,r3,#4
 244 008a FA61     	 str r2,[r7,#28]
 245 008c 3A6A     	 ldr r2,[r7,#32]
 246 008e 1A60     	 str r2,[r3]
 348:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 247              	 .loc 1 348 0
 248 0090 7B6A     	 ldr r3,[r7,#36]
 249 0092 043B     	 sub r3,r3,#4
 250 0094 7B62     	 str r3,[r7,#36]
 251              	.L12:
 346:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 252              	 .loc 1 346 0
 253 0096 7B6A     	 ldr r3,[r7,#36]
 254 0098 032B     	 cmp r3,#3
 255 009a F4D8     	 bhi .L13
 349:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 350:../Dave/Generated/UCPROBE/lib_mem.c **** 
 351:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem_align;
 256              	 .loc 1 351 0
 257 009c FB69     	 ldr r3,[r7,#28]
 258 009e BB61     	 str r3,[r7,#24]
 352:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 259              	 .loc 1 352 0
 260 00a0 09E0     	 b .L14
 261              	.L15:
 353:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08++   = data_val;
 262              	 .loc 1 353 0
 263 00a2 BB69     	 ldr r3,[r7,#24]
 264 00a4 5A1C     	 add r2,r3,#1
 265 00a6 BA61     	 str r2,[r7,#24]
 266 00a8 0B22     	 mov r2,#11
 267 00aa BA18     	 add r2,r7,r2
 268 00ac 1278     	 ldrb r2,[r2]
 269 00ae 1A70     	 strb r2,[r3]
 354:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem   -= sizeof(CPU_INT08U);
 270              	 .loc 1 354 0
 271 00b0 7B6A     	 ldr r3,[r7,#36]
 272 00b2 013B     	 sub r3,r3,#1
 273 00b4 7B62     	 str r3,[r7,#36]
 274              	.L14:
 352:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 275              	 .loc 1 352 0
 276 00b6 7B6A     	 ldr r3,[r7,#36]
 277 00b8 002B     	 cmp r3,#0
 278 00ba F2D1     	 bne .L15
 355:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 356:../Dave/Generated/UCPROBE/lib_mem.c **** }
 279              	 .loc 1 356 0
 280 00bc BD46     	 mov sp,r7
 281 00be 0AB0     	 add sp,sp,#40
 282              	 
 283 00c0 80BD     	 pop {r7,pc}
 284              	 .cfi_endproc
 285              	.LFE2:
 287 00c2 C046     	 .section .text.Mem_Copy,"ax",%progbits
 288              	 .align 2
 289              	 .global Mem_Copy
 290              	 .code 16
 291              	 .thumb_func
 293              	Mem_Copy:
 294              	.LFB3:
 357:../Dave/Generated/UCPROBE/lib_mem.c **** 
 358:../Dave/Generated/UCPROBE/lib_mem.c **** 
 359:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 360:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 361:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Copy()
 362:../Dave/Generated/UCPROBE/lib_mem.c **** *
 363:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Copies data octets from one memory buffer to another memory buffer.
 364:../Dave/Generated/UCPROBE/lib_mem.c **** *
 365:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 366:../Dave/Generated/UCPROBE/lib_mem.c **** *
 367:../Dave/Generated/UCPROBE/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 368:../Dave/Generated/UCPROBE/lib_mem.c **** *
 369:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of octets to copy (see Note #1).
 370:../Dave/Generated/UCPROBE/lib_mem.c **** *
 371:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 372:../Dave/Generated/UCPROBE/lib_mem.c **** *
 373:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 374:../Dave/Generated/UCPROBE/lib_mem.c **** *
 375:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null copies allowed (i.e. zero-length copies).
 376:../Dave/Generated/UCPROBE/lib_mem.c **** *
 377:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Memory buffers NOT checked for overlapping.
 378:../Dave/Generated/UCPROBE/lib_mem.c **** *
 379:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) IEEE Std 1003.1, 2004 Edition, Section 'memcpy() : DESCRIPTION' states that
 380:../Dave/Generated/UCPROBE/lib_mem.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 381:../Dave/Generated/UCPROBE/lib_mem.c **** *
 382:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) However, data octets from a source memory buffer at a higher address value 
 383:../Dave/Generated/UCPROBE/lib_mem.c **** *                       successfully copy to a destination memory buffer at a lower  address value 
 384:../Dave/Generated/UCPROBE/lib_mem.c **** *                       if any octets of the memory buffers overlap as long as no individual, atomi
 385:../Dave/Generated/UCPROBE/lib_mem.c **** *                       word copy overlaps.
 386:../Dave/Generated/UCPROBE/lib_mem.c **** *
 387:../Dave/Generated/UCPROBE/lib_mem.c **** *                       Since Mem_Copy() performs the data octet copy via 'CPU_ALIGN'-sized words &
 388:../Dave/Generated/UCPROBE/lib_mem.c **** *                       octets; & since 'CPU_ALIGN'-sized words MUST be accessed on word-aligned ad
 389:../Dave/Generated/UCPROBE/lib_mem.c **** *                       (see Note #3b), neither 'CPU_ALIGN'-sized words nor octets at unique addres
 390:../Dave/Generated/UCPROBE/lib_mem.c **** *                       ever overlap.
 391:../Dave/Generated/UCPROBE/lib_mem.c **** *
 392:../Dave/Generated/UCPROBE/lib_mem.c **** *                       Therefore, Mem_Copy() SHOULD be able to successfully copy overlapping memor
 393:../Dave/Generated/UCPROBE/lib_mem.c **** *                       buffers as long as the source memory buffer is at a higher address value th
 394:../Dave/Generated/UCPROBE/lib_mem.c **** *                       destination memory buffer.
 395:../Dave/Generated/UCPROBE/lib_mem.c **** *
 396:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 397:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 398:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 399:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 400:../Dave/Generated/UCPROBE/lib_mem.c **** *
 401:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 402:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 403:../Dave/Generated/UCPROBE/lib_mem.c **** *
 404:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 405:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 406:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 407:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 408:../Dave/Generated/UCPROBE/lib_mem.c **** */
 409:../Dave/Generated/UCPROBE/lib_mem.c **** 
 410:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_OPTIMIZE_ASM_EN != DEF_ENABLED)
 411:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Copy (       void        *pdest,
 412:../Dave/Generated/UCPROBE/lib_mem.c ****                 const  void        *psrc,
 413:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size)
 414:../Dave/Generated/UCPROBE/lib_mem.c **** {
 295              	 .loc 1 414 0
 296              	 .cfi_startproc
 297 0000 80B5     	 push {r7,lr}
 298              	.LCFI9:
 299              	 .cfi_def_cfa_offset 8
 300              	 .cfi_offset 7,-8
 301              	 .cfi_offset 14,-4
 302 0002 8EB0     	 sub sp,sp,#56
 303              	.LCFI10:
 304              	 .cfi_def_cfa_offset 64
 305 0004 00AF     	 add r7,sp,#0
 306              	.LCFI11:
 307              	 .cfi_def_cfa_register 7
 308 0006 F860     	 str r0,[r7,#12]
 309 0008 B960     	 str r1,[r7,#8]
 310 000a 7A60     	 str r2,[r7,#4]
 415:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 416:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 417:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 418:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 419:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 420:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 421:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      i;
 422:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 423:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 424:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 425:../Dave/Generated/UCPROBE/lib_mem.c **** 
 426:../Dave/Generated/UCPROBE/lib_mem.c **** 
 427:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 428:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 429:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 430:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 431:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pdest == (void *)0) {
 432:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 433:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 434:../Dave/Generated/UCPROBE/lib_mem.c ****     if (psrc  == (void *)0) {
 435:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 436:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 437:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 438:../Dave/Generated/UCPROBE/lib_mem.c **** 
 439:../Dave/Generated/UCPROBE/lib_mem.c **** 
 440:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem           =  size;
 311              	 .loc 1 440 0
 312 000c 7B68     	 ldr r3,[r7,#4]
 313 000e 7B63     	 str r3,[r7,#52]
 441:../Dave/Generated/UCPROBE/lib_mem.c **** 
 442:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest;
 314              	 .loc 1 442 0
 315 0010 FB68     	 ldr r3,[r7,#12]
 316 0012 BB62     	 str r3,[r7,#40]
 443:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc;
 317              	 .loc 1 443 0
 318 0014 BB68     	 ldr r3,[r7,#8]
 319 0016 7B62     	 str r3,[r7,#36]
 444:../Dave/Generated/UCPROBE/lib_mem.c **** 
 445:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_gap_octets     = pmem_08_src - pmem_08_dest;
 320              	 .loc 1 445 0
 321 0018 7A6A     	 ldr r2,[r7,#36]
 322 001a BB6A     	 ldr r3,[r7,#40]
 323 001c D31A     	 sub r3,r2,r3
 324 001e FB61     	 str r3,[r7,#28]
 446:../Dave/Generated/UCPROBE/lib_mem.c **** 
 447:../Dave/Generated/UCPROBE/lib_mem.c **** 
 448:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 325              	 .loc 1 448 0
 326 0020 FB69     	 ldr r3,[r7,#28]
 327 0022 032B     	 cmp r3,#3
 328 0024 4BD9     	 bls .L17
 449:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 450:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 329              	 .loc 1 450 0
 330 0026 BB6A     	 ldr r3,[r7,#40]
 331 0028 DBB2     	 uxtb r3,r3
 332 002a 1A1C     	 mov r2,r3
 333 002c 0323     	 mov r3,#3
 334 002e 1340     	 and r3,r2
 335 0030 BB61     	 str r3,[r7,#24]
 451:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 336              	 .loc 1 451 0
 337 0032 7B6A     	 ldr r3,[r7,#36]
 338 0034 DBB2     	 uxtb r3,r3
 339 0036 1A1C     	 mov r2,r3
 340 0038 0323     	 mov r3,#3
 341 003a 1340     	 and r3,r2
 342 003c 7B61     	 str r3,[r7,#20]
 452:../Dave/Generated/UCPROBE/lib_mem.c **** 
 453:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 343              	 .loc 1 453 0
 344 003e BA69     	 ldr r2,[r7,#24]
 345 0040 7B69     	 ldr r3,[r7,#20]
 346 0042 9A42     	 cmp r2,r3
 347 0044 01D1     	 bne .L18
 348              	 .loc 1 453 0 is_stmt 0 discriminator 1
 349 0046 0122     	 mov r2,#1
 350 0048 00E0     	 b .L19
 351              	.L18:
 352              	 .loc 1 453 0 discriminator 2
 353 004a 0022     	 mov r2,#0
 354              	.L19:
 355              	 .loc 1 453 0 discriminator 4
 356 004c 1323     	 mov r3,#19
 357 004e FB18     	 add r3,r7,r3
 358 0050 1A70     	 strb r2,[r3]
 454:../Dave/Generated/UCPROBE/lib_mem.c **** 
 455:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 359              	 .loc 1 455 0 is_stmt 1 discriminator 4
 360 0052 1323     	 mov r3,#19
 361 0054 FB18     	 add r3,r7,r3
 362 0056 1B78     	 ldrb r3,[r3]
 363 0058 012B     	 cmp r3,#1
 364 005a 30D1     	 bne .L17
 456:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 457:../Dave/Generated/UCPROBE/lib_mem.c ****             if (mem_align_mod_dest != 0u) {                     /* If leading octets avail,        
 365              	 .loc 1 457 0
 366 005c BB69     	 ldr r3,[r7,#24]
 367 005e 002B     	 cmp r3,#0
 368 0060 16D0     	 beq .L20
 458:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 369              	 .loc 1 458 0
 370 0062 BB69     	 ldr r3,[r7,#24]
 371 0064 3B62     	 str r3,[r7,#32]
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 372              	 .loc 1 459 0
 373 0066 0DE0     	 b .L21
 374              	.L22:
 460:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                    *pmem_08_dest++ = *pmem_08_src++;
 375              	 .loc 1 461 0
 376 0068 BB6A     	 ldr r3,[r7,#40]
 377 006a 5A1C     	 add r2,r3,#1
 378 006c BA62     	 str r2,[r7,#40]
 379 006e 7A6A     	 ldr r2,[r7,#36]
 380 0070 511C     	 add r1,r2,#1
 381 0072 7962     	 str r1,[r7,#36]
 382 0074 1278     	 ldrb r2,[r2]
 383 0076 1A70     	 strb r2,[r3]
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 384              	 .loc 1 462 0
 385 0078 7B6B     	 ldr r3,[r7,#52]
 386 007a 013B     	 sub r3,r3,#1
 387 007c 7B63     	 str r3,[r7,#52]
 463:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 388              	 .loc 1 463 0
 389 007e 3B6A     	 ldr r3,[r7,#32]
 390 0080 0133     	 add r3,r3,#1
 391 0082 3B62     	 str r3,[r7,#32]
 392              	.L21:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 393              	 .loc 1 459 0
 394 0084 7B6B     	 ldr r3,[r7,#52]
 395 0086 002B     	 cmp r3,#0
 396 0088 02D0     	 beq .L20
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 397              	 .loc 1 459 0 is_stmt 0 discriminator 1
 398 008a 3B6A     	 ldr r3,[r7,#32]
 399 008c 032B     	 cmp r3,#3
 400 008e EBD9     	 bls .L22
 401              	.L20:
 464:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 465:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 466:../Dave/Generated/UCPROBE/lib_mem.c **** 
 467:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)pmem_08_dest;  /* See Note #3.                    
 402              	 .loc 1 467 0 is_stmt 1
 403 0090 BB6A     	 ldr r3,[r7,#40]
 404 0092 3B63     	 str r3,[r7,#48]
 468:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)pmem_08_src;
 405              	 .loc 1 468 0
 406 0094 7B6A     	 ldr r3,[r7,#36]
 407 0096 FB62     	 str r3,[r7,#44]
 469:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 408              	 .loc 1 469 0
 409 0098 0AE0     	 b .L23
 410              	.L24:
 470:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 411              	 .loc 1 470 0
 412 009a 3B6B     	 ldr r3,[r7,#48]
 413 009c 1A1D     	 add r2,r3,#4
 414 009e 3A63     	 str r2,[r7,#48]
 415 00a0 FA6A     	 ldr r2,[r7,#44]
 416 00a2 111D     	 add r1,r2,#4
 417 00a4 F962     	 str r1,[r7,#44]
 418 00a6 1268     	 ldr r2,[r2]
 419 00a8 1A60     	 str r2,[r3]
 471:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 420              	 .loc 1 471 0
 421 00aa 7B6B     	 ldr r3,[r7,#52]
 422 00ac 043B     	 sub r3,r3,#4
 423 00ae 7B63     	 str r3,[r7,#52]
 424              	.L23:
 469:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 425              	 .loc 1 469 0
 426 00b0 7B6B     	 ldr r3,[r7,#52]
 427 00b2 032B     	 cmp r3,#3
 428 00b4 F1D8     	 bhi .L24
 472:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 473:../Dave/Generated/UCPROBE/lib_mem.c **** 
 474:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest;
 429              	 .loc 1 474 0
 430 00b6 3B6B     	 ldr r3,[r7,#48]
 431 00b8 BB62     	 str r3,[r7,#40]
 475:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src;
 432              	 .loc 1 475 0
 433 00ba FB6A     	 ldr r3,[r7,#44]
 434 00bc 7B62     	 str r3,[r7,#36]
 435              	.L17:
 476:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 477:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 478:../Dave/Generated/UCPROBE/lib_mem.c **** 
 479:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 436              	 .loc 1 479 0
 437 00be 0AE0     	 b .L25
 438              	.L26:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 439              	 .loc 1 480 0
 440 00c0 BB6A     	 ldr r3,[r7,#40]
 441 00c2 5A1C     	 add r2,r3,#1
 442 00c4 BA62     	 str r2,[r7,#40]
 443 00c6 7A6A     	 ldr r2,[r7,#36]
 444 00c8 511C     	 add r1,r2,#1
 445 00ca 7962     	 str r1,[r7,#36]
 446 00cc 1278     	 ldrb r2,[r2]
 447 00ce 1A70     	 strb r2,[r3]
 481:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 448              	 .loc 1 481 0
 449 00d0 7B6B     	 ldr r3,[r7,#52]
 450 00d2 013B     	 sub r3,r3,#1
 451 00d4 7B63     	 str r3,[r7,#52]
 452              	.L25:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 453              	 .loc 1 479 0
 454 00d6 7B6B     	 ldr r3,[r7,#52]
 455 00d8 002B     	 cmp r3,#0
 456 00da F1D1     	 bne .L26
 482:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 483:../Dave/Generated/UCPROBE/lib_mem.c **** }
 457              	 .loc 1 483 0
 458 00dc BD46     	 mov sp,r7
 459 00de 0EB0     	 add sp,sp,#56
 460              	 
 461 00e0 80BD     	 pop {r7,pc}
 462              	 .cfi_endproc
 463              	.LFE3:
 465 00e2 C046     	 .section .text.Mem_Move,"ax",%progbits
 466              	 .align 2
 467              	 .global Mem_Move
 468              	 .code 16
 469              	 .thumb_func
 471              	Mem_Move:
 472              	.LFB4:
 484:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 485:../Dave/Generated/UCPROBE/lib_mem.c **** 
 486:../Dave/Generated/UCPROBE/lib_mem.c **** 
 487:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 488:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 489:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Move()
 490:../Dave/Generated/UCPROBE/lib_mem.c **** *
 491:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Moves data octets from one memory buffer to another memory buffer, or within the sa
 492:../Dave/Generated/UCPROBE/lib_mem.c **** *               memory buffer. Overlapping is correctly handled for all move operations.
 493:../Dave/Generated/UCPROBE/lib_mem.c **** *
 494:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 495:../Dave/Generated/UCPROBE/lib_mem.c **** *
 496:../Dave/Generated/UCPROBE/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 497:../Dave/Generated/UCPROBE/lib_mem.c **** *
 498:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of octets to move (see Note #1).
 499:../Dave/Generated/UCPROBE/lib_mem.c **** *
 500:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 501:../Dave/Generated/UCPROBE/lib_mem.c **** *
 502:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 503:../Dave/Generated/UCPROBE/lib_mem.c **** *
 504:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null move operations allowed (i.e. zero-length).
 505:../Dave/Generated/UCPROBE/lib_mem.c **** *
 506:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Memory buffers checked for overlapping.
 507:../Dave/Generated/UCPROBE/lib_mem.c **** *
 508:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 509:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 510:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 511:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 512:../Dave/Generated/UCPROBE/lib_mem.c **** *
 513:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 514:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 515:../Dave/Generated/UCPROBE/lib_mem.c **** *
 516:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 517:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 518:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 519:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 520:../Dave/Generated/UCPROBE/lib_mem.c **** */
 521:../Dave/Generated/UCPROBE/lib_mem.c **** 
 522:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Move (       void        *pdest,
 523:../Dave/Generated/UCPROBE/lib_mem.c ****                 const  void        *psrc,
 524:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size)
 525:../Dave/Generated/UCPROBE/lib_mem.c **** {
 473              	 .loc 1 525 0
 474              	 .cfi_startproc
 475 0000 80B5     	 push {r7,lr}
 476              	.LCFI12:
 477              	 .cfi_def_cfa_offset 8
 478              	 .cfi_offset 7,-8
 479              	 .cfi_offset 14,-4
 480 0002 8EB0     	 sub sp,sp,#56
 481              	.LCFI13:
 482              	 .cfi_def_cfa_offset 64
 483 0004 00AF     	 add r7,sp,#0
 484              	.LCFI14:
 485              	 .cfi_def_cfa_register 7
 486 0006 F860     	 str r0,[r7,#12]
 487 0008 B960     	 str r1,[r7,#8]
 488 000a 7A60     	 str r2,[r7,#4]
 526:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 527:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 528:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 529:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 530:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 531:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 532:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08S    i;
 533:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 534:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 535:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 536:../Dave/Generated/UCPROBE/lib_mem.c **** 
 537:../Dave/Generated/UCPROBE/lib_mem.c **** 
 538:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 539:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {
 540:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 541:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 542:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pdest == (void *)0) {
 543:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 544:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 545:../Dave/Generated/UCPROBE/lib_mem.c ****     if (psrc  == (void *)0) {
 546:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 547:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 548:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 549:../Dave/Generated/UCPROBE/lib_mem.c **** 
 550:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src  = (const CPU_INT08U *)psrc;
 489              	 .loc 1 550 0
 490 000c BB68     	 ldr r3,[r7,#8]
 491 000e 7B62     	 str r3,[r7,#36]
 551:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest = (      CPU_INT08U *)pdest;
 492              	 .loc 1 551 0
 493 0010 FB68     	 ldr r3,[r7,#12]
 494 0012 BB62     	 str r3,[r7,#40]
 552:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pmem_08_src > pmem_08_dest) {
 495              	 .loc 1 552 0
 496 0014 7A6A     	 ldr r2,[r7,#36]
 497 0016 BB6A     	 ldr r3,[r7,#40]
 498 0018 9A42     	 cmp r2,r3
 499 001a 08D9     	 bls .L28
 553:../Dave/Generated/UCPROBE/lib_mem.c ****         Mem_Copy(pdest, psrc, size);
 500              	 .loc 1 553 0
 501 001c F968     	 ldr r1,[r7,#12]
 502 001e BA68     	 ldr r2,[r7,#8]
 503 0020 7B68     	 ldr r3,[r7,#4]
 504 0022 081C     	 mov r0,r1
 505 0024 111C     	 mov r1,r2
 506 0026 1A1C     	 mov r2,r3
 507 0028 FFF7FEFF 	 bl Mem_Copy
 554:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 508              	 .loc 1 554 0
 509 002c 7BE0     	 b .L27
 510              	.L28:
 555:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 556:../Dave/Generated/UCPROBE/lib_mem.c **** 
 557:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem           =  size;
 511              	 .loc 1 557 0
 512 002e 7B68     	 ldr r3,[r7,#4]
 513 0030 7B63     	 str r3,[r7,#52]
 558:../Dave/Generated/UCPROBE/lib_mem.c **** 
 559:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest + size - 1;
 514              	 .loc 1 559 0
 515 0032 7B68     	 ldr r3,[r7,#4]
 516 0034 013B     	 sub r3,r3,#1
 517 0036 FA68     	 ldr r2,[r7,#12]
 518 0038 D318     	 add r3,r2,r3
 519 003a BB62     	 str r3,[r7,#40]
 560:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 520              	 .loc 1 560 0
 521 003c 7B68     	 ldr r3,[r7,#4]
 522 003e 013B     	 sub r3,r3,#1
 523 0040 BA68     	 ldr r2,[r7,#8]
 524 0042 D318     	 add r3,r2,r3
 525 0044 7B62     	 str r3,[r7,#36]
 561:../Dave/Generated/UCPROBE/lib_mem.c **** 
 562:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_gap_octets     = pmem_08_dest - pmem_08_src;
 526              	 .loc 1 562 0
 527 0046 BA6A     	 ldr r2,[r7,#40]
 528 0048 7B6A     	 ldr r3,[r7,#36]
 529 004a D31A     	 sub r3,r2,r3
 530 004c FB61     	 str r3,[r7,#28]
 563:../Dave/Generated/UCPROBE/lib_mem.c **** 
 564:../Dave/Generated/UCPROBE/lib_mem.c **** 
 565:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 531              	 .loc 1 565 0
 532 004e FB69     	 ldr r3,[r7,#28]
 533 0050 032B     	 cmp r3,#3
 534 0052 59D9     	 bls .L30
 566:../Dave/Generated/UCPROBE/lib_mem.c **** 
 567:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 568:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 535              	 .loc 1 568 0
 536 0054 BB6A     	 ldr r3,[r7,#40]
 537 0056 DBB2     	 uxtb r3,r3
 538 0058 1A1C     	 mov r2,r3
 539 005a 0323     	 mov r3,#3
 540 005c 1340     	 and r3,r2
 541 005e BB61     	 str r3,[r7,#24]
 569:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 542              	 .loc 1 569 0
 543 0060 7B6A     	 ldr r3,[r7,#36]
 544 0062 DBB2     	 uxtb r3,r3
 545 0064 1A1C     	 mov r2,r3
 546 0066 0323     	 mov r3,#3
 547 0068 1340     	 and r3,r2
 548 006a 7B61     	 str r3,[r7,#20]
 570:../Dave/Generated/UCPROBE/lib_mem.c **** 
 571:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 549              	 .loc 1 571 0
 550 006c BA69     	 ldr r2,[r7,#24]
 551 006e 7B69     	 ldr r3,[r7,#20]
 552 0070 9A42     	 cmp r2,r3
 553 0072 01D1     	 bne .L31
 554              	 .loc 1 571 0 is_stmt 0 discriminator 1
 555 0074 0122     	 mov r2,#1
 556 0076 00E0     	 b .L32
 557              	.L31:
 558              	 .loc 1 571 0 discriminator 2
 559 0078 0022     	 mov r2,#0
 560              	.L32:
 561              	 .loc 1 571 0 discriminator 4
 562 007a 1323     	 mov r3,#19
 563 007c FB18     	 add r3,r7,r3
 564 007e 1A70     	 strb r2,[r3]
 572:../Dave/Generated/UCPROBE/lib_mem.c **** 
 573:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 565              	 .loc 1 573 0 is_stmt 1 discriminator 4
 566 0080 1323     	 mov r3,#19
 567 0082 FB18     	 add r3,r7,r3
 568 0084 1B78     	 ldrb r3,[r3]
 569 0086 012B     	 cmp r3,#1
 570 0088 3ED1     	 bne .L30
 574:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 575:../Dave/Generated/UCPROBE/lib_mem.c ****             if (mem_align_mod_dest != (sizeof(CPU_ALIGN) - 1)) {/* If leading octets avail,        
 571              	 .loc 1 575 0
 572 008a BB69     	 ldr r3,[r7,#24]
 573 008c 032B     	 cmp r3,#3
 574 008e 20D0     	 beq .L33
 576:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 575              	 .loc 1 576 0
 576 0090 2323     	 mov r3,#35
 577 0092 FB18     	 add r3,r7,r3
 578 0094 BA69     	 ldr r2,[r7,#24]
 579 0096 1A70     	 strb r2,[r3]
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 580              	 .loc 1 577 0
 581 0098 13E0     	 b .L34
 582              	.L35:
 578:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 579:../Dave/Generated/UCPROBE/lib_mem.c ****                    *pmem_08_dest-- = *pmem_08_src--;
 583              	 .loc 1 579 0
 584 009a BB6A     	 ldr r3,[r7,#40]
 585 009c 5A1E     	 sub r2,r3,#1
 586 009e BA62     	 str r2,[r7,#40]
 587 00a0 7A6A     	 ldr r2,[r7,#36]
 588 00a2 511E     	 sub r1,r2,#1
 589 00a4 7962     	 str r1,[r7,#36]
 590 00a6 1278     	 ldrb r2,[r2]
 591 00a8 1A70     	 strb r2,[r3]
 580:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 592              	 .loc 1 580 0
 593 00aa 7B6B     	 ldr r3,[r7,#52]
 594 00ac 013B     	 sub r3,r3,#1
 595 00ae 7B63     	 str r3,[r7,#52]
 581:../Dave/Generated/UCPROBE/lib_mem.c ****                     i--;
 596              	 .loc 1 581 0
 597 00b0 2323     	 mov r3,#35
 598 00b2 FB18     	 add r3,r7,r3
 599 00b4 1B78     	 ldrb r3,[r3]
 600 00b6 DBB2     	 uxtb r3,r3
 601 00b8 013B     	 sub r3,r3,#1
 602 00ba DAB2     	 uxtb r2,r3
 603 00bc 2323     	 mov r3,#35
 604 00be FB18     	 add r3,r7,r3
 605 00c0 1A70     	 strb r2,[r3]
 606              	.L34:
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 607              	 .loc 1 577 0
 608 00c2 7B6B     	 ldr r3,[r7,#52]
 609 00c4 002B     	 cmp r3,#0
 610 00c6 04D0     	 beq .L33
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 611              	 .loc 1 577 0 is_stmt 0 discriminator 1
 612 00c8 2323     	 mov r3,#35
 613 00ca FB18     	 add r3,r7,r3
 614 00cc 1B78     	 ldrb r3,[r3]
 615 00ce 7F2B     	 cmp r3,#127
 616 00d0 E3D9     	 bls .L35
 617              	.L33:
 582:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 583:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 584:../Dave/Generated/UCPROBE/lib_mem.c **** 
 585:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #3.                    
 586:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)((CPU_INT08U *)pmem_08_dest - sizeof(CPU_ALIGN) + 
 618              	 .loc 1 586 0 is_stmt 1
 619 00d2 BB6A     	 ldr r3,[r7,#40]
 620 00d4 033B     	 sub r3,r3,#3
 621 00d6 3B63     	 str r3,[r7,#48]
 587:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN) + 
 622              	 .loc 1 587 0
 623 00d8 7B6A     	 ldr r3,[r7,#36]
 624 00da 033B     	 sub r3,r3,#3
 625 00dc FB62     	 str r3,[r7,#44]
 588:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 626              	 .loc 1 588 0
 627 00de 0AE0     	 b .L36
 628              	.L37:
 589:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 629              	 .loc 1 589 0
 630 00e0 3B6B     	 ldr r3,[r7,#48]
 631 00e2 1A1F     	 sub r2,r3,#4
 632 00e4 3A63     	 str r2,[r7,#48]
 633 00e6 FA6A     	 ldr r2,[r7,#44]
 634 00e8 111F     	 sub r1,r2,#4
 635 00ea F962     	 str r1,[r7,#44]
 636 00ec 1268     	 ldr r2,[r2]
 637 00ee 1A60     	 str r2,[r3]
 590:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 638              	 .loc 1 590 0
 639 00f0 7B6B     	 ldr r3,[r7,#52]
 640 00f2 043B     	 sub r3,r3,#4
 641 00f4 7B63     	 str r3,[r7,#52]
 642              	.L36:
 588:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 643              	 .loc 1 588 0
 644 00f6 7B6B     	 ldr r3,[r7,#52]
 645 00f8 032B     	 cmp r3,#3
 646 00fa F1D8     	 bhi .L37
 591:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 592:../Dave/Generated/UCPROBE/lib_mem.c **** 
 593:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest + sizeof(CPU_ALIGN) - 1;
 647              	 .loc 1 593 0
 648 00fc 3B6B     	 ldr r3,[r7,#48]
 649 00fe 0333     	 add r3,r3,#3
 650 0100 BB62     	 str r3,[r7,#40]
 594:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src  + sizeof(CPU_ALIGN) - 1;
 651              	 .loc 1 594 0
 652 0102 FB6A     	 ldr r3,[r7,#44]
 653 0104 0333     	 add r3,r3,#3
 654 0106 7B62     	 str r3,[r7,#36]
 655              	.L30:
 595:../Dave/Generated/UCPROBE/lib_mem.c **** 
 596:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 597:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 598:../Dave/Generated/UCPROBE/lib_mem.c **** 
 599:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 656              	 .loc 1 599 0
 657 0108 0AE0     	 b .L38
 658              	.L39:
 600:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 659              	 .loc 1 600 0
 660 010a BB6A     	 ldr r3,[r7,#40]
 661 010c 5A1E     	 sub r2,r3,#1
 662 010e BA62     	 str r2,[r7,#40]
 663 0110 7A6A     	 ldr r2,[r7,#36]
 664 0112 511E     	 sub r1,r2,#1
 665 0114 7962     	 str r1,[r7,#36]
 666 0116 1278     	 ldrb r2,[r2]
 667 0118 1A70     	 strb r2,[r3]
 601:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 668              	 .loc 1 601 0
 669 011a 7B6B     	 ldr r3,[r7,#52]
 670 011c 013B     	 sub r3,r3,#1
 671 011e 7B63     	 str r3,[r7,#52]
 672              	.L38:
 599:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 673              	 .loc 1 599 0
 674 0120 7B6B     	 ldr r3,[r7,#52]
 675 0122 002B     	 cmp r3,#0
 676 0124 F1D1     	 bne .L39
 677              	.L27:
 602:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 603:../Dave/Generated/UCPROBE/lib_mem.c **** }
 678              	 .loc 1 603 0
 679 0126 BD46     	 mov sp,r7
 680 0128 0EB0     	 add sp,sp,#56
 681              	 
 682 012a 80BD     	 pop {r7,pc}
 683              	 .cfi_endproc
 684              	.LFE4:
 686              	 .section .text.Mem_Cmp,"ax",%progbits
 687              	 .align 2
 688              	 .global Mem_Cmp
 689              	 .code 16
 690              	 .thumb_func
 692              	Mem_Cmp:
 693              	.LFB5:
 604:../Dave/Generated/UCPROBE/lib_mem.c **** 
 605:../Dave/Generated/UCPROBE/lib_mem.c **** 
 606:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 607:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 608:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Cmp()
 609:../Dave/Generated/UCPROBE/lib_mem.c **** *
 610:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Verifies that ALL data octets in two memory buffers are identical in sequence.
 611:../Dave/Generated/UCPROBE/lib_mem.c **** *
 612:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p1_mem      Pointer to first  memory buffer.
 613:../Dave/Generated/UCPROBE/lib_mem.c **** *
 614:../Dave/Generated/UCPROBE/lib_mem.c **** *               p2_mem      Pointer to second memory buffer.
 615:../Dave/Generated/UCPROBE/lib_mem.c **** *
 616:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to compare (see Note #1).
 617:../Dave/Generated/UCPROBE/lib_mem.c **** *
 618:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : DEF_YES, if 'size' number of data octets are identical in both memory buffers.
 619:../Dave/Generated/UCPROBE/lib_mem.c **** *
 620:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NO,  otherwise.
 621:../Dave/Generated/UCPROBE/lib_mem.c **** *
 622:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 623:../Dave/Generated/UCPROBE/lib_mem.c **** *
 624:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null compares allowed (i.e. zero-length compares); 'DEF_YES' returned to indica
 625:../Dave/Generated/UCPROBE/lib_mem.c **** *                   identical null compare.
 626:../Dave/Generated/UCPROBE/lib_mem.c **** *
 627:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Many memory buffer comparisons vary ONLY in the least significant octets -- e.g
 628:../Dave/Generated/UCPROBE/lib_mem.c **** *                   network address buffers.  Consequently, memory buffer comparison is more effici
 629:../Dave/Generated/UCPROBE/lib_mem.c **** *                   if the comparison starts from the end of the memory buffers which will abort so
 630:../Dave/Generated/UCPROBE/lib_mem.c **** *                   on dissimilar memory buffers that vary only in the least significant octets.
 631:../Dave/Generated/UCPROBE/lib_mem.c **** *
 632:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to compare data buffers using 'CPU_ALIGN'-s
 633:../Dave/Generated/UCPROBE/lib_mem.c **** *                   data words. Since many word-aligned processors REQUIRE that multi-octet words b
 634:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 635:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 636:../Dave/Generated/UCPROBE/lib_mem.c **** *
 637:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 638:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 639:../Dave/Generated/UCPROBE/lib_mem.c **** *
 640:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 641:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 642:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 643:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 644:../Dave/Generated/UCPROBE/lib_mem.c **** */
 645:../Dave/Generated/UCPROBE/lib_mem.c **** 
 646:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_BOOLEAN  Mem_Cmp (const  void        *p1_mem,
 647:../Dave/Generated/UCPROBE/lib_mem.c ****                       const  void        *p2_mem,
 648:../Dave/Generated/UCPROBE/lib_mem.c ****                              CPU_SIZE_T   size)
 649:../Dave/Generated/UCPROBE/lib_mem.c **** {
 694              	 .loc 1 649 0
 695              	 .cfi_startproc
 696 0000 80B5     	 push {r7,lr}
 697              	.LCFI15:
 698              	 .cfi_def_cfa_offset 8
 699              	 .cfi_offset 7,-8
 700              	 .cfi_offset 14,-4
 701 0002 8EB0     	 sub sp,sp,#56
 702              	.LCFI16:
 703              	 .cfi_def_cfa_offset 64
 704 0004 00AF     	 add r7,sp,#0
 705              	.LCFI17:
 706              	 .cfi_def_cfa_register 7
 707 0006 F860     	 str r0,[r7,#12]
 708 0008 B960     	 str r1,[r7,#8]
 709 000a 7A60     	 str r2,[r7,#4]
 650:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 651:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *p1_mem_align;
 652:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *p2_mem_align;
 653:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *p1_mem_08;
 654:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *p2_mem_08;
 655:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      i;
 656:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_1;
 657:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_2;
 658:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 659:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_cmp;
 660:../Dave/Generated/UCPROBE/lib_mem.c **** 
 661:../Dave/Generated/UCPROBE/lib_mem.c **** 
 662:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 710              	 .loc 1 662 0
 711 000c 7B68     	 ldr r3,[r7,#4]
 712 000e 002B     	 cmp r3,#0
 713 0010 01D1     	 bne .L41
 663:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_YES);
 714              	 .loc 1 663 0
 715 0012 0123     	 mov r3,#1
 716 0014 A1E0     	 b .L42
 717              	.L41:
 664:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 665:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p1_mem == (void *)0) {
 718              	 .loc 1 665 0
 719 0016 FB68     	 ldr r3,[r7,#12]
 720 0018 002B     	 cmp r3,#0
 721 001a 01D1     	 bne .L43
 666:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 722              	 .loc 1 666 0
 723 001c 0023     	 mov r3,#0
 724 001e 9CE0     	 b .L42
 725              	.L43:
 667:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 668:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p2_mem == (void *)0) {
 726              	 .loc 1 668 0
 727 0020 BB68     	 ldr r3,[r7,#8]
 728 0022 002B     	 cmp r3,#0
 729 0024 01D1     	 bne .L44
 669:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 730              	 .loc 1 669 0
 731 0026 0023     	 mov r3,#0
 732 0028 97E0     	 b .L42
 733              	.L44:
 670:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 671:../Dave/Generated/UCPROBE/lib_mem.c **** 
 672:../Dave/Generated/UCPROBE/lib_mem.c **** 
 673:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_cmp         =  DEF_YES;                                 /* Assume mem bufs are identical un
 734              	 .loc 1 673 0
 735 002a 1F23     	 mov r3,#31
 736 002c FB18     	 add r3,r7,r3
 737 002e 0122     	 mov r2,#1
 738 0030 1A70     	 strb r2,[r3]
 674:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem        =  size;
 739              	 .loc 1 674 0
 740 0032 7B68     	 ldr r3,[r7,#4]
 741 0034 7B63     	 str r3,[r7,#52]
 675:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Start @ end of mem bufs (see Not
 676:../Dave/Generated/UCPROBE/lib_mem.c ****     p1_mem_08       = (const CPU_INT08U *)p1_mem + size;
 742              	 .loc 1 676 0
 743 0036 FA68     	 ldr r2,[r7,#12]
 744 0038 7B68     	 ldr r3,[r7,#4]
 745 003a D318     	 add r3,r2,r3
 746 003c BB62     	 str r3,[r7,#40]
 677:../Dave/Generated/UCPROBE/lib_mem.c ****     p2_mem_08       = (const CPU_INT08U *)p2_mem + size;
 747              	 .loc 1 677 0
 748 003e BA68     	 ldr r2,[r7,#8]
 749 0040 7B68     	 ldr r3,[r7,#4]
 750 0042 D318     	 add r3,r2,r3
 751 0044 7B62     	 str r3,[r7,#36]
 678:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 679:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_1 = (CPU_INT08U)((CPU_ADDR)p1_mem_08 % sizeof(CPU_ALIGN));
 752              	 .loc 1 679 0
 753 0046 BB6A     	 ldr r3,[r7,#40]
 754 0048 DBB2     	 uxtb r3,r3
 755 004a 1A1C     	 mov r2,r3
 756 004c 0323     	 mov r3,#3
 757 004e 1340     	 and r3,r2
 758 0050 BB61     	 str r3,[r7,#24]
 680:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 759              	 .loc 1 680 0
 760 0052 7B6A     	 ldr r3,[r7,#36]
 761 0054 DBB2     	 uxtb r3,r3
 762 0056 1A1C     	 mov r2,r3
 763 0058 0323     	 mov r3,#3
 764 005a 1340     	 and r3,r2
 765 005c 7B61     	 str r3,[r7,#20]
 681:../Dave/Generated/UCPROBE/lib_mem.c **** 
 682:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_aligned     = (mem_align_mod_1 == mem_align_mod_2) ? DEF_YES : DEF_NO;
 766              	 .loc 1 682 0
 767 005e BA69     	 ldr r2,[r7,#24]
 768 0060 7B69     	 ldr r3,[r7,#20]
 769 0062 9A42     	 cmp r2,r3
 770 0064 01D1     	 bne .L45
 771              	 .loc 1 682 0 is_stmt 0 discriminator 1
 772 0066 0122     	 mov r2,#1
 773 0068 00E0     	 b .L46
 774              	.L45:
 775              	 .loc 1 682 0 discriminator 2
 776 006a 0022     	 mov r2,#0
 777              	.L46:
 778              	 .loc 1 682 0 discriminator 4
 779 006c 1323     	 mov r3,#19
 780 006e FB18     	 add r3,r7,r3
 781 0070 1A70     	 strb r2,[r3]
 683:../Dave/Generated/UCPROBE/lib_mem.c **** 
 684:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_aligned == DEF_YES) {                               /* If mem bufs' alignment offset eq
 782              	 .loc 1 684 0 is_stmt 1 discriminator 4
 783 0072 1323     	 mov r3,#19
 784 0074 FB18     	 add r3,r7,r3
 785 0076 1B78     	 ldrb r3,[r3]
 786 0078 012B     	 cmp r3,#1
 787 007a 4FD1     	 bne .L47
 685:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize cmp for mem buf ali
 686:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_align_mod_1 != 0u) {                            /* If trailing octets avail,       
 788              	 .loc 1 686 0
 789 007c BB69     	 ldr r3,[r7,#24]
 790 007e 002B     	 cmp r3,#0
 791 0080 23D0     	 beq .L48
 687:../Dave/Generated/UCPROBE/lib_mem.c ****             i = mem_align_mod_1;
 792              	 .loc 1 687 0
 793 0082 BB69     	 ldr r3,[r7,#24]
 794 0084 3B62     	 str r3,[r7,#32]
 688:../Dave/Generated/UCPROBE/lib_mem.c ****             while ((mem_cmp == DEF_YES) &&                      /* ... cmp mem bufs while identical
 795              	 .loc 1 688 0
 796 0086 15E0     	 b .L49
 797              	.L51:
 689:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 690:../Dave/Generated/UCPROBE/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 691:../Dave/Generated/UCPROBE/lib_mem.c ****                 p1_mem_08--;
 798              	 .loc 1 691 0
 799 0088 BB6A     	 ldr r3,[r7,#40]
 800 008a 013B     	 sub r3,r3,#1
 801 008c BB62     	 str r3,[r7,#40]
 692:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_08--;
 802              	 .loc 1 692 0
 803 008e 7B6A     	 ldr r3,[r7,#36]
 804 0090 013B     	 sub r3,r3,#1
 805 0092 7B62     	 str r3,[r7,#36]
 693:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_08 != *p2_mem_08) {                 /* If ANY data octet(s) NOT identic
 806              	 .loc 1 693 0
 807 0094 BB6A     	 ldr r3,[r7,#40]
 808 0096 1A78     	 ldrb r2,[r3]
 809 0098 7B6A     	 ldr r3,[r7,#36]
 810 009a 1B78     	 ldrb r3,[r3]
 811 009c 9A42     	 cmp r2,r3
 812 009e 03D0     	 beq .L50
 694:../Dave/Generated/UCPROBE/lib_mem.c ****                      mem_cmp = DEF_NO;
 813              	 .loc 1 694 0
 814 00a0 1F23     	 mov r3,#31
 815 00a2 FB18     	 add r3,r7,r3
 816 00a4 0022     	 mov r2,#0
 817 00a6 1A70     	 strb r2,[r3]
 818              	.L50:
 695:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 696:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem -= sizeof(CPU_INT08U);
 819              	 .loc 1 696 0
 820 00a8 7B6B     	 ldr r3,[r7,#52]
 821 00aa 013B     	 sub r3,r3,#1
 822 00ac 7B63     	 str r3,[r7,#52]
 697:../Dave/Generated/UCPROBE/lib_mem.c ****                 i--;
 823              	 .loc 1 697 0
 824 00ae 3B6A     	 ldr r3,[r7,#32]
 825 00b0 013B     	 sub r3,r3,#1
 826 00b2 3B62     	 str r3,[r7,#32]
 827              	.L49:
 688:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 828              	 .loc 1 688 0
 829 00b4 1F23     	 mov r3,#31
 830 00b6 FB18     	 add r3,r7,r3
 831 00b8 1B78     	 ldrb r3,[r3]
 832 00ba 012B     	 cmp r3,#1
 833 00bc 05D1     	 bne .L48
 688:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 834              	 .loc 1 688 0 is_stmt 0 discriminator 1
 835 00be 7B6B     	 ldr r3,[r7,#52]
 836 00c0 002B     	 cmp r3,#0
 837 00c2 02D0     	 beq .L48
 689:../Dave/Generated/UCPROBE/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 838              	 .loc 1 689 0 is_stmt 1
 839 00c4 3B6A     	 ldr r3,[r7,#32]
 840 00c6 002B     	 cmp r3,#0
 841 00c8 DED1     	 bne .L51
 842              	.L48:
 698:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 699:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 700:../Dave/Generated/UCPROBE/lib_mem.c **** 
 701:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_cmp == DEF_YES) {                               /* If cmp still identical, cmp alig
 843              	 .loc 1 701 0
 844 00ca 1F23     	 mov r3,#31
 845 00cc FB18     	 add r3,r7,r3
 846 00ce 1B78     	 ldrb r3,[r3]
 847 00d0 012B     	 cmp r3,#1
 848 00d2 23D1     	 bne .L47
 702:../Dave/Generated/UCPROBE/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3.                    
 849              	 .loc 1 702 0
 850 00d4 BB6A     	 ldr r3,[r7,#40]
 851 00d6 3B63     	 str r3,[r7,#48]
 703:../Dave/Generated/UCPROBE/lib_mem.c ****             p2_mem_align = (CPU_ALIGN *)p2_mem_08;
 852              	 .loc 1 703 0
 853 00d8 7B6A     	 ldr r3,[r7,#36]
 854 00da FB62     	 str r3,[r7,#44]
 704:../Dave/Generated/UCPROBE/lib_mem.c **** 
 705:../Dave/Generated/UCPROBE/lib_mem.c ****             while ((mem_cmp  == DEF_YES) &&                     /* Cmp mem bufs while identical & .
 855              	 .loc 1 705 0
 856 00dc 12E0     	 b .L52
 857              	.L55:
 706:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 707:../Dave/Generated/UCPROBE/lib_mem.c ****                 p1_mem_align--;
 858              	 .loc 1 707 0
 859 00de 3B6B     	 ldr r3,[r7,#48]
 860 00e0 043B     	 sub r3,r3,#4
 861 00e2 3B63     	 str r3,[r7,#48]
 708:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_align--;
 862              	 .loc 1 708 0
 863 00e4 FB6A     	 ldr r3,[r7,#44]
 864 00e6 043B     	 sub r3,r3,#4
 865 00e8 FB62     	 str r3,[r7,#44]
 709:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_align != *p2_mem_align) {           /* If ANY data octet(s) NOT identic
 866              	 .loc 1 709 0
 867 00ea 3B6B     	 ldr r3,[r7,#48]
 868 00ec 1A68     	 ldr r2,[r3]
 869 00ee FB6A     	 ldr r3,[r7,#44]
 870 00f0 1B68     	 ldr r3,[r3]
 871 00f2 9A42     	 cmp r2,r3
 872 00f4 03D0     	 beq .L53
 710:../Dave/Generated/UCPROBE/lib_mem.c ****                      mem_cmp = DEF_NO;
 873              	 .loc 1 710 0
 874 00f6 1F23     	 mov r3,#31
 875 00f8 FB18     	 add r3,r7,r3
 876 00fa 0022     	 mov r2,#0
 877 00fc 1A70     	 strb r2,[r3]
 878              	.L53:
 711:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 712:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem -= sizeof(CPU_ALIGN);
 879              	 .loc 1 712 0
 880 00fe 7B6B     	 ldr r3,[r7,#52]
 881 0100 043B     	 sub r3,r3,#4
 882 0102 7B63     	 str r3,[r7,#52]
 883              	.L52:
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 884              	 .loc 1 705 0
 885 0104 1F23     	 mov r3,#31
 886 0106 FB18     	 add r3,r7,r3
 887 0108 1B78     	 ldrb r3,[r3]
 888 010a 012B     	 cmp r3,#1
 889 010c 02D1     	 bne .L54
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 890              	 .loc 1 705 0 is_stmt 0 discriminator 1
 891 010e 7B6B     	 ldr r3,[r7,#52]
 892 0110 032B     	 cmp r3,#3
 893 0112 E4D8     	 bhi .L55
 894              	.L54:
 713:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 714:../Dave/Generated/UCPROBE/lib_mem.c **** 
 715:../Dave/Generated/UCPROBE/lib_mem.c ****             p1_mem_08 = (CPU_INT08U *)p1_mem_align;
 895              	 .loc 1 715 0 is_stmt 1
 896 0114 3B6B     	 ldr r3,[r7,#48]
 897 0116 BB62     	 str r3,[r7,#40]
 716:../Dave/Generated/UCPROBE/lib_mem.c ****             p2_mem_08 = (CPU_INT08U *)p2_mem_align;
 898              	 .loc 1 716 0
 899 0118 FB6A     	 ldr r3,[r7,#44]
 900 011a 7B62     	 str r3,[r7,#36]
 901              	.L47:
 717:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 718:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 719:../Dave/Generated/UCPROBE/lib_mem.c **** 
 720:../Dave/Generated/UCPROBE/lib_mem.c ****     while ((mem_cmp == DEF_YES) &&                              /* Cmp mem bufs while identical ...
 902              	 .loc 1 720 0
 903 011c 12E0     	 b .L56
 904              	.L59:
 721:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 722:../Dave/Generated/UCPROBE/lib_mem.c ****         p1_mem_08--;
 905              	 .loc 1 722 0
 906 011e BB6A     	 ldr r3,[r7,#40]
 907 0120 013B     	 sub r3,r3,#1
 908 0122 BB62     	 str r3,[r7,#40]
 723:../Dave/Generated/UCPROBE/lib_mem.c ****         p2_mem_08--;
 909              	 .loc 1 723 0
 910 0124 7B6A     	 ldr r3,[r7,#36]
 911 0126 013B     	 sub r3,r3,#1
 912 0128 7B62     	 str r3,[r7,#36]
 724:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p1_mem_08 != *p2_mem_08) {                         /* If ANY data octet(s) NOT identic
 913              	 .loc 1 724 0
 914 012a BB6A     	 ldr r3,[r7,#40]
 915 012c 1A78     	 ldrb r2,[r3]
 916 012e 7B6A     	 ldr r3,[r7,#36]
 917 0130 1B78     	 ldrb r3,[r3]
 918 0132 9A42     	 cmp r2,r3
 919 0134 03D0     	 beq .L57
 725:../Dave/Generated/UCPROBE/lib_mem.c ****              mem_cmp = DEF_NO;
 920              	 .loc 1 725 0
 921 0136 1F23     	 mov r3,#31
 922 0138 FB18     	 add r3,r7,r3
 923 013a 0022     	 mov r2,#0
 924 013c 1A70     	 strb r2,[r3]
 925              	.L57:
 726:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 727:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem -= sizeof(CPU_INT08U);
 926              	 .loc 1 727 0
 927 013e 7B6B     	 ldr r3,[r7,#52]
 928 0140 013B     	 sub r3,r3,#1
 929 0142 7B63     	 str r3,[r7,#52]
 930              	.L56:
 720:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 931              	 .loc 1 720 0
 932 0144 1F23     	 mov r3,#31
 933 0146 FB18     	 add r3,r7,r3
 934 0148 1B78     	 ldrb r3,[r3]
 935 014a 012B     	 cmp r3,#1
 936 014c 02D1     	 bne .L58
 720:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 937              	 .loc 1 720 0 is_stmt 0 discriminator 1
 938 014e 7B6B     	 ldr r3,[r7,#52]
 939 0150 002B     	 cmp r3,#0
 940 0152 E4D1     	 bne .L59
 941              	.L58:
 728:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 729:../Dave/Generated/UCPROBE/lib_mem.c **** 
 730:../Dave/Generated/UCPROBE/lib_mem.c ****     return (mem_cmp);
 942              	 .loc 1 730 0 is_stmt 1
 943 0154 1F23     	 mov r3,#31
 944 0156 FB18     	 add r3,r7,r3
 945 0158 1B78     	 ldrb r3,[r3]
 946              	.L42:
 731:../Dave/Generated/UCPROBE/lib_mem.c **** }
 947              	 .loc 1 731 0
 948 015a 181C     	 mov r0,r3
 949 015c BD46     	 mov sp,r7
 950 015e 0EB0     	 add sp,sp,#56
 951              	 
 952 0160 80BD     	 pop {r7,pc}
 953              	 .cfi_endproc
 954              	.LFE5:
 956 0162 C046     	 .section .text.Mem_HeapAlloc,"ax",%progbits
 957              	 .align 2
 958              	 .global Mem_HeapAlloc
 959              	 .code 16
 960              	 .thumb_func
 962              	Mem_HeapAlloc:
 963              	.LFB6:
 732:../Dave/Generated/UCPROBE/lib_mem.c **** 
 733:../Dave/Generated/UCPROBE/lib_mem.c **** 
 734:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 735:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 736:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_HeapAlloc()
 737:../Dave/Generated/UCPROBE/lib_mem.c **** *
 738:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates a memory block from the heap memory segment.
 739:../Dave/Generated/UCPROBE/lib_mem.c **** *
 740:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : size            Size      of memory block to allocate (in bytes).
 741:../Dave/Generated/UCPROBE/lib_mem.c **** *
 742:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Alignment of memory block to specific word boundary (in bytes).
 743:../Dave/Generated/UCPROBE/lib_mem.c **** *
 744:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
 745:../Dave/Generated/UCPROBE/lib_mem.c **** *
 746:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
 747:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           allocate the memory block, if any error(s);
 748:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (b) Return 0, otherwise.
 749:../Dave/Generated/UCPROBE/lib_mem.c **** *
 750:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 751:../Dave/Generated/UCPROBE/lib_mem.c **** *
 752:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
 753:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY          No more memory available on hea
 754:../Dave/Generated/UCPROBE/lib_mem.c **** *
 755:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegAllocInternal()--------
 756:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
 757:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
 758:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
 759:../Dave/Generated/UCPROBE/lib_mem.c **** *
 760:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
 761:../Dave/Generated/UCPROBE/lib_mem.c **** *
 762:../Dave/Generated/UCPROBE/lib_mem.c **** *               Pointer to NULL,         otherwise.
 763:../Dave/Generated/UCPROBE/lib_mem.c **** *
 764:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 765:../Dave/Generated/UCPROBE/lib_mem.c **** *
 766:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Pointers to variables that return values MUST be initialized PRIOR to all other
 767:../Dave/Generated/UCPROBE/lib_mem.c **** *                   validation or function handling in case of any error(s).
 768:../Dave/Generated/UCPROBE/lib_mem.c **** *
 769:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) This function is DEPRECATED and will be removed in a future version of this pro
 770:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegAlloc(), Mem_SegAllocExt() or Mem_SegAllocHW() should be used instead.
 771:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 772:../Dave/Generated/UCPROBE/lib_mem.c **** */
 773:../Dave/Generated/UCPROBE/lib_mem.c **** 
 774:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 775:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_HeapAlloc (CPU_SIZE_T   size,
 776:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T   align,
 777:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T  *p_bytes_reqd,
 778:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR     *p_err)
 779:../Dave/Generated/UCPROBE/lib_mem.c **** {
 964              	 .loc 1 779 0
 965              	 .cfi_startproc
 966 0000 90B5     	 push {r4,r7,lr}
 967              	.LCFI18:
 968              	 .cfi_def_cfa_offset 12
 969              	 .cfi_offset 4,-12
 970              	 .cfi_offset 7,-8
 971              	 .cfi_offset 14,-4
 972 0002 8BB0     	 sub sp,sp,#44
 973              	.LCFI19:
 974              	 .cfi_def_cfa_offset 56
 975 0004 04AF     	 add r7,sp,#16
 976              	.LCFI20:
 977              	 .cfi_def_cfa 7,40
 978 0006 F860     	 str r0,[r7,#12]
 979 0008 B960     	 str r1,[r7,#8]
 980 000a 7A60     	 str r2,[r7,#4]
 981 000c 3B60     	 str r3,[r7]
 780:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_mem;
 781:../Dave/Generated/UCPROBE/lib_mem.c **** 
 782:../Dave/Generated/UCPROBE/lib_mem.c **** 
 783:../Dave/Generated/UCPROBE/lib_mem.c ****     p_mem = Mem_SegAllocInternal(DEF_NULL,
 982              	 .loc 1 783 0
 983 000e 0E49     	 ldr r1,.L63
 984 0010 FA68     	 ldr r2,[r7,#12]
 985 0012 BC68     	 ldr r4,[r7,#8]
 986 0014 0123     	 mov r3,#1
 987 0016 0093     	 str r3,[sp]
 988 0018 7B68     	 ldr r3,[r7,#4]
 989 001a 0193     	 str r3,[sp,#4]
 990 001c 3B68     	 ldr r3,[r7]
 991 001e 0293     	 str r3,[sp,#8]
 992 0020 0020     	 mov r0,#0
 993 0022 231C     	 mov r3,r4
 994 0024 FFF7FEFF 	 bl Mem_SegAllocInternal
 995 0028 031C     	 mov r3,r0
 996 002a 7B61     	 str r3,[r7,#20]
 784:../Dave/Generated/UCPROBE/lib_mem.c ****                                 &Mem_SegHeap,
 785:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
 786:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
 787:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_CFG_HEAP_PADDING_ALIGN,
 788:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
 789:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
 790:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err == LIB_MEM_ERR_SEG_OVF) {
 997              	 .loc 1 790 0
 998 002c 3B68     	 ldr r3,[r7]
 999 002e 1B88     	 ldrh r3,[r3]
 1000 0030 064A     	 ldr r2,.L63+4
 1001 0032 9342     	 cmp r3,r2
 1002 0034 02D1     	 bne .L61
 791:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 1003              	 .loc 1 791 0
 1004 0036 3B68     	 ldr r3,[r7]
 1005 0038 054A     	 ldr r2,.L63+8
 1006 003a 1A80     	 strh r2,[r3]
 1007              	.L61:
 792:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 793:../Dave/Generated/UCPROBE/lib_mem.c **** 
 794:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_mem);
 1008              	 .loc 1 794 0
 1009 003c 7B69     	 ldr r3,[r7,#20]
 795:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1010              	 .loc 1 795 0
 1011 003e 181C     	 mov r0,r3
 1012 0040 BD46     	 mov sp,r7
 1013 0042 07B0     	 add sp,sp,#28
 1014              	 
 1015 0044 90BD     	 pop {r4,r7,pc}
 1016              	.L64:
 1017 0046 C046     	 .align 2
 1018              	.L63:
 1019 0048 00000000 	 .word Mem_SegHeap
 1020 004c D9270000 	 .word 10201
 1021 0050 E3270000 	 .word 10211
 1022              	 .cfi_endproc
 1023              	.LFE6:
 1025              	 .section .text.Mem_HeapGetSizeRem,"ax",%progbits
 1026              	 .align 2
 1027              	 .global Mem_HeapGetSizeRem
 1028              	 .code 16
 1029              	 .thumb_func
 1031              	Mem_HeapGetSizeRem:
 1032              	.LFB7:
 796:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 797:../Dave/Generated/UCPROBE/lib_mem.c **** 
 798:../Dave/Generated/UCPROBE/lib_mem.c **** 
 799:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 800:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 801:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        Mem_HeapGetSizeRem()
 802:../Dave/Generated/UCPROBE/lib_mem.c **** *
 803:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets remaining heap memory size available to allocate.
 804:../Dave/Generated/UCPROBE/lib_mem.c **** *
 805:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : align       Desired word boundary alignment (in bytes) to return remaining memory s
 806:../Dave/Generated/UCPROBE/lib_mem.c **** *
 807:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 808:../Dave/Generated/UCPROBE/lib_mem.c **** *
 809:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 810:../Dave/Generated/UCPROBE/lib_mem.c **** *
 811:../Dave/Generated/UCPROBE/lib_mem.c **** *                               --------------------RETURNED BY Mem_SegRemSizeGet()----------------
 812:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 813:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
 814:../Dave/Generated/UCPROBE/lib_mem.c **** *
 815:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Remaining heap memory size (in bytes), if NO error(s).
 816:../Dave/Generated/UCPROBE/lib_mem.c **** *
 817:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                                     otherwise.
 818:../Dave/Generated/UCPROBE/lib_mem.c **** *
 819:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 820:../Dave/Generated/UCPROBE/lib_mem.c **** *
 821:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
 822:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegRemSizeGet() should be used instead.
 823:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 824:../Dave/Generated/UCPROBE/lib_mem.c **** */
 825:../Dave/Generated/UCPROBE/lib_mem.c **** 
 826:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 827:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_HeapGetSizeRem (CPU_SIZE_T   align,
 828:../Dave/Generated/UCPROBE/lib_mem.c ****                                 LIB_ERR     *p_err)
 829:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1033              	 .loc 1 829 0
 1034              	 .cfi_startproc
 1035 0000 80B5     	 push {r7,lr}
 1036              	.LCFI21:
 1037              	 .cfi_def_cfa_offset 8
 1038              	 .cfi_offset 7,-8
 1039              	 .cfi_offset 14,-4
 1040 0002 84B0     	 sub sp,sp,#16
 1041              	.LCFI22:
 1042              	 .cfi_def_cfa_offset 24
 1043 0004 00AF     	 add r7,sp,#0
 1044              	.LCFI23:
 1045              	 .cfi_def_cfa_register 7
 1046 0006 7860     	 str r0,[r7,#4]
 1047 0008 3960     	 str r1,[r7]
 830:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
 831:../Dave/Generated/UCPROBE/lib_mem.c **** 
 832:../Dave/Generated/UCPROBE/lib_mem.c **** 
 833:../Dave/Generated/UCPROBE/lib_mem.c ****     rem_size = Mem_SegRemSizeGet(&Mem_SegHeap,
 1048              	 .loc 1 833 0
 1049 000a 0B49     	 ldr r1,.L68
 1050 000c 7A68     	 ldr r2,[r7,#4]
 1051 000e 3B68     	 ldr r3,[r7]
 1052 0010 081C     	 mov r0,r1
 1053 0012 111C     	 mov r1,r2
 1054 0014 0022     	 mov r2,#0
 1055 0016 FFF7FEFF 	 bl Mem_SegRemSizeGet
 1056 001a 031C     	 mov r3,r0
 1057 001c FB60     	 str r3,[r7,#12]
 834:../Dave/Generated/UCPROBE/lib_mem.c ****                                   align,
 835:../Dave/Generated/UCPROBE/lib_mem.c ****                                   DEF_NULL,
 836:../Dave/Generated/UCPROBE/lib_mem.c ****                                   p_err);
 837:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1058              	 .loc 1 837 0
 1059 001e 3B68     	 ldr r3,[r7]
 1060 0020 1B88     	 ldrh r3,[r3]
 1061 0022 064A     	 ldr r2,.L68+4
 1062 0024 9342     	 cmp r3,r2
 1063 0026 01D0     	 beq .L66
 838:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
 1064              	 .loc 1 838 0
 1065 0028 0023     	 mov r3,#0
 1066 002a 00E0     	 b .L67
 1067              	.L66:
 839:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 840:../Dave/Generated/UCPROBE/lib_mem.c **** 
 841:../Dave/Generated/UCPROBE/lib_mem.c ****     return (rem_size);
 1068              	 .loc 1 841 0
 1069 002c FB68     	 ldr r3,[r7,#12]
 1070              	.L67:
 842:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1071              	 .loc 1 842 0
 1072 002e 181C     	 mov r0,r3
 1073 0030 BD46     	 mov sp,r7
 1074 0032 04B0     	 add sp,sp,#16
 1075              	 
 1076 0034 80BD     	 pop {r7,pc}
 1077              	.L69:
 1078 0036 C046     	 .align 2
 1079              	.L68:
 1080 0038 00000000 	 .word Mem_SegHeap
 1081 003c 10270000 	 .word 10000
 1082              	 .cfi_endproc
 1083              	.LFE7:
 1085              	 .section .text.Mem_SegCreate,"ax",%progbits
 1086              	 .align 2
 1087              	 .global Mem_SegCreate
 1088              	 .code 16
 1089              	 .thumb_func
 1091              	Mem_SegCreate:
 1092              	.LFB8:
 843:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 844:../Dave/Generated/UCPROBE/lib_mem.c **** 
 845:../Dave/Generated/UCPROBE/lib_mem.c **** 
 846:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 847:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 848:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegCreate()
 849:../Dave/Generated/UCPROBE/lib_mem.c **** *
 850:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation.
 851:../Dave/Generated/UCPROBE/lib_mem.c **** *
 852:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
 853:../Dave/Generated/UCPROBE/lib_mem.c **** *
 854:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
 855:../Dave/Generated/UCPROBE/lib_mem.c **** *
 856:../Dave/Generated/UCPROBE/lib_mem.c **** *               seg_base_addr   Address of segment's first byte.
 857:../Dave/Generated/UCPROBE/lib_mem.c **** *
 858:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Total size of segment, in bytes.
 859:../Dave/Generated/UCPROBE/lib_mem.c **** *
 860:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
 861:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
 862:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
 863:../Dave/Generated/UCPROBE/lib_mem.c **** *
 864:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 865:../Dave/Generated/UCPROBE/lib_mem.c **** *
 866:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
 867:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size specif
 868:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid padding alignment.
 869:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
 870:../Dave/Generated/UCPROBE/lib_mem.c **** *
 871:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -------------------RETURNED BY Mem_SegOverlapChkCritical()-----
 872:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
 873:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
 874:../Dave/Generated/UCPROBE/lib_mem.c **** *
 875:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
 876:../Dave/Generated/UCPROBE/lib_mem.c **** *
 877:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 878:../Dave/Generated/UCPROBE/lib_mem.c **** *
 879:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) New segments are checked for overlap with existing segments. A critical section
 880:../Dave/Generated/UCPROBE/lib_mem.c **** *                   to be maintained during the whole list search and add procedure to prevent a re
 881:../Dave/Generated/UCPROBE/lib_mem.c **** *                   call from creating another segment overlapping with the one being added.
 882:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 883:../Dave/Generated/UCPROBE/lib_mem.c **** */
 884:../Dave/Generated/UCPROBE/lib_mem.c **** 
 885:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_SegCreate (const  CPU_CHAR    *p_name,
 886:../Dave/Generated/UCPROBE/lib_mem.c ****                             MEM_SEG     *p_seg,
 887:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_ADDR     seg_base_addr,
 888:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   size,
 889:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   padding_align,
 890:../Dave/Generated/UCPROBE/lib_mem.c ****                             LIB_ERR     *p_err)
 891:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1093              	 .loc 1 891 0
 1094              	 .cfi_startproc
 1095 0000 90B5     	 push {r4,r7,lr}
 1096              	.LCFI24:
 1097              	 .cfi_def_cfa_offset 12
 1098              	 .cfi_offset 4,-12
 1099              	 .cfi_offset 7,-8
 1100              	 .cfi_offset 14,-4
 1101 0002 89B0     	 sub sp,sp,#36
 1102              	.LCFI25:
 1103              	 .cfi_def_cfa_offset 48
 1104 0004 02AF     	 add r7,sp,#8
 1105              	.LCFI26:
 1106              	 .cfi_def_cfa 7,40
 1107 0006 F860     	 str r0,[r7,#12]
 1108 0008 B960     	 str r1,[r7,#8]
 1109 000a 7A60     	 str r2,[r7,#4]
 1110 000c 3B60     	 str r3,[r7]
 892:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1111              	 .loc 1 892 0
 1112 000e 0023     	 mov r3,#0
 1113 0010 7B61     	 str r3,[r7,#20]
 893:../Dave/Generated/UCPROBE/lib_mem.c **** 
 894:../Dave/Generated/UCPROBE/lib_mem.c **** 
 895:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 896:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 897:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 898:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 899:../Dave/Generated/UCPROBE/lib_mem.c **** 
 900:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 901:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 902:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 903:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 904:../Dave/Generated/UCPROBE/lib_mem.c **** 
 905:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized seg.      
 906:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 907:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 908:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 909:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Chk for addr space ovf.         
 910:../Dave/Generated/UCPROBE/lib_mem.c ****     if (seg_base_addr + (size - 1u) < seg_base_addr) {
 911:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 912:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 913:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 914:../Dave/Generated/UCPROBE/lib_mem.c **** 
 915:../Dave/Generated/UCPROBE/lib_mem.c ****     if ((padding_align               != LIB_MEM_PADDING_ALIGN_NONE) &&
 916:../Dave/Generated/UCPROBE/lib_mem.c ****         (MATH_IS_PWR2(padding_align) != DEF_YES)) {
 917:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
 918:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 919:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 920:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 921:../Dave/Generated/UCPROBE/lib_mem.c **** 
 922:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1114              	 .loc 1 922 0
 1115 0012 FFF7FEFF 	 bl CPU_SR_Save
 1116 0016 031C     	 mov r3,r0
 1117 0018 7B61     	 str r3,[r7,#20]
 923:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 924:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)Mem_SegOverlapChkCritical(seg_base_addr,              /* Chk for overlap.                
 925:../Dave/Generated/UCPROBE/lib_mem.c ****                                     size,
 926:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_err);
 927:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 928:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 929:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 930:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 931:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 932:../Dave/Generated/UCPROBE/lib_mem.c **** 
 933:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegCreateCritical(p_name,                               /* Create seg.                     
 1118              	 .loc 1 933 0
 1119 001a F868     	 ldr r0,[r7,#12]
 1120 001c B968     	 ldr r1,[r7,#8]
 1121 001e 7A68     	 ldr r2,[r7,#4]
 1122 0020 BC6A     	 ldr r4,[r7,#40]
 1123 0022 3B68     	 ldr r3,[r7]
 1124 0024 0093     	 str r3,[sp]
 1125 0026 231C     	 mov r3,r4
 1126 0028 FFF7FEFF 	 bl Mem_SegCreateCritical
 934:../Dave/Generated/UCPROBE/lib_mem.c ****                           p_seg,
 935:../Dave/Generated/UCPROBE/lib_mem.c ****                           seg_base_addr,
 936:../Dave/Generated/UCPROBE/lib_mem.c ****                           padding_align,
 937:../Dave/Generated/UCPROBE/lib_mem.c ****                           size);
 938:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1127              	 .loc 1 938 0
 1128 002c 7B69     	 ldr r3,[r7,#20]
 1129 002e 181C     	 mov r0,r3
 1130 0030 FFF7FEFF 	 bl CPU_SR_Restore
 939:../Dave/Generated/UCPROBE/lib_mem.c **** 
 940:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1131              	 .loc 1 940 0
 1132 0034 FB6A     	 ldr r3,[r7,#44]
 1133 0036 024A     	 ldr r2,.L71
 1134 0038 1A80     	 strh r2,[r3]
 941:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1135              	 .loc 1 941 0
 1136 003a BD46     	 mov sp,r7
 1137 003c 07B0     	 add sp,sp,#28
 1138              	 
 1139 003e 90BD     	 pop {r4,r7,pc}
 1140              	.L72:
 1141              	 .align 2
 1142              	.L71:
 1143 0040 10270000 	 .word 10000
 1144              	 .cfi_endproc
 1145              	.LFE8:
 1147              	 .section .text.Mem_SegClr,"ax",%progbits
 1148              	 .align 2
 1149              	 .global Mem_SegClr
 1150              	 .code 16
 1151              	 .thumb_func
 1153              	Mem_SegClr:
 1154              	.LFB9:
 942:../Dave/Generated/UCPROBE/lib_mem.c **** 
 943:../Dave/Generated/UCPROBE/lib_mem.c **** 
 944:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 945:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 946:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegClr()
 947:../Dave/Generated/UCPROBE/lib_mem.c **** *
 948:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears a memory segment.
 949:../Dave/Generated/UCPROBE/lib_mem.c **** *
 950:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment data. Must be allocated by caller.
 951:../Dave/Generated/UCPROBE/lib_mem.c **** *
 952:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 953:../Dave/Generated/UCPROBE/lib_mem.c **** *
 954:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 955:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 956:../Dave/Generated/UCPROBE/lib_mem.c **** *
 957:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
 958:../Dave/Generated/UCPROBE/lib_mem.c **** *
 959:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 960:../Dave/Generated/UCPROBE/lib_mem.c **** *
 961:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function must be used with extreme caution. It must only be called on memo
 962:../Dave/Generated/UCPROBE/lib_mem.c **** *                   segments that are no longer used.
 963:../Dave/Generated/UCPROBE/lib_mem.c **** *
 964:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) This function is disabled when debug mode is enabled to avoid heap memory leaks
 965:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 966:../Dave/Generated/UCPROBE/lib_mem.c **** */
 967:../Dave/Generated/UCPROBE/lib_mem.c **** 
 968:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_DISABLED)
 969:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_SegClr (MEM_SEG  *p_seg,
 970:../Dave/Generated/UCPROBE/lib_mem.c ****                   LIB_ERR  *p_err)
 971:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1155              	 .loc 1 971 0
 1156              	 .cfi_startproc
 1157 0000 80B5     	 push {r7,lr}
 1158              	.LCFI27:
 1159              	 .cfi_def_cfa_offset 8
 1160              	 .cfi_offset 7,-8
 1161              	 .cfi_offset 14,-4
 1162 0002 84B0     	 sub sp,sp,#16
 1163              	.LCFI28:
 1164              	 .cfi_def_cfa_offset 24
 1165 0004 00AF     	 add r7,sp,#0
 1166              	.LCFI29:
 1167              	 .cfi_def_cfa_register 7
 1168 0006 7860     	 str r0,[r7,#4]
 1169 0008 3960     	 str r1,[r7]
 972:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1170              	 .loc 1 972 0
 1171 000a 0023     	 mov r3,#0
 1172 000c FB60     	 str r3,[r7,#12]
 973:../Dave/Generated/UCPROBE/lib_mem.c **** 
 974:../Dave/Generated/UCPROBE/lib_mem.c **** 
 975:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 976:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 977:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 978:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 979:../Dave/Generated/UCPROBE/lib_mem.c **** 
 980:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 981:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 982:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 983:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 984:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 985:../Dave/Generated/UCPROBE/lib_mem.c **** 
 986:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1173              	 .loc 1 986 0
 1174 000e FFF7FEFF 	 bl CPU_SR_Save
 1175 0012 031C     	 mov r3,r0
 1176 0014 FB60     	 str r3,[r7,#12]
 987:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1177              	 .loc 1 987 0
 1178 0016 7B68     	 ldr r3,[r7,#4]
 1179 0018 1A68     	 ldr r2,[r3]
 1180 001a 7B68     	 ldr r3,[r7,#4]
 1181 001c 9A60     	 str r2,[r3,#8]
 988:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1182              	 .loc 1 988 0
 1183 001e FB68     	 ldr r3,[r7,#12]
 1184 0020 181C     	 mov r0,r3
 1185 0022 FFF7FEFF 	 bl CPU_SR_Restore
 989:../Dave/Generated/UCPROBE/lib_mem.c **** 
 990:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1186              	 .loc 1 990 0
 1187 0026 3B68     	 ldr r3,[r7]
 1188 0028 024A     	 ldr r2,.L74
 1189 002a 1A80     	 strh r2,[r3]
 991:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1190              	 .loc 1 991 0
 1191 002c BD46     	 mov sp,r7
 1192 002e 04B0     	 add sp,sp,#16
 1193              	 
 1194 0030 80BD     	 pop {r7,pc}
 1195              	.L75:
 1196 0032 C046     	 .align 2
 1197              	.L74:
 1198 0034 10270000 	 .word 10000
 1199              	 .cfi_endproc
 1200              	.LFE9:
 1202              	 .section .text.Mem_SegRemSizeGet,"ax",%progbits
 1203              	 .align 2
 1204              	 .global Mem_SegRemSizeGet
 1205              	 .code 16
 1206              	 .thumb_func
 1208              	Mem_SegRemSizeGet:
 1209              	.LFB10:
 992:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 993:../Dave/Generated/UCPROBE/lib_mem.c **** 
 994:../Dave/Generated/UCPROBE/lib_mem.c **** 
 995:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 996:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 997:../Dave/Generated/UCPROBE/lib_mem.c **** *                                         Mem_SegRemSizeGet()
 998:../Dave/Generated/UCPROBE/lib_mem.c **** *
 999:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets free space of memory segment.
1000:../Dave/Generated/UCPROBE/lib_mem.c **** *
1001:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg       Pointer to segment data.
1002:../Dave/Generated/UCPROBE/lib_mem.c **** *
1003:../Dave/Generated/UCPROBE/lib_mem.c **** *               align       Alignment in bytes to assume for calculation of free space.
1004:../Dave/Generated/UCPROBE/lib_mem.c **** *
1005:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg_info  Pointer to structure that will receive further segment info data (used 
1006:../Dave/Generated/UCPROBE/lib_mem.c **** *                           total size, base address and next allocation address).
1007:../Dave/Generated/UCPROBE/lib_mem.c **** *
1008:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1009:../Dave/Generated/UCPROBE/lib_mem.c **** *
1010:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1011:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
1012:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
1013:../Dave/Generated/UCPROBE/lib_mem.c **** *
1014:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Memory segment remaining size in bytes,     if successful.
1015:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                                          otherwise or if memory segment empty.
1016:../Dave/Generated/UCPROBE/lib_mem.c **** *
1017:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application,
1018:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_HeapGetSizeRem(),
1019:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_OutputUsage().
1020:../Dave/Generated/UCPROBE/lib_mem.c **** *
1021:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : None.
1022:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1023:../Dave/Generated/UCPROBE/lib_mem.c **** */
1024:../Dave/Generated/UCPROBE/lib_mem.c **** 
1025:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_SegRemSizeGet (MEM_SEG       *p_seg,
1026:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T     align,
1027:../Dave/Generated/UCPROBE/lib_mem.c ****                                MEM_SEG_INFO  *p_seg_info,
1028:../Dave/Generated/UCPROBE/lib_mem.c ****                                LIB_ERR       *p_err)
1029:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1210              	 .loc 1 1029 0
 1211              	 .cfi_startproc
 1212 0000 80B5     	 push {r7,lr}
 1213              	.LCFI30:
 1214              	 .cfi_def_cfa_offset 8
 1215              	 .cfi_offset 7,-8
 1216              	 .cfi_offset 14,-4
 1217 0002 8AB0     	 sub sp,sp,#40
 1218              	.LCFI31:
 1219              	 .cfi_def_cfa_offset 48
 1220 0004 00AF     	 add r7,sp,#0
 1221              	.LCFI32:
 1222              	 .cfi_def_cfa_register 7
 1223 0006 F860     	 str r0,[r7,#12]
 1224 0008 B960     	 str r1,[r7,#8]
 1225 000a 7A60     	 str r2,[r7,#4]
 1226 000c 3B60     	 str r3,[r7]
1030:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
1031:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  total_size;
1032:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  used_size;
1033:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    next_addr_align;
1034:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1227              	 .loc 1 1034 0
 1228 000e 0023     	 mov r3,#0
 1229 0010 7B62     	 str r3,[r7,#36]
1035:../Dave/Generated/UCPROBE/lib_mem.c **** 
1036:../Dave/Generated/UCPROBE/lib_mem.c **** 
1037:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1038:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
1039:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(seg_info);
1040:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1041:../Dave/Generated/UCPROBE/lib_mem.c **** 
1042:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk for invalid align val.      
1043:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
1044:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1045:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1046:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1047:../Dave/Generated/UCPROBE/lib_mem.c **** 
1048:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Dflt to heap in case p_seg is nu
 1230              	 .loc 1 1048 0
 1231 0012 FB68     	 ldr r3,[r7,#12]
 1232 0014 002B     	 cmp r3,#0
 1233 0016 01D1     	 bne .L77
1049:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1050:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1234              	 .loc 1 1050 0
 1235 0018 204B     	 ldr r3,.L82
 1236 001a FB60     	 str r3,[r7,#12]
 1237              	.L77:
1051:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1052:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1053:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1054:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1055:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1056:../Dave/Generated/UCPROBE/lib_mem.c **** 
1057:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Calc seg stats.                 
 1238              	 .loc 1 1057 0
 1239 001c FFF7FEFF 	 bl CPU_SR_Save
 1240 0020 031C     	 mov r3,r0
 1241 0022 7B62     	 str r3,[r7,#36]
1058:../Dave/Generated/UCPROBE/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1242              	 .loc 1 1058 0
 1243 0024 FB68     	 ldr r3,[r7,#12]
 1244 0026 9B68     	 ldr r3,[r3,#8]
 1245 0028 BA68     	 ldr r2,[r7,#8]
 1246 002a 5242     	 neg r2,r2
 1247 002c 1A40     	 and r2,r3
 1248 002e FB68     	 ldr r3,[r7,#12]
 1249 0030 9B68     	 ldr r3,[r3,#8]
 1250 0032 B968     	 ldr r1,[r7,#8]
 1251 0034 0139     	 sub r1,r1,#1
 1252 0036 0B40     	 and r3,r1
 1253 0038 01D0     	 beq .L78
 1254              	 .loc 1 1058 0 is_stmt 0 discriminator 1
 1255 003a BB68     	 ldr r3,[r7,#8]
 1256 003c 00E0     	 b .L79
 1257              	.L78:
 1258              	 .loc 1 1058 0 discriminator 2
 1259 003e 0023     	 mov r3,#0
 1260              	.L79:
 1261              	 .loc 1 1058 0 discriminator 4
 1262 0040 D318     	 add r3,r2,r3
 1263 0042 3B62     	 str r3,[r7,#32]
1059:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1264              	 .loc 1 1059 0 is_stmt 1 discriminator 4
 1265 0044 7B6A     	 ldr r3,[r7,#36]
 1266 0046 181C     	 mov r0,r3
 1267 0048 FFF7FEFF 	 bl CPU_SR_Restore
1060:../Dave/Generated/UCPROBE/lib_mem.c **** 
1061:../Dave/Generated/UCPROBE/lib_mem.c ****     total_size = p_seg->AddrEnd  - p_seg->AddrBase + 1u;
 1268              	 .loc 1 1061 0 discriminator 4
 1269 004c FB68     	 ldr r3,[r7,#12]
 1270 004e 5A68     	 ldr r2,[r3,#4]
 1271 0050 FB68     	 ldr r3,[r7,#12]
 1272 0052 1B68     	 ldr r3,[r3]
 1273 0054 D31A     	 sub r3,r2,r3
 1274 0056 0133     	 add r3,r3,#1
 1275 0058 FB61     	 str r3,[r7,#28]
1062:../Dave/Generated/UCPROBE/lib_mem.c ****     used_size  = next_addr_align - p_seg->AddrBase;
 1276              	 .loc 1 1062 0 discriminator 4
 1277 005a FB68     	 ldr r3,[r7,#12]
 1278 005c 1B68     	 ldr r3,[r3]
 1279 005e 3A6A     	 ldr r2,[r7,#32]
 1280 0060 D31A     	 sub r3,r2,r3
 1281 0062 BB61     	 str r3,[r7,#24]
1063:../Dave/Generated/UCPROBE/lib_mem.c ****     rem_size   = total_size      - used_size;
 1282              	 .loc 1 1063 0 discriminator 4
 1283 0064 FA69     	 ldr r2,[r7,#28]
 1284 0066 BB69     	 ldr r3,[r7,#24]
 1285 0068 D31A     	 sub r3,r2,r3
 1286 006a 7B61     	 str r3,[r7,#20]
1064:../Dave/Generated/UCPROBE/lib_mem.c **** 
1065:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg_info != DEF_NULL) {
 1287              	 .loc 1 1065 0 discriminator 4
 1288 006c 7B68     	 ldr r3,[r7,#4]
 1289 006e 002B     	 cmp r3,#0
 1290 0070 0CD0     	 beq .L80
1066:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->TotalSize     = total_size;
 1291              	 .loc 1 1066 0
 1292 0072 7B68     	 ldr r3,[r7,#4]
 1293 0074 FA69     	 ldr r2,[r7,#28]
 1294 0076 5A60     	 str r2,[r3,#4]
1067:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->UsedSize      = used_size;
 1295              	 .loc 1 1067 0
 1296 0078 7B68     	 ldr r3,[r7,#4]
 1297 007a BA69     	 ldr r2,[r7,#24]
 1298 007c 1A60     	 str r2,[r3]
1068:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrBase      = p_seg->AddrBase;
 1299              	 .loc 1 1068 0
 1300 007e FB68     	 ldr r3,[r7,#12]
 1301 0080 1A68     	 ldr r2,[r3]
 1302 0082 7B68     	 ldr r3,[r7,#4]
 1303 0084 9A60     	 str r2,[r3,#8]
1069:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
 1304              	 .loc 1 1069 0
 1305 0086 7B68     	 ldr r3,[r7,#4]
 1306 0088 3A6A     	 ldr r2,[r7,#32]
 1307 008a DA60     	 str r2,[r3,#12]
 1308              	.L80:
1070:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1071:../Dave/Generated/UCPROBE/lib_mem.c **** 
1072:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1309              	 .loc 1 1072 0
 1310 008c 3B68     	 ldr r3,[r7]
 1311 008e 044A     	 ldr r2,.L82+4
 1312 0090 1A80     	 strh r2,[r3]
1073:../Dave/Generated/UCPROBE/lib_mem.c **** 
1074:../Dave/Generated/UCPROBE/lib_mem.c ****     return (rem_size);
 1313              	 .loc 1 1074 0
 1314 0092 7B69     	 ldr r3,[r7,#20]
1075:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1315              	 .loc 1 1075 0
 1316 0094 181C     	 mov r0,r3
 1317 0096 BD46     	 mov sp,r7
 1318 0098 0AB0     	 add sp,sp,#40
 1319              	 
 1320 009a 80BD     	 pop {r7,pc}
 1321              	.L83:
 1322              	 .align 2
 1323              	.L82:
 1324 009c 00000000 	 .word Mem_SegHeap
 1325 00a0 10270000 	 .word 10000
 1326              	 .cfi_endproc
 1327              	.LFE10:
 1329              	 .section .text.Mem_SegAlloc,"ax",%progbits
 1330              	 .align 2
 1331              	 .global Mem_SegAlloc
 1332              	 .code 16
 1333              	 .thumb_func
 1335              	Mem_SegAlloc:
 1336              	.LFB11:
1076:../Dave/Generated/UCPROBE/lib_mem.c **** 
1077:../Dave/Generated/UCPROBE/lib_mem.c **** 
1078:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1079:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1080:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegAlloc()
1081:../Dave/Generated/UCPROBE/lib_mem.c **** *
1082:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment. Returned memory block will be aligned on a
1083:../Dave/Generated/UCPROBE/lib_mem.c **** *               word boundary.
1084:../Dave/Generated/UCPROBE/lib_mem.c **** *
1085:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
1086:../Dave/Generated/UCPROBE/lib_mem.c **** *
1087:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg   Pointer to segment from which to allocate memory. Will be allocated from
1088:../Dave/Generated/UCPROBE/lib_mem.c **** *                       general-purpose heap if null.
1089:../Dave/Generated/UCPROBE/lib_mem.c **** *
1090:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Size of memory block to allocate, in bytes.
1091:../Dave/Generated/UCPROBE/lib_mem.c **** *
1092:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1093:../Dave/Generated/UCPROBE/lib_mem.c **** *
1094:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1095:../Dave/Generated/UCPROBE/lib_mem.c **** *
1096:../Dave/Generated/UCPROBE/lib_mem.c **** *                           ------------------RETURNED BY Mem_SegAllocInternal()-------------------
1097:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment requeste
1098:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size specified.
1099:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Error or segment data pointer NULL.
1100:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF             Allocation would overflow memory segmen
1101:../Dave/Generated/UCPROBE/lib_mem.c **** *
1102:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1103:../Dave/Generated/UCPROBE/lib_mem.c **** *
1104:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1105:../Dave/Generated/UCPROBE/lib_mem.c **** *
1106:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1107:../Dave/Generated/UCPROBE/lib_mem.c **** *
1108:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) The memory block returned  by this function will be aligned on a word boundary.
1109:../Dave/Generated/UCPROBE/lib_mem.c **** *                   order to specify a specific alignment value, use either Mem_SegAllocExt() or
1110:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegAllocHW().
1111:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1112:../Dave/Generated/UCPROBE/lib_mem.c **** */
1113:../Dave/Generated/UCPROBE/lib_mem.c **** 
1114:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAlloc (const  CPU_CHAR    *p_name,
1115:../Dave/Generated/UCPROBE/lib_mem.c ****                             MEM_SEG     *p_seg,
1116:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   size,
1117:../Dave/Generated/UCPROBE/lib_mem.c ****                             LIB_ERR     *p_err)
1118:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1337              	 .loc 1 1118 0
 1338              	 .cfi_startproc
 1339 0000 80B5     	 push {r7,lr}
 1340              	.LCFI33:
 1341              	 .cfi_def_cfa_offset 8
 1342              	 .cfi_offset 7,-8
 1343              	 .cfi_offset 14,-4
 1344 0002 8AB0     	 sub sp,sp,#40
 1345              	.LCFI34:
 1346              	 .cfi_def_cfa_offset 48
 1347 0004 04AF     	 add r7,sp,#16
 1348              	.LCFI35:
 1349              	 .cfi_def_cfa 7,32
 1350 0006 F860     	 str r0,[r7,#12]
 1351 0008 B960     	 str r1,[r7,#8]
 1352 000a 7A60     	 str r2,[r7,#4]
 1353 000c 3B60     	 str r3,[r7]
1119:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1120:../Dave/Generated/UCPROBE/lib_mem.c **** 
1121:../Dave/Generated/UCPROBE/lib_mem.c **** 
1122:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 1354              	 .loc 1 1122 0
 1355 000e BB68     	 ldr r3,[r7,#8]
 1356 0010 002B     	 cmp r3,#0
 1357 0012 01D1     	 bne .L85
1123:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1124:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1358              	 .loc 1 1124 0
 1359 0014 0A4B     	 ldr r3,.L87
 1360 0016 BB60     	 str r3,[r7,#8]
 1361              	.L85:
1125:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1126:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1127:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1128:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1129:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1130:../Dave/Generated/UCPROBE/lib_mem.c **** 
1131:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
 1362              	 .loc 1 1131 0
 1363 0018 F868     	 ldr r0,[r7,#12]
 1364 001a B968     	 ldr r1,[r7,#8]
 1365 001c 7A68     	 ldr r2,[r7,#4]
 1366 001e 0123     	 mov r3,#1
 1367 0020 0093     	 str r3,[sp]
 1368 0022 0023     	 mov r3,#0
 1369 0024 0193     	 str r3,[sp,#4]
 1370 0026 3B68     	 ldr r3,[r7]
 1371 0028 0293     	 str r3,[sp,#8]
 1372 002a 0423     	 mov r3,#4
 1373 002c FFF7FEFF 	 bl Mem_SegAllocInternal
 1374 0030 031C     	 mov r3,r0
 1375 0032 7B61     	 str r3,[r7,#20]
1132:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1133:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1134:../Dave/Generated/UCPROBE/lib_mem.c ****                                  sizeof(CPU_ALIGN),
1135:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1136:../Dave/Generated/UCPROBE/lib_mem.c ****                                  DEF_NULL,
1137:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1138:../Dave/Generated/UCPROBE/lib_mem.c **** 
1139:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1376              	 .loc 1 1139 0
 1377 0034 7B69     	 ldr r3,[r7,#20]
1140:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1378              	 .loc 1 1140 0
 1379 0036 181C     	 mov r0,r3
 1380 0038 BD46     	 mov sp,r7
 1381 003a 06B0     	 add sp,sp,#24
 1382              	 
 1383 003c 80BD     	 pop {r7,pc}
 1384              	.L88:
 1385 003e C046     	 .align 2
 1386              	.L87:
 1387 0040 00000000 	 .word Mem_SegHeap
 1388              	 .cfi_endproc
 1389              	.LFE11:
 1391              	 .section .text.Mem_SegAllocExt,"ax",%progbits
 1392              	 .align 2
 1393              	 .global Mem_SegAllocExt
 1394              	 .code 16
 1395              	 .thumb_func
 1397              	Mem_SegAllocExt:
 1398              	.LFB12:
1141:../Dave/Generated/UCPROBE/lib_mem.c **** 
1142:../Dave/Generated/UCPROBE/lib_mem.c **** 
1143:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1144:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1145:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_SegAllocExt()
1146:../Dave/Generated/UCPROBE/lib_mem.c **** *
1147:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified memory segment.
1148:../Dave/Generated/UCPROBE/lib_mem.c **** *
1149:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1150:../Dave/Generated/UCPROBE/lib_mem.c **** *
1151:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1152:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1153:../Dave/Generated/UCPROBE/lib_mem.c **** *
1154:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1155:../Dave/Generated/UCPROBE/lib_mem.c **** *
1156:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1157:../Dave/Generated/UCPROBE/lib_mem.c **** *
1158:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1159:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1160:../Dave/Generated/UCPROBE/lib_mem.c **** *
1161:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1162:../Dave/Generated/UCPROBE/lib_mem.c **** *
1163:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1164:../Dave/Generated/UCPROBE/lib_mem.c **** *
1165:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1166:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1167:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1168:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1169:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1170:../Dave/Generated/UCPROBE/lib_mem.c **** *
1171:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1172:../Dave/Generated/UCPROBE/lib_mem.c **** *
1173:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1174:../Dave/Generated/UCPROBE/lib_mem.c **** *
1175:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1176:../Dave/Generated/UCPROBE/lib_mem.c **** *
1177:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1178:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1179:../Dave/Generated/UCPROBE/lib_mem.c **** */
1180:../Dave/Generated/UCPROBE/lib_mem.c **** 
1181:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAllocExt (const  CPU_CHAR    *p_name,
1182:../Dave/Generated/UCPROBE/lib_mem.c ****                                MEM_SEG     *p_seg,
1183:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T   size,
1184:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T   align,
1185:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T  *p_bytes_reqd,
1186:../Dave/Generated/UCPROBE/lib_mem.c ****                                LIB_ERR     *p_err)
1187:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1399              	 .loc 1 1187 0
 1400              	 .cfi_startproc
 1401 0000 90B5     	 push {r4,r7,lr}
 1402              	.LCFI36:
 1403              	 .cfi_def_cfa_offset 12
 1404              	 .cfi_offset 4,-12
 1405              	 .cfi_offset 7,-8
 1406              	 .cfi_offset 14,-4
 1407 0002 8BB0     	 sub sp,sp,#44
 1408              	.LCFI37:
 1409              	 .cfi_def_cfa_offset 56
 1410 0004 04AF     	 add r7,sp,#16
 1411              	.LCFI38:
 1412              	 .cfi_def_cfa 7,40
 1413 0006 F860     	 str r0,[r7,#12]
 1414 0008 B960     	 str r1,[r7,#8]
 1415 000a 7A60     	 str r2,[r7,#4]
 1416 000c 3B60     	 str r3,[r7]
1188:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1189:../Dave/Generated/UCPROBE/lib_mem.c **** 
1190:../Dave/Generated/UCPROBE/lib_mem.c **** 
1191:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 1417              	 .loc 1 1191 0
 1418 000e BB68     	 ldr r3,[r7,#8]
 1419 0010 002B     	 cmp r3,#0
 1420 0012 01D1     	 bne .L90
1192:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1193:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1421              	 .loc 1 1193 0
 1422 0014 0A4B     	 ldr r3,.L92
 1423 0016 BB60     	 str r3,[r7,#8]
 1424              	.L90:
1194:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1195:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1196:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1197:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1198:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1199:../Dave/Generated/UCPROBE/lib_mem.c **** 
1200:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
 1425              	 .loc 1 1200 0
 1426 0018 F868     	 ldr r0,[r7,#12]
 1427 001a B968     	 ldr r1,[r7,#8]
 1428 001c 7A68     	 ldr r2,[r7,#4]
 1429 001e 3C68     	 ldr r4,[r7]
 1430 0020 0123     	 mov r3,#1
 1431 0022 0093     	 str r3,[sp]
 1432 0024 BB6A     	 ldr r3,[r7,#40]
 1433 0026 0193     	 str r3,[sp,#4]
 1434 0028 FB6A     	 ldr r3,[r7,#44]
 1435 002a 0293     	 str r3,[sp,#8]
 1436 002c 231C     	 mov r3,r4
 1437 002e FFF7FEFF 	 bl Mem_SegAllocInternal
 1438 0032 031C     	 mov r3,r0
 1439 0034 7B61     	 str r3,[r7,#20]
1201:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1202:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1203:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
1204:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1205:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
1206:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1207:../Dave/Generated/UCPROBE/lib_mem.c **** 
1208:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1440              	 .loc 1 1208 0
 1441 0036 7B69     	 ldr r3,[r7,#20]
1209:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1442              	 .loc 1 1209 0
 1443 0038 181C     	 mov r0,r3
 1444 003a BD46     	 mov sp,r7
 1445 003c 07B0     	 add sp,sp,#28
 1446              	 
 1447 003e 90BD     	 pop {r4,r7,pc}
 1448              	.L93:
 1449              	 .align 2
 1450              	.L92:
 1451 0040 00000000 	 .word Mem_SegHeap
 1452              	 .cfi_endproc
 1453              	.LFE12:
 1455              	 .section .text.Mem_SegAllocHW,"ax",%progbits
 1456              	 .align 2
 1457              	 .global Mem_SegAllocHW
 1458              	 .code 16
 1459              	 .thumb_func
 1461              	Mem_SegAllocHW:
 1462              	.LFB13:
1210:../Dave/Generated/UCPROBE/lib_mem.c **** 
1211:../Dave/Generated/UCPROBE/lib_mem.c **** 
1212:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1213:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1214:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_SegAllocHW()
1215:../Dave/Generated/UCPROBE/lib_mem.c **** *
1216:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment. The returned buffer will be padded in func
1217:../Dave/Generated/UCPROBE/lib_mem.c **** *               of memory segment's properties.
1218:../Dave/Generated/UCPROBE/lib_mem.c **** *
1219:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1220:../Dave/Generated/UCPROBE/lib_mem.c **** *
1221:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1222:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1223:../Dave/Generated/UCPROBE/lib_mem.c **** *
1224:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1225:../Dave/Generated/UCPROBE/lib_mem.c **** *
1226:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1227:../Dave/Generated/UCPROBE/lib_mem.c **** *
1228:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1229:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1230:../Dave/Generated/UCPROBE/lib_mem.c **** *
1231:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1232:../Dave/Generated/UCPROBE/lib_mem.c **** *
1233:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1234:../Dave/Generated/UCPROBE/lib_mem.c **** *
1235:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1236:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1237:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1238:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1239:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1240:../Dave/Generated/UCPROBE/lib_mem.c **** *
1241:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1242:../Dave/Generated/UCPROBE/lib_mem.c **** *
1243:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1244:../Dave/Generated/UCPROBE/lib_mem.c **** *
1245:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1246:../Dave/Generated/UCPROBE/lib_mem.c **** *
1247:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1248:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1249:../Dave/Generated/UCPROBE/lib_mem.c **** */
1250:../Dave/Generated/UCPROBE/lib_mem.c **** 
1251:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAllocHW (const  CPU_CHAR    *p_name,
1252:../Dave/Generated/UCPROBE/lib_mem.c ****                               MEM_SEG     *p_seg,
1253:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T   size,
1254:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T   align,
1255:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T  *p_bytes_reqd,
1256:../Dave/Generated/UCPROBE/lib_mem.c ****                               LIB_ERR     *p_err)
1257:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1463              	 .loc 1 1257 0
 1464              	 .cfi_startproc
 1465 0000 90B5     	 push {r4,r7,lr}
 1466              	.LCFI39:
 1467              	 .cfi_def_cfa_offset 12
 1468              	 .cfi_offset 4,-12
 1469              	 .cfi_offset 7,-8
 1470              	 .cfi_offset 14,-4
 1471 0002 8BB0     	 sub sp,sp,#44
 1472              	.LCFI40:
 1473              	 .cfi_def_cfa_offset 56
 1474 0004 04AF     	 add r7,sp,#16
 1475              	.LCFI41:
 1476              	 .cfi_def_cfa 7,40
 1477 0006 F860     	 str r0,[r7,#12]
 1478 0008 B960     	 str r1,[r7,#8]
 1479 000a 7A60     	 str r2,[r7,#4]
 1480 000c 3B60     	 str r3,[r7]
1258:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1259:../Dave/Generated/UCPROBE/lib_mem.c **** 
1260:../Dave/Generated/UCPROBE/lib_mem.c **** 
1261:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 1481              	 .loc 1 1261 0
 1482 000e BB68     	 ldr r3,[r7,#8]
 1483 0010 002B     	 cmp r3,#0
 1484 0012 01D1     	 bne .L95
1262:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1263:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1485              	 .loc 1 1263 0
 1486 0014 0B4B     	 ldr r3,.L97
 1487 0016 BB60     	 str r3,[r7,#8]
 1488              	.L95:
1264:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1265:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1266:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1267:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1268:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1269:../Dave/Generated/UCPROBE/lib_mem.c **** 
1270:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
 1489              	 .loc 1 1270 0
 1490 0018 BB68     	 ldr r3,[r7,#8]
 1491 001a 1B69     	 ldr r3,[r3,#16]
 1492 001c F868     	 ldr r0,[r7,#12]
 1493 001e B968     	 ldr r1,[r7,#8]
 1494 0020 7A68     	 ldr r2,[r7,#4]
 1495 0022 3C68     	 ldr r4,[r7]
 1496 0024 0093     	 str r3,[sp]
 1497 0026 BB6A     	 ldr r3,[r7,#40]
 1498 0028 0193     	 str r3,[sp,#4]
 1499 002a FB6A     	 ldr r3,[r7,#44]
 1500 002c 0293     	 str r3,[sp,#8]
 1501 002e 231C     	 mov r3,r4
 1502 0030 FFF7FEFF 	 bl Mem_SegAllocInternal
 1503 0034 031C     	 mov r3,r0
 1504 0036 7B61     	 str r3,[r7,#20]
1271:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1272:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1273:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
1274:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg->PaddingAlign,
1275:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
1276:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1277:../Dave/Generated/UCPROBE/lib_mem.c **** 
1278:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1505              	 .loc 1 1278 0
 1506 0038 7B69     	 ldr r3,[r7,#20]
1279:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1507              	 .loc 1 1279 0
 1508 003a 181C     	 mov r0,r3
 1509 003c BD46     	 mov sp,r7
 1510 003e 07B0     	 add sp,sp,#28
 1511              	 
 1512 0040 90BD     	 pop {r4,r7,pc}
 1513              	.L98:
 1514 0042 C046     	 .align 2
 1515              	.L97:
 1516 0044 00000000 	 .word Mem_SegHeap
 1517              	 .cfi_endproc
 1518              	.LFE13:
 1520              	 .section .rodata
 1521 0005 000000   	 .align 2
 1522              	.LC12:
 1523 0008 556E6E61 	 .ascii "Unnamed static pool\000"
 1523      6D656420 
 1523      73746174 
 1523      69632070 
 1523      6F6F6C00 
 1524              	 .align 2
 1525              	.LC14:
 1526 001c 556E6E61 	 .ascii "Unnamed static pool free blk tbl\000"
 1526      6D656420 
 1526      73746174 
 1526      69632070 
 1526      6F6F6C20 
 1527 003d 000000   	 .section .text.Mem_PoolCreate,"ax",%progbits
 1528              	 .align 2
 1529              	 .global Mem_PoolCreate
 1530              	 .code 16
 1531              	 .thumb_func
 1533              	Mem_PoolCreate:
 1534              	.LFB14:
1280:../Dave/Generated/UCPROBE/lib_mem.c **** 
1281:../Dave/Generated/UCPROBE/lib_mem.c **** 
1282:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1283:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1284:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolCreate()
1285:../Dave/Generated/UCPROBE/lib_mem.c **** *
1286:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : (1) Creates a memory pool :
1287:../Dave/Generated/UCPROBE/lib_mem.c **** *
1288:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) Create    memory pool from heap or dedicated memory
1289:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Allocate  memory pool memory blocks
1290:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (c) Configure memory pool
1291:../Dave/Generated/UCPROBE/lib_mem.c **** *
1292:../Dave/Generated/UCPROBE/lib_mem.c **** *
1293:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool          Pointer to a memory pool structure to create (see Note #1).
1294:../Dave/Generated/UCPROBE/lib_mem.c **** *
1295:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_mem_base      Memory pool segment base address :
1296:../Dave/Generated/UCPROBE/lib_mem.c **** *
1297:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (a)     Null address    Memory pool allocated from general-
1298:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (b) Non-null address    Memory pool allocated from dedicate
1299:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                   specified by its base address.
1300:../Dave/Generated/UCPROBE/lib_mem.c **** *
1301:../Dave/Generated/UCPROBE/lib_mem.c **** *               mem_size        Size      of memory pool segment          (in bytes).
1302:../Dave/Generated/UCPROBE/lib_mem.c **** *
1303:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_nbr         Number    of memory pool blocks to create.
1304:../Dave/Generated/UCPROBE/lib_mem.c **** *
1305:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size      of memory pool blocks to create (in bytes).
1306:../Dave/Generated/UCPROBE/lib_mem.c **** *
1307:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Alignment of memory pool blocks to specific word boundary (in bytes
1308:../Dave/Generated/UCPROBE/lib_mem.c **** *
1309:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
1310:../Dave/Generated/UCPROBE/lib_mem.c **** *
1311:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
1312:../Dave/Generated/UCPROBE/lib_mem.c **** *                                               allocate the memory pool, if any error(s);
1313:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (b) Return 0, otherwise.
1314:../Dave/Generated/UCPROBE/lib_mem.c **** *
1315:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1316:../Dave/Generated/UCPROBE/lib_mem.c **** *
1317:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
1318:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Pointer to memory pool is n
1319:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN       Invalid block alignment req
1320:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR         Invalid number of blocks sp
1321:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE        Invalid block size specifie
1322:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size.
1323:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY              No more memory available on
1324:../Dave/Generated/UCPROBE/lib_mem.c **** *
1325:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------RETURNED BY Mem_SegOverlapChkCritical()---------
1326:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
1327:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
1328:../Dave/Generated/UCPROBE/lib_mem.c **** *
1329:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -----------------RETURNED BY Mem_SegAllocExtCritical()---------
1330:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1331:../Dave/Generated/UCPROBE/lib_mem.c **** *
1332:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1333:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignm
1334:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size s
1335:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
1336:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1337:../Dave/Generated/UCPROBE/lib_mem.c **** *
1338:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -----------------------RETURNED BY Mem_PoolClr()---------------
1339:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Argument 'p_pool' passed a 
1340:../Dave/Generated/UCPROBE/lib_mem.c **** *
1341:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1342:../Dave/Generated/UCPROBE/lib_mem.c **** *
1343:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1344:../Dave/Generated/UCPROBE/lib_mem.c **** *
1345:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1346:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolCreate() or Mem_DynPoolCreateHW() should be used instead.
1347:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1348:../Dave/Generated/UCPROBE/lib_mem.c **** */
1349:../Dave/Generated/UCPROBE/lib_mem.c **** 
1350:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1351:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolCreate (MEM_POOL          *p_pool,
1352:../Dave/Generated/UCPROBE/lib_mem.c ****                       void              *p_mem_base,
1353:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         mem_size,
1354:../Dave/Generated/UCPROBE/lib_mem.c ****                       MEM_POOL_BLK_QTY   blk_nbr,
1355:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         blk_size,
1356:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         blk_align,
1357:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T        *p_bytes_reqd,
1358:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR           *p_err)
1359:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1535              	 .loc 1 1359 0
 1536              	 .cfi_startproc
 1537 0000 90B5     	 push {r4,r7,lr}
 1538              	.LCFI42:
 1539              	 .cfi_def_cfa_offset 12
 1540              	 .cfi_offset 4,-12
 1541              	 .cfi_offset 7,-8
 1542              	 .cfi_offset 14,-4
 1543 0002 91B0     	 sub sp,sp,#68
 1544              	.LCFI43:
 1545              	 .cfi_def_cfa_offset 80
 1546 0004 04AF     	 add r7,sp,#16
 1547              	.LCFI44:
 1548              	 .cfi_def_cfa 7,64
 1549 0006 F860     	 str r0,[r7,#12]
 1550 0008 B960     	 str r1,[r7,#8]
 1551 000a 7A60     	 str r2,[r7,#4]
 1552 000c 3B60     	 str r3,[r7]
1360:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG           *p_seg;
1361:../Dave/Generated/UCPROBE/lib_mem.c ****     void              *p_pool_mem;
1362:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T         pool_size;
1363:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T         blk_size_align;
1364:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR           pool_addr_end;
1365:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_POOL_BLK_QTY   blk_ix;
1366:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U        *p_blk;
1367:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1553              	 .loc 1 1367 0
 1554 000e 0023     	 mov r3,#0
 1555 0010 3B62     	 str r3,[r7,#32]
1368:../Dave/Generated/UCPROBE/lib_mem.c **** 
1369:../Dave/Generated/UCPROBE/lib_mem.c **** 
1370:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* --------------- VALIDATE RTN ERR
1371:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1372:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1373:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1374:../Dave/Generated/UCPROBE/lib_mem.c **** 
1375:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------- VALIDATE MEM POOL 
1376:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {
1377:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1378:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1379:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1380:../Dave/Generated/UCPROBE/lib_mem.c **** 
1381:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_mem_base != DEF_NULL) {
1382:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_size < 1u) {
1383:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
1384:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
1385:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1386:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1387:../Dave/Generated/UCPROBE/lib_mem.c **** 
1388:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_nbr < 1u) {
1389:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
1390:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1391:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1392:../Dave/Generated/UCPROBE/lib_mem.c **** 
1393:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < 1u) {
1394:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1395:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1396:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1397:../Dave/Generated/UCPROBE/lib_mem.c **** 
1398:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk that req alignment is a pwr 
1399:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
1400:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1401:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1402:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1403:../Dave/Generated/UCPROBE/lib_mem.c **** 
1404:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_PoolClr(p_pool, p_err);                                 /* Init mem pool.                  
 1556              	 .loc 1 1404 0
 1557 0012 FA68     	 ldr r2,[r7,#12]
 1558 0014 FB6C     	 ldr r3,[r7,#76]
 1559 0016 101C     	 mov r0,r2
 1560 0018 191C     	 mov r1,r3
 1561 001a FFF7FEFF 	 bl Mem_PoolClr
1405:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1562              	 .loc 1 1405 0
 1563 001e FB6C     	 ldr r3,[r7,#76]
 1564 0020 1B88     	 ldrh r3,[r3]
 1565 0022 5B4A     	 ldr r2,.L117
 1566 0024 9342     	 cmp r3,r2
 1567 0026 00D0     	 beq .L100
1406:../Dave/Generated/UCPROBE/lib_mem.c ****          return;
 1568              	 .loc 1 1406 0
 1569 0028 AFE0     	 b .L99
 1570              	.L100:
1407:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1408:../Dave/Generated/UCPROBE/lib_mem.c **** 
1409:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------- DETERMINE AND/OR ALLOC 
1410:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_mem_base == DEF_NULL) {                               /* Use heap seg.                   
 1571              	 .loc 1 1410 0
 1572 002a BB68     	 ldr r3,[r7,#8]
 1573 002c 002B     	 cmp r3,#0
 1574 002e 02D1     	 bne .L102
1411:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1575              	 .loc 1 1411 0
 1576 0030 584B     	 ldr r3,.L117+4
 1577 0032 FB62     	 str r3,[r7,#44]
 1578 0034 41E0     	 b .L103
 1579              	.L102:
1412:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {                                                    /* Use other seg.                  
1413:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 1580              	 .loc 1 1413 0
 1581 0036 FFF7FEFF 	 bl CPU_SR_Save
 1582 003a 031C     	 mov r3,r0
 1583 003c 3B62     	 str r3,[r7,#32]
1414:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 1584              	 .loc 1 1414 0
 1585 003e B968     	 ldr r1,[r7,#8]
 1586 0040 7A68     	 ldr r2,[r7,#4]
 1587 0042 FB6C     	 ldr r3,[r7,#76]
 1588 0044 081C     	 mov r0,r1
 1589 0046 111C     	 mov r1,r2
 1590 0048 1A1C     	 mov r2,r3
 1591 004a FFF7FEFF 	 bl Mem_SegOverlapChkCritical
 1592 004e 031C     	 mov r3,r0
 1593 0050 FB62     	 str r3,[r7,#44]
1415:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     mem_size,
1416:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_err);
1417:../Dave/Generated/UCPROBE/lib_mem.c ****         switch (*p_err) {
 1594              	 .loc 1 1417 0
 1595 0052 FB6C     	 ldr r3,[r7,#76]
 1596 0054 1B88     	 ldrh r3,[r3]
 1597 0056 4E4A     	 ldr r2,.L117
 1598 0058 9342     	 cmp r3,r2
 1599 005a 04D0     	 beq .L105
 1600 005c 9E22     	 mov r2,#158
 1601 005e 9201     	 lsl r2,r2,#6
 1602 0060 9342     	 cmp r3,r2
 1603 0062 25D0     	 beq .L116
 1604 0064 1FE0     	 b .L115
 1605              	.L105:
1418:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_EXISTS:                /* Seg already exists.             
1419:../Dave/Generated/UCPROBE/lib_mem.c ****                  break;
1420:../Dave/Generated/UCPROBE/lib_mem.c **** 
1421:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_NONE:                              /* Seg must be created.            
1422:../Dave/Generated/UCPROBE/lib_mem.c ****                  p_seg = (MEM_SEG *)Mem_SegAllocExtCritical(&Mem_SegHeap,
 1606              	 .loc 1 1422 0
 1607 0066 4B4A     	 ldr r2,.L117+4
 1608 0068 BB6C     	 ldr r3,[r7,#72]
 1609 006a 0093     	 str r3,[sp]
 1610 006c FB6C     	 ldr r3,[r7,#76]
 1611 006e 0193     	 str r3,[sp,#4]
 1612 0070 101C     	 mov r0,r2
 1613 0072 1421     	 mov r1,#20
 1614 0074 0422     	 mov r2,#4
 1615 0076 0123     	 mov r3,#1
 1616 0078 FFF7FEFF 	 bl Mem_SegAllocExtCritical
 1617 007c 031C     	 mov r3,r0
 1618 007e FB62     	 str r3,[r7,#44]
1423:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              sizeof(MEM_SEG),
1424:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              sizeof(CPU_ALIGN),
1425:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              LIB_MEM_PADDING_ALIGN_NONE,
1426:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              p_bytes_reqd,
1427:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              p_err);
1428:../Dave/Generated/UCPROBE/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
 1619              	 .loc 1 1428 0
 1620 0080 FB6C     	 ldr r3,[r7,#76]
 1621 0082 1B88     	 ldrh r3,[r3]
 1622 0084 424A     	 ldr r2,.L117
 1623 0086 9342     	 cmp r3,r2
 1624 0088 04D0     	 beq .L108
1429:../Dave/Generated/UCPROBE/lib_mem.c ****                      CPU_CRITICAL_EXIT();
 1625              	 .loc 1 1429 0
 1626 008a 3B6A     	 ldr r3,[r7,#32]
 1627 008c 181C     	 mov r0,r3
 1628 008e FFF7FEFF 	 bl CPU_SR_Restore
1430:../Dave/Generated/UCPROBE/lib_mem.c ****                      return;
 1629              	 .loc 1 1430 0
 1630 0092 7AE0     	 b .L99
 1631              	.L108:
1431:../Dave/Generated/UCPROBE/lib_mem.c ****                  }
1432:../Dave/Generated/UCPROBE/lib_mem.c **** 
1433:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
1434:../Dave/Generated/UCPROBE/lib_mem.c ****                  Mem_SegAllocTrackCritical("Unknown segment data",
1435:../Dave/Generated/UCPROBE/lib_mem.c ****                                            &Mem_SegHeap,
1436:../Dave/Generated/UCPROBE/lib_mem.c ****                                             sizeof(MEM_SEG),
1437:../Dave/Generated/UCPROBE/lib_mem.c ****                                             p_err);
1438:../Dave/Generated/UCPROBE/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
1439:../Dave/Generated/UCPROBE/lib_mem.c ****                      CPU_CRITICAL_EXIT();
1440:../Dave/Generated/UCPROBE/lib_mem.c ****                      return;
1441:../Dave/Generated/UCPROBE/lib_mem.c ****                  }
1442:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1443:../Dave/Generated/UCPROBE/lib_mem.c **** 
1444:../Dave/Generated/UCPROBE/lib_mem.c ****                  Mem_SegCreateCritical(          DEF_NULL,
 1632              	 .loc 1 1444 0
 1633 0094 BA68     	 ldr r2,[r7,#8]
 1634 0096 F96A     	 ldr r1,[r7,#44]
 1635 0098 7B68     	 ldr r3,[r7,#4]
 1636 009a 0093     	 str r3,[sp]
 1637 009c 0020     	 mov r0,#0
 1638 009e 0123     	 mov r3,#1
 1639 00a0 FFF7FEFF 	 bl Mem_SegCreateCritical
1445:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  p_seg,
1446:../Dave/Generated/UCPROBE/lib_mem.c ****                                        (CPU_ADDR)p_mem_base,
1447:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  LIB_MEM_PADDING_ALIGN_NONE,
1448:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  mem_size);
1449:../Dave/Generated/UCPROBE/lib_mem.c ****                  break;
 1640              	 .loc 1 1449 0
 1641 00a4 05E0     	 b .L107
 1642              	.L115:
1450:../Dave/Generated/UCPROBE/lib_mem.c **** 
1451:../Dave/Generated/UCPROBE/lib_mem.c **** 
1452:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_OVERLAP:
1453:../Dave/Generated/UCPROBE/lib_mem.c ****             default:
1454:../Dave/Generated/UCPROBE/lib_mem.c ****                  CPU_CRITICAL_EXIT();
 1643              	 .loc 1 1454 0
 1644 00a6 3B6A     	 ldr r3,[r7,#32]
 1645 00a8 181C     	 mov r0,r3
 1646 00aa FFF7FEFF 	 bl CPU_SR_Restore
1455:../Dave/Generated/UCPROBE/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 1647              	 .loc 1 1455 0
 1648 00ae 6CE0     	 b .L99
 1649              	.L116:
1419:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1650              	 .loc 1 1419 0
 1651 00b0 C046     	 mov r8,r8
 1652              	.L107:
1456:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1457:../Dave/Generated/UCPROBE/lib_mem.c **** 
1458:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 1653              	 .loc 1 1458 0
 1654 00b2 3B6A     	 ldr r3,[r7,#32]
 1655 00b4 181C     	 mov r0,r3
 1656 00b6 FFF7FEFF 	 bl CPU_SR_Restore
 1657              	.L103:
1459:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1460:../Dave/Generated/UCPROBE/lib_mem.c **** 
1461:../Dave/Generated/UCPROBE/lib_mem.c **** 
1462:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ---------------- ALLOC MEM FOR P
1463:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Calc blk size with align.       
1464:../Dave/Generated/UCPROBE/lib_mem.c ****     blk_size_align =  MATH_ROUND_INC_UP_PWR2(blk_size, blk_align);
 1658              	 .loc 1 1464 0
 1659 00ba 7B6C     	 ldr r3,[r7,#68]
 1660 00bc 5B42     	 neg r3,r3
 1661 00be 3A6C     	 ldr r2,[r7,#64]
 1662 00c0 1A40     	 and r2,r3
 1663 00c2 7B6C     	 ldr r3,[r7,#68]
 1664 00c4 013B     	 sub r3,r3,#1
 1665 00c6 396C     	 ldr r1,[r7,#64]
 1666 00c8 0B40     	 and r3,r1
 1667 00ca 01D0     	 beq .L109
 1668              	 .loc 1 1464 0 is_stmt 0 discriminator 1
 1669 00cc 7B6C     	 ldr r3,[r7,#68]
 1670 00ce 00E0     	 b .L110
 1671              	.L109:
 1672              	 .loc 1 1464 0 discriminator 2
 1673 00d0 0023     	 mov r3,#0
 1674              	.L110:
 1675              	 .loc 1 1464 0 discriminator 4
 1676 00d2 D318     	 add r3,r2,r3
 1677 00d4 FB61     	 str r3,[r7,#28]
1465:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 1678              	 .loc 1 1465 0 is_stmt 1 discriminator 4
 1679 00d6 FB69     	 ldr r3,[r7,#28]
 1680 00d8 3A68     	 ldr r2,[r7]
 1681 00da 5343     	 mul r3,r2
 1682 00dc BB61     	 str r3,[r7,#24]
1466:../Dave/Generated/UCPROBE/lib_mem.c **** 
1467:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Alloc mem for pool.             
1468:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_mem = (void *)Mem_SegAllocInternal("Unnamed static pool",
 1683              	 .loc 1 1468 0 discriminator 4
 1684 00de 2E48     	 ldr r0,.L117+8
 1685 00e0 F96A     	 ldr r1,[r7,#44]
 1686 00e2 BA69     	 ldr r2,[r7,#24]
 1687 00e4 7C6C     	 ldr r4,[r7,#68]
 1688 00e6 0123     	 mov r3,#1
 1689 00e8 0093     	 str r3,[sp]
 1690 00ea BB6C     	 ldr r3,[r7,#72]
 1691 00ec 0193     	 str r3,[sp,#4]
 1692 00ee FB6C     	 ldr r3,[r7,#76]
 1693 00f0 0293     	 str r3,[sp,#8]
 1694 00f2 231C     	 mov r3,r4
 1695 00f4 FFF7FEFF 	 bl Mem_SegAllocInternal
 1696 00f8 031C     	 mov r3,r0
 1697 00fa 7B61     	 str r3,[r7,#20]
1469:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_seg,
1470:../Dave/Generated/UCPROBE/lib_mem.c ****                                                pool_size,
1471:../Dave/Generated/UCPROBE/lib_mem.c ****                                                blk_align,
1472:../Dave/Generated/UCPROBE/lib_mem.c ****                                                LIB_MEM_PADDING_ALIGN_NONE,
1473:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_bytes_reqd,
1474:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_err);
1475:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1698              	 .loc 1 1475 0 discriminator 4
 1699 00fc FB6C     	 ldr r3,[r7,#76]
 1700 00fe 1B88     	 ldrh r3,[r3]
 1701 0100 234A     	 ldr r2,.L117
 1702 0102 9342     	 cmp r3,r2
 1703 0104 00D0     	 beq .L111
1476:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 1704              	 .loc 1 1476 0 discriminator 2
 1705 0106 40E0     	 b .L99
 1706              	.L111:
1477:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1478:../Dave/Generated/UCPROBE/lib_mem.c **** 
1479:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------ ALLOC MEM FOR FREE 
1480:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl = (void *)Mem_SegAllocInternal("Unnamed static pool free blk tbl",
 1707              	 .loc 1 1480 0
 1708 0108 3B68     	 ldr r3,[r7]
 1709 010a 9A00     	 lsl r2,r3,#2
 1710 010c 2348     	 ldr r0,.L117+12
 1711 010e 2149     	 ldr r1,.L117+4
 1712 0110 0123     	 mov r3,#1
 1713 0112 0093     	 str r3,[sp]
 1714 0114 BB6C     	 ldr r3,[r7,#72]
 1715 0116 0193     	 str r3,[sp,#4]
 1716 0118 FB6C     	 ldr r3,[r7,#76]
 1717 011a 0293     	 str r3,[sp,#8]
 1718 011c 0423     	 mov r3,#4
 1719 011e FFF7FEFF 	 bl Mem_SegAllocInternal
 1720 0122 021C     	 mov r2,r0
 1721 0124 FB68     	 ldr r3,[r7,#12]
 1722 0126 1A61     	 str r2,[r3,#16]
1481:../Dave/Generated/UCPROBE/lib_mem.c ****                                                       &Mem_SegHeap,
1482:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        blk_nbr * sizeof(void *),
1483:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        sizeof(CPU_ALIGN),
1484:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_MEM_PADDING_ALIGN_NONE,
1485:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        p_bytes_reqd,
1486:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        p_err);
1487:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1723              	 .loc 1 1487 0
 1724 0128 FB6C     	 ldr r3,[r7,#76]
 1725 012a 1B88     	 ldrh r3,[r3]
 1726 012c 184A     	 ldr r2,.L117
 1727 012e 9342     	 cmp r3,r2
 1728 0130 00D0     	 beq .L112
1488:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 1729              	 .loc 1 1488 0 discriminator 3
 1730 0132 2AE0     	 b .L99
 1731              	.L112:
1489:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1490:../Dave/Generated/UCPROBE/lib_mem.c **** 
1491:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT BLK LIST
1492:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = (CPU_INT08U *)p_pool_mem;
 1732              	 .loc 1 1492 0
 1733 0134 7B69     	 ldr r3,[r7,#20]
 1734 0136 7B62     	 str r3,[r7,#36]
1493:../Dave/Generated/UCPROBE/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
 1735              	 .loc 1 1493 0
 1736 0138 0023     	 mov r3,#0
 1737 013a BB62     	 str r3,[r7,#40]
 1738 013c 0DE0     	 b .L113
 1739              	.L114:
1494:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 1740              	 .loc 1 1494 0 discriminator 3
 1741 013e FB68     	 ldr r3,[r7,#12]
 1742 0140 1A69     	 ldr r2,[r3,#16]
 1743 0142 BB6A     	 ldr r3,[r7,#40]
 1744 0144 9B00     	 lsl r3,r3,#2
 1745 0146 D318     	 add r3,r2,r3
 1746 0148 7A6A     	 ldr r2,[r7,#36]
 1747 014a 1A60     	 str r2,[r3]
1495:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                      += blk_size_align;
 1748              	 .loc 1 1495 0 discriminator 3
 1749 014c 7A6A     	 ldr r2,[r7,#36]
 1750 014e FB69     	 ldr r3,[r7,#28]
 1751 0150 D318     	 add r3,r2,r3
 1752 0152 7B62     	 str r3,[r7,#36]
1493:../Dave/Generated/UCPROBE/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
 1753              	 .loc 1 1493 0 discriminator 3
 1754 0154 BB6A     	 ldr r3,[r7,#40]
 1755 0156 0133     	 add r3,r3,#1
 1756 0158 BB62     	 str r3,[r7,#40]
 1757              	.L113:
1493:../Dave/Generated/UCPROBE/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
 1758              	 .loc 1 1493 0 is_stmt 0 discriminator 1
 1759 015a BA6A     	 ldr r2,[r7,#40]
 1760 015c 3B68     	 ldr r3,[r7]
 1761 015e 9A42     	 cmp r2,r3
 1762 0160 EDD3     	 bcc .L114
1496:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1497:../Dave/Generated/UCPROBE/lib_mem.c **** 
1498:../Dave/Generated/UCPROBE/lib_mem.c **** 
1499:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT POOL DAT
1500:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_addr_end         = (CPU_ADDR)p_pool_mem + (pool_size - 1u);
 1763              	 .loc 1 1500 0 is_stmt 1
 1764 0162 7A69     	 ldr r2,[r7,#20]
 1765 0164 BB69     	 ldr r3,[r7,#24]
 1766 0166 D318     	 add r3,r2,r3
 1767 0168 013B     	 sub r3,r3,#1
 1768 016a 3B61     	 str r3,[r7,#16]
1501:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
 1769              	 .loc 1 1501 0
 1770 016c FB68     	 ldr r3,[r7,#12]
 1771 016e 7A69     	 ldr r2,[r7,#20]
 1772 0170 1A60     	 str r2,[r3]
1502:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = (void *)pool_addr_end;
 1773              	 .loc 1 1502 0
 1774 0172 3A69     	 ldr r2,[r7,#16]
 1775 0174 FB68     	 ldr r3,[r7,#12]
 1776 0176 5A60     	 str r2,[r3,#4]
1503:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        =  blk_nbr;
 1777              	 .loc 1 1503 0
 1778 0178 FB68     	 ldr r3,[r7,#12]
 1779 017a 3A68     	 ldr r2,[r7]
 1780 017c 9A60     	 str r2,[r3,#8]
1504:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
 1781              	 .loc 1 1504 0
 1782 017e FB68     	 ldr r3,[r7,#12]
 1783 0180 FA69     	 ldr r2,[r7,#28]
 1784 0182 DA60     	 str r2,[r3,#12]
1505:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  =  blk_nbr;
 1785              	 .loc 1 1505 0
 1786 0184 FB68     	 ldr r3,[r7,#12]
 1787 0186 3A68     	 ldr r2,[r7]
 1788 0188 5A61     	 str r2,[r3,#20]
 1789              	.L99:
1506:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1790              	 .loc 1 1506 0
 1791 018a BD46     	 mov sp,r7
 1792 018c 0DB0     	 add sp,sp,#52
 1793              	 
 1794 018e 90BD     	 pop {r4,r7,pc}
 1795              	.L118:
 1796              	 .align 2
 1797              	.L117:
 1798 0190 10270000 	 .word 10000
 1799 0194 00000000 	 .word Mem_SegHeap
 1800 0198 08000000 	 .word .LC12
 1801 019c 1C000000 	 .word .LC14
 1802              	 .cfi_endproc
 1803              	.LFE14:
 1805              	 .section .text.Mem_PoolClr,"ax",%progbits
 1806              	 .align 2
 1807              	 .global Mem_PoolClr
 1808              	 .code 16
 1809              	 .thumb_func
 1811              	Mem_PoolClr:
 1812              	.LFB15:
1507:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1508:../Dave/Generated/UCPROBE/lib_mem.c **** 
1509:../Dave/Generated/UCPROBE/lib_mem.c **** 
1510:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1511:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1512:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_PoolClr()
1513:../Dave/Generated/UCPROBE/lib_mem.c **** *
1514:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears a memory pool (see Note #1).
1515:../Dave/Generated/UCPROBE/lib_mem.c **** *
1516:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure to clear (see Note #2).
1517:../Dave/Generated/UCPROBE/lib_mem.c **** *
1518:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err        Pointer to variable that will receive the return error code from this 
1519:../Dave/Generated/UCPROBE/lib_mem.c **** *
1520:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1521:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1522:../Dave/Generated/UCPROBE/lib_mem.c **** *
1523:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1524:../Dave/Generated/UCPROBE/lib_mem.c **** *
1525:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application,
1526:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_PoolCreate().
1527:../Dave/Generated/UCPROBE/lib_mem.c **** *
1528:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) (a) Mem_PoolClr() ONLY clears a memory pool structure's variables & should ONLY
1529:../Dave/Generated/UCPROBE/lib_mem.c **** *                       called to initialize a memory pool structure prior to calling Mem_PoolCreat
1530:../Dave/Generated/UCPROBE/lib_mem.c **** *
1531:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Mem_PoolClr() does NOT deallocate memory from the memory pool or deallocate
1532:../Dave/Generated/UCPROBE/lib_mem.c **** *                       memory pool itself & MUST NOT be called after calling Mem_PoolCreate() sinc
1533:../Dave/Generated/UCPROBE/lib_mem.c **** *                       this will likely corrupt the memory pool management.
1534:../Dave/Generated/UCPROBE/lib_mem.c **** *
1535:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Assumes 'p_pool' points to a valid memory pool (if non-NULL).
1536:../Dave/Generated/UCPROBE/lib_mem.c **** *
1537:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) This function is DEPRECATED and will be removed in a future version of this pro
1538:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1539:../Dave/Generated/UCPROBE/lib_mem.c **** */
1540:../Dave/Generated/UCPROBE/lib_mem.c **** 
1541:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1542:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolClr (MEM_POOL  *p_pool,
1543:../Dave/Generated/UCPROBE/lib_mem.c ****                    LIB_ERR   *p_err)
1544:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1813              	 .loc 1 1544 0
 1814              	 .cfi_startproc
 1815 0000 80B5     	 push {r7,lr}
 1816              	.LCFI45:
 1817              	 .cfi_def_cfa_offset 8
 1818              	 .cfi_offset 7,-8
 1819              	 .cfi_offset 14,-4
 1820 0002 82B0     	 sub sp,sp,#8
 1821              	.LCFI46:
 1822              	 .cfi_def_cfa_offset 16
 1823 0004 00AF     	 add r7,sp,#0
 1824              	.LCFI47:
 1825              	 .cfi_def_cfa_register 7
 1826 0006 7860     	 str r0,[r7,#4]
 1827 0008 3960     	 str r1,[r7]
1545:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE RTN ERR 
1546:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1547:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1548:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1549:../Dave/Generated/UCPROBE/lib_mem.c **** 
1550:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------------- VALIDATE MEM POOL
1551:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {
1552:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1553:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1554:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1555:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1556:../Dave/Generated/UCPROBE/lib_mem.c **** 
1557:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrStart = DEF_NULL;
 1828              	 .loc 1 1557 0
 1829 000a 7B68     	 ldr r3,[r7,#4]
 1830 000c 0022     	 mov r2,#0
 1831 000e 1A60     	 str r2,[r3]
1558:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
 1832              	 .loc 1 1558 0
 1833 0010 7B68     	 ldr r3,[r7,#4]
 1834 0012 0022     	 mov r2,#0
 1835 0014 5A60     	 str r2,[r3,#4]
1559:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       = 0u;
 1836              	 .loc 1 1559 0
 1837 0016 7B68     	 ldr r3,[r7,#4]
 1838 0018 0022     	 mov r2,#0
 1839 001a DA60     	 str r2,[r3,#12]
1560:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        = 0u;
 1840              	 .loc 1 1560 0
 1841 001c 7B68     	 ldr r3,[r7,#4]
 1842 001e 0022     	 mov r2,#0
 1843 0020 9A60     	 str r2,[r3,#8]
1561:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
 1844              	 .loc 1 1561 0
 1845 0022 7B68     	 ldr r3,[r7,#4]
 1846 0024 0022     	 mov r2,#0
 1847 0026 1A61     	 str r2,[r3,#16]
1562:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
 1848              	 .loc 1 1562 0
 1849 0028 7B68     	 ldr r3,[r7,#4]
 1850 002a 0022     	 mov r2,#0
 1851 002c 5A61     	 str r2,[r3,#20]
1563:../Dave/Generated/UCPROBE/lib_mem.c **** 
1564:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1852              	 .loc 1 1564 0
 1853 002e 3B68     	 ldr r3,[r7]
 1854 0030 024A     	 ldr r2,.L120
 1855 0032 1A80     	 strh r2,[r3]
1565:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1856              	 .loc 1 1565 0
 1857 0034 BD46     	 mov sp,r7
 1858 0036 02B0     	 add sp,sp,#8
 1859              	 
 1860 0038 80BD     	 pop {r7,pc}
 1861              	.L121:
 1862 003a C046     	 .align 2
 1863              	.L120:
 1864 003c 10270000 	 .word 10000
 1865              	 .cfi_endproc
 1866              	.LFE15:
 1868              	 .section .text.Mem_PoolBlkGet,"ax",%progbits
 1869              	 .align 2
 1870              	 .global Mem_PoolBlkGet
 1871              	 .code 16
 1872              	 .thumb_func
 1874              	Mem_PoolBlkGet:
 1875              	.LFB16:
1566:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1567:../Dave/Generated/UCPROBE/lib_mem.c **** 
1568:../Dave/Generated/UCPROBE/lib_mem.c **** 
1569:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1570:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1571:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolBlkGet()
1572:../Dave/Generated/UCPROBE/lib_mem.c **** *
1573:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets a memory block from memory pool.
1574:../Dave/Generated/UCPROBE/lib_mem.c **** *
1575:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to  memory pool to get memory block from.
1576:../Dave/Generated/UCPROBE/lib_mem.c **** *
1577:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Size of requested memory (in bytes).
1578:../Dave/Generated/UCPROBE/lib_mem.c **** *
1579:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1580:../Dave/Generated/UCPROBE/lib_mem.c **** *
1581:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1582:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid memory pool block size requeste
1583:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL pointer
1584:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY          NO memory blocks available in memory po
1585:../Dave/Generated/UCPROBE/lib_mem.c **** *
1586:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
1587:../Dave/Generated/UCPROBE/lib_mem.c **** *
1588:../Dave/Generated/UCPROBE/lib_mem.c **** *               Pointer to NULL,         otherwise.
1589:../Dave/Generated/UCPROBE/lib_mem.c **** *
1590:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1591:../Dave/Generated/UCPROBE/lib_mem.c **** *
1592:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1593:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkGet() should be used instead.
1594:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1595:../Dave/Generated/UCPROBE/lib_mem.c **** */
1596:../Dave/Generated/UCPROBE/lib_mem.c **** 
1597:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1598:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_PoolBlkGet (MEM_POOL    *p_pool,
1599:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size,
1600:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_ERR     *p_err)
1601:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1876              	 .loc 1 1601 0
 1877              	 .cfi_startproc
 1878 0000 80B5     	 push {r7,lr}
 1879              	.LCFI48:
 1880              	 .cfi_def_cfa_offset 8
 1881              	 .cfi_offset 7,-8
 1882              	 .cfi_offset 14,-4
 1883 0002 86B0     	 sub sp,sp,#24
 1884              	.LCFI49:
 1885              	 .cfi_def_cfa_offset 32
 1886 0004 00AF     	 add r7,sp,#0
 1887              	.LCFI50:
 1888              	 .cfi_def_cfa_register 7
 1889 0006 F860     	 str r0,[r7,#12]
 1890 0008 B960     	 str r1,[r7,#8]
 1891 000a 7A60     	 str r2,[r7,#4]
1602:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blk;
1603:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1892              	 .loc 1 1603 0
 1893 000c 0023     	 mov r3,#0
 1894 000e 3B61     	 str r3,[r7,#16]
1604:../Dave/Generated/UCPROBE/lib_mem.c **** 
1605:../Dave/Generated/UCPROBE/lib_mem.c **** 
1606:../Dave/Generated/UCPROBE/lib_mem.c ****    (void)&size;                                                 /* Prevent possible 'variable unuse
1607:../Dave/Generated/UCPROBE/lib_mem.c **** 
1608:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1609:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Validate err ptr.               
1610:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1611:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1612:../Dave/Generated/UCPROBE/lib_mem.c **** 
1613:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate pool ptr.              
1614:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1615:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1616:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1617:../Dave/Generated/UCPROBE/lib_mem.c **** 
1618:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Validate req'd size as non-NULL.
1619:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1620:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1621:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1622:../Dave/Generated/UCPROBE/lib_mem.c **** 
1623:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size > p_pool->BlkSize) {                               /* Validate req'd size <= mem pool 
1624:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1625:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1626:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1627:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1628:../Dave/Generated/UCPROBE/lib_mem.c **** 
1629:../Dave/Generated/UCPROBE/lib_mem.c **** 
1630:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------------- GET MEM BLK FROM 
1631:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = DEF_NULL;
 1895              	 .loc 1 1631 0
 1896 0010 0023     	 mov r3,#0
 1897 0012 7B61     	 str r3,[r7,#20]
1632:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1898              	 .loc 1 1632 0
 1899 0014 FFF7FEFF 	 bl CPU_SR_Save
 1900 0018 031C     	 mov r3,r0
 1901 001a 3B61     	 str r3,[r7,#16]
1633:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 1902              	 .loc 1 1633 0
 1903 001c FB68     	 ldr r3,[r7,#12]
 1904 001e 5B69     	 ldr r3,[r3,#20]
 1905 0020 002B     	 cmp r3,#0
 1906 0022 14D0     	 beq .L123
1634:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTblIx                     -= 1u;
 1907              	 .loc 1 1634 0
 1908 0024 FB68     	 ldr r3,[r7,#12]
 1909 0026 5B69     	 ldr r3,[r3,#20]
 1910 0028 5A1E     	 sub r2,r3,#1
 1911 002a FB68     	 ldr r3,[r7,#12]
 1912 002c 5A61     	 str r2,[r3,#20]
1635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                                     = p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx];
 1913              	 .loc 1 1635 0
 1914 002e FB68     	 ldr r3,[r7,#12]
 1915 0030 1A69     	 ldr r2,[r3,#16]
 1916 0032 FB68     	 ldr r3,[r7,#12]
 1917 0034 5B69     	 ldr r3,[r3,#20]
 1918 0036 9B00     	 lsl r3,r3,#2
 1919 0038 D318     	 add r3,r2,r3
 1920 003a 1B68     	 ldr r3,[r3]
 1921 003c 7B61     	 str r3,[r7,#20]
1636:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = DEF_NULL;
 1922              	 .loc 1 1636 0
 1923 003e FB68     	 ldr r3,[r7,#12]
 1924 0040 1A69     	 ldr r2,[r3,#16]
 1925 0042 FB68     	 ldr r3,[r7,#12]
 1926 0044 5B69     	 ldr r3,[r3,#20]
 1927 0046 9B00     	 lsl r3,r3,#2
 1928 0048 D318     	 add r3,r2,r3
 1929 004a 0022     	 mov r2,#0
 1930 004c 1A60     	 str r2,[r3]
 1931              	.L123:
1637:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1638:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1932              	 .loc 1 1638 0
 1933 004e 3B69     	 ldr r3,[r7,#16]
 1934 0050 181C     	 mov r0,r3
 1935 0052 FFF7FEFF 	 bl CPU_SR_Restore
1639:../Dave/Generated/UCPROBE/lib_mem.c **** 
1640:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
 1936              	 .loc 1 1640 0
 1937 0056 7B69     	 ldr r3,[r7,#20]
 1938 0058 002B     	 cmp r3,#0
 1939 005a 03D1     	 bne .L124
1641:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_EMPTY;
 1940              	 .loc 1 1641 0
 1941 005c 7B68     	 ldr r3,[r7,#4]
 1942 005e 054A     	 ldr r2,.L127
 1943 0060 1A80     	 strh r2,[r3]
 1944 0062 02E0     	 b .L125
 1945              	.L124:
1642:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
1643:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
 1946              	 .loc 1 1643 0
 1947 0064 7B68     	 ldr r3,[r7,#4]
 1948 0066 044A     	 ldr r2,.L127+4
 1949 0068 1A80     	 strh r2,[r3]
 1950              	.L125:
1644:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1645:../Dave/Generated/UCPROBE/lib_mem.c **** 
1646:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1951              	 .loc 1 1646 0
 1952 006a 7B69     	 ldr r3,[r7,#20]
1647:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1953              	 .loc 1 1647 0
 1954 006c 181C     	 mov r0,r3
 1955 006e BD46     	 mov sp,r7
 1956 0070 06B0     	 add sp,sp,#24
 1957              	 
 1958 0072 80BD     	 pop {r7,pc}
 1959              	.L128:
 1960              	 .align 2
 1961              	.L127:
 1962 0074 DE270000 	 .word 10206
 1963 0078 10270000 	 .word 10000
 1964              	 .cfi_endproc
 1965              	.LFE16:
 1967              	 .section .text.Mem_PoolBlkFree,"ax",%progbits
 1968              	 .align 2
 1969              	 .global Mem_PoolBlkFree
 1970              	 .code 16
 1971              	 .thumb_func
 1973              	Mem_PoolBlkFree:
 1974              	.LFB17:
1648:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1649:../Dave/Generated/UCPROBE/lib_mem.c **** 
1650:../Dave/Generated/UCPROBE/lib_mem.c **** 
1651:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1652:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1653:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolBlkFree()
1654:../Dave/Generated/UCPROBE/lib_mem.c **** *
1655:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Free a memory block to memory pool.
1656:../Dave/Generated/UCPROBE/lib_mem.c **** *
1657:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to memory pool to free memory block.
1658:../Dave/Generated/UCPROBE/lib_mem.c **** *
1659:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_blk   Pointer to memory block address to free.
1660:../Dave/Generated/UCPROBE/lib_mem.c **** *
1661:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1662:../Dave/Generated/UCPROBE/lib_mem.c **** *
1663:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                        Operation was successful.
1664:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                    Argument 'p_pool'/'p_blk' passe
1665:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                       a NULL pointer.
1666:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR            Invalid memory block address.
1667:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL            Memory block address al
1668:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                        in memory pool.
1669:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL                   Pool is full.
1670:../Dave/Generated/UCPROBE/lib_mem.c **** *
1671:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1672:../Dave/Generated/UCPROBE/lib_mem.c **** *
1673:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1674:../Dave/Generated/UCPROBE/lib_mem.c **** *
1675:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1676:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkFree() should be used instead.
1677:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1678:../Dave/Generated/UCPROBE/lib_mem.c **** */
1679:../Dave/Generated/UCPROBE/lib_mem.c **** 
1680:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1681:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolBlkFree (MEM_POOL  *p_pool,
1682:../Dave/Generated/UCPROBE/lib_mem.c ****                        void      *p_blk,
1683:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_ERR   *p_err)
1684:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1975              	 .loc 1 1684 0
 1976              	 .cfi_startproc
 1977 0000 80B5     	 push {r7,lr}
 1978              	.LCFI51:
 1979              	 .cfi_def_cfa_offset 8
 1980              	 .cfi_offset 7,-8
 1981              	 .cfi_offset 14,-4
 1982 0002 86B0     	 sub sp,sp,#24
 1983              	.LCFI52:
 1984              	 .cfi_def_cfa_offset 32
 1985 0004 00AF     	 add r7,sp,#0
 1986              	.LCFI53:
 1987              	 .cfi_def_cfa_register 7
 1988 0006 F860     	 str r0,[r7,#12]
 1989 0008 B960     	 str r1,[r7,#8]
 1990 000a 7A60     	 str r2,[r7,#4]
1685:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1686:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   tbl_ix;
1687:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_BOOLEAN  addr_valid;
1688:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1689:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1991              	 .loc 1 1689 0
 1992 000c 0023     	 mov r3,#0
 1993 000e 7B61     	 str r3,[r7,#20]
1690:../Dave/Generated/UCPROBE/lib_mem.c **** 
1691:../Dave/Generated/UCPROBE/lib_mem.c **** 
1692:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1693:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1694:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1695:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1696:../Dave/Generated/UCPROBE/lib_mem.c **** 
1697:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptrs.              
1698:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1699:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1700:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1701:../Dave/Generated/UCPROBE/lib_mem.c **** 
1702:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
1703:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1704:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1705:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1706:../Dave/Generated/UCPROBE/lib_mem.c **** 
1707:../Dave/Generated/UCPROBE/lib_mem.c ****     addr_valid = Mem_PoolBlkIsValidAddr(p_pool, p_blk);         /* Validate mem blk as valid pool b
1708:../Dave/Generated/UCPROBE/lib_mem.c ****     if (addr_valid != DEF_OK) {
1709:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR;
1710:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1711:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1712:../Dave/Generated/UCPROBE/lib_mem.c **** 
1713:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Make sure blk isn't already in f
1714:../Dave/Generated/UCPROBE/lib_mem.c ****     for (tbl_ix = 0u; tbl_ix < p_pool->BlkNbr; tbl_ix++) {
1715:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkFreeTbl[tbl_ix] == p_blk) {
1716:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
1717:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL;
1718:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
1719:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1720:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1721:../Dave/Generated/UCPROBE/lib_mem.c **** #else                                                           /* Double-free possibility if not i
1722:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1994              	 .loc 1 1722 0
 1995 0010 FFF7FEFF 	 bl CPU_SR_Save
 1996 0014 031C     	 mov r3,r0
 1997 0016 7B61     	 str r3,[r7,#20]
1723:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1724:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- FREE MEM BLK TO 
1725:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreeTblIx >= p_pool->BlkNbr) {
 1998              	 .loc 1 1725 0
 1999 0018 FB68     	 ldr r3,[r7,#12]
 2000 001a 5A69     	 ldr r2,[r3,#20]
 2001 001c FB68     	 ldr r3,[r7,#12]
 2002 001e 9B68     	 ldr r3,[r3,#8]
 2003 0020 9A42     	 cmp r2,r3
 2004 0022 07D3     	 bcc .L130
1726:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2005              	 .loc 1 1726 0
 2006 0024 7B69     	 ldr r3,[r7,#20]
 2007 0026 181C     	 mov r0,r3
 2008 0028 FFF7FEFF 	 bl CPU_SR_Restore
1727:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2009              	 .loc 1 1727 0
 2010 002c 7B68     	 ldr r3,[r7,#4]
 2011 002e 0D4A     	 ldr r2,.L132
 2012 0030 1A80     	 strh r2,[r3]
1728:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 2013              	 .loc 1 1728 0
 2014 0032 13E0     	 b .L129
 2015              	.L130:
1729:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1730:../Dave/Generated/UCPROBE/lib_mem.c **** 
1731:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = p_blk;
 2016              	 .loc 1 1731 0
 2017 0034 FB68     	 ldr r3,[r7,#12]
 2018 0036 1A69     	 ldr r2,[r3,#16]
 2019 0038 FB68     	 ldr r3,[r7,#12]
 2020 003a 5B69     	 ldr r3,[r3,#20]
 2021 003c 9B00     	 lsl r3,r3,#2
 2022 003e D318     	 add r3,r2,r3
 2023 0040 BA68     	 ldr r2,[r7,#8]
 2024 0042 1A60     	 str r2,[r3]
1732:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
 2025              	 .loc 1 1732 0
 2026 0044 FB68     	 ldr r3,[r7,#12]
 2027 0046 5B69     	 ldr r3,[r3,#20]
 2028 0048 5A1C     	 add r2,r3,#1
 2029 004a FB68     	 ldr r3,[r7,#12]
 2030 004c 5A61     	 str r2,[r3,#20]
1733:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2031              	 .loc 1 1733 0
 2032 004e 7B69     	 ldr r3,[r7,#20]
 2033 0050 181C     	 mov r0,r3
 2034 0052 FFF7FEFF 	 bl CPU_SR_Restore
1734:../Dave/Generated/UCPROBE/lib_mem.c **** 
1735:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2035              	 .loc 1 1735 0
 2036 0056 7B68     	 ldr r3,[r7,#4]
 2037 0058 034A     	 ldr r2,.L132+4
 2038 005a 1A80     	 strh r2,[r3]
 2039              	.L129:
1736:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2040              	 .loc 1 1736 0
 2041 005c BD46     	 mov sp,r7
 2042 005e 06B0     	 add sp,sp,#24
 2043              	 
 2044 0060 80BD     	 pop {r7,pc}
 2045              	.L133:
 2046 0062 C046     	 .align 2
 2047              	.L132:
 2048 0064 DD270000 	 .word 10205
 2049 0068 10270000 	 .word 10000
 2050              	 .cfi_endproc
 2051              	.LFE17:
 2053              	 .section .text.Mem_PoolBlkGetNbrAvail,"ax",%progbits
 2054              	 .align 2
 2055              	 .global Mem_PoolBlkGetNbrAvail
 2056              	 .code 16
 2057              	 .thumb_func
 2059              	Mem_PoolBlkGetNbrAvail:
 2060              	.LFB18:
1737:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1738:../Dave/Generated/UCPROBE/lib_mem.c **** 
1739:../Dave/Generated/UCPROBE/lib_mem.c **** 
1740:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1741:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1742:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_PoolBlkGetNbrAvail()
1743:../Dave/Generated/UCPROBE/lib_mem.c **** *
1744:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Get memory pool's remaining number of blocks available to allocate.
1745:../Dave/Generated/UCPROBE/lib_mem.c **** *
1746:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure.
1747:../Dave/Generated/UCPROBE/lib_mem.c **** *
1748:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err    Pointer to variable that will receive the return error code from this func
1749:../Dave/Generated/UCPROBE/lib_mem.c **** *
1750:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1751:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1752:../Dave/Generated/UCPROBE/lib_mem.c **** *
1753:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Remaining memory pool blocks,   if NO error(s).
1754:../Dave/Generated/UCPROBE/lib_mem.c **** *
1755:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                              otherwise.
1756:../Dave/Generated/UCPROBE/lib_mem.c **** *
1757:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1758:../Dave/Generated/UCPROBE/lib_mem.c **** *
1759:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1760:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkNbrAvailGet() should be used instead.
1761:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1762:../Dave/Generated/UCPROBE/lib_mem.c **** */
1763:../Dave/Generated/UCPROBE/lib_mem.c **** 
1764:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1765:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_POOL_BLK_QTY  Mem_PoolBlkGetNbrAvail (MEM_POOL  *p_pool,
1766:../Dave/Generated/UCPROBE/lib_mem.c ****                                           LIB_ERR   *p_err)
1767:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2061              	 .loc 1 1767 0
 2062              	 .cfi_startproc
 2063 0000 80B5     	 push {r7,lr}
 2064              	.LCFI54:
 2065              	 .cfi_def_cfa_offset 8
 2066              	 .cfi_offset 7,-8
 2067              	 .cfi_offset 14,-4
 2068 0002 84B0     	 sub sp,sp,#16
 2069              	.LCFI55:
 2070              	 .cfi_def_cfa_offset 24
 2071 0004 00AF     	 add r7,sp,#0
 2072              	.LCFI56:
 2073              	 .cfi_def_cfa_register 7
 2074 0006 7860     	 str r0,[r7,#4]
 2075 0008 3960     	 str r1,[r7]
1768:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
1769:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2076              	 .loc 1 1769 0
 2077 000a 0023     	 mov r3,#0
 2078 000c FB60     	 str r3,[r7,#12]
1770:../Dave/Generated/UCPROBE/lib_mem.c **** 
1771:../Dave/Generated/UCPROBE/lib_mem.c **** 
1772:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1773:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- VALIDATE RTN ERR
1774:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1775:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(0u);
1776:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1777:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ---------------- VALIDATE MEM PO
1778:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptr.               
1779:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err =  LIB_MEM_ERR_NULL_PTR;
1780:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1781:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1782:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1783:../Dave/Generated/UCPROBE/lib_mem.c **** 
1784:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2079              	 .loc 1 1784 0
 2080 000e FFF7FEFF 	 bl CPU_SR_Save
 2081 0012 031C     	 mov r3,r0
 2082 0014 FB60     	 str r3,[r7,#12]
1785:../Dave/Generated/UCPROBE/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2083              	 .loc 1 1785 0
 2084 0016 7B68     	 ldr r3,[r7,#4]
 2085 0018 5B69     	 ldr r3,[r3,#20]
 2086 001a BB60     	 str r3,[r7,#8]
1786:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2087              	 .loc 1 1786 0
 2088 001c FB68     	 ldr r3,[r7,#12]
 2089 001e 181C     	 mov r0,r3
 2090 0020 FFF7FEFF 	 bl CPU_SR_Restore
1787:../Dave/Generated/UCPROBE/lib_mem.c **** 
1788:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2091              	 .loc 1 1788 0
 2092 0024 3B68     	 ldr r3,[r7]
 2093 0026 034A     	 ldr r2,.L136
 2094 0028 1A80     	 strh r2,[r3]
1789:../Dave/Generated/UCPROBE/lib_mem.c **** 
1790:../Dave/Generated/UCPROBE/lib_mem.c ****     return (nbr_avail);
 2095              	 .loc 1 1790 0
 2096 002a BB68     	 ldr r3,[r7,#8]
1791:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2097              	 .loc 1 1791 0
 2098 002c 181C     	 mov r0,r3
 2099 002e BD46     	 mov sp,r7
 2100 0030 04B0     	 add sp,sp,#16
 2101              	 
 2102 0032 80BD     	 pop {r7,pc}
 2103              	.L137:
 2104              	 .align 2
 2105              	.L136:
 2106 0034 10270000 	 .word 10000
 2107              	 .cfi_endproc
 2108              	.LFE18:
 2110              	 .section .text.Mem_DynPoolCreate,"ax",%progbits
 2111              	 .align 2
 2112              	 .global Mem_DynPoolCreate
 2113              	 .code 16
 2114              	 .thumb_func
 2116              	Mem_DynPoolCreate:
 2117              	.LFB19:
1792:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1793:../Dave/Generated/UCPROBE/lib_mem.c **** 
1794:../Dave/Generated/UCPROBE/lib_mem.c **** 
1795:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1796:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1797:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_DynPoolCreate()
1798:../Dave/Generated/UCPROBE/lib_mem.c **** *
1799:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool.
1800:../Dave/Generated/UCPROBE/lib_mem.c **** *
1801:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1802:../Dave/Generated/UCPROBE/lib_mem.c **** *
1803:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool          Pointer to pool data.
1804:../Dave/Generated/UCPROBE/lib_mem.c **** *
1805:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1806:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1807:../Dave/Generated/UCPROBE/lib_mem.c **** *
1808:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1809:../Dave/Generated/UCPROBE/lib_mem.c **** *
1810:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1811:../Dave/Generated/UCPROBE/lib_mem.c **** *
1812:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1813:../Dave/Generated/UCPROBE/lib_mem.c **** *
1814:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1815:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1816:../Dave/Generated/UCPROBE/lib_mem.c **** *
1817:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1818:../Dave/Generated/UCPROBE/lib_mem.c **** *
1819:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1820:../Dave/Generated/UCPROBE/lib_mem.c **** *
1821:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   --------------------RETURNED BY Mem_DynPoolCreateInternal()----
1822:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
1823:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
1824:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
1825:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
1826:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1827:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1828:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1829:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1830:../Dave/Generated/UCPROBE/lib_mem.c **** *
1831:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
1832:../Dave/Generated/UCPROBE/lib_mem.c **** *
1833:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1834:../Dave/Generated/UCPROBE/lib_mem.c **** *
1835:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1836:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1837:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1838:../Dave/Generated/UCPROBE/lib_mem.c **** */
1839:../Dave/Generated/UCPROBE/lib_mem.c **** 
1840:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolCreate (const  CPU_CHAR      *p_name,
1841:../Dave/Generated/UCPROBE/lib_mem.c ****                                 MEM_DYN_POOL  *p_pool,
1842:../Dave/Generated/UCPROBE/lib_mem.c ****                                 MEM_SEG       *p_seg,
1843:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_size,
1844:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_align,
1845:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_init,
1846:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_max,
1847:../Dave/Generated/UCPROBE/lib_mem.c ****                                 LIB_ERR       *p_err)
1848:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2118              	 .loc 1 1848 0
 2119              	 .cfi_startproc
 2120 0000 90B5     	 push {r4,r7,lr}
 2121              	.LCFI57:
 2122              	 .cfi_def_cfa_offset 12
 2123              	 .cfi_offset 4,-12
 2124              	 .cfi_offset 7,-8
 2125              	 .cfi_offset 14,-4
 2126 0002 8BB0     	 sub sp,sp,#44
 2127              	.LCFI58:
 2128              	 .cfi_def_cfa_offset 56
 2129 0004 06AF     	 add r7,sp,#24
 2130              	.LCFI59:
 2131              	 .cfi_def_cfa 7,32
 2132 0006 F860     	 str r0,[r7,#12]
 2133 0008 B960     	 str r1,[r7,#8]
 2134 000a 7A60     	 str r2,[r7,#4]
 2135 000c 3B60     	 str r3,[r7]
1849:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2136              	 .loc 1 1849 0
 2137 000e 7B68     	 ldr r3,[r7,#4]
 2138 0010 002B     	 cmp r3,#0
 2139 0012 01D1     	 bne .L139
1850:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1851:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 2140              	 .loc 1 1851 0
 2141 0014 0A4B     	 ldr r3,.L140
 2142 0016 7B60     	 str r3,[r7,#4]
 2143              	.L139:
1852:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1853:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1854:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1855:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1856:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1857:../Dave/Generated/UCPROBE/lib_mem.c **** 
1858:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
 2144              	 .loc 1 1858 0
 2145 0018 F868     	 ldr r0,[r7,#12]
 2146 001a B968     	 ldr r1,[r7,#8]
 2147 001c 7A68     	 ldr r2,[r7,#4]
 2148 001e 3C68     	 ldr r4,[r7]
 2149 0020 3B6A     	 ldr r3,[r7,#32]
 2150 0022 0093     	 str r3,[sp]
 2151 0024 0123     	 mov r3,#1
 2152 0026 0193     	 str r3,[sp,#4]
 2153 0028 7B6A     	 ldr r3,[r7,#36]
 2154 002a 0293     	 str r3,[sp,#8]
 2155 002c BB6A     	 ldr r3,[r7,#40]
 2156 002e 0393     	 str r3,[sp,#12]
 2157 0030 FB6A     	 ldr r3,[r7,#44]
 2158 0032 0493     	 str r3,[sp,#16]
 2159 0034 231C     	 mov r3,r4
 2160 0036 FFF7FEFF 	 bl Mem_DynPoolCreateInternal
1859:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
1860:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
1861:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_size,
1862:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_align,
1863:../Dave/Generated/UCPROBE/lib_mem.c ****                               LIB_MEM_PADDING_ALIGN_NONE,
1864:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_init,
1865:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_max,
1866:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
1867:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2161              	 .loc 1 1867 0
 2162 003a BD46     	 mov sp,r7
 2163 003c 05B0     	 add sp,sp,#20
 2164              	 
 2165 003e 90BD     	 pop {r4,r7,pc}
 2166              	.L141:
 2167              	 .align 2
 2168              	.L140:
 2169 0040 00000000 	 .word Mem_SegHeap
 2170              	 .cfi_endproc
 2171              	.LFE19:
 2173              	 .section .text.Mem_DynPoolCreateHW,"ax",%progbits
 2174              	 .align 2
 2175              	 .global Mem_DynPoolCreateHW
 2176              	 .code 16
 2177              	 .thumb_func
 2179              	Mem_DynPoolCreateHW:
 2180              	.LFB20:
1868:../Dave/Generated/UCPROBE/lib_mem.c **** 
1869:../Dave/Generated/UCPROBE/lib_mem.c **** 
1870:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1871:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1872:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        Mem_DynPoolCreateHW()
1873:../Dave/Generated/UCPROBE/lib_mem.c **** *
1874:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool. Memory blocks will be padded according to memory seg
1875:../Dave/Generated/UCPROBE/lib_mem.c **** *               properties.
1876:../Dave/Generated/UCPROBE/lib_mem.c **** *
1877:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1878:../Dave/Generated/UCPROBE/lib_mem.c **** *
1879:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool          Pointer to pool data.
1880:../Dave/Generated/UCPROBE/lib_mem.c **** *
1881:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will allocate fro
1882:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1883:../Dave/Generated/UCPROBE/lib_mem.c **** *
1884:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1885:../Dave/Generated/UCPROBE/lib_mem.c **** *
1886:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1887:../Dave/Generated/UCPROBE/lib_mem.c **** *
1888:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1889:../Dave/Generated/UCPROBE/lib_mem.c **** *
1890:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1891:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1892:../Dave/Generated/UCPROBE/lib_mem.c **** *
1893:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1894:../Dave/Generated/UCPROBE/lib_mem.c **** *
1895:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1896:../Dave/Generated/UCPROBE/lib_mem.c **** *
1897:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -------------------RETURNED BY Mem_DynPoolCreateInternal()-----
1898:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1899:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1900:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1901:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1902:../Dave/Generated/UCPROBE/lib_mem.c **** *
1903:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
1904:../Dave/Generated/UCPROBE/lib_mem.c **** *
1905:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1906:../Dave/Generated/UCPROBE/lib_mem.c **** *
1907:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1908:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1909:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1910:../Dave/Generated/UCPROBE/lib_mem.c **** */
1911:../Dave/Generated/UCPROBE/lib_mem.c **** 
1912:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolCreateHW (const  CPU_CHAR      *p_name,
1913:../Dave/Generated/UCPROBE/lib_mem.c ****                                   MEM_DYN_POOL  *p_pool,
1914:../Dave/Generated/UCPROBE/lib_mem.c ****                                   MEM_SEG       *p_seg,
1915:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_size,
1916:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_align,
1917:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_init,
1918:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_max,
1919:../Dave/Generated/UCPROBE/lib_mem.c ****                                   LIB_ERR       *p_err)
1920:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2181              	 .loc 1 1920 0
 2182              	 .cfi_startproc
 2183 0000 B0B5     	 push {r4,r5,r7,lr}
 2184              	.LCFI60:
 2185              	 .cfi_def_cfa_offset 16
 2186              	 .cfi_offset 4,-16
 2187              	 .cfi_offset 5,-12
 2188              	 .cfi_offset 7,-8
 2189              	 .cfi_offset 14,-4
 2190 0002 8AB0     	 sub sp,sp,#40
 2191              	.LCFI61:
 2192              	 .cfi_def_cfa_offset 56
 2193 0004 06AF     	 add r7,sp,#24
 2194              	.LCFI62:
 2195              	 .cfi_def_cfa 7,32
 2196 0006 F860     	 str r0,[r7,#12]
 2197 0008 B960     	 str r1,[r7,#8]
 2198 000a 7A60     	 str r2,[r7,#4]
 2199 000c 3B60     	 str r3,[r7]
1921:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2200              	 .loc 1 1921 0
 2201 000e 7B68     	 ldr r3,[r7,#4]
 2202 0010 002B     	 cmp r3,#0
 2203 0012 01D1     	 bne .L143
1922:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1923:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 2204              	 .loc 1 1923 0
 2205 0014 0B4B     	 ldr r3,.L144
 2206 0016 7B60     	 str r3,[r7,#4]
 2207              	.L143:
1924:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1925:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1926:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1927:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1928:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1929:../Dave/Generated/UCPROBE/lib_mem.c **** 
1930:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
 2208              	 .loc 1 1930 0
 2209 0018 7B68     	 ldr r3,[r7,#4]
 2210 001a 1B69     	 ldr r3,[r3,#16]
 2211 001c F868     	 ldr r0,[r7,#12]
 2212 001e B968     	 ldr r1,[r7,#8]
 2213 0020 7D68     	 ldr r5,[r7,#4]
 2214 0022 3C68     	 ldr r4,[r7]
 2215 0024 3A6A     	 ldr r2,[r7,#32]
 2216 0026 0092     	 str r2,[sp]
 2217 0028 0193     	 str r3,[sp,#4]
 2218 002a 7B6A     	 ldr r3,[r7,#36]
 2219 002c 0293     	 str r3,[sp,#8]
 2220 002e BB6A     	 ldr r3,[r7,#40]
 2221 0030 0393     	 str r3,[sp,#12]
 2222 0032 FB6A     	 ldr r3,[r7,#44]
 2223 0034 0493     	 str r3,[sp,#16]
 2224 0036 2A1C     	 mov r2,r5
 2225 0038 231C     	 mov r3,r4
 2226 003a FFF7FEFF 	 bl Mem_DynPoolCreateInternal
1931:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
1932:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
1933:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_size,
1934:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_align,
1935:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg->PaddingAlign,
1936:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_init,
1937:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_max,
1938:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
1939:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2227              	 .loc 1 1939 0
 2228 003e BD46     	 mov sp,r7
 2229 0040 04B0     	 add sp,sp,#16
 2230              	 
 2231 0042 B0BD     	 pop {r4,r5,r7,pc}
 2232              	.L145:
 2233              	 .align 2
 2234              	.L144:
 2235 0044 00000000 	 .word Mem_SegHeap
 2236              	 .cfi_endproc
 2237              	.LFE20:
 2239              	 .section .text.Mem_DynPoolBlkGet,"ax",%progbits
 2240              	 .align 2
 2241              	 .global Mem_DynPoolBlkGet
 2242              	 .code 16
 2243              	 .thumb_func
 2245              	Mem_DynPoolBlkGet:
 2246              	.LFB21:
1940:../Dave/Generated/UCPROBE/lib_mem.c **** 
1941:../Dave/Generated/UCPROBE/lib_mem.c **** 
1942:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1943:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1944:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_DynPoolBlkGet()
1945:../Dave/Generated/UCPROBE/lib_mem.c **** *
1946:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets a memory block from specified pool, growing it if needed.
1947:../Dave/Generated/UCPROBE/lib_mem.c **** *
1948:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
1949:../Dave/Generated/UCPROBE/lib_mem.c **** *
1950:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1951:../Dave/Generated/UCPROBE/lib_mem.c **** *
1952:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                    Operation was successful.
1953:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Pool data pointer NULL.
1954:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY              Pools is empty.
1955:../Dave/Generated/UCPROBE/lib_mem.c **** *
1956:../Dave/Generated/UCPROBE/lib_mem.c **** *                           ----------------------RETURNED BY Mem_SegAllocInternal()---------------
1957:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignment requ
1958:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size specified
1959:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Error or segment data pointer NULL.
1960:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF                 Allocation would overflow memory se
1961:../Dave/Generated/UCPROBE/lib_mem.c **** *
1962:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if successful.
1963:../Dave/Generated/UCPROBE/lib_mem.c **** *
1964:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1965:../Dave/Generated/UCPROBE/lib_mem.c **** *
1966:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1967:../Dave/Generated/UCPROBE/lib_mem.c **** *
1968:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1969:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1970:../Dave/Generated/UCPROBE/lib_mem.c **** */
1971:../Dave/Generated/UCPROBE/lib_mem.c **** 
1972:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_DynPoolBlkGet (MEM_DYN_POOL  *p_pool,
1973:../Dave/Generated/UCPROBE/lib_mem.c ****                           LIB_ERR       *p_err)
1974:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2247              	 .loc 1 1974 0
 2248              	 .cfi_startproc
 2249 0000 90B5     	 push {r4,r7,lr}
 2250              	.LCFI63:
 2251              	 .cfi_def_cfa_offset 12
 2252              	 .cfi_offset 4,-12
 2253              	 .cfi_offset 7,-8
 2254              	 .cfi_offset 14,-4
 2255 0002 8BB0     	 sub sp,sp,#44
 2256              	.LCFI64:
 2257              	 .cfi_def_cfa_offset 56
 2258 0004 04AF     	 add r7,sp,#16
 2259              	.LCFI65:
 2260              	 .cfi_def_cfa 7,40
 2261 0006 7860     	 str r0,[r7,#4]
 2262 0008 3960     	 str r1,[r7]
1975:../Dave/Generated/UCPROBE/lib_mem.c ****            void      *p_blk;
1976:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_CHAR  *p_pool_name;
1977:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2263              	 .loc 1 1977 0
 2264 000a 0023     	 mov r3,#0
 2265 000c 7B61     	 str r3,[r7,#20]
1978:../Dave/Generated/UCPROBE/lib_mem.c **** 
1979:../Dave/Generated/UCPROBE/lib_mem.c **** 
1980:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1981:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
1982:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1983:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1984:../Dave/Generated/UCPROBE/lib_mem.c **** 
1985:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
1986:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1987:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1988:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1989:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1990:../Dave/Generated/UCPROBE/lib_mem.c **** 
1991:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Ensure pool is not empty if qty 
1992:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
 2266              	 .loc 1 1992 0
 2267 000e 7B68     	 ldr r3,[r7,#4]
 2268 0010 5B69     	 ldr r3,[r3,#20]
 2269 0012 002B     	 cmp r3,#0
 2270 0014 1BD0     	 beq .L147
1993:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2271              	 .loc 1 1993 0
 2272 0016 FFF7FEFF 	 bl CPU_SR_Save
 2273 001a 031C     	 mov r3,r0
 2274 001c 7B61     	 str r3,[r7,#20]
1994:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2275              	 .loc 1 1994 0
 2276 001e 7B68     	 ldr r3,[r7,#4]
 2277 0020 9A69     	 ldr r2,[r3,#24]
 2278 0022 7B68     	 ldr r3,[r7,#4]
 2279 0024 5B69     	 ldr r3,[r3,#20]
 2280 0026 9A42     	 cmp r2,r3
 2281 0028 08D3     	 bcc .L148
1995:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2282              	 .loc 1 1995 0
 2283 002a 7B69     	 ldr r3,[r7,#20]
 2284 002c 181C     	 mov r0,r3
 2285 002e FFF7FEFF 	 bl CPU_SR_Restore
1996:../Dave/Generated/UCPROBE/lib_mem.c **** 
1997:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_EMPTY;
 2286              	 .loc 1 1997 0
 2287 0032 3B68     	 ldr r3,[r7]
 2288 0034 244A     	 ldr r2,.L152
 2289 0036 1A80     	 strh r2,[r3]
1998:../Dave/Generated/UCPROBE/lib_mem.c ****             return (DEF_NULL);
 2290              	 .loc 1 1998 0
 2291 0038 0023     	 mov r3,#0
 2292 003a 41E0     	 b .L149
 2293              	.L148:
1999:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2000:../Dave/Generated/UCPROBE/lib_mem.c **** 
2001:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkAllocCnt++;
 2294              	 .loc 1 2001 0
 2295 003c 7B68     	 ldr r3,[r7,#4]
 2296 003e 9B69     	 ldr r3,[r3,#24]
 2297 0040 5A1C     	 add r2,r3,#1
 2298 0042 7B68     	 ldr r3,[r7,#4]
 2299 0044 9A61     	 str r2,[r3,#24]
2002:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2300              	 .loc 1 2002 0
 2301 0046 7B69     	 ldr r3,[r7,#20]
 2302 0048 181C     	 mov r0,r3
 2303 004a FFF7FEFF 	 bl CPU_SR_Restore
 2304              	.L147:
2003:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2004:../Dave/Generated/UCPROBE/lib_mem.c **** 
2005:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- ALLOC FROM FREE 
2006:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2305              	 .loc 1 2006 0
 2306 004e FFF7FEFF 	 bl CPU_SR_Save
 2307 0052 031C     	 mov r3,r0
 2308 0054 7B61     	 str r3,[r7,#20]
2007:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 2309              	 .loc 1 2007 0
 2310 0056 7B68     	 ldr r3,[r7,#4]
 2311 0058 1B69     	 ldr r3,[r3,#16]
 2312 005a 002B     	 cmp r3,#0
 2313 005c 0FD0     	 beq .L150
2008:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
 2314              	 .loc 1 2008 0
 2315 005e 7B68     	 ldr r3,[r7,#4]
 2316 0060 1B69     	 ldr r3,[r3,#16]
 2317 0062 3B61     	 str r3,[r7,#16]
2009:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = *((void **)p_blk);
 2318              	 .loc 1 2009 0
 2319 0064 3B69     	 ldr r3,[r7,#16]
 2320 0066 1A68     	 ldr r2,[r3]
 2321 0068 7B68     	 ldr r3,[r7,#4]
 2322 006a 1A61     	 str r2,[r3,#16]
2010:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2323              	 .loc 1 2010 0
 2324 006c 7B69     	 ldr r3,[r7,#20]
 2325 006e 181C     	 mov r0,r3
 2326 0070 FFF7FEFF 	 bl CPU_SR_Restore
2011:../Dave/Generated/UCPROBE/lib_mem.c **** 
2012:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
 2327              	 .loc 1 2012 0
 2328 0074 3B68     	 ldr r3,[r7]
 2329 0076 154A     	 ldr r2,.L152+4
 2330 0078 1A80     	 strh r2,[r3]
2013:../Dave/Generated/UCPROBE/lib_mem.c **** 
2014:../Dave/Generated/UCPROBE/lib_mem.c ****         return (p_blk);
 2331              	 .loc 1 2014 0
 2332 007a 3B69     	 ldr r3,[r7,#16]
 2333 007c 20E0     	 b .L149
 2334              	.L150:
2015:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2016:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2335              	 .loc 1 2016 0
 2336 007e 7B69     	 ldr r3,[r7,#20]
 2337 0080 181C     	 mov r0,r3
 2338 0082 FFF7FEFF 	 bl CPU_SR_Restore
2017:../Dave/Generated/UCPROBE/lib_mem.c **** 
2018:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ ALLOC NEW BLK
2019:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2020:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_name = p_pool->NamePtr;
2021:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2022:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_name = DEF_NULL;
 2339              	 .loc 1 2022 0
 2340 0086 0023     	 mov r3,#0
 2341 0088 FB60     	 str r3,[r7,#12]
2023:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2024:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_pool_name,
 2342              	 .loc 1 2024 0
 2343 008a 7B68     	 ldr r3,[r7,#4]
 2344 008c 1968     	 ldr r1,[r3]
 2345 008e 7B68     	 ldr r3,[r7,#4]
 2346 0090 5A68     	 ldr r2,[r3,#4]
 2347 0092 7B68     	 ldr r3,[r7,#4]
 2348 0094 9C68     	 ldr r4,[r3,#8]
 2349 0096 7B68     	 ldr r3,[r7,#4]
 2350 0098 DB68     	 ldr r3,[r3,#12]
 2351 009a F868     	 ldr r0,[r7,#12]
 2352 009c 0093     	 str r3,[sp]
 2353 009e 0023     	 mov r3,#0
 2354 00a0 0193     	 str r3,[sp,#4]
 2355 00a2 3B68     	 ldr r3,[r7]
 2356 00a4 0293     	 str r3,[sp,#8]
 2357 00a6 231C     	 mov r3,r4
 2358 00a8 FFF7FEFF 	 bl Mem_SegAllocInternal
 2359 00ac 031C     	 mov r3,r0
 2360 00ae 3B61     	 str r3,[r7,#16]
2025:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->PoolSegPtr,
2026:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkSize,
2027:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkAlign,
2028:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkPaddingAlign,
2029:../Dave/Generated/UCPROBE/lib_mem.c ****                                  DEF_NULL,
2030:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
2031:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 2361              	 .loc 1 2031 0
 2362 00b0 3B68     	 ldr r3,[r7]
 2363 00b2 1B88     	 ldrh r3,[r3]
 2364 00b4 054A     	 ldr r2,.L152+4
 2365 00b6 9342     	 cmp r3,r2
 2366 00b8 01D0     	 beq .L151
2032:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2367              	 .loc 1 2032 0
 2368 00ba 0023     	 mov r3,#0
 2369 00bc 00E0     	 b .L149
 2370              	.L151:
2033:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2034:../Dave/Generated/UCPROBE/lib_mem.c **** 
2035:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 2371              	 .loc 1 2035 0
 2372 00be 3B69     	 ldr r3,[r7,#16]
 2373              	.L149:
2036:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2374              	 .loc 1 2036 0
 2375 00c0 181C     	 mov r0,r3
 2376 00c2 BD46     	 mov sp,r7
 2377 00c4 07B0     	 add sp,sp,#28
 2378              	 
 2379 00c6 90BD     	 pop {r4,r7,pc}
 2380              	.L153:
 2381              	 .align 2
 2382              	.L152:
 2383 00c8 DE270000 	 .word 10206
 2384 00cc 10270000 	 .word 10000
 2385              	 .cfi_endproc
 2386              	.LFE21:
 2388              	 .section .text.Mem_DynPoolBlkFree,"ax",%progbits
 2389              	 .align 2
 2390              	 .global Mem_DynPoolBlkFree
 2391              	 .code 16
 2392              	 .thumb_func
 2394              	Mem_DynPoolBlkFree:
 2395              	.LFB22:
2037:../Dave/Generated/UCPROBE/lib_mem.c **** 
2038:../Dave/Generated/UCPROBE/lib_mem.c **** 
2039:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2040:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2041:../Dave/Generated/UCPROBE/lib_mem.c **** *                                         Mem_DynPoolBlkFree()
2042:../Dave/Generated/UCPROBE/lib_mem.c **** *
2043:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Frees memory block, making it available for future use.
2044:../Dave/Generated/UCPROBE/lib_mem.c **** *
2045:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2046:../Dave/Generated/UCPROBE/lib_mem.c **** *
2047:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_blk   Pointer to first byte of memory block.
2048:../Dave/Generated/UCPROBE/lib_mem.c **** *
2049:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2050:../Dave/Generated/UCPROBE/lib_mem.c **** *
2051:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE        Operation was successful.
2052:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR    'p_pool' or 'p_blk' pointer passed is NULL.
2053:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL   Pool is full.
2054:../Dave/Generated/UCPROBE/lib_mem.c **** *
2055:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
2056:../Dave/Generated/UCPROBE/lib_mem.c **** *
2057:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2058:../Dave/Generated/UCPROBE/lib_mem.c **** *
2059:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2060:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2061:../Dave/Generated/UCPROBE/lib_mem.c **** */
2062:../Dave/Generated/UCPROBE/lib_mem.c **** 
2063:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolBlkFree (MEM_DYN_POOL  *p_pool,
2064:../Dave/Generated/UCPROBE/lib_mem.c ****                           void          *p_blk,
2065:../Dave/Generated/UCPROBE/lib_mem.c ****                           LIB_ERR       *p_err)
2066:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2396              	 .loc 1 2066 0
 2397              	 .cfi_startproc
 2398 0000 80B5     	 push {r7,lr}
 2399              	.LCFI66:
 2400              	 .cfi_def_cfa_offset 8
 2401              	 .cfi_offset 7,-8
 2402              	 .cfi_offset 14,-4
 2403 0002 86B0     	 sub sp,sp,#24
 2404              	.LCFI67:
 2405              	 .cfi_def_cfa_offset 32
 2406 0004 00AF     	 add r7,sp,#0
 2407              	.LCFI68:
 2408              	 .cfi_def_cfa_register 7
 2409 0006 F860     	 str r0,[r7,#12]
 2410 0008 B960     	 str r1,[r7,#8]
 2411 000a 7A60     	 str r2,[r7,#4]
2067:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2412              	 .loc 1 2067 0
 2413 000c 0023     	 mov r3,#0
 2414 000e 7B61     	 str r3,[r7,#20]
2068:../Dave/Generated/UCPROBE/lib_mem.c **** 
2069:../Dave/Generated/UCPROBE/lib_mem.c **** 
2070:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2071:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2072:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2073:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2074:../Dave/Generated/UCPROBE/lib_mem.c **** 
2075:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2076:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2077:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2078:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2079:../Dave/Generated/UCPROBE/lib_mem.c **** 
2080:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
2081:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2082:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2083:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2084:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2085:../Dave/Generated/UCPROBE/lib_mem.c **** 
2086:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {       /* Ensure pool is not full.        
 2415              	 .loc 1 2086 0
 2416 0010 FB68     	 ldr r3,[r7,#12]
 2417 0012 5B69     	 ldr r3,[r3,#20]
 2418 0014 002B     	 cmp r3,#0
 2419 0016 18D0     	 beq .L155
2087:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2420              	 .loc 1 2087 0
 2421 0018 FFF7FEFF 	 bl CPU_SR_Save
 2422 001c 031C     	 mov r3,r0
 2423 001e 7B61     	 str r3,[r7,#20]
2088:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 2424              	 .loc 1 2088 0
 2425 0020 FB68     	 ldr r3,[r7,#12]
 2426 0022 9B69     	 ldr r3,[r3,#24]
 2427 0024 002B     	 cmp r3,#0
 2428 0026 07D1     	 bne .L156
2089:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2429              	 .loc 1 2089 0
 2430 0028 7B69     	 ldr r3,[r7,#20]
 2431 002a 181C     	 mov r0,r3
 2432 002c FFF7FEFF 	 bl CPU_SR_Restore
2090:../Dave/Generated/UCPROBE/lib_mem.c **** 
2091:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_FULL;
 2433              	 .loc 1 2091 0
 2434 0030 7B68     	 ldr r3,[r7,#4]
 2435 0032 104A     	 ldr r2,.L158
 2436 0034 1A80     	 strh r2,[r3]
2092:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
 2437              	 .loc 1 2092 0
 2438 0036 1AE0     	 b .L154
 2439              	.L156:
2093:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2094:../Dave/Generated/UCPROBE/lib_mem.c **** 
2095:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkAllocCnt--;
 2440              	 .loc 1 2095 0
 2441 0038 FB68     	 ldr r3,[r7,#12]
 2442 003a 9B69     	 ldr r3,[r3,#24]
 2443 003c 5A1E     	 sub r2,r3,#1
 2444 003e FB68     	 ldr r3,[r7,#12]
 2445 0040 9A61     	 str r2,[r3,#24]
2096:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2446              	 .loc 1 2096 0
 2447 0042 7B69     	 ldr r3,[r7,#20]
 2448 0044 181C     	 mov r0,r3
 2449 0046 FFF7FEFF 	 bl CPU_SR_Restore
 2450              	.L155:
2097:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2098:../Dave/Generated/UCPROBE/lib_mem.c **** 
2099:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2451              	 .loc 1 2099 0
 2452 004a FFF7FEFF 	 bl CPU_SR_Save
 2453 004e 031C     	 mov r3,r0
 2454 0050 7B61     	 str r3,[r7,#20]
2100:../Dave/Generated/UCPROBE/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 2455              	 .loc 1 2100 0
 2456 0052 FB68     	 ldr r3,[r7,#12]
 2457 0054 1A69     	 ldr r2,[r3,#16]
 2458 0056 BB68     	 ldr r3,[r7,#8]
 2459 0058 1A60     	 str r2,[r3]
2101:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
 2460              	 .loc 1 2101 0
 2461 005a FB68     	 ldr r3,[r7,#12]
 2462 005c BA68     	 ldr r2,[r7,#8]
 2463 005e 1A61     	 str r2,[r3,#16]
2102:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2464              	 .loc 1 2102 0
 2465 0060 7B69     	 ldr r3,[r7,#20]
 2466 0062 181C     	 mov r0,r3
 2467 0064 FFF7FEFF 	 bl CPU_SR_Restore
2103:../Dave/Generated/UCPROBE/lib_mem.c **** 
2104:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2468              	 .loc 1 2104 0
 2469 0068 7B68     	 ldr r3,[r7,#4]
 2470 006a 034A     	 ldr r2,.L158+4
 2471 006c 1A80     	 strh r2,[r3]
 2472              	.L154:
2105:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2473              	 .loc 1 2105 0
 2474 006e BD46     	 mov sp,r7
 2475 0070 06B0     	 add sp,sp,#24
 2476              	 
 2477 0072 80BD     	 pop {r7,pc}
 2478              	.L159:
 2479              	 .align 2
 2480              	.L158:
 2481 0074 DD270000 	 .word 10205
 2482 0078 10270000 	 .word 10000
 2483              	 .cfi_endproc
 2484              	.LFE22:
 2486              	 .section .text.Mem_DynPoolBlkNbrAvailGet,"ax",%progbits
 2487              	 .align 2
 2488              	 .global Mem_DynPoolBlkNbrAvailGet
 2489              	 .code 16
 2490              	 .thumb_func
 2492              	Mem_DynPoolBlkNbrAvailGet:
 2493              	.LFB23:
2106:../Dave/Generated/UCPROBE/lib_mem.c **** 
2107:../Dave/Generated/UCPROBE/lib_mem.c **** 
2108:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2109:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2110:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_DynPoolBlkNbrAvailGet()
2111:../Dave/Generated/UCPROBE/lib_mem.c **** *
2112:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets number of available blocks in dynamic memory pool. This call will fail with a
2113:../Dave/Generated/UCPROBE/lib_mem.c **** *               dynamic memory pool for which no limit was set at creation.
2114:../Dave/Generated/UCPROBE/lib_mem.c **** *
2115:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2116:../Dave/Generated/UCPROBE/lib_mem.c **** *
2117:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2118:../Dave/Generated/UCPROBE/lib_mem.c **** *
2119:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
2120:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            'p_pool' pointer passed is NULL.
2121:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_UNLIMITED      Pool has no specified limit.
2122:../Dave/Generated/UCPROBE/lib_mem.c **** *
2123:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Number of blocks available in dynamic memory pool, if successful.
2124:../Dave/Generated/UCPROBE/lib_mem.c **** *
2125:../Dave/Generated/UCPROBE/lib_mem.c **** *               0, if pool is empty or if an error occurred.
2126:../Dave/Generated/UCPROBE/lib_mem.c **** *
2127:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2128:../Dave/Generated/UCPROBE/lib_mem.c **** *
2129:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : None.
2130:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2131:../Dave/Generated/UCPROBE/lib_mem.c **** */
2132:../Dave/Generated/UCPROBE/lib_mem.c **** 
2133:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_DynPoolBlkNbrAvailGet (MEM_DYN_POOL  *p_pool,
2134:../Dave/Generated/UCPROBE/lib_mem.c ****                                        LIB_ERR       *p_err)
2135:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2494              	 .loc 1 2135 0
 2495              	 .cfi_startproc
 2496 0000 80B5     	 push {r7,lr}
 2497              	.LCFI69:
 2498              	 .cfi_def_cfa_offset 8
 2499              	 .cfi_offset 7,-8
 2500              	 .cfi_offset 14,-4
 2501 0002 84B0     	 sub sp,sp,#16
 2502              	.LCFI70:
 2503              	 .cfi_def_cfa_offset 24
 2504 0004 00AF     	 add r7,sp,#0
 2505              	.LCFI71:
 2506              	 .cfi_def_cfa_register 7
 2507 0006 7860     	 str r0,[r7,#4]
 2508 0008 3960     	 str r1,[r7]
2136:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  blk_nbr_avail;
2137:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2509              	 .loc 1 2137 0
 2510 000a 0023     	 mov r3,#0
 2511 000c BB60     	 str r3,[r7,#8]
2138:../Dave/Generated/UCPROBE/lib_mem.c **** 
2139:../Dave/Generated/UCPROBE/lib_mem.c **** 
2140:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2141:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2142:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2143:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2144:../Dave/Generated/UCPROBE/lib_mem.c **** 
2145:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2146:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2147:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
2148:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2149:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2150:../Dave/Generated/UCPROBE/lib_mem.c **** 
2151:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
 2512              	 .loc 1 2151 0
 2513 000e 7B68     	 ldr r3,[r7,#4]
 2514 0010 5B69     	 ldr r3,[r3,#20]
 2515 0012 002B     	 cmp r3,#0
 2516 0014 11D0     	 beq .L161
2152:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2517              	 .loc 1 2152 0
 2518 0016 FFF7FEFF 	 bl CPU_SR_Save
 2519 001a 031C     	 mov r3,r0
 2520 001c BB60     	 str r3,[r7,#8]
2153:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 2521              	 .loc 1 2153 0
 2522 001e 7B68     	 ldr r3,[r7,#4]
 2523 0020 5A69     	 ldr r2,[r3,#20]
 2524 0022 7B68     	 ldr r3,[r7,#4]
 2525 0024 9B69     	 ldr r3,[r3,#24]
 2526 0026 D31A     	 sub r3,r2,r3
 2527 0028 FB60     	 str r3,[r7,#12]
2154:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2528              	 .loc 1 2154 0
 2529 002a BB68     	 ldr r3,[r7,#8]
 2530 002c 181C     	 mov r0,r3
 2531 002e FFF7FEFF 	 bl CPU_SR_Restore
2155:../Dave/Generated/UCPROBE/lib_mem.c **** 
2156:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
 2532              	 .loc 1 2156 0
 2533 0032 3B68     	 ldr r3,[r7]
 2534 0034 064A     	 ldr r2,.L164
 2535 0036 1A80     	 strh r2,[r3]
 2536 0038 04E0     	 b .L162
 2537              	.L161:
2157:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2158:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_nbr_avail = 0u;
 2538              	 .loc 1 2158 0
 2539 003a 0023     	 mov r3,#0
 2540 003c FB60     	 str r3,[r7,#12]
2159:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err         = LIB_MEM_ERR_POOL_UNLIMITED;
 2541              	 .loc 1 2159 0
 2542 003e 3B68     	 ldr r3,[r7]
 2543 0040 044A     	 ldr r2,.L164+4
 2544 0042 1A80     	 strh r2,[r3]
 2545              	.L162:
2160:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2161:../Dave/Generated/UCPROBE/lib_mem.c **** 
2162:../Dave/Generated/UCPROBE/lib_mem.c ****     return (blk_nbr_avail);
 2546              	 .loc 1 2162 0
 2547 0044 FB68     	 ldr r3,[r7,#12]
2163:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2548              	 .loc 1 2163 0
 2549 0046 181C     	 mov r0,r3
 2550 0048 BD46     	 mov sp,r7
 2551 004a 04B0     	 add sp,sp,#16
 2552              	 
 2553 004c 80BD     	 pop {r7,pc}
 2554              	.L165:
 2555 004e C046     	 .align 2
 2556              	.L164:
 2557 0050 10270000 	 .word 10000
 2558 0054 DF270000 	 .word 10207
 2559              	 .cfi_endproc
 2560              	.LFE23:
 2562              	 .section .text.Mem_SegCreateCritical,"ax",%progbits
 2563              	 .align 2
 2564              	 .code 16
 2565              	 .thumb_func
 2567              	Mem_SegCreateCritical:
 2568              	.LFB24:
2164:../Dave/Generated/UCPROBE/lib_mem.c **** 
2165:../Dave/Generated/UCPROBE/lib_mem.c **** 
2166:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2167:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2168:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_OutputUsage()
2169:../Dave/Generated/UCPROBE/lib_mem.c **** *
2170:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Outputs memory usage report through 'out_fnct'.
2171:../Dave/Generated/UCPROBE/lib_mem.c **** *
2172:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : out_fnct        Pointer to output function.
2173:../Dave/Generated/UCPROBE/lib_mem.c **** *
2174:../Dave/Generated/UCPROBE/lib_mem.c **** *               print_details   DEF_YES, if the size of each allocation should be printed.
2175:../Dave/Generated/UCPROBE/lib_mem.c **** *                               DEF_NO,  otherwise.
2176:../Dave/Generated/UCPROBE/lib_mem.c **** *
2177:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2178:../Dave/Generated/UCPROBE/lib_mem.c **** *
2179:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
2180:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            'out_fnct' pointer passed is NU
2181:../Dave/Generated/UCPROBE/lib_mem.c **** *
2182:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegRemSizeGet()-----------
2183:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
2184:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
2185:../Dave/Generated/UCPROBE/lib_mem.c **** *
2186:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
2187:../Dave/Generated/UCPROBE/lib_mem.c **** *
2188:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2189:../Dave/Generated/UCPROBE/lib_mem.c **** *
2190:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2191:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2192:../Dave/Generated/UCPROBE/lib_mem.c **** */
2193:../Dave/Generated/UCPROBE/lib_mem.c **** 
2194:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2195:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_OutputUsage(void     (*out_fnct) (CPU_CHAR *),
2196:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR   *p_err)
2197:../Dave/Generated/UCPROBE/lib_mem.c **** {
2198:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CHAR   str[DEF_INT_32U_NBR_DIG_MAX];
2199:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG   *p_seg;
2200:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
2201:../Dave/Generated/UCPROBE/lib_mem.c **** 
2202:../Dave/Generated/UCPROBE/lib_mem.c **** 
2203:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2204:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2205:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2206:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2207:../Dave/Generated/UCPROBE/lib_mem.c **** 
2208:../Dave/Generated/UCPROBE/lib_mem.c ****     if (out_fnct == DEF_NULL) {                                 /* Chk for NULL out fnct ptr.      
2209:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2210:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2211:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2212:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2213:../Dave/Generated/UCPROBE/lib_mem.c **** 
2214:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("---------------- Memory allocation info ----------------\r\n");
2215:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("| Type    | Size       | Free size  | Name\r\n");
2216:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("|---------|------------|------------|-------------------\r\n");
2217:../Dave/Generated/UCPROBE/lib_mem.c **** 
2218:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
2219:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg = Mem_SegHeadPtr;
2220:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_seg != DEF_NULL) {
2221:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SIZE_T       rem_size;
2222:../Dave/Generated/UCPROBE/lib_mem.c ****         MEM_SEG_INFO     seg_info;
2223:../Dave/Generated/UCPROBE/lib_mem.c ****         MEM_ALLOC_INFO  *p_alloc;
2224:../Dave/Generated/UCPROBE/lib_mem.c **** 
2225:../Dave/Generated/UCPROBE/lib_mem.c **** 
2226:../Dave/Generated/UCPROBE/lib_mem.c ****         rem_size = Mem_SegRemSizeGet(p_seg, 1u, &seg_info, p_err);
2227:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
2228:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2229:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2230:../Dave/Generated/UCPROBE/lib_mem.c **** 
2231:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct("| Section | ");
2232:../Dave/Generated/UCPROBE/lib_mem.c **** 
2233:../Dave/Generated/UCPROBE/lib_mem.c ****         (void)Str_FmtNbr_Int32U(seg_info.TotalSize,
2234:../Dave/Generated/UCPROBE/lib_mem.c ****                                 10u,
2235:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2236:../Dave/Generated/UCPROBE/lib_mem.c ****                                 ' ',
2237:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NO,
2238:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_YES,
2239:../Dave/Generated/UCPROBE/lib_mem.c ****                                &str[0u]);
2240:../Dave/Generated/UCPROBE/lib_mem.c **** 
2241:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(str);
2242:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(" | ");
2243:../Dave/Generated/UCPROBE/lib_mem.c **** 
2244:../Dave/Generated/UCPROBE/lib_mem.c ****         (void)Str_FmtNbr_Int32U(rem_size,
2245:../Dave/Generated/UCPROBE/lib_mem.c ****                                 10u,
2246:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2247:../Dave/Generated/UCPROBE/lib_mem.c ****                                 ' ',
2248:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NO,
2249:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_YES,
2250:../Dave/Generated/UCPROBE/lib_mem.c ****                                &str[0u]);
2251:../Dave/Generated/UCPROBE/lib_mem.c **** 
2252:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(str);
2253:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(" | ");
2254:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct((p_seg->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_seg->NamePtr : (CPU_CHAR *)"Unknown")
2255:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct("\r\n");
2256:../Dave/Generated/UCPROBE/lib_mem.c **** 
2257:../Dave/Generated/UCPROBE/lib_mem.c ****         p_alloc = p_seg->AllocInfoHeadPtr;
2258:../Dave/Generated/UCPROBE/lib_mem.c ****         while (p_alloc != DEF_NULL) {
2259:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct("| -> Obj  | ");
2260:../Dave/Generated/UCPROBE/lib_mem.c **** 
2261:../Dave/Generated/UCPROBE/lib_mem.c ****             (void)Str_FmtNbr_Int32U(p_alloc->Size,
2262:../Dave/Generated/UCPROBE/lib_mem.c ****                                     10u,
2263:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_NBR_BASE_DEC,
2264:../Dave/Generated/UCPROBE/lib_mem.c ****                                     ' ',
2265:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_NO,
2266:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_YES,
2267:../Dave/Generated/UCPROBE/lib_mem.c ****                                    &str[0u]);
2268:../Dave/Generated/UCPROBE/lib_mem.c **** 
2269:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct(str);
2270:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct(" |            | ");
2271:../Dave/Generated/UCPROBE/lib_mem.c **** 
2272:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct((p_alloc->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_alloc->NamePtr : (CPU_CHAR *)"U
2273:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct("\r\n");
2274:../Dave/Generated/UCPROBE/lib_mem.c **** 
2275:../Dave/Generated/UCPROBE/lib_mem.c ****             p_alloc = p_alloc->NextPtr;
2276:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2277:../Dave/Generated/UCPROBE/lib_mem.c **** 
2278:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = p_seg->NextPtr;
2279:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2280:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
2281:../Dave/Generated/UCPROBE/lib_mem.c **** 
2282:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
2283:../Dave/Generated/UCPROBE/lib_mem.c **** }
2284:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2285:../Dave/Generated/UCPROBE/lib_mem.c **** 
2286:../Dave/Generated/UCPROBE/lib_mem.c **** 
2287:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2288:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2289:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2290:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           LOCAL FUNCTIONS
2291:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2292:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2293:../Dave/Generated/UCPROBE/lib_mem.c **** */
2294:../Dave/Generated/UCPROBE/lib_mem.c **** 
2295:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2296:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2297:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       Mem_SegCreateCritical()
2298:../Dave/Generated/UCPROBE/lib_mem.c **** *
2299:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation or dynamic po
2300:../Dave/Generated/UCPROBE/lib_mem.c **** *
2301:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
2302:../Dave/Generated/UCPROBE/lib_mem.c **** *
2303:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
2304:../Dave/Generated/UCPROBE/lib_mem.c **** *               -----           Argument validated by caller.
2305:../Dave/Generated/UCPROBE/lib_mem.c **** *
2306:../Dave/Generated/UCPROBE/lib_mem.c **** *               seg_base_addr   Segment's first byte address.
2307:../Dave/Generated/UCPROBE/lib_mem.c **** *
2308:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2309:../Dave/Generated/UCPROBE/lib_mem.c **** *                               from this memory segment. MUST be a power of 2.
2310:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_PADDING_ALIGN_NONE means no padding.
2311:../Dave/Generated/UCPROBE/lib_mem.c **** *               -------------   Argument validated by caller.
2312:../Dave/Generated/UCPROBE/lib_mem.c **** *
2313:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Total size of segment, in bytes.
2314:../Dave/Generated/UCPROBE/lib_mem.c **** *               ----            Argument validated by caller.
2315:../Dave/Generated/UCPROBE/lib_mem.c **** *
2316:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to segment data, if successful.
2317:../Dave/Generated/UCPROBE/lib_mem.c **** *
2318:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2319:../Dave/Generated/UCPROBE/lib_mem.c **** *
2320:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2321:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegCreate().
2322:../Dave/Generated/UCPROBE/lib_mem.c **** *
2323:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2324:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2325:../Dave/Generated/UCPROBE/lib_mem.c **** */
2326:../Dave/Generated/UCPROBE/lib_mem.c **** 
2327:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_SegCreateCritical(const  CPU_CHAR    *p_name,
2328:../Dave/Generated/UCPROBE/lib_mem.c ****                                            MEM_SEG     *p_seg,
2329:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_ADDR     seg_base_addr,
2330:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_SIZE_T   padding_align,
2331:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_SIZE_T   size)
2332:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2569              	 .loc 1 2332 0
 2570              	 .cfi_startproc
 2571 0000 80B5     	 push {r7,lr}
 2572              	.LCFI72:
 2573              	 .cfi_def_cfa_offset 8
 2574              	 .cfi_offset 7,-8
 2575              	 .cfi_offset 14,-4
 2576 0002 84B0     	 sub sp,sp,#16
 2577              	.LCFI73:
 2578              	 .cfi_def_cfa_offset 24
 2579 0004 00AF     	 add r7,sp,#0
 2580              	.LCFI74:
 2581              	 .cfi_def_cfa_register 7
 2582 0006 F860     	 str r0,[r7,#12]
 2583 0008 B960     	 str r1,[r7,#8]
 2584 000a 7A60     	 str r2,[r7,#4]
 2585 000c 3B60     	 str r3,[r7]
2333:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrBase         =  seg_base_addr;
 2586              	 .loc 1 2333 0
 2587 000e BB68     	 ldr r3,[r7,#8]
 2588 0010 7A68     	 ldr r2,[r7,#4]
 2589 0012 1A60     	 str r2,[r3]
2334:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
 2590              	 .loc 1 2334 0
 2591 0014 BA69     	 ldr r2,[r7,#24]
 2592 0016 7B68     	 ldr r3,[r7,#4]
 2593 0018 D318     	 add r3,r2,r3
 2594 001a 5A1E     	 sub r2,r3,#1
 2595 001c BB68     	 ldr r3,[r7,#8]
 2596 001e 5A60     	 str r2,[r3,#4]
2335:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
 2597              	 .loc 1 2335 0
 2598 0020 BB68     	 ldr r3,[r7,#8]
 2599 0022 7A68     	 ldr r2,[r7,#4]
 2600 0024 9A60     	 str r2,[r3,#8]
2336:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NextPtr          =  Mem_SegHeadPtr;
 2601              	 .loc 1 2336 0
 2602 0026 064B     	 ldr r3,.L167
 2603 0028 1A68     	 ldr r2,[r3]
 2604 002a BB68     	 ldr r3,[r7,#8]
 2605 002c DA60     	 str r2,[r3,#12]
2337:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->PaddingAlign     =  padding_align;
 2606              	 .loc 1 2337 0
 2607 002e BB68     	 ldr r3,[r7,#8]
 2608 0030 3A68     	 ldr r2,[r7]
 2609 0032 1A61     	 str r2,[r3,#16]
2338:../Dave/Generated/UCPROBE/lib_mem.c **** 
2339:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2340:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NamePtr          = p_name;
2341:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AllocInfoHeadPtr = DEF_NULL;
2342:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2343:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)&p_name;
2344:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2345:../Dave/Generated/UCPROBE/lib_mem.c **** 
2346:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegHeadPtr = p_seg;
 2610              	 .loc 1 2346 0
 2611 0034 024B     	 ldr r3,.L167
 2612 0036 BA68     	 ldr r2,[r7,#8]
 2613 0038 1A60     	 str r2,[r3]
2347:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2614              	 .loc 1 2347 0
 2615 003a BD46     	 mov sp,r7
 2616 003c 04B0     	 add sp,sp,#16
 2617              	 
 2618 003e 80BD     	 pop {r7,pc}
 2619              	.L168:
 2620              	 .align 2
 2621              	.L167:
 2622 0040 00000000 	 .word Mem_SegHeadPtr
 2623              	 .cfi_endproc
 2624              	.LFE24:
 2626              	 .section .text.Mem_SegOverlapChkCritical,"ax",%progbits
 2627              	 .align 2
 2628              	 .code 16
 2629              	 .thumb_func
 2631              	Mem_SegOverlapChkCritical:
 2632              	.LFB25:
2348:../Dave/Generated/UCPROBE/lib_mem.c **** 
2349:../Dave/Generated/UCPROBE/lib_mem.c **** 
2350:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2351:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2352:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_SegOverlapChkCritical()
2353:../Dave/Generated/UCPROBE/lib_mem.c **** *
2354:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Checks if existing memory segment exists or overlaps with specified memory area.
2355:../Dave/Generated/UCPROBE/lib_mem.c **** *
2356:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : seg_base_addr   Address of first byte of memory area.
2357:../Dave/Generated/UCPROBE/lib_mem.c **** *
2358:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory area, in bytes.
2359:../Dave/Generated/UCPROBE/lib_mem.c **** *
2360:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2361:../Dave/Generated/UCPROBE/lib_mem.c **** *
2362:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another existi
2363:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
2364:../Dave/Generated/UCPROBE/lib_mem.c **** *
2365:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory segment that overlaps.
2366:../Dave/Generated/UCPROBE/lib_mem.c **** *
2367:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2368:../Dave/Generated/UCPROBE/lib_mem.c **** *
2369:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2370:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegCreate().
2371:../Dave/Generated/UCPROBE/lib_mem.c **** *
2372:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2373:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2374:../Dave/Generated/UCPROBE/lib_mem.c **** */
2375:../Dave/Generated/UCPROBE/lib_mem.c **** 
2376:../Dave/Generated/UCPROBE/lib_mem.c **** static  MEM_SEG  *Mem_SegOverlapChkCritical (CPU_ADDR     seg_base_addr,
2377:../Dave/Generated/UCPROBE/lib_mem.c ****                                              CPU_SIZE_T   size,
2378:../Dave/Generated/UCPROBE/lib_mem.c ****                                              LIB_ERR     *p_err)
2379:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2633              	 .loc 1 2379 0
 2634              	 .cfi_startproc
 2635 0000 80B5     	 push {r7,lr}
 2636              	.LCFI75:
 2637              	 .cfi_def_cfa_offset 8
 2638              	 .cfi_offset 7,-8
 2639              	 .cfi_offset 14,-4
 2640 0002 88B0     	 sub sp,sp,#32
 2641              	.LCFI76:
 2642              	 .cfi_def_cfa_offset 40
 2643 0004 00AF     	 add r7,sp,#0
 2644              	.LCFI77:
 2645              	 .cfi_def_cfa_register 7
 2646 0006 F860     	 str r0,[r7,#12]
 2647 0008 B960     	 str r1,[r7,#8]
 2648 000a 7A60     	 str r2,[r7,#4]
2380:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG   *p_seg_chk;
2381:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_new_end;
2382:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_chk_start;
2383:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_chk_end;
2384:../Dave/Generated/UCPROBE/lib_mem.c **** 
2385:../Dave/Generated/UCPROBE/lib_mem.c **** 
2386:../Dave/Generated/UCPROBE/lib_mem.c ****     seg_new_end = seg_base_addr + (size - 1u);
 2649              	 .loc 1 2386 0
 2650 000c BA68     	 ldr r2,[r7,#8]
 2651 000e FB68     	 ldr r3,[r7,#12]
 2652 0010 D318     	 add r3,r2,r3
 2653 0012 013B     	 sub r3,r3,#1
 2654 0014 BB61     	 str r3,[r7,#24]
2387:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg_chk   = Mem_SegHeadPtr;
 2655              	 .loc 1 2387 0
 2656 0016 1D4B     	 ldr r3,.L177
 2657 0018 1B68     	 ldr r3,[r3]
 2658 001a FB61     	 str r3,[r7,#28]
2388:../Dave/Generated/UCPROBE/lib_mem.c **** 
2389:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_seg_chk != DEF_NULL) {
 2659              	 .loc 1 2389 0
 2660 001c 2BE0     	 b .L170
 2661              	.L176:
2390:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 2662              	 .loc 1 2390 0
 2663 001e FB69     	 ldr r3,[r7,#28]
 2664 0020 1B68     	 ldr r3,[r3]
 2665 0022 7B61     	 str r3,[r7,#20]
2391:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_end   = (CPU_ADDR)p_seg_chk->AddrEnd;
 2666              	 .loc 1 2391 0
 2667 0024 FB69     	 ldr r3,[r7,#28]
 2668 0026 5B68     	 ldr r3,[r3,#4]
 2669 0028 3B61     	 str r3,[r7,#16]
2392:../Dave/Generated/UCPROBE/lib_mem.c **** 
2393:../Dave/Generated/UCPROBE/lib_mem.c ****         if ((seg_base_addr == seg_chk_start) && (seg_new_end == seg_chk_end)) {
 2670              	 .loc 1 2393 0
 2671 002a FA68     	 ldr r2,[r7,#12]
 2672 002c 7B69     	 ldr r3,[r7,#20]
 2673 002e 9A42     	 cmp r2,r3
 2674 0030 09D1     	 bne .L171
 2675              	 .loc 1 2393 0 is_stmt 0 discriminator 1
 2676 0032 BA69     	 ldr r2,[r7,#24]
 2677 0034 3B69     	 ldr r3,[r7,#16]
 2678 0036 9A42     	 cmp r2,r3
 2679 0038 05D1     	 bne .L171
2394:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_EXISTS;
 2680              	 .loc 1 2394 0 is_stmt 1
 2681 003a 7B68     	 ldr r3,[r7,#4]
 2682 003c 9E22     	 mov r2,#158
 2683 003e 9201     	 lsl r2,r2,#6
 2684 0040 1A80     	 strh r2,[r3]
2395:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
 2685              	 .loc 1 2395 0
 2686 0042 FB69     	 ldr r3,[r7,#28]
 2687 0044 1EE0     	 b .L172
 2688              	.L171:
2396:../Dave/Generated/UCPROBE/lib_mem.c ****         } else if (((seg_base_addr >= seg_chk_start) && (seg_base_addr <= seg_chk_end)) ||
 2689              	 .loc 1 2396 0
 2690 0046 FA68     	 ldr r2,[r7,#12]
 2691 0048 7B69     	 ldr r3,[r7,#20]
 2692 004a 9A42     	 cmp r2,r3
 2693 004c 03D3     	 bcc .L173
 2694              	 .loc 1 2396 0 is_stmt 0 discriminator 1
 2695 004e FA68     	 ldr r2,[r7,#12]
 2696 0050 3B69     	 ldr r3,[r7,#16]
 2697 0052 9A42     	 cmp r2,r3
 2698 0054 07D9     	 bls .L174
 2699              	.L173:
 2700              	 .loc 1 2396 0 discriminator 3
 2701 0056 FA68     	 ldr r2,[r7,#12]
 2702 0058 7B69     	 ldr r3,[r7,#20]
 2703 005a 9A42     	 cmp r2,r3
 2704 005c 08D8     	 bhi .L175
2397:../Dave/Generated/UCPROBE/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 2705              	 .loc 1 2397 0 is_stmt 1
 2706 005e BA69     	 ldr r2,[r7,#24]
 2707 0060 7B69     	 ldr r3,[r7,#20]
 2708 0062 9A42     	 cmp r2,r3
 2709 0064 04D3     	 bcc .L175
 2710              	.L174:
2398:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_OVERLAP;
 2711              	 .loc 1 2398 0
 2712 0066 7B68     	 ldr r3,[r7,#4]
 2713 0068 094A     	 ldr r2,.L177+4
 2714 006a 1A80     	 strh r2,[r3]
2399:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
 2715              	 .loc 1 2399 0
 2716 006c FB69     	 ldr r3,[r7,#28]
 2717 006e 09E0     	 b .L172
 2718              	.L175:
2400:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2401:../Dave/Generated/UCPROBE/lib_mem.c **** 
2402:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_chk = p_seg_chk->NextPtr;
 2719              	 .loc 1 2402 0
 2720 0070 FB69     	 ldr r3,[r7,#28]
 2721 0072 DB68     	 ldr r3,[r3,#12]
 2722 0074 FB61     	 str r3,[r7,#28]
 2723              	.L170:
2389:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 2724              	 .loc 1 2389 0
 2725 0076 FB69     	 ldr r3,[r7,#28]
 2726 0078 002B     	 cmp r3,#0
 2727 007a D0D1     	 bne .L176
2403:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2404:../Dave/Generated/UCPROBE/lib_mem.c **** 
2405:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2728              	 .loc 1 2405 0
 2729 007c 7B68     	 ldr r3,[r7,#4]
 2730 007e 054A     	 ldr r2,.L177+8
 2731 0080 1A80     	 strh r2,[r3]
2406:../Dave/Generated/UCPROBE/lib_mem.c **** 
2407:../Dave/Generated/UCPROBE/lib_mem.c ****     return (DEF_NULL);
 2732              	 .loc 1 2407 0
 2733 0082 0023     	 mov r3,#0
 2734              	.L172:
2408:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2735              	 .loc 1 2408 0
 2736 0084 181C     	 mov r0,r3
 2737 0086 BD46     	 mov sp,r7
 2738 0088 08B0     	 add sp,sp,#32
 2739              	 
 2740 008a 80BD     	 pop {r7,pc}
 2741              	.L178:
 2742              	 .align 2
 2743              	.L177:
 2744 008c 00000000 	 .word Mem_SegHeadPtr
 2745 0090 7F270000 	 .word 10111
 2746 0094 10270000 	 .word 10000
 2747              	 .cfi_endproc
 2748              	.LFE25:
 2750              	 .section .text.Mem_SegAllocInternal,"ax",%progbits
 2751              	 .align 2
 2752              	 .code 16
 2753              	 .thumb_func
 2755              	Mem_SegAllocInternal:
 2756              	.LFB26:
2409:../Dave/Generated/UCPROBE/lib_mem.c **** 
2410:../Dave/Generated/UCPROBE/lib_mem.c **** 
2411:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2412:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2413:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       Mem_SegAllocInternal()
2414:../Dave/Generated/UCPROBE/lib_mem.c **** *
2415:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment.
2416:../Dave/Generated/UCPROBE/lib_mem.c **** *
2417:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
2418:../Dave/Generated/UCPROBE/lib_mem.c **** *
2419:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory.
2420:../Dave/Generated/UCPROBE/lib_mem.c **** *               -----           Argument validated by caller.
2421:../Dave/Generated/UCPROBE/lib_mem.c **** *
2422:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2423:../Dave/Generated/UCPROBE/lib_mem.c **** *
2424:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2425:../Dave/Generated/UCPROBE/lib_mem.c **** *
2426:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2427:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2428:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
2429:../Dave/Generated/UCPROBE/lib_mem.c **** *
2430:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2431:../Dave/Generated/UCPROBE/lib_mem.c **** *                                the allocation to succeed. Set to DEF_NULL to skip calculation.
2432:../Dave/Generated/UCPROBE/lib_mem.c **** *
2433:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2434:../Dave/Generated/UCPROBE/lib_mem.c **** *
2435:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2436:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2437:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2438:../Dave/Generated/UCPROBE/lib_mem.c **** *
2439:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocExtCritical()--------
2440:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2441:../Dave/Generated/UCPROBE/lib_mem.c **** *
2442:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2443:../Dave/Generated/UCPROBE/lib_mem.c **** *
2444:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2445:../Dave/Generated/UCPROBE/lib_mem.c **** *
2446:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_DynPoolBlkGet(),
2447:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_DynPoolCreateInternal(),
2448:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_HeapAlloc(),
2449:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_PoolCreate(),
2450:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAlloc(),
2451:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocExt(),
2452:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocHW().
2453:../Dave/Generated/UCPROBE/lib_mem.c **** *
2454:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2455:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2456:../Dave/Generated/UCPROBE/lib_mem.c **** */
2457:../Dave/Generated/UCPROBE/lib_mem.c **** 
2458:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  *Mem_SegAllocInternal (const  CPU_CHAR    *p_name,
2459:../Dave/Generated/UCPROBE/lib_mem.c ****                                             MEM_SEG     *p_seg,
2460:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   size,
2461:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   align,
2462:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   padding_align,
2463:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T  *p_bytes_reqd,
2464:../Dave/Generated/UCPROBE/lib_mem.c ****                                             LIB_ERR     *p_err)
2465:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2757              	 .loc 1 2465 0
 2758              	 .cfi_startproc
 2759 0000 90B5     	 push {r4,r7,lr}
 2760              	.LCFI78:
 2761              	 .cfi_def_cfa_offset 12
 2762              	 .cfi_offset 4,-12
 2763              	 .cfi_offset 7,-8
 2764              	 .cfi_offset 14,-4
 2765 0002 89B0     	 sub sp,sp,#36
 2766              	.LCFI79:
 2767              	 .cfi_def_cfa_offset 48
 2768 0004 02AF     	 add r7,sp,#8
 2769              	.LCFI80:
 2770              	 .cfi_def_cfa 7,40
 2771 0006 F860     	 str r0,[r7,#12]
 2772 0008 B960     	 str r1,[r7,#8]
 2773 000a 7A60     	 str r2,[r7,#4]
 2774 000c 3B60     	 str r3,[r7]
2466:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
2467:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2775              	 .loc 1 2467 0
 2776 000e 0023     	 mov r3,#0
 2777 0010 7B61     	 str r3,[r7,#20]
2468:../Dave/Generated/UCPROBE/lib_mem.c **** 
2469:../Dave/Generated/UCPROBE/lib_mem.c **** 
2470:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2471:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
2472:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
2473:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2474:../Dave/Generated/UCPROBE/lib_mem.c **** 
2475:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized mem req.  
2476:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_SIZE;
2477:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2478:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2479:../Dave/Generated/UCPROBE/lib_mem.c **** 
2480:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk that align is a pwr of 2.   
2481:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
2482:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2483:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2484:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2485:../Dave/Generated/UCPROBE/lib_mem.c **** 
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2778              	 .loc 1 2486 0
 2779 0012 FFF7FEFF 	 bl CPU_SR_Save
 2780 0016 031C     	 mov r3,r0
 2781 0018 7B61     	 str r3,[r7,#20]
2487:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 2782              	 .loc 1 2487 0
 2783 001a B868     	 ldr r0,[r7,#8]
 2784 001c 7968     	 ldr r1,[r7,#4]
 2785 001e 3A68     	 ldr r2,[r7]
 2786 0020 BC6A     	 ldr r4,[r7,#40]
 2787 0022 FB6A     	 ldr r3,[r7,#44]
 2788 0024 0093     	 str r3,[sp]
 2789 0026 3B6B     	 ldr r3,[r7,#48]
 2790 0028 0193     	 str r3,[sp,#4]
 2791 002a 231C     	 mov r3,r4
 2792 002c FFF7FEFF 	 bl Mem_SegAllocExtCritical
 2793 0030 031C     	 mov r3,r0
 2794 0032 3B61     	 str r3,[r7,#16]
2488:../Dave/Generated/UCPROBE/lib_mem.c ****                                     size,
2489:../Dave/Generated/UCPROBE/lib_mem.c ****                                     align,
2490:../Dave/Generated/UCPROBE/lib_mem.c ****                                     padding_align,
2491:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_bytes_reqd,
2492:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_err);
2493:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 2795              	 .loc 1 2493 0
 2796 0034 3B6B     	 ldr r3,[r7,#48]
 2797 0036 1B88     	 ldrh r3,[r3]
 2798 0038 084A     	 ldr r2,.L182
 2799 003a 9342     	 cmp r3,r2
 2800 003c 05D0     	 beq .L180
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2801              	 .loc 1 2494 0
 2802 003e 7B69     	 ldr r3,[r7,#20]
 2803 0040 181C     	 mov r0,r3
 2804 0042 FFF7FEFF 	 bl CPU_SR_Restore
2495:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2805              	 .loc 1 2495 0
 2806 0046 0023     	 mov r3,#0
 2807 0048 04E0     	 b .L181
 2808              	.L180:
2496:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2497:../Dave/Generated/UCPROBE/lib_mem.c **** 
2498:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
2499:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegAllocTrackCritical(p_name,
2500:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
2501:../Dave/Generated/UCPROBE/lib_mem.c ****                               size,
2502:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
2503:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2504:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2505:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2506:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2507:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2508:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)&p_name;
2509:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2510:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2809              	 .loc 1 2510 0
 2810 004a 7B69     	 ldr r3,[r7,#20]
 2811 004c 181C     	 mov r0,r3
 2812 004e FFF7FEFF 	 bl CPU_SR_Restore
2511:../Dave/Generated/UCPROBE/lib_mem.c **** 
2512:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 2813              	 .loc 1 2512 0
 2814 0052 3B69     	 ldr r3,[r7,#16]
 2815              	.L181:
2513:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2816              	 .loc 1 2513 0
 2817 0054 181C     	 mov r0,r3
 2818 0056 BD46     	 mov sp,r7
 2819 0058 07B0     	 add sp,sp,#28
 2820              	 
 2821 005a 90BD     	 pop {r4,r7,pc}
 2822              	.L183:
 2823              	 .align 2
 2824              	.L182:
 2825 005c 10270000 	 .word 10000
 2826              	 .cfi_endproc
 2827              	.LFE26:
 2829              	 .section .text.Mem_SegAllocExtCritical,"ax",%progbits
 2830              	 .align 2
 2831              	 .code 16
 2832              	 .thumb_func
 2834              	Mem_SegAllocExtCritical:
 2835              	.LFB27:
2514:../Dave/Generated/UCPROBE/lib_mem.c **** 
2515:../Dave/Generated/UCPROBE/lib_mem.c **** 
2516:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2517:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2518:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_SegAllocExtCritical()
2519:../Dave/Generated/UCPROBE/lib_mem.c **** *
2520:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment.
2521:../Dave/Generated/UCPROBE/lib_mem.c **** *
2522:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment from which to allocate memory.
2523:../Dave/Generated/UCPROBE/lib_mem.c **** *
2524:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2525:../Dave/Generated/UCPROBE/lib_mem.c **** *
2526:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2527:../Dave/Generated/UCPROBE/lib_mem.c **** *
2528:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2529:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2530:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
2531:../Dave/Generated/UCPROBE/lib_mem.c **** *
2532:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2533:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
2534:../Dave/Generated/UCPROBE/lib_mem.c **** *
2535:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2536:../Dave/Generated/UCPROBE/lib_mem.c **** *
2537:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF     Allocation would overflow memory segmen
2538:../Dave/Generated/UCPROBE/lib_mem.c **** *
2539:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2540:../Dave/Generated/UCPROBE/lib_mem.c **** *
2541:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2542:../Dave/Generated/UCPROBE/lib_mem.c **** *
2543:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2544:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocInternal(),
2545:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocTrackCritical().
2546:../Dave/Generated/UCPROBE/lib_mem.c **** *
2547:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2548:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2549:../Dave/Generated/UCPROBE/lib_mem.c **** */
2550:../Dave/Generated/UCPROBE/lib_mem.c **** 
2551:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  *Mem_SegAllocExtCritical (MEM_SEG     *p_seg,
2552:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   size,
2553:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   align,
2554:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   padding_align,
2555:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T  *p_bytes_reqd,
2556:../Dave/Generated/UCPROBE/lib_mem.c ****                                         LIB_ERR     *p_err)
2557:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2836              	 .loc 1 2557 0
 2837              	 .cfi_startproc
 2838 0000 80B5     	 push {r7,lr}
 2839              	.LCFI81:
 2840              	 .cfi_def_cfa_offset 8
 2841              	 .cfi_offset 7,-8
 2842              	 .cfi_offset 14,-4
 2843 0002 8AB0     	 sub sp,sp,#40
 2844              	.LCFI82:
 2845              	 .cfi_def_cfa_offset 48
 2846 0004 00AF     	 add r7,sp,#0
 2847              	.LCFI83:
 2848              	 .cfi_def_cfa_register 7
 2849 0006 F860     	 str r0,[r7,#12]
 2850 0008 B960     	 str r1,[r7,#8]
 2851 000a 7A60     	 str r2,[r7,#4]
 2852 000c 3B60     	 str r3,[r7]
2558:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    blk_addr;
2559:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    addr_next;
2560:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  size_rem_seg;
2561:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  size_tot_blk;
2562:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  blk_align = DEF_MAX(align, padding_align);
 2853              	 .loc 1 2562 0
 2854 000e 7A68     	 ldr r2,[r7,#4]
 2855 0010 3B68     	 ldr r3,[r7]
 2856 0012 9342     	 cmp r3,r2
 2857 0014 00D2     	 bcs .L185
 2858 0016 131C     	 mov r3,r2
 2859              	.L185:
 2860 0018 7B62     	 str r3,[r7,#36]
2563:../Dave/Generated/UCPROBE/lib_mem.c **** 
2564:../Dave/Generated/UCPROBE/lib_mem.c **** 
2565:../Dave/Generated/UCPROBE/lib_mem.c ****     blk_addr     = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext,      /* Compute align'ed blk addr.      
 2861              	 .loc 1 2565 0
 2862 001a FB68     	 ldr r3,[r7,#12]
 2863 001c 9B68     	 ldr r3,[r3,#8]
 2864 001e 7A6A     	 ldr r2,[r7,#36]
 2865 0020 5242     	 neg r2,r2
 2866 0022 1A40     	 and r2,r3
 2867 0024 FB68     	 ldr r3,[r7,#12]
 2868 0026 9B68     	 ldr r3,[r3,#8]
 2869 0028 796A     	 ldr r1,[r7,#36]
 2870 002a 0139     	 sub r1,r1,#1
 2871 002c 0B40     	 and r3,r1
 2872 002e 01D0     	 beq .L186
 2873              	 .loc 1 2565 0 is_stmt 0 discriminator 1
 2874 0030 7B6A     	 ldr r3,[r7,#36]
 2875 0032 00E0     	 b .L187
 2876              	.L186:
 2877              	 .loc 1 2565 0 discriminator 2
 2878 0034 0023     	 mov r3,#0
 2879              	.L187:
 2880              	 .loc 1 2565 0 discriminator 4
 2881 0036 D318     	 add r3,r2,r3
 2882 0038 3B62     	 str r3,[r7,#32]
2566:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
2567:../Dave/Generated/UCPROBE/lib_mem.c ****     addr_next    = MATH_ROUND_INC_UP_PWR2(blk_addr + size,      /* Compute addr of next alloc.     
 2883              	 .loc 1 2567 0 is_stmt 1 discriminator 4
 2884 003a 3A6A     	 ldr r2,[r7,#32]
 2885 003c BB68     	 ldr r3,[r7,#8]
 2886 003e D318     	 add r3,r2,r3
 2887 0040 3A68     	 ldr r2,[r7]
 2888 0042 5242     	 neg r2,r2
 2889 0044 1A40     	 and r2,r3
 2890 0046 396A     	 ldr r1,[r7,#32]
 2891 0048 BB68     	 ldr r3,[r7,#8]
 2892 004a CB18     	 add r3,r1,r3
 2893 004c 3968     	 ldr r1,[r7]
 2894 004e 0139     	 sub r1,r1,#1
 2895 0050 0B40     	 and r3,r1
 2896 0052 01D0     	 beq .L188
 2897              	 .loc 1 2567 0 is_stmt 0 discriminator 1
 2898 0054 3B68     	 ldr r3,[r7]
 2899 0056 00E0     	 b .L189
 2900              	.L188:
 2901              	 .loc 1 2567 0 discriminator 2
 2902 0058 0023     	 mov r3,#0
 2903              	.L189:
 2904              	 .loc 1 2567 0 discriminator 4
 2905 005a D318     	 add r3,r2,r3
 2906 005c FB61     	 str r3,[r7,#28]
2568:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem_seg = p_seg->AddrEnd - p_seg->AddrNext + 1u;
 2907              	 .loc 1 2569 0 is_stmt 1 discriminator 4
 2908 005e FB68     	 ldr r3,[r7,#12]
 2909 0060 5A68     	 ldr r2,[r3,#4]
 2910 0062 FB68     	 ldr r3,[r7,#12]
 2911 0064 9B68     	 ldr r3,[r3,#8]
 2912 0066 D31A     	 sub r3,r2,r3
 2913 0068 0133     	 add r3,r3,#1
 2914 006a BB61     	 str r3,[r7,#24]
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 2915              	 .loc 1 2570 0 discriminator 4
 2916 006c FB68     	 ldr r3,[r7,#12]
 2917 006e 9B68     	 ldr r3,[r3,#8]
 2918 0070 FA69     	 ldr r2,[r7,#28]
 2919 0072 D31A     	 sub r3,r2,r3
 2920 0074 7B61     	 str r3,[r7,#20]
2571:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 2921              	 .loc 1 2571 0 discriminator 4
 2922 0076 BA69     	 ldr r2,[r7,#24]
 2923 0078 7B69     	 ldr r3,[r7,#20]
 2924 007a 9A42     	 cmp r2,r3
 2925 007c 0CD2     	 bcs .L190
2572:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 2926              	 .loc 1 2572 0
 2927 007e 3B6B     	 ldr r3,[r7,#48]
 2928 0080 002B     	 cmp r3,#0
 2929 0082 04D0     	 beq .L191
2573:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 2930              	 .loc 1 2573 0
 2931 0084 7A69     	 ldr r2,[r7,#20]
 2932 0086 BB69     	 ldr r3,[r7,#24]
 2933 0088 D21A     	 sub r2,r2,r3
 2934 008a 3B6B     	 ldr r3,[r7,#48]
 2935 008c 1A60     	 str r2,[r3]
 2936              	.L191:
2574:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2575:../Dave/Generated/UCPROBE/lib_mem.c **** 
2576:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_SEG_OVF;
 2937              	 .loc 1 2576 0
 2938 008e 7B6B     	 ldr r3,[r7,#52]
 2939 0090 074A     	 ldr r2,.L193
 2940 0092 1A80     	 strh r2,[r3]
2577:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2941              	 .loc 1 2577 0
 2942 0094 0023     	 mov r3,#0
 2943 0096 06E0     	 b .L192
 2944              	.L190:
2578:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2579:../Dave/Generated/UCPROBE/lib_mem.c **** 
2580:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext = addr_next;
 2945              	 .loc 1 2580 0
 2946 0098 FB68     	 ldr r3,[r7,#12]
 2947 009a FA69     	 ldr r2,[r7,#28]
 2948 009c 9A60     	 str r2,[r3,#8]
2581:../Dave/Generated/UCPROBE/lib_mem.c **** 
2582:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2949              	 .loc 1 2582 0
 2950 009e 7B6B     	 ldr r3,[r7,#52]
 2951 00a0 044A     	 ldr r2,.L193+4
 2952 00a2 1A80     	 strh r2,[r3]
2583:../Dave/Generated/UCPROBE/lib_mem.c **** 
2584:../Dave/Generated/UCPROBE/lib_mem.c ****     return ((void *)blk_addr);
 2953              	 .loc 1 2584 0
 2954 00a4 3B6A     	 ldr r3,[r7,#32]
 2955              	.L192:
2585:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2956              	 .loc 1 2585 0
 2957 00a6 181C     	 mov r0,r3
 2958 00a8 BD46     	 mov sp,r7
 2959 00aa 0AB0     	 add sp,sp,#40
 2960              	 
 2961 00ac 80BD     	 pop {r7,pc}
 2962              	.L194:
 2963 00ae C046     	 .align 2
 2964              	.L193:
 2965 00b0 D9270000 	 .word 10201
 2966 00b4 10270000 	 .word 10000
 2967              	 .cfi_endproc
 2968              	.LFE27:
 2970              	 .section .text.Mem_DynPoolCreateInternal,"ax",%progbits
 2971              	 .align 2
 2972              	 .code 16
 2973              	 .thumb_func
 2975              	Mem_DynPoolCreateInternal:
 2976              	.LFB28:
2586:../Dave/Generated/UCPROBE/lib_mem.c **** 
2587:../Dave/Generated/UCPROBE/lib_mem.c **** 
2588:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2589:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2590:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_SegAllocTrackCritical()
2591:../Dave/Generated/UCPROBE/lib_mem.c **** *
2592:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Tracks segment allocation, adding the 'size' of the allocation under the 'p_name' e
2593:../Dave/Generated/UCPROBE/lib_mem.c **** *
2594:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to the name of the object. This string is not copied and its memory
2595:../Dave/Generated/UCPROBE/lib_mem.c **** *                       remain accessible at all times.
2596:../Dave/Generated/UCPROBE/lib_mem.c **** *
2597:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg   Pointer to segment data.
2598:../Dave/Generated/UCPROBE/lib_mem.c **** *
2599:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Allocation size, in bytes.
2600:../Dave/Generated/UCPROBE/lib_mem.c **** *
2601:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2602:../Dave/Generated/UCPROBE/lib_mem.c **** *
2603:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_HEAP_EMPTY      No more memory available on heap
2604:../Dave/Generated/UCPROBE/lib_mem.c **** *
2605:../Dave/Generated/UCPROBE/lib_mem.c **** *                           --------------RETURNED BY Mem_SegAllocExtCritical()---------------
2606:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF         Allocation would overflow memory segment.
2607:../Dave/Generated/UCPROBE/lib_mem.c **** *
2608:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
2609:../Dave/Generated/UCPROBE/lib_mem.c **** *
2610:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2611:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocInternal().
2612:../Dave/Generated/UCPROBE/lib_mem.c **** *
2613:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2614:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2615:../Dave/Generated/UCPROBE/lib_mem.c **** */
2616:../Dave/Generated/UCPROBE/lib_mem.c **** 
2617:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2618:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_SegAllocTrackCritical (const  CPU_CHAR    *p_name,
2619:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_SEG     *p_seg,
2620:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T   size,
2621:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 LIB_ERR     *p_err)
2622:../Dave/Generated/UCPROBE/lib_mem.c **** {
2623:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_ALLOC_INFO  *p_alloc;
2624:../Dave/Generated/UCPROBE/lib_mem.c **** 
2625:../Dave/Generated/UCPROBE/lib_mem.c **** 
2626:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------- UPDATE ALLOC INFO LIST, 
2627:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc = p_seg->AllocInfoHeadPtr;
2628:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_alloc != DEF_NULL) {
2629:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_alloc->NamePtr == p_name) {
2630:../Dave/Generated/UCPROBE/lib_mem.c ****             p_alloc->Size += size;
2631:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_NONE;
2632:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2633:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2634:../Dave/Generated/UCPROBE/lib_mem.c **** 
2635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_alloc = p_alloc->NextPtr;
2636:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2637:../Dave/Generated/UCPROBE/lib_mem.c **** 
2638:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------- ADD NEW ALLOC INFO ENT
2639:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc = Mem_SegAllocExtCritical(&Mem_SegHeap,             /* Alloc new alloc info struct on h
2640:../Dave/Generated/UCPROBE/lib_mem.c ****                                        sizeof(MEM_ALLOC_INFO),
2641:../Dave/Generated/UCPROBE/lib_mem.c ****                                        sizeof(CPU_ALIGN),
2642:../Dave/Generated/UCPROBE/lib_mem.c ****                                        LIB_MEM_PADDING_ALIGN_NONE,
2643:../Dave/Generated/UCPROBE/lib_mem.c ****                                        DEF_NULL,
2644:../Dave/Generated/UCPROBE/lib_mem.c ****                                        p_err);
2645:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2646:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2647:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2648:../Dave/Generated/UCPROBE/lib_mem.c **** 
2649:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->NamePtr = p_name;                                  /* Populate alloc info.            
2650:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->Size    = size;
2651:../Dave/Generated/UCPROBE/lib_mem.c **** 
2652:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->NextPtr        = p_seg->AllocInfoHeadPtr;          /* Prepend new item in list.       
2653:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AllocInfoHeadPtr = p_alloc;
2654:../Dave/Generated/UCPROBE/lib_mem.c **** }
2655:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2656:../Dave/Generated/UCPROBE/lib_mem.c **** 
2657:../Dave/Generated/UCPROBE/lib_mem.c **** 
2658:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2659:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2660:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_DynPoolCreateInternal()
2661:../Dave/Generated/UCPROBE/lib_mem.c **** *
2662:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool.
2663:../Dave/Generated/UCPROBE/lib_mem.c **** *
2664:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name              Pointer to pool name.
2665:../Dave/Generated/UCPROBE/lib_mem.c **** *
2666:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool              Pointer to pool data.
2667:../Dave/Generated/UCPROBE/lib_mem.c **** *
2668:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg               Pointer to segment from which to allocate memory.
2669:../Dave/Generated/UCPROBE/lib_mem.c **** *
2670:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size            Size of memory block to allocate from pool, in bytes. See Note 
2671:../Dave/Generated/UCPROBE/lib_mem.c **** *
2672:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align           Required alignment of memory block, in bytes. MUST be a power o
2673:../Dave/Generated/UCPROBE/lib_mem.c **** *
2674:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_padding_align   Block's padding alignment, in bytes, that will be added at the 
2675:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   of block's buffer. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_
2676:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   means no padding.
2677:../Dave/Generated/UCPROBE/lib_mem.c **** *
2678:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init        Initial number of elements to be allocated in pool.
2679:../Dave/Generated/UCPROBE/lib_mem.c **** *
2680:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max         Maximum number of elements that can be allocated from this pool
2681:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_BLK_QTY_UNLIMITED if no limit.
2682:../Dave/Generated/UCPROBE/lib_mem.c **** *
2683:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2684:../Dave/Generated/UCPROBE/lib_mem.c **** *
2685:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
2686:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
2687:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
2688:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
2689:../Dave/Generated/UCPROBE/lib_mem.c **** *
2690:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
2691:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2692:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2693:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2694:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2695:../Dave/Generated/UCPROBE/lib_mem.c **** *
2696:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
2697:../Dave/Generated/UCPROBE/lib_mem.c **** *
2698:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_DynPoolCreate(),
2699:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_DynPoolCreateHW().
2700:../Dave/Generated/UCPROBE/lib_mem.c **** *
2701:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
2702:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
2703:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2704:../Dave/Generated/UCPROBE/lib_mem.c **** */
2705:../Dave/Generated/UCPROBE/lib_mem.c **** 
2706:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_DynPoolCreateInternal (const  CPU_CHAR      *p_name,
2707:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_DYN_POOL  *p_pool,
2708:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_SEG       *p_seg,
2709:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_size,
2710:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_align,
2711:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_padding_align,
2712:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_init,
2713:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_max,
2714:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 LIB_ERR       *p_err)
2715:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2977              	 .loc 1 2715 0
 2978              	 .cfi_startproc
 2979 0000 90B5     	 push {r4,r7,lr}
 2980              	.LCFI84:
 2981              	 .cfi_def_cfa_offset 12
 2982              	 .cfi_offset 4,-12
 2983              	 .cfi_offset 7,-8
 2984              	 .cfi_offset 14,-4
 2985 0002 8DB0     	 sub sp,sp,#52
 2986              	.LCFI85:
 2987              	 .cfi_def_cfa_offset 64
 2988 0004 04AF     	 add r7,sp,#16
 2989              	.LCFI86:
 2990              	 .cfi_def_cfa 7,48
 2991 0006 F860     	 str r0,[r7,#12]
 2992 0008 B960     	 str r1,[r7,#8]
 2993 000a 7A60     	 str r2,[r7,#4]
 2994 000c 3B60     	 str r3,[r7]
2716:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blks;
2717:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   blk_size_align;
2718:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   blk_align_worst = DEF_MAX(blk_align, blk_padding_align);
 2995              	 .loc 1 2718 0
 2996 000e 3A6B     	 ldr r2,[r7,#48]
 2997 0010 7B6B     	 ldr r3,[r7,#52]
 2998 0012 9342     	 cmp r3,r2
 2999 0014 00D2     	 bcs .L196
 3000 0016 131C     	 mov r3,r2
 3001              	.L196:
 3002 0018 3B61     	 str r3,[r7,#16]
2719:../Dave/Generated/UCPROBE/lib_mem.c **** 
2720:../Dave/Generated/UCPROBE/lib_mem.c **** 
2721:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2722:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2723:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
2724:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2725:../Dave/Generated/UCPROBE/lib_mem.c **** 
2726:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2727:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2728:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2729:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2730:../Dave/Generated/UCPROBE/lib_mem.c **** 
2731:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < 1u) {                                        /* Chk for inv blk size.           
2732:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
2733:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2734:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2735:../Dave/Generated/UCPROBE/lib_mem.c **** 
2736:../Dave/Generated/UCPROBE/lib_mem.c ****     if ((blk_qty_max  != LIB_MEM_BLK_QTY_UNLIMITED) &&          /* Chk for invalid blk qty.        
2737:../Dave/Generated/UCPROBE/lib_mem.c ****         (blk_qty_init >  blk_qty_max)) {
2738:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
2739:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2740:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2741:../Dave/Generated/UCPROBE/lib_mem.c **** 
2742:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk for illegal align spec.     
2743:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
2744:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2745:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2746:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2747:../Dave/Generated/UCPROBE/lib_mem.c **** 
2748:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Calc blk size with align.       
2749:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < sizeof(void *)) {                            /* If size if smaller than ptr ... 
 3003              	 .loc 1 2749 0
 3004 001a 3B68     	 ldr r3,[r7]
 3005 001c 032B     	 cmp r3,#3
 3006 001e 0ED8     	 bhi .L197
2750:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... inc size to ptr size.       
2751:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(sizeof(void *), blk_align_worst);
 3007              	 .loc 1 2751 0
 3008 0020 3B69     	 ldr r3,[r7,#16]
 3009 0022 5B42     	 neg r3,r3
 3010 0024 0422     	 mov r2,#4
 3011 0026 1A40     	 and r2,r3
 3012 0028 3B69     	 ldr r3,[r7,#16]
 3013 002a 013B     	 sub r3,r3,#1
 3014 002c 0421     	 mov r1,#4
 3015 002e 0B40     	 and r3,r1
 3016 0030 01D0     	 beq .L198
 3017              	 .loc 1 2751 0 is_stmt 0 discriminator 1
 3018 0032 3B69     	 ldr r3,[r7,#16]
 3019 0034 00E0     	 b .L199
 3020              	.L198:
 3021              	 .loc 1 2751 0 discriminator 2
 3022 0036 0023     	 mov r3,#0
 3023              	.L199:
 3024              	 .loc 1 2751 0 discriminator 4
 3025 0038 D318     	 add r3,r2,r3
 3026 003a BB61     	 str r3,[r7,#24]
 3027 003c 0DE0     	 b .L200
 3028              	.L197:
2752:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2753:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(blk_size, blk_align_worst);
 3029              	 .loc 1 2753 0 is_stmt 1
 3030 003e 3B69     	 ldr r3,[r7,#16]
 3031 0040 5B42     	 neg r3,r3
 3032 0042 3A68     	 ldr r2,[r7]
 3033 0044 1A40     	 and r2,r3
 3034 0046 3B69     	 ldr r3,[r7,#16]
 3035 0048 013B     	 sub r3,r3,#1
 3036 004a 3968     	 ldr r1,[r7]
 3037 004c 0B40     	 and r3,r1
 3038 004e 01D0     	 beq .L201
 3039              	 .loc 1 2753 0 is_stmt 0 discriminator 1
 3040 0050 3B69     	 ldr r3,[r7,#16]
 3041 0052 00E0     	 b .L202
 3042              	.L201:
 3043              	 .loc 1 2753 0 discriminator 2
 3044 0054 0023     	 mov r3,#0
 3045              	.L202:
 3046              	 .loc 1 2753 0 discriminator 4
 3047 0056 D318     	 add r3,r2,r3
 3048 0058 BB61     	 str r3,[r7,#24]
 3049              	.L200:
2754:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2755:../Dave/Generated/UCPROBE/lib_mem.c **** 
2756:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_qty_init != 0u) {                                   /* Alloc init blks.                
 3050              	 .loc 1 2756 0 is_stmt 1
 3051 005a BB6B     	 ldr r3,[r7,#56]
 3052 005c 002B     	 cmp r3,#0
 3053 005e 16D0     	 beq .L203
2757:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
 3054              	 .loc 1 2757 0
 3055 0060 BB69     	 ldr r3,[r7,#24]
 3056 0062 BA6B     	 ldr r2,[r7,#56]
 3057 0064 5A43     	 mul r2,r3
 3058 0066 F868     	 ldr r0,[r7,#12]
 3059 0068 7968     	 ldr r1,[r7,#4]
 3060 006a 3C69     	 ldr r4,[r7,#16]
 3061 006c 0123     	 mov r3,#1
 3062 006e 0093     	 str r3,[sp]
 3063 0070 0023     	 mov r3,#0
 3064 0072 0193     	 str r3,[sp,#4]
 3065 0074 3B6C     	 ldr r3,[r7,#64]
 3066 0076 0293     	 str r3,[sp,#8]
 3067 0078 231C     	 mov r3,r4
 3068 007a FFF7FEFF 	 bl Mem_SegAllocInternal
 3069 007e 031C     	 mov r3,r0
 3070 0080 FB61     	 str r3,[r7,#28]
2758:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_seg,
2759:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     blk_size_align * blk_qty_init,
2760:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     blk_align_worst,
2761:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     LIB_MEM_PADDING_ALIGN_NONE,
2762:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     DEF_NULL,
2763:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_err);
2764:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
 3071              	 .loc 1 2764 0
 3072 0082 3B6C     	 ldr r3,[r7,#64]
 3073 0084 1B88     	 ldrh r3,[r3]
 3074 0086 1E4A     	 ldr r2,.L209
 3075 0088 9342     	 cmp r3,r2
 3076 008a 00D0     	 beq .L203
2765:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
 3077              	 .loc 1 2765 0
 3078 008c 35E0     	 b .L195
 3079              	.L203:
2766:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2767:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2768:../Dave/Generated/UCPROBE/lib_mem.c **** 
2769:../Dave/Generated/UCPROBE/lib_mem.c **** 
2770:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ----------------- CREATE POOL DA
2771:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolSegPtr      = p_seg;
 3080              	 .loc 1 2771 0
 3081 008e BB68     	 ldr r3,[r7,#8]
 3082 0090 7A68     	 ldr r2,[r7,#4]
 3083 0092 1A60     	 str r2,[r3]
2772:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize         = blk_size;
 3084              	 .loc 1 2772 0
 3085 0094 BB68     	 ldr r3,[r7,#8]
 3086 0096 3A68     	 ldr r2,[r7]
 3087 0098 5A60     	 str r2,[r3,#4]
2773:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAlign        = blk_align_worst;
 3088              	 .loc 1 2773 0
 3089 009a BB68     	 ldr r3,[r7,#8]
 3090 009c 3A69     	 ldr r2,[r7,#16]
 3091 009e 9A60     	 str r2,[r3,#8]
2774:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkPaddingAlign = blk_padding_align;
 3092              	 .loc 1 2774 0
 3093 00a0 BB68     	 ldr r3,[r7,#8]
 3094 00a2 7A6B     	 ldr r2,[r7,#52]
 3095 00a4 DA60     	 str r2,[r3,#12]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkQtyMax       = blk_qty_max;
 3096              	 .loc 1 2775 0
 3097 00a6 BB68     	 ldr r3,[r7,#8]
 3098 00a8 FA6B     	 ldr r2,[r7,#60]
 3099 00aa 5A61     	 str r2,[r3,#20]
2776:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3100              	 .loc 1 2776 0
 3101 00ac BB68     	 ldr r3,[r7,#8]
 3102 00ae 0022     	 mov r2,#0
 3103 00b0 9A61     	 str r2,[r3,#24]
2777:../Dave/Generated/UCPROBE/lib_mem.c **** 
2778:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_qty_init != 0u) {                                   /* Init free list.                 
 3104              	 .loc 1 2778 0
 3105 00b2 BB6B     	 ldr r3,[r7,#56]
 3106 00b4 002B     	 cmp r3,#0
 3107 00b6 1AD0     	 beq .L205
 3108              	.LBB3:
2779:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SIZE_T  i;
2780:../Dave/Generated/UCPROBE/lib_mem.c **** 
2781:../Dave/Generated/UCPROBE/lib_mem.c **** 
2782:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = (void *)p_blks;
 3109              	 .loc 1 2782 0
 3110 00b8 BB68     	 ldr r3,[r7,#8]
 3111 00ba FA69     	 ldr r2,[r7,#28]
 3112 00bc 1A61     	 str r2,[r3,#16]
2783:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3113              	 .loc 1 2783 0
 3114 00be 0023     	 mov r3,#0
 3115 00c0 7B61     	 str r3,[r7,#20]
 3116 00c2 0BE0     	 b .L206
 3117              	.L207:
2784:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3118              	 .loc 1 2784 0 discriminator 3
 3119 00c4 FA69     	 ldr r2,[r7,#28]
 3120 00c6 BB69     	 ldr r3,[r7,#24]
 3121 00c8 D218     	 add r2,r2,r3
 3122 00ca FB69     	 ldr r3,[r7,#28]
 3123 00cc 1A60     	 str r2,[r3]
2785:../Dave/Generated/UCPROBE/lib_mem.c ****             p_blks            += blk_size_align;
 3124              	 .loc 1 2785 0 discriminator 3
 3125 00ce FA69     	 ldr r2,[r7,#28]
 3126 00d0 BB69     	 ldr r3,[r7,#24]
 3127 00d2 D318     	 add r3,r2,r3
 3128 00d4 FB61     	 str r3,[r7,#28]
2783:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3129              	 .loc 1 2783 0 discriminator 3
 3130 00d6 7B69     	 ldr r3,[r7,#20]
 3131 00d8 0133     	 add r3,r3,#1
 3132 00da 7B61     	 str r3,[r7,#20]
 3133              	.L206:
2783:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3134              	 .loc 1 2783 0 is_stmt 0 discriminator 1
 3135 00dc BB6B     	 ldr r3,[r7,#56]
 3136 00de 5A1E     	 sub r2,r3,#1
 3137 00e0 7B69     	 ldr r3,[r7,#20]
 3138 00e2 9A42     	 cmp r2,r3
 3139 00e4 EED8     	 bhi .L207
2786:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2787:../Dave/Generated/UCPROBE/lib_mem.c ****        *((void **)p_blks) = DEF_NULL;
 3140              	 .loc 1 2787 0 is_stmt 1
 3141 00e6 FB69     	 ldr r3,[r7,#28]
 3142 00e8 0022     	 mov r2,#0
 3143 00ea 1A60     	 str r2,[r3]
 3144              	.LBE3:
 3145 00ec 02E0     	 b .L208
 3146              	.L205:
2788:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2789:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = DEF_NULL;
 3147              	 .loc 1 2789 0
 3148 00ee BB68     	 ldr r3,[r7,#8]
 3149 00f0 0022     	 mov r2,#0
 3150 00f2 1A61     	 str r2,[r3,#16]
 3151              	.L208:
2790:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2791:../Dave/Generated/UCPROBE/lib_mem.c **** 
2792:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2793:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->NamePtr = p_name;
2794:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2795:../Dave/Generated/UCPROBE/lib_mem.c **** 
2796:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 3152              	 .loc 1 2796 0
 3153 00f4 3B6C     	 ldr r3,[r7,#64]
 3154 00f6 024A     	 ldr r2,.L209
 3155 00f8 1A80     	 strh r2,[r3]
 3156              	.L195:
2797:../Dave/Generated/UCPROBE/lib_mem.c **** }
 3157              	 .loc 1 2797 0
 3158 00fa BD46     	 mov sp,r7
 3159 00fc 09B0     	 add sp,sp,#36
 3160              	 
 3161 00fe 90BD     	 pop {r4,r7,pc}
 3162              	.L210:
 3163              	 .align 2
 3164              	.L209:
 3165 0100 10270000 	 .word 10000
 3166              	 .cfi_endproc
 3167              	.LFE28:
 3169              	 .text
 3170              	.Letext0:
 3171              	 .file 2 "../Dave/Generated/UCPROBE/cpu.h"
 3172              	 .file 3 "../Dave/Generated/UCPROBE/lib_def.h"
 3173              	 .file 4 "../Dave/Generated/UCPROBE/lib_mem.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lib_mem.c
                            *COM*:00000400 Mem_Heap
                            *COM*:00000014 Mem_SegHeap
                            *COM*:00000004 Mem_SegHeadPtr
    {standard input}:21     .rodata:00000000 $d
    {standard input}:25     .text.Mem_Init:00000000 $t
    {standard input}:30     .text.Mem_Init:00000000 Mem_Init
    {standard input}:1091   .text.Mem_SegCreate:00000000 Mem_SegCreate
    {standard input}:85     .text.Mem_Init:0000003c $d
    {standard input}:94     .text.Mem_Clr:00000000 $t
    {standard input}:99     .text.Mem_Clr:00000000 Mem_Clr
    {standard input}:137    .text.Mem_Set:00000000 Mem_Set
    {standard input}:132    .text.Mem_Set:00000000 $t
    {standard input}:288    .text.Mem_Copy:00000000 $t
    {standard input}:293    .text.Mem_Copy:00000000 Mem_Copy
    {standard input}:466    .text.Mem_Move:00000000 $t
    {standard input}:471    .text.Mem_Move:00000000 Mem_Move
    {standard input}:687    .text.Mem_Cmp:00000000 $t
    {standard input}:692    .text.Mem_Cmp:00000000 Mem_Cmp
    {standard input}:957    .text.Mem_HeapAlloc:00000000 $t
    {standard input}:962    .text.Mem_HeapAlloc:00000000 Mem_HeapAlloc
    {standard input}:2755   .text.Mem_SegAllocInternal:00000000 Mem_SegAllocInternal
    {standard input}:1019   .text.Mem_HeapAlloc:00000048 $d
    {standard input}:1026   .text.Mem_HeapGetSizeRem:00000000 $t
    {standard input}:1031   .text.Mem_HeapGetSizeRem:00000000 Mem_HeapGetSizeRem
    {standard input}:1208   .text.Mem_SegRemSizeGet:00000000 Mem_SegRemSizeGet
    {standard input}:1080   .text.Mem_HeapGetSizeRem:00000038 $d
    {standard input}:1086   .text.Mem_SegCreate:00000000 $t
    {standard input}:2567   .text.Mem_SegCreateCritical:00000000 Mem_SegCreateCritical
    {standard input}:1143   .text.Mem_SegCreate:00000040 $d
    {standard input}:1148   .text.Mem_SegClr:00000000 $t
    {standard input}:1153   .text.Mem_SegClr:00000000 Mem_SegClr
    {standard input}:1198   .text.Mem_SegClr:00000034 $d
    {standard input}:1203   .text.Mem_SegRemSizeGet:00000000 $t
    {standard input}:1324   .text.Mem_SegRemSizeGet:0000009c $d
    {standard input}:1330   .text.Mem_SegAlloc:00000000 $t
    {standard input}:1335   .text.Mem_SegAlloc:00000000 Mem_SegAlloc
    {standard input}:1387   .text.Mem_SegAlloc:00000040 $d
    {standard input}:1392   .text.Mem_SegAllocExt:00000000 $t
    {standard input}:1397   .text.Mem_SegAllocExt:00000000 Mem_SegAllocExt
    {standard input}:1451   .text.Mem_SegAllocExt:00000040 $d
    {standard input}:1456   .text.Mem_SegAllocHW:00000000 $t
    {standard input}:1461   .text.Mem_SegAllocHW:00000000 Mem_SegAllocHW
    {standard input}:1516   .text.Mem_SegAllocHW:00000044 $d
    {standard input}:1528   .text.Mem_PoolCreate:00000000 $t
    {standard input}:1533   .text.Mem_PoolCreate:00000000 Mem_PoolCreate
    {standard input}:1811   .text.Mem_PoolClr:00000000 Mem_PoolClr
    {standard input}:2631   .text.Mem_SegOverlapChkCritical:00000000 Mem_SegOverlapChkCritical
    {standard input}:2834   .text.Mem_SegAllocExtCritical:00000000 Mem_SegAllocExtCritical
    {standard input}:1798   .text.Mem_PoolCreate:00000190 $d
    {standard input}:1806   .text.Mem_PoolClr:00000000 $t
    {standard input}:1864   .text.Mem_PoolClr:0000003c $d
    {standard input}:1869   .text.Mem_PoolBlkGet:00000000 $t
    {standard input}:1874   .text.Mem_PoolBlkGet:00000000 Mem_PoolBlkGet
    {standard input}:1962   .text.Mem_PoolBlkGet:00000074 $d
    {standard input}:1968   .text.Mem_PoolBlkFree:00000000 $t
    {standard input}:1973   .text.Mem_PoolBlkFree:00000000 Mem_PoolBlkFree
    {standard input}:2048   .text.Mem_PoolBlkFree:00000064 $d
    {standard input}:2054   .text.Mem_PoolBlkGetNbrAvail:00000000 $t
    {standard input}:2059   .text.Mem_PoolBlkGetNbrAvail:00000000 Mem_PoolBlkGetNbrAvail
    {standard input}:2106   .text.Mem_PoolBlkGetNbrAvail:00000034 $d
    {standard input}:2111   .text.Mem_DynPoolCreate:00000000 $t
    {standard input}:2116   .text.Mem_DynPoolCreate:00000000 Mem_DynPoolCreate
    {standard input}:2975   .text.Mem_DynPoolCreateInternal:00000000 Mem_DynPoolCreateInternal
    {standard input}:2169   .text.Mem_DynPoolCreate:00000040 $d
    {standard input}:2174   .text.Mem_DynPoolCreateHW:00000000 $t
    {standard input}:2179   .text.Mem_DynPoolCreateHW:00000000 Mem_DynPoolCreateHW
    {standard input}:2235   .text.Mem_DynPoolCreateHW:00000044 $d
    {standard input}:2240   .text.Mem_DynPoolBlkGet:00000000 $t
    {standard input}:2245   .text.Mem_DynPoolBlkGet:00000000 Mem_DynPoolBlkGet
    {standard input}:2383   .text.Mem_DynPoolBlkGet:000000c8 $d
    {standard input}:2389   .text.Mem_DynPoolBlkFree:00000000 $t
    {standard input}:2394   .text.Mem_DynPoolBlkFree:00000000 Mem_DynPoolBlkFree
    {standard input}:2481   .text.Mem_DynPoolBlkFree:00000074 $d
    {standard input}:2487   .text.Mem_DynPoolBlkNbrAvailGet:00000000 $t
    {standard input}:2492   .text.Mem_DynPoolBlkNbrAvailGet:00000000 Mem_DynPoolBlkNbrAvailGet
    {standard input}:2557   .text.Mem_DynPoolBlkNbrAvailGet:00000050 $d
    {standard input}:2563   .text.Mem_SegCreateCritical:00000000 $t
    {standard input}:2622   .text.Mem_SegCreateCritical:00000040 $d
    {standard input}:2627   .text.Mem_SegOverlapChkCritical:00000000 $t
    {standard input}:2744   .text.Mem_SegOverlapChkCritical:0000008c $d
    {standard input}:2751   .text.Mem_SegAllocInternal:00000000 $t
    {standard input}:2825   .text.Mem_SegAllocInternal:0000005c $d
    {standard input}:2830   .text.Mem_SegAllocExtCritical:00000000 $t
    {standard input}:2965   .text.Mem_SegAllocExtCritical:000000b0 $d
    {standard input}:2971   .text.Mem_DynPoolCreateInternal:00000000 $t
    {standard input}:3165   .text.Mem_DynPoolCreateInternal:00000100 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CPU_SW_Exception
CPU_SR_Save
CPU_SR_Restore
