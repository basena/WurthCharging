   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "adc_measurement_adv_conf.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.VOLT_CURR_TEMP_event_config,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	VOLT_CURR_TEMP_event_config:
  23              	.LFB141:
  24              	 .file 1 "../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c"
   1:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /**************************************************************************************************
   2:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** * DAVE APP Name : ADC_MEASUREMENT_ADV       APP Version: 4.0.14
   3:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** *
   4:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** * NOTE:
   5:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** ***************************************************************************************************
   7:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
   8:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /* @cond
   9:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  **************************************************************************************************
  10:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  11:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  12:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * All rights reserved.
  13:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  14:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  15:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * following conditions are met:
  16:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  17:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  18:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *   disclaimer.
  19:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  20:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  21:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  22:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  23:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  24:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *   products derived from this software without specific prior written permission.
  25:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  26:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  27:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  28:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  29:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  30:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  31:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  32:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  34:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  35:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * with Infineon Technologies AG (dave@infineon.com).
  36:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  **************************************************************************************************
  37:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  38:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * Change History
  39:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * --------------
  40:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  41:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2015-10-09:
  42:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Initial version for DAVEv4.<BR>
  43:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  44:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2015-10-20:
  45:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Documentation updated.<BR>
  46:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  47:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2015-12-15:
  48:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Added support for XMC4300 devices.<BR>
  49:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  50:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2016-01-18:
  51:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - 1.Internal consumption of request source.<BR>
  52:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - 2.Support for synchronized conversion reduced from 8 master channels to 4 .<BR>
  53:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - 3.Converted the SetBoundary() API from public API to private API .<BR>
  54:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - 4.Updated all APIs for the Internal consumption of request source.<BR>
  55:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  56:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  57:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2016-02-05:
  58:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Documentation updated.<BR>
  59:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  60:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2016-03-18:
  61:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Added consumption of the GLOBAL ICLASS -1 for Sync. Conversions.<BR>
  62:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Added consumption of the result register-0 for subtraction mode.<BR>
  63:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Removed ADC_MEASUREMENT_ADV_SetUniformConversion().<BR>
  64:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - New API ADC_MEASUREMENT_ADV_SetIclass() added to configure the GLOBAL ICLASS for Slaves. <
  65:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  66:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2016-04-26:
  67:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - The synchronized conversion in a master slave configuration is currently not supported.<BR
  68:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  69:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2016-06-17:
  70:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - The synchronized conversion is supported.<BR>
  71:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Modified the Sync initialization sequence to configure the EVAL bits in the slave groups.<
  72:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  73:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * 2016-08-18:
  74:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *     - Minimum sample time at low frequencies changed to incorporate Errata ADC_AI.H006 and ADC_A
  75:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  76:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * @endcond
  77:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  *
  78:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  */
  79:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
  80:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /**************************************************************************************************
  81:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * HEADER FILES
  82:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  **************************************************************************************************
  83:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
  84:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** #include "adc_measurement_adv.h"
  85:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
  86:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /**************************************************************************************************
  87:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * EXTERN DECLARATIONS
  88:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  **************************************************************************************************
  89:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
  90:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
  91:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /**************************************************************************************************
  92:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** * DATA STRUCTURES
  93:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** ***************************************************************************************************
  94:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
  95:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /* This function would be called in the ADC_MEASUREMENT_Init() to initialize the SR lines of the
  96:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * Result event/channel event.
  97:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  */
  98:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static void VOLT_CURR_TEMP_event_config(void)
  99:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
  25              	 .loc 1 99 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 00AF     	 add r7,sp,#0
  33              	.LCFI1:
  34              	 .cfi_def_cfa_register 7
 100:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 101:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 	/* Result Event Node Mux Configuration for Temperature (Group-0 channel-2 Result_Register-9)*/
 102:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 	XMC_VADC_GROUP_SetResultInterruptNode(VADC_G0, 9U, XMC_VADC_SR_GROUP_SR1);
  35              	 .loc 1 102 0
  36 0004 034B     	 ldr r3,.L2
  37 0006 181C     	 mov r0,r3
  38 0008 0921     	 mov r1,#9
  39 000a 0122     	 mov r2,#1
  40 000c FFF7FEFF 	 bl XMC_VADC_GROUP_SetResultInterruptNode
 103:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 104:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** }
  41              	 .loc 1 104 0
  42 0010 BD46     	 mov sp,r7
  43              	 
  44 0012 80BD     	 pop {r7,pc}
  45              	.L3:
  46              	 .align 2
  47              	.L2:
  48 0014 00040348 	 .word 1208157184
  49              	 .cfi_endproc
  50              	.LFE141:
  52              	 .section .rodata.VOLT_CURR_TEMP_Voltage_ch_config,"a",%progbits
  53              	 .align 2
  56              	VOLT_CURR_TEMP_Voltage_ch_config:
  57 0000 00       	 .byte 0
  58 0001 00       	 .byte 0
  59 0002 27       	 .byte 39
  60 0003 00       	 .byte 0
  61 0004 00000000 	 .word 0
  62 0008 00000000 	 .space 4
  63 000c 01       	 .byte 1
  64 000d 00       	 .byte 0
  65 000e 0000     	 .space 2
  66              	 .section .rodata.VOLT_CURR_TEMP_Voltage_res_config,"a",%progbits
  67              	 .align 2
  70              	VOLT_CURR_TEMP_Voltage_res_config:
  71 0000 0000     	 .space 2
  72 0002 03       	 .byte 3
  73 0003 00       	 .byte 0
  74              	 .global VOLT_CURR_TEMP_Voltage_handle
  75              	 .section .rodata.VOLT_CURR_TEMP_Voltage_handle,"a",%progbits
  76              	 .align 2
  79              	VOLT_CURR_TEMP_Voltage_handle:
  80 0000 00000000 	 .word VOLT_CURR_TEMP_Voltage_ch_config
  81 0004 00000000 	 .word VOLT_CURR_TEMP_Voltage_res_config
  82 0008 00       	 .byte 0
  83 0009 01       	 .byte 1
  84 000a 0000     	 .space 2
  85              	 .section .rodata.VOLT_CURR_TEMP_Current_ch_config,"a",%progbits
  86              	 .align 2
  89              	VOLT_CURR_TEMP_Current_ch_config:
  90 0000 00       	 .byte 0
  91 0001 00       	 .byte 0
  92 0002 22       	 .byte 34
  93 0003 00       	 .byte 0
  94 0004 00000000 	 .word 0
  95 0008 00000000 	 .space 4
  96 000c 01       	 .byte 1
  97 000d 01       	 .byte 1
  98 000e 0000     	 .space 2
  99              	 .section .rodata.VOLT_CURR_TEMP_Current_res_config,"a",%progbits
 100              	 .align 2
 103              	VOLT_CURR_TEMP_Current_res_config:
 104 0000 0000     	 .space 2
 105 0002 03       	 .byte 3
 106 0003 00       	 .byte 0
 107              	 .global VOLT_CURR_TEMP_Current_handle
 108              	 .section .rodata.VOLT_CURR_TEMP_Current_handle,"a",%progbits
 109              	 .align 2
 112              	VOLT_CURR_TEMP_Current_handle:
 113 0000 00000000 	 .word VOLT_CURR_TEMP_Current_ch_config
 114 0004 00000000 	 .word VOLT_CURR_TEMP_Current_res_config
 115 0008 00       	 .byte 0
 116 0009 00       	 .byte 0
 117 000a 0000     	 .space 2
 118              	 .section .rodata.VOLT_CURR_TEMP_Temperature_ch_config,"a",%progbits
 119              	 .align 2
 122              	VOLT_CURR_TEMP_Temperature_ch_config:
 123 0000 00       	 .byte 0
 124 0001 00       	 .byte 0
 125 0002 29       	 .byte 41
 126 0003 00       	 .byte 0
 127 0004 00000000 	 .word 0
 128 0008 00000000 	 .space 4
 129 000c 01       	 .byte 1
 130 000d FF       	 .byte -1
 131 000e 0000     	 .space 2
 132              	 .section .rodata.VOLT_CURR_TEMP_Temperature_res_config,"a",%progbits
 133              	 .align 2
 136              	VOLT_CURR_TEMP_Temperature_res_config:
 137 0000 0000     	 .space 2
 138 0002 03       	 .byte 3
 139 0003 80       	 .byte 128
 140              	 .global VOLT_CURR_TEMP_Temperature_handle
 141              	 .section .rodata.VOLT_CURR_TEMP_Temperature_handle,"a",%progbits
 142              	 .align 2
 145              	VOLT_CURR_TEMP_Temperature_handle:
 146 0000 00000000 	 .word VOLT_CURR_TEMP_Temperature_ch_config
 147 0004 00000000 	 .word VOLT_CURR_TEMP_Temperature_res_config
 148 0008 00       	 .byte 0
 149 0009 02       	 .byte 2
 150 000a 0000     	 .space 2
 151              	 .section .rodata.VOLT_CURR_TEMP_queue_config,"a",%progbits
 152              	 .align 2
 155              	VOLT_CURR_TEMP_queue_config:
 156 0000 00       	 .byte 0
 157 0001 000000   	 .space 3
 158 0004 00       	 .space 1
 159 0005 40       	 .byte 64
 160 0006 00       	 .byte 0
 161 0007 00       	 .byte 0
 162 0008 04       	 .byte 4
 163 0009 000000   	 .space 3
 164              	 .section .rodata.VOLT_CURR_TEMP_queue_handle,"a",%progbits
 165              	 .align 2
 168              	VOLT_CURR_TEMP_queue_handle:
 169 0000 00000000 	 .word 0
 170 0004 00000000 	 .word 0
 171 0008 00       	 .byte 0
 172 0009 000000   	 .space 3
 173 000c 02       	 .byte 2
 174 000d 00       	 .byte 0
 175 000e 00       	 .byte 0
 176 000f 00       	 .byte 0
 177 0010 00000000 	 .word VOLT_CURR_TEMP_queue_config
 178 0014 01       	 .byte 1
 179 0015 00       	 .byte 0
 180 0016 00       	 .byte 0
 181 0017 00       	 .space 1
 182              	 .section .rodata.VOLT_CURR_TEMP_Voltage_queue_entry_0,"a",%progbits
 183              	 .align 2
 186              	VOLT_CURR_TEMP_Voltage_queue_entry_0:
 187 0000 A1       	 .byte 161
 188 0001 000000   	 .space 3
 189              	 .section .rodata.VOLT_CURR_TEMP_Current_queue_entry_1,"a",%progbits
 190              	 .align 2
 193              	VOLT_CURR_TEMP_Current_queue_entry_1:
 194 0000 20       	 .byte 32
 195 0001 000000   	 .space 3
 196              	 .section .rodata.VOLT_CURR_TEMP_Temperature_queue_entry_2,"a",%progbits
 197              	 .align 2
 200              	VOLT_CURR_TEMP_Temperature_queue_entry_2:
 201 0000 22       	 .byte 34
 202 0001 000000   	 .space 3
 203              	 .section .data.VOLT_CURR_TEMP_queue_entries,"aw",%progbits
 204              	 .align 2
 207              	VOLT_CURR_TEMP_queue_entries:
 208 0000 00000000 	 .word VOLT_CURR_TEMP_Voltage_queue_entry_0
 209 0004 00000000 	 .word VOLT_CURR_TEMP_Current_queue_entry_1
 210 0008 00000000 	 .word VOLT_CURR_TEMP_Temperature_queue_entry_2
 211              	 .section .data.VOLT_CURR_TEMP_channel_array,"aw",%progbits
 212              	 .align 2
 215              	VOLT_CURR_TEMP_channel_array:
 216 0000 00000000 	 .word VOLT_CURR_TEMP_Voltage_handle
 217 0004 00000000 	 .word VOLT_CURR_TEMP_Current_handle
 218 0008 00000000 	 .word VOLT_CURR_TEMP_Temperature_handle
 219              	 .section .data.VOLT_CURR_TEMP_initialization_status,"aw",%progbits
 222              	VOLT_CURR_TEMP_initialization_status:
 223 0000 02       	 .byte 2
 224              	 .global VOLT_CURR_TEMP
 225              	 .section .rodata.VOLT_CURR_TEMP,"a",%progbits
 226              	 .align 2
 229              	VOLT_CURR_TEMP:
 230 0000 00000000 	 .word VOLT_CURR_TEMP_channel_array
 231 0004 00000000 	 .word VOLT_CURR_TEMP_queue_entries
 232 0008 00000000 	 .word VOLT_CURR_TEMP_event_config
 233 000c 00000000 	 .word VOLT_CURR_TEMP_queue_handle
 234 0010 00000000 	 .word VOLT_CURR_TEMP_initialization_status
 235 0014 03       	 .byte 3
 236 0015 00       	 .byte 0
 237 0016 03       	 .byte 3
 238 0017 03       	 .byte 3
 239 0018 01       	 .byte 1
 240 0019 000000   	 .space 3
 241              	 .section .text.ACOMP_event_config,"ax",%progbits
 242              	 .align 2
 243              	 .code 16
 244              	 .thumb_func
 246              	ACOMP_event_config:
 247              	.LFB142:
 105:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 106:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 107:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 108:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /********************************* Voltage ADC Channel configuration structure ********************
 109:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_CHANNEL_CONFIG_t  VOLT_CURR_TEMP_Voltage_ch_config =
 110:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 111:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .input_class                = (uint32_t) XMC_VADC_CHANNEL_CONV_GROUP_CLASS0,
 112:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .lower_boundary_select      = (uint32_t) XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0,
 113:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .upper_boundary_select      = (uint32_t) XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0,
 114:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .event_gen_criteria         = (uint32_t) XMC_VADC_CHANNEL_EVGEN_NEVER,
 115:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .sync_conversion            = (uint32_t) false,                            /* Sync feature disabl
 116:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .alternate_reference        = (uint32_t) XMC_VADC_CHANNEL_REF_INTREF,  /* Internal reference sele
 117:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .result_reg_number          = (uint32_t) 7,                           /* GxRES[7] selected */
 118:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .result_alignment           = (uint32_t) XMC_VADC_RESULT_ALIGN_RIGHT,  /* Result alignment - Righ
 119:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .broken_wire_detect_channel = (uint32_t) XMC_VADC_CHANNEL_BWDCH_VAGND, /* No Broken wire mode sel
 120:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .broken_wire_detect         = (uint32_t) false,                     /* No Broken wire detection*/
 121:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .bfl                        = (uint32_t) 0,                            /* No Boundary flag */
 122:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .channel_priority           = (uint32_t) true,                      /* Highest Priority: 1 select
 123:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .alias_channel              = (int8_t) XMC_VADC_CHANNEL_ALIAS_CH0  /* Channel is Aliased*/
 124:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 125:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 126:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 127:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /*Voltage Result configuration structure*/
 128:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_RESULT_CONFIG_t VOLT_CURR_TEMP_Voltage_res_config =
 129:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 130:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .data_reduction_control  = (uint32_t) 3,
 131:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .post_processing_mode    = (uint32_t) XMC_VADC_DMM_REDUCTION_MODE,
 132:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .wait_for_read_mode      = (uint32_t) false,
 133:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .part_of_fifo            = (uint32_t) false , /* No FIFO */
 134:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .event_gen_enable        = (uint32_t) false   /* Disable Result event */
 135:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 136:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 137:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /* Voltage ADC channel Handle */
 138:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** const ADC_MEASUREMENT_ADV_CHANNEL_t VOLT_CURR_TEMP_Voltage_handle =
 139:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 140:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .ch_num        = (uint8_t) 1,
 141:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .group_index   = (uint8_t) 0,
 142:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .ch_handle     = (XMC_VADC_CHANNEL_CONFIG_t*) &VOLT_CURR_TEMP_Voltage_ch_config,
 143:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .res_handle[0] = (XMC_VADC_RESULT_CONFIG_t*) &VOLT_CURR_TEMP_Voltage_res_config,   
 144:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 145:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 146:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 147:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 148:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /********************************* Current ADC Channel configuration structure ********************
 149:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_CHANNEL_CONFIG_t  VOLT_CURR_TEMP_Current_ch_config =
 150:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 151:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .input_class                = (uint32_t) XMC_VADC_CHANNEL_CONV_GROUP_CLASS0,
 152:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .lower_boundary_select      = (uint32_t) XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0,
 153:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .upper_boundary_select      = (uint32_t) XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0,
 154:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .event_gen_criteria         = (uint32_t) XMC_VADC_CHANNEL_EVGEN_NEVER,
 155:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .sync_conversion            = (uint32_t) false,                            /* Sync feature disabl
 156:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .alternate_reference        = (uint32_t) XMC_VADC_CHANNEL_REF_INTREF,  /* Internal reference sele
 157:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .result_reg_number          = (uint32_t) 2,                           /* GxRES[2] selected */
 158:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .result_alignment           = (uint32_t) XMC_VADC_RESULT_ALIGN_RIGHT,  /* Result alignment - Righ
 159:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .broken_wire_detect_channel = (uint32_t) XMC_VADC_CHANNEL_BWDCH_VAGND, /* No Broken wire mode sel
 160:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .broken_wire_detect         = (uint32_t) false,                     /* No Broken wire detection*/
 161:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .bfl                        = (uint32_t) 0,                            /* No Boundary flag */
 162:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .channel_priority           = (uint32_t) true,                      /* Highest Priority: 1 select
 163:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .alias_channel              = (int8_t) XMC_VADC_CHANNEL_ALIAS_CH1  /* Channel is Aliased*/
 164:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 165:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 166:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 167:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /*Current Result configuration structure*/
 168:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_RESULT_CONFIG_t VOLT_CURR_TEMP_Current_res_config =
 169:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 170:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .data_reduction_control  = (uint32_t) 3,
 171:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .post_processing_mode    = (uint32_t) XMC_VADC_DMM_REDUCTION_MODE,
 172:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .wait_for_read_mode      = (uint32_t) false,
 173:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .part_of_fifo            = (uint32_t) false , /* No FIFO */
 174:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .event_gen_enable        = (uint32_t) false   /* Disable Result event */
 175:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 176:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 177:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /* Current ADC channel Handle */
 178:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** const ADC_MEASUREMENT_ADV_CHANNEL_t VOLT_CURR_TEMP_Current_handle =
 179:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 180:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .ch_num        = (uint8_t) 0,
 181:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .group_index   = (uint8_t) 0,
 182:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .ch_handle     = (XMC_VADC_CHANNEL_CONFIG_t*) &VOLT_CURR_TEMP_Current_ch_config,
 183:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .res_handle[0] = (XMC_VADC_RESULT_CONFIG_t*) &VOLT_CURR_TEMP_Current_res_config,   
 184:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 185:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 186:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 187:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 188:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /********************************* Temperature ADC Channel configuration structure ****************
 189:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_CHANNEL_CONFIG_t  VOLT_CURR_TEMP_Temperature_ch_config =
 190:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 191:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .input_class                = (uint32_t) XMC_VADC_CHANNEL_CONV_GROUP_CLASS0,
 192:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .lower_boundary_select      = (uint32_t) XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0,
 193:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .upper_boundary_select      = (uint32_t) XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0,
 194:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .event_gen_criteria         = (uint32_t) XMC_VADC_CHANNEL_EVGEN_NEVER,
 195:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .sync_conversion            = (uint32_t) false,                            /* Sync feature disabl
 196:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .alternate_reference        = (uint32_t) XMC_VADC_CHANNEL_REF_INTREF,  /* Internal reference sele
 197:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .result_reg_number          = (uint32_t) 9,                           /* GxRES[9] selected */
 198:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .result_alignment           = (uint32_t) XMC_VADC_RESULT_ALIGN_RIGHT,  /* Result alignment - Righ
 199:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .broken_wire_detect_channel = (uint32_t) XMC_VADC_CHANNEL_BWDCH_VAGND, /* No Broken wire mode sel
 200:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .broken_wire_detect         = (uint32_t) false,                     /* No Broken wire detection*/
 201:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .bfl                        = (uint32_t) 0,                            /* No Boundary flag */
 202:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .channel_priority           = (uint32_t) true,                      /* Highest Priority: 1 select
 203:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .alias_channel              = (int8_t) XMC_VADC_CHANNEL_ALIAS_DISABLED,   /* ALIAS is Disabled*/
 204:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 205:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 206:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 207:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /*Temperature Result configuration structure*/
 208:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_RESULT_CONFIG_t VOLT_CURR_TEMP_Temperature_res_config =
 209:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 210:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .data_reduction_control  = (uint32_t) 3,
 211:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .post_processing_mode    = (uint32_t) XMC_VADC_DMM_REDUCTION_MODE,
 212:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .wait_for_read_mode      = (uint32_t) false,
 213:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .part_of_fifo            = (uint32_t) false , /* No FIFO */
 214:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .event_gen_enable        = (uint32_t) true   /* Result event Enabled*/
 215:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 216:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 217:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /* Temperature ADC channel Handle */
 218:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** const ADC_MEASUREMENT_ADV_CHANNEL_t VOLT_CURR_TEMP_Temperature_handle =
 219:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 220:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .ch_num        = (uint8_t) 2,
 221:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .group_index   = (uint8_t) 0,
 222:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .ch_handle     = (XMC_VADC_CHANNEL_CONFIG_t*) &VOLT_CURR_TEMP_Temperature_ch_config,
 223:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .res_handle[0] = (XMC_VADC_RESULT_CONFIG_t*) &VOLT_CURR_TEMP_Temperature_res_config,   
 224:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 225:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 226:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 227:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_QUEUE_CONFIG_t VOLT_CURR_TEMP_queue_config = {
 228:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .conv_start_mode   = (uint32_t) XMC_VADC_STARTMODE_WFS,	/* Conversion start mode WFS/CIR/CNR*/
 229:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .req_src_priority  = (uint32_t) XMC_VADC_GROUP_RS_PRIORITY_0, /*The queue request source priority
 230:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .trigger_signal    = (uint32_t) XMC_VADC_REQ_TR_A,        /*If trigger needed the signal input*/
 231:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .trigger_edge      = (uint32_t) XMC_VADC_TRIGGER_EDGE_RISING,   /*Trigger edge needed if trigger 
 232:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .gate_signal       = (uint32_t) XMC_VADC_REQ_GT_A,            /*If gating needed the signal input
 233:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .timer_mode        = (uint32_t) 0,                            /* Disabled equidistant sampling*/
 234:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .external_trigger	 = (uint32_t) true,         /*External trigger Enabled/Disabled*/
 235:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 236:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 237:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const ADC_MEASUREMENT_ADV_QUEUE_t VOLT_CURR_TEMP_queue_handle =
 238:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 239:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .rs_intr_handle  = {
 240:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 					   .node_id          = (uint32_t) 0,
 241:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 					   .priority         = (uint32_t) 0,
 242:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 					   .interrupt_enable = (bool) false,
 243:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 					 },
 244:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .iclass_config_handle = {
 245:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 							.sample_time_std_conv        = (uint32_t) 2,
 246:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 							.conversion_mode_standard    = (uint32_t) XMC_VADC_CONVMODE_12BIT,
 247:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 							.sampling_phase_emux_channel = (uint32_t) 0,
 248:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 							.conversion_mode_emux        = (uint32_t) XMC_VADC_CONVMODE_12BIT
 249:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 						  },
 250:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .queue_config_handle = &VOLT_CURR_TEMP_queue_config,
 251:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .gating_mode  = XMC_VADC_GATEMODE_IGNORE,
 252:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .srv_req_node = XMC_VADC_SR_GROUP_SR0, /*Service Request line for Request source Event */
 253:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .iclass_num = 0
 254:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 255:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  
 256:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_QUEUE_ENTRY_t VOLT_CURR_TEMP_Voltage_queue_entry_0 =
 257:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 258:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .channel_num        = (uint8_t) 1,
 259:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .refill_needed      = (bool) true,
 260:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .generate_interrupt = (bool) false,
 261:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .external_trigger   = (bool) true,
 262:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 263:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 264:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_QUEUE_ENTRY_t VOLT_CURR_TEMP_Current_queue_entry_1 =
 265:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 266:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .channel_num        = (uint8_t) 0,
 267:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .refill_needed      = (bool) true,
 268:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .generate_interrupt = (bool) false,
 269:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .external_trigger   = (bool) false,
 270:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 271:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 272:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_QUEUE_ENTRY_t VOLT_CURR_TEMP_Temperature_queue_entry_2 =
 273:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 274:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .channel_num        = (uint8_t) 2,
 275:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .refill_needed      = (bool) true,
 276:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .generate_interrupt = (bool) false,
 277:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .external_trigger   = (bool) false,
 278:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 279:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 280:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 281:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const XMC_VADC_QUEUE_ENTRY_t *VOLT_CURR_TEMP_queue_entries[] =
 282:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 283:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   (XMC_VADC_QUEUE_ENTRY_t*) (void *) &VOLT_CURR_TEMP_Voltage_queue_entry_0,
 284:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   (XMC_VADC_QUEUE_ENTRY_t*) (void *) &VOLT_CURR_TEMP_Current_queue_entry_1,
 285:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   (XMC_VADC_QUEUE_ENTRY_t*) (void *) &VOLT_CURR_TEMP_Temperature_queue_entry_2,
 286:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 287:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 288:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 289:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 290:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static const ADC_MEASUREMENT_ADV_CHANNEL_t *VOLT_CURR_TEMP_channel_array[] =
 291:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 292:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   (ADC_MEASUREMENT_ADV_CHANNEL_t *) (void*) &VOLT_CURR_TEMP_Voltage_handle,
 293:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   (ADC_MEASUREMENT_ADV_CHANNEL_t *) (void*) &VOLT_CURR_TEMP_Current_handle,
 294:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   (ADC_MEASUREMENT_ADV_CHANNEL_t *) (void*) &VOLT_CURR_TEMP_Temperature_handle,
 295:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 296:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 297:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 298:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static ADC_MEASUREMENT_ADV_STATUS_t VOLT_CURR_TEMP_initialization_status = ADC_MEASUREMENT_ADV_STAT
 299:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 300:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** const ADC_MEASUREMENT_ADV_t VOLT_CURR_TEMP =
 301:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 302:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .channel_array            = VOLT_CURR_TEMP_channel_array,
 303:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .local_queue_entries       = VOLT_CURR_TEMP_queue_entries,
 304:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .event_config               = (VOLT_CURR_TEMP_event_config),
 305:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .local_queue_handle       = (ADC_MEASUREMENT_ADV_QUEUE_t *) &VOLT_CURR_TEMP_queue_handle,
 306:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .init_state               = &VOLT_CURR_TEMP_initialization_status,
 307:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .req_src                  = ADC_MEASUREMENT_ADV_REQUEST_SOURCE_LOCAL_QUEUE,  
 308:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .group_index              = (uint8_t) 0, 
 309:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .total_number_of_entries  = (uint8_t) 3,
 310:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .total_number_of_channels = (uint8_t) 3,
 311:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****   .start_at_initialization  = (bool) true  
 312:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** };
 313:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 314:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /**************************************************************************************************
 315:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 316:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** /* This function would be called in the ADC_MEASUREMENT_Init() to initialize the SR lines of the
 317:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  * Result event/channel event.
 318:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c ****  */
 319:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** static void ACOMP_event_config(void)
 320:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** {
 248              	 .loc 1 320 0
 249              	 .cfi_startproc
 250 0000 80B5     	 push {r7,lr}
 251              	.LCFI2:
 252              	 .cfi_def_cfa_offset 8
 253              	 .cfi_offset 7,-8
 254              	 .cfi_offset 14,-4
 255 0002 00AF     	 add r7,sp,#0
 256              	.LCFI3:
 257              	 .cfi_def_cfa_register 7
 321:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 322:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 	/* Result Event Node Mux Configuration for VRef (Group-1 channel-5 Result_Register-10)*/
 323:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 	XMC_VADC_GROUP_SetResultInterruptNode(VADC_G1, 10U, XMC_VADC_SR_GROUP_SR1);
 258              	 .loc 1 323 0
 259 0004 034B     	 ldr r3,.L5
 260 0006 181C     	 mov r0,r3
 261 0008 0A21     	 mov r1,#10
 262 000a 0122     	 mov r2,#1
 263 000c FFF7FEFF 	 bl XMC_VADC_GROUP_SetResultInterruptNode
 324:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** 
 325:../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_conf.c **** }
 264              	 .loc 1 325 0
 265 0010 BD46     	 mov sp,r7
 266              	 
 267 0012 80BD     	 pop {r7,pc}
 268              	.L6:
 269              	 .align 2
 270              	.L5:
 271 0014 00080348 	 .word 1208158208
 272              	 .cfi_endproc
 273              	.LFE142:
 275              	 .section .rodata.ACOMP_ACOMP_ch_config,"a",%progbits
 276              	 .align 2
 279              	ACOMP_ACOMP_ch_config:
 280 0000 00       	 .byte 0
 281 0001 00       	 .byte 0
 282 0002 2B       	 .byte 43
 283 0003 00       	 .byte 0
 284 0004 00000000 	 .word 0
 285 0008 00000000 	 .space 4
 286 000c 01       	 .byte 1
 287 000d 01       	 .byte 1
 288 000e 0000     	 .space 2
 289              	 .section .rodata.ACOMP_ACOMP_res_config,"a",%progbits
 290              	 .align 2
 293              	ACOMP_ACOMP_res_config:
 294 0000 0000     	 .space 2
 295 0002 03       	 .byte 3
 296 0003 00       	 .byte 0
 297              	 .global ACOMP_ACOMP_handle
 298              	 .section .rodata.ACOMP_ACOMP_handle,"a",%progbits
 299              	 .align 2
 302              	ACOMP_ACOMP_handle:
 303 0000 00000000 	 .word ACOMP_ACOMP_ch_config
 304 0004 00000000 	 .word ACOMP_ACOMP_res_config
 305 0008 01       	 .byte 1
 306 0009 00       	 .byte 0
 307 000a 0000     	 .space 2
 308              	 .section .rodata.ACOMP_VRef_ch_config,"a",%progbits
 309              	 .align 2
 312              	ACOMP_VRef_ch_config:
 313 0000 00       	 .byte 0
 314 0001 00       	 .byte 0
 315 0002 2A       	 .byte 42
 316 0003 00       	 .byte 0
 317 0004 00000000 	 .word 0
 318 0008 00000000 	 .space 4
 319 000c 01       	 .byte 1
 320 000d FF       	 .byte -1
 321 000e 0000     	 .space 2
 322              	 .section .rodata.ACOMP_VRef_res_config,"a",%progbits
 323              	 .align 2
 326              	ACOMP_VRef_res_config:
 327 0000 0000     	 .space 2
 328 0002 03       	 .byte 3
 329 0003 80       	 .byte 128
 330              	 .global ACOMP_VRef_handle
 331              	 .section .rodata.ACOMP_VRef_handle,"a",%progbits
 332              	 .align 2
 335              	ACOMP_VRef_handle:
 336 0000 00000000 	 .word ACOMP_VRef_ch_config
 337 0004 00000000 	 .word ACOMP_VRef_res_config
 338 0008 01       	 .byte 1
 339 0009 05       	 .byte 5
 340 000a 0000     	 .space 2
 341              	 .section .rodata.ACOMP_queue_config,"a",%progbits
 342              	 .align 2
 345              	ACOMP_queue_config:
 346 0000 00       	 .byte 0
 347 0001 000000   	 .space 3
 348 0004 00       	 .space 1
 349 0005 41       	 .byte 65
 350 0006 00       	 .byte 0
 351 0007 00       	 .byte 0
 352 0008 04       	 .byte 4
 353 0009 000000   	 .space 3
 354              	 .section .rodata.ACOMP_queue_handle,"a",%progbits
 355              	 .align 2
 358              	ACOMP_queue_handle:
 359 0000 00000000 	 .word 0
 360 0004 00000000 	 .word 0
 361 0008 00       	 .byte 0
 362 0009 000000   	 .space 3
 363 000c 02       	 .byte 2
 364 000d 00       	 .byte 0
 365 000e 00       	 .byte 0
 366 000f 00       	 .byte 0
 367 0010 00000000 	 .word ACOMP_queue_config
 368 0014 01       	 .byte 1
 369 0015 00       	 .byte 0
 370 0016 00       	 .byte 0
 371 0017 00       	 .space 1
 372              	 .section .rodata.ACOMP_ACOMP_queue_entry_0,"a",%progbits
 373              	 .align 2
 376              	ACOMP_ACOMP_queue_entry_0:
 377 0000 A0       	 .byte 160
 378 0001 000000   	 .space 3
 379              	 .section .rodata.ACOMP_VRef_queue_entry_1,"a",%progbits
 380              	 .align 2
 383              	ACOMP_VRef_queue_entry_1:
 384 0000 25       	 .byte 37
 385 0001 000000   	 .space 3
 386              	 .section .data.ACOMP_queue_entries,"aw",%progbits
 387              	 .align 2
 390              	ACOMP_queue_entries:
 391 0000 00000000 	 .word ACOMP_ACOMP_queue_entry_0
 392 0004 00000000 	 .word ACOMP_VRef_queue_entry_1
 393              	 .section .data.ACOMP_channel_array,"aw",%progbits
 394              	 .align 2
 397              	ACOMP_channel_array:
 398 0000 00000000 	 .word ACOMP_ACOMP_handle
 399 0004 00000000 	 .word ACOMP_VRef_handle
 400              	 .section .data.ACOMP_initialization_status,"aw",%progbits
 403              	ACOMP_initialization_status:
 404 0000 02       	 .byte 2
 405              	 .global ACOMP
 406              	 .section .rodata.ACOMP,"a",%progbits
 407              	 .align 2
 410              	ACOMP:
 411 0000 00000000 	 .word ACOMP_channel_array
 412 0004 00000000 	 .word ACOMP_queue_entries
 413 0008 00000000 	 .word ACOMP_event_config
 414 000c 00000000 	 .word ACOMP_queue_handle
 415 0010 00000000 	 .word ACOMP_initialization_status
 416 0014 03       	 .byte 3
 417 0015 01       	 .byte 1
 418 0016 02       	 .byte 2
 419 0017 02       	 .byte 2
 420 0018 01       	 .byte 1
 421 0019 000000   	 .space 3
 422              	 .text
 423              	.Letext0:
 424              	 .file 2 "c:\\users\\jutta.schuerba\\desktop\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 425              	 .file 3 "c:\\users\\jutta.schuerba\\desktop\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 426              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_TRANSMTTER_delivered/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 427              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_TRANSMTTER_delivered/Libraries/XMCLib/inc/xmc_vadc.h"
 428              	 .file 6 "../Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 429              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_TRANSMTTER_delivered/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 adc_measurement_adv_conf.c
    {standard input}:18     .text.VOLT_CURR_TEMP_event_config:00000000 $t
    {standard input}:22     .text.VOLT_CURR_TEMP_event_config:00000000 VOLT_CURR_TEMP_event_config
    {standard input}:48     .text.VOLT_CURR_TEMP_event_config:00000014 $d
    {standard input}:53     .rodata.VOLT_CURR_TEMP_Voltage_ch_config:00000000 $d
    {standard input}:56     .rodata.VOLT_CURR_TEMP_Voltage_ch_config:00000000 VOLT_CURR_TEMP_Voltage_ch_config
    {standard input}:67     .rodata.VOLT_CURR_TEMP_Voltage_res_config:00000000 $d
    {standard input}:70     .rodata.VOLT_CURR_TEMP_Voltage_res_config:00000000 VOLT_CURR_TEMP_Voltage_res_config
    {standard input}:79     .rodata.VOLT_CURR_TEMP_Voltage_handle:00000000 VOLT_CURR_TEMP_Voltage_handle
    {standard input}:76     .rodata.VOLT_CURR_TEMP_Voltage_handle:00000000 $d
    {standard input}:86     .rodata.VOLT_CURR_TEMP_Current_ch_config:00000000 $d
    {standard input}:89     .rodata.VOLT_CURR_TEMP_Current_ch_config:00000000 VOLT_CURR_TEMP_Current_ch_config
    {standard input}:100    .rodata.VOLT_CURR_TEMP_Current_res_config:00000000 $d
    {standard input}:103    .rodata.VOLT_CURR_TEMP_Current_res_config:00000000 VOLT_CURR_TEMP_Current_res_config
    {standard input}:112    .rodata.VOLT_CURR_TEMP_Current_handle:00000000 VOLT_CURR_TEMP_Current_handle
    {standard input}:109    .rodata.VOLT_CURR_TEMP_Current_handle:00000000 $d
    {standard input}:119    .rodata.VOLT_CURR_TEMP_Temperature_ch_config:00000000 $d
    {standard input}:122    .rodata.VOLT_CURR_TEMP_Temperature_ch_config:00000000 VOLT_CURR_TEMP_Temperature_ch_config
    {standard input}:133    .rodata.VOLT_CURR_TEMP_Temperature_res_config:00000000 $d
    {standard input}:136    .rodata.VOLT_CURR_TEMP_Temperature_res_config:00000000 VOLT_CURR_TEMP_Temperature_res_config
    {standard input}:145    .rodata.VOLT_CURR_TEMP_Temperature_handle:00000000 VOLT_CURR_TEMP_Temperature_handle
    {standard input}:142    .rodata.VOLT_CURR_TEMP_Temperature_handle:00000000 $d
    {standard input}:152    .rodata.VOLT_CURR_TEMP_queue_config:00000000 $d
    {standard input}:155    .rodata.VOLT_CURR_TEMP_queue_config:00000000 VOLT_CURR_TEMP_queue_config
    {standard input}:165    .rodata.VOLT_CURR_TEMP_queue_handle:00000000 $d
    {standard input}:168    .rodata.VOLT_CURR_TEMP_queue_handle:00000000 VOLT_CURR_TEMP_queue_handle
    {standard input}:183    .rodata.VOLT_CURR_TEMP_Voltage_queue_entry_0:00000000 $d
    {standard input}:186    .rodata.VOLT_CURR_TEMP_Voltage_queue_entry_0:00000000 VOLT_CURR_TEMP_Voltage_queue_entry_0
    {standard input}:190    .rodata.VOLT_CURR_TEMP_Current_queue_entry_1:00000000 $d
    {standard input}:193    .rodata.VOLT_CURR_TEMP_Current_queue_entry_1:00000000 VOLT_CURR_TEMP_Current_queue_entry_1
    {standard input}:197    .rodata.VOLT_CURR_TEMP_Temperature_queue_entry_2:00000000 $d
    {standard input}:200    .rodata.VOLT_CURR_TEMP_Temperature_queue_entry_2:00000000 VOLT_CURR_TEMP_Temperature_queue_entry_2
    {standard input}:204    .data.VOLT_CURR_TEMP_queue_entries:00000000 $d
    {standard input}:207    .data.VOLT_CURR_TEMP_queue_entries:00000000 VOLT_CURR_TEMP_queue_entries
    {standard input}:212    .data.VOLT_CURR_TEMP_channel_array:00000000 $d
    {standard input}:215    .data.VOLT_CURR_TEMP_channel_array:00000000 VOLT_CURR_TEMP_channel_array
    {standard input}:222    .data.VOLT_CURR_TEMP_initialization_status:00000000 VOLT_CURR_TEMP_initialization_status
    {standard input}:229    .rodata.VOLT_CURR_TEMP:00000000 VOLT_CURR_TEMP
    {standard input}:226    .rodata.VOLT_CURR_TEMP:00000000 $d
    {standard input}:242    .text.ACOMP_event_config:00000000 $t
    {standard input}:246    .text.ACOMP_event_config:00000000 ACOMP_event_config
    {standard input}:271    .text.ACOMP_event_config:00000014 $d
    {standard input}:276    .rodata.ACOMP_ACOMP_ch_config:00000000 $d
    {standard input}:279    .rodata.ACOMP_ACOMP_ch_config:00000000 ACOMP_ACOMP_ch_config
    {standard input}:290    .rodata.ACOMP_ACOMP_res_config:00000000 $d
    {standard input}:293    .rodata.ACOMP_ACOMP_res_config:00000000 ACOMP_ACOMP_res_config
    {standard input}:302    .rodata.ACOMP_ACOMP_handle:00000000 ACOMP_ACOMP_handle
    {standard input}:299    .rodata.ACOMP_ACOMP_handle:00000000 $d
    {standard input}:309    .rodata.ACOMP_VRef_ch_config:00000000 $d
    {standard input}:312    .rodata.ACOMP_VRef_ch_config:00000000 ACOMP_VRef_ch_config
    {standard input}:323    .rodata.ACOMP_VRef_res_config:00000000 $d
    {standard input}:326    .rodata.ACOMP_VRef_res_config:00000000 ACOMP_VRef_res_config
    {standard input}:335    .rodata.ACOMP_VRef_handle:00000000 ACOMP_VRef_handle
    {standard input}:332    .rodata.ACOMP_VRef_handle:00000000 $d
    {standard input}:342    .rodata.ACOMP_queue_config:00000000 $d
    {standard input}:345    .rodata.ACOMP_queue_config:00000000 ACOMP_queue_config
    {standard input}:355    .rodata.ACOMP_queue_handle:00000000 $d
    {standard input}:358    .rodata.ACOMP_queue_handle:00000000 ACOMP_queue_handle
    {standard input}:373    .rodata.ACOMP_ACOMP_queue_entry_0:00000000 $d
    {standard input}:376    .rodata.ACOMP_ACOMP_queue_entry_0:00000000 ACOMP_ACOMP_queue_entry_0
    {standard input}:380    .rodata.ACOMP_VRef_queue_entry_1:00000000 $d
    {standard input}:383    .rodata.ACOMP_VRef_queue_entry_1:00000000 ACOMP_VRef_queue_entry_1
    {standard input}:387    .data.ACOMP_queue_entries:00000000 $d
    {standard input}:390    .data.ACOMP_queue_entries:00000000 ACOMP_queue_entries
    {standard input}:394    .data.ACOMP_channel_array:00000000 $d
    {standard input}:397    .data.ACOMP_channel_array:00000000 ACOMP_channel_array
    {standard input}:403    .data.ACOMP_initialization_status:00000000 ACOMP_initialization_status
    {standard input}:410    .rodata.ACOMP:00000000 ACOMP
    {standard input}:407    .rodata.ACOMP:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_VADC_GROUP_SetResultInterruptNode
