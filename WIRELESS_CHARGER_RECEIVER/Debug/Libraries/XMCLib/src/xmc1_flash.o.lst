   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,2
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc1_flash.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
  18              	 .align 2
  19              	 .global XMC_FLASH_ClearStatus
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_FLASH_ClearStatus:
  24              	.LFB46:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc1_flash.c"
   1:../Libraries/XMCLib/src/xmc1_flash.c **** /**
   2:../Libraries/XMCLib/src/xmc1_flash.c ****  * @file xmc1_flash.c
   3:../Libraries/XMCLib/src/xmc1_flash.c ****  * @date 2015-10-14
   4:../Libraries/XMCLib/src/xmc1_flash.c ****  *
   5:../Libraries/XMCLib/src/xmc1_flash.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc1_flash.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc1_flash.c ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc1_flash.c ****  *
   9:../Libraries/XMCLib/src/xmc1_flash.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc1_flash.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc1_flash.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc1_flash.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc1_flash.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc1_flash.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc1_flash.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc1_flash.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc1_flash.c ****  * 
  18:../Libraries/XMCLib/src/xmc1_flash.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc1_flash.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc1_flash.c ****  * 
  21:../Libraries/XMCLib/src/xmc1_flash.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc1_flash.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc1_flash.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc1_flash.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc1_flash.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc1_flash.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc1_flash.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc1_flash.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc1_flash.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc1_flash.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc1_flash.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc1_flash.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc1_flash.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc1_flash.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc1_flash.c ****  *
  36:../Libraries/XMCLib/src/xmc1_flash.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc1_flash.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc1_flash.c ****  *
  39:../Libraries/XMCLib/src/xmc1_flash.c ****  * 2015-02-10:
  40:../Libraries/XMCLib/src/xmc1_flash.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc1_flash.c ****  *
  42:../Libraries/XMCLib/src/xmc1_flash.c ****  * 2015-06-20: 
  43:../Libraries/XMCLib/src/xmc1_flash.c ****  *     - Removed definition of GetDriverVersion API 
  44:../Libraries/XMCLib/src/xmc1_flash.c ****  *
  45:../Libraries/XMCLib/src/xmc1_flash.c ****  * 2015-10-14: 
  46:../Libraries/XMCLib/src/xmc1_flash.c ****  *     - Fixed defect in API XMC_FLASH_ErasePages, related to the errata NVM_CM.001
  47:../Libraries/XMCLib/src/xmc1_flash.c ****  *     - NVM ROM user routine XMC1000_NvmErasePage(address) used for erase page. 
  48:../Libraries/XMCLib/src/xmc1_flash.c ****  *
  49:../Libraries/XMCLib/src/xmc1_flash.c ****  * @endcond 
  50:../Libraries/XMCLib/src/xmc1_flash.c ****  *
  51:../Libraries/XMCLib/src/xmc1_flash.c ****  */
  52:../Libraries/XMCLib/src/xmc1_flash.c **** 
  53:../Libraries/XMCLib/src/xmc1_flash.c **** #include "xmc_flash.h"
  54:../Libraries/XMCLib/src/xmc1_flash.c **** 
  55:../Libraries/XMCLib/src/xmc1_flash.c **** /**************************************************************************************************
  56:../Libraries/XMCLib/src/xmc1_flash.c ****  * MACROS
  57:../Libraries/XMCLib/src/xmc1_flash.c ****  **************************************************************************************************
  58:../Libraries/XMCLib/src/xmc1_flash.c **** #if UC_FAMILY == XMC1
  59:../Libraries/XMCLib/src/xmc1_flash.c **** 
  60:../Libraries/XMCLib/src/xmc1_flash.c **** /**************************************************************************************************
  61:../Libraries/XMCLib/src/xmc1_flash.c ****  * ENUMS
  62:../Libraries/XMCLib/src/xmc1_flash.c ****  **************************************************************************************************
  63:../Libraries/XMCLib/src/xmc1_flash.c **** /* FLASH programming / erase options */
  64:../Libraries/XMCLib/src/xmc1_flash.c **** typedef enum FLASH_ACTION
  65:../Libraries/XMCLib/src/xmc1_flash.c **** {
  66:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_IDLE                        =  (uint32_t)0x00,
  67:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_ONESHOT_WRITE_VERIFY        = ((uint32_t)0x51 << NVM_NVMPROG_ACTION_Pos),
  68:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_ONESHOT_WRITE               = ((uint32_t)0x91 << NVM_NVMPROG_ACTION_Pos),
  69:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_CONTINUOUS_WRITE_VERIFY     = ((uint32_t)0x61 << NVM_NVMPROG_ACTION_Pos),
  70:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_CONTINUOUS_WRITE            = ((uint32_t)0xa1 << NVM_NVMPROG_ACTION_Pos),
  71:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_ONESHOT_PAGE_ERASE          = ((uint32_t)0x92 << NVM_NVMPROG_ACTION_Pos),
  72:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_CONTINUOUS_PAGE_ERASE       = ((uint32_t)0xa2 << NVM_NVMPROG_ACTION_Pos),
  73:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_ONESHOT_VERIFY_ONLY         = ((uint32_t)0xd0 << NVM_NVMPROG_ACTION_Pos),
  74:../Libraries/XMCLib/src/xmc1_flash.c ****   FLASH_ACTION_CONTINUOUS_VERIFY_ONLY      = ((uint32_t)0xe0 << NVM_NVMPROG_ACTION_Pos)
  75:../Libraries/XMCLib/src/xmc1_flash.c **** } FLASH_ACTION_t;
  76:../Libraries/XMCLib/src/xmc1_flash.c **** 
  77:../Libraries/XMCLib/src/xmc1_flash.c **** 
  78:../Libraries/XMCLib/src/xmc1_flash.c **** /**************************************************************************************************
  79:../Libraries/XMCLib/src/xmc1_flash.c ****  * API IMPLEMENTATION
  80:../Libraries/XMCLib/src/xmc1_flash.c ****  **************************************************************************************************
  81:../Libraries/XMCLib/src/xmc1_flash.c **** 
  82:../Libraries/XMCLib/src/xmc1_flash.c **** /*
  83:../Libraries/XMCLib/src/xmc1_flash.c ****  * This API shall clear the ECC and VERIFICATION error status.
  84:../Libraries/XMCLib/src/xmc1_flash.c ****  */
  85:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_ClearStatus(void)
  86:../Libraries/XMCLib/src/xmc1_flash.c **** {
  26              	 .loc 1 86 0
  27              	 .cfi_startproc
  87:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG |= (uint16_t)((uint16_t)NVM_NVMPROG_RSTVERR_Msk | (uint16_t)NVM_NVMPROG_RSTECC_Msk);
  28              	 .loc 1 87 0
  29 0000 C021     	 mov r1,#192
  30 0002 034A     	 ldr r2,.L2
  31 0004 8901     	 lsl r1,r1,#6
  32 0006 9388     	 ldrh r3,[r2,#4]
  88:../Libraries/XMCLib/src/xmc1_flash.c **** }
  33              	 .loc 1 88 0
  34              	 
  87:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG |= (uint16_t)((uint16_t)NVM_NVMPROG_RSTVERR_Msk | (uint16_t)NVM_NVMPROG_RSTECC_Msk);
  35              	 .loc 1 87 0
  36 0008 0B43     	 orr r3,r1
  37 000a 9380     	 strh r3,[r2,#4]
  38              	 .loc 1 88 0
  39 000c 7047     	 bx lr
  40              	.L3:
  41 000e C046     	 .align 2
  42              	.L2:
  43 0010 00000540 	 .word 1074069504
  44              	 .cfi_endproc
  45              	.LFE46:
  47              	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
  48              	 .align 2
  49              	 .global XMC_FLASH_GetStatus
  50              	 .code 16
  51              	 .thumb_func
  53              	XMC_FLASH_GetStatus:
  54              	.LFB47:
  89:../Libraries/XMCLib/src/xmc1_flash.c **** 
  90:../Libraries/XMCLib/src/xmc1_flash.c **** /*
  91:../Libraries/XMCLib/src/xmc1_flash.c ****  * This API shall return the status of NVM.
  92:../Libraries/XMCLib/src/xmc1_flash.c ****  */
  93:../Libraries/XMCLib/src/xmc1_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
  94:../Libraries/XMCLib/src/xmc1_flash.c **** {
  55              	 .loc 1 94 0
  56              	 .cfi_startproc
  95:../Libraries/XMCLib/src/xmc1_flash.c ****   return NVM->NVMSTATUS;
  57              	 .loc 1 95 0
  58 0000 014B     	 ldr r3,.L5
  96:../Libraries/XMCLib/src/xmc1_flash.c **** }
  59              	 .loc 1 96 0
  60              	 
  95:../Libraries/XMCLib/src/xmc1_flash.c ****   return NVM->NVMSTATUS;
  61              	 .loc 1 95 0
  62 0002 1888     	 ldrh r0,[r3]
  63 0004 80B2     	 uxth r0,r0
  64              	 .loc 1 96 0
  65 0006 7047     	 bx lr
  66              	.L6:
  67              	 .align 2
  68              	.L5:
  69 0008 00000540 	 .word 1074069504
  70              	 .cfi_endproc
  71              	.LFE47:
  73              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
  74              	 .align 2
  75              	 .global XMC_FLASH_EnableEvent
  76              	 .code 16
  77              	 .thumb_func
  79              	XMC_FLASH_EnableEvent:
  80              	.LFB48:
  97:../Libraries/XMCLib/src/xmc1_flash.c **** 
  98:../Libraries/XMCLib/src/xmc1_flash.c **** /*
  99:../Libraries/XMCLib/src/xmc1_flash.c ****  * This API shall enable the the flash interrupt event.
 100:../Libraries/XMCLib/src/xmc1_flash.c ****  */
 101:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 102:../Libraries/XMCLib/src/xmc1_flash.c **** {
  81              	 .loc 1 102 0
  82              	 .cfi_startproc
  83              	.LVL0:
 103:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMCONF |= (uint16_t)event_msk;
  84              	 .loc 1 103 0
  85 0000 024B     	 ldr r3,.L8
 104:../Libraries/XMCLib/src/xmc1_flash.c **** }
  86              	 .loc 1 104 0
  87              	 
 103:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMCONF |= (uint16_t)event_msk;
  88              	 .loc 1 103 0
  89 0002 1A89     	 ldrh r2,[r3,#8]
  90 0004 1043     	 orr r0,r2
  91              	.LVL1:
  92 0006 80B2     	 uxth r0,r0
  93 0008 1881     	 strh r0,[r3,#8]
  94              	 .loc 1 104 0
  95 000a 7047     	 bx lr
  96              	.L9:
  97              	 .align 2
  98              	.L8:
  99 000c 00000540 	 .word 1074069504
 100              	 .cfi_endproc
 101              	.LFE48:
 103              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 104              	 .align 2
 105              	 .global XMC_FLASH_DisableEvent
 106              	 .code 16
 107              	 .thumb_func
 109              	XMC_FLASH_DisableEvent:
 110              	.LFB49:
 105:../Libraries/XMCLib/src/xmc1_flash.c **** 
 106:../Libraries/XMCLib/src/xmc1_flash.c **** /*
 107:../Libraries/XMCLib/src/xmc1_flash.c ****  * This API shall disable the the flash interrupt event.
 108:../Libraries/XMCLib/src/xmc1_flash.c ****  */
 109:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 110:../Libraries/XMCLib/src/xmc1_flash.c **** {
 111              	 .loc 1 110 0
 112              	 .cfi_startproc
 113              	.LVL2:
 111:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMCONF &= (uint16_t)(~(uint16_t)event_msk);
 114              	 .loc 1 111 0
 115 0000 024A     	 ldr r2,.L11
 112:../Libraries/XMCLib/src/xmc1_flash.c **** }
 116              	 .loc 1 112 0
 117              	 
 111:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMCONF &= (uint16_t)(~(uint16_t)event_msk);
 118              	 .loc 1 111 0
 119 0002 1389     	 ldrh r3,[r2,#8]
 120 0004 8343     	 bic r3,r0
 121 0006 1381     	 strh r3,[r2,#8]
 122              	 .loc 1 112 0
 123 0008 7047     	 bx lr
 124              	.L12:
 125 000a C046     	 .align 2
 126              	.L11:
 127 000c 00000540 	 .word 1074069504
 128              	 .cfi_endproc
 129              	.LFE49:
 131              	 .section .text.XMC_FLASH_ErasePage,"ax",%progbits
 132              	 .align 2
 133              	 .global XMC_FLASH_ErasePage
 134              	 .code 16
 135              	 .thumb_func
 137              	XMC_FLASH_ErasePage:
 138              	.LFB50:
 113:../Libraries/XMCLib/src/xmc1_flash.c **** 
 114:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_ErasePage(uint32_t *address)
 115:../Libraries/XMCLib/src/xmc1_flash.c **** {
 139              	 .loc 1 115 0
 140              	 .cfi_startproc
 141              	.LVL3:
 142 0000 08B5     	 push {r3,lr}
 143              	.LCFI0:
 144              	 .cfi_def_cfa_offset 8
 145              	 .cfi_offset 3,-8
 146              	 .cfi_offset 14,-4
 116:../Libraries/XMCLib/src/xmc1_flash.c ****   (void)XMC1000_NvmErasePage(address);
 147              	 .loc 1 116 0
 148 0002 8023     	 mov r3,#128
 149 0004 5B00     	 lsl r3,r3,#1
 150 0006 1B68     	 ldr r3,[r3]
 151 0008 9847     	 blx r3
 152              	.LVL4:
 117:../Libraries/XMCLib/src/xmc1_flash.c **** }
 153              	 .loc 1 117 0
 154              	 
 155 000a 08BD     	 pop {r3,pc}
 156              	 .cfi_endproc
 157              	.LFE50:
 159              	 .section .text.XMC_FLASH_ProgramVerifyPage,"ax",%progbits
 160              	 .align 2
 161              	 .global XMC_FLASH_ProgramVerifyPage
 162              	 .code 16
 163              	 .thumb_func
 165              	XMC_FLASH_ProgramVerifyPage:
 166              	.LFB51:
 118:../Libraries/XMCLib/src/xmc1_flash.c **** 
 119:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_ProgramVerifyPage(uint32_t *address, const uint32_t *data)
 120:../Libraries/XMCLib/src/xmc1_flash.c **** {
 167              	 .loc 1 120 0
 168              	 .cfi_startproc
 169              	.LVL5:
 170 0000 08B5     	 push {r3,lr}
 171              	.LCFI1:
 172              	 .cfi_def_cfa_offset 8
 173              	 .cfi_offset 3,-8
 174              	 .cfi_offset 14,-4
 121:../Libraries/XMCLib/src/xmc1_flash.c ****   (void)XMC1000_NvmProgVerify(data, address);
 175              	 .loc 1 121 0
 176 0002 8223     	 mov r3,#130
 120:../Libraries/XMCLib/src/xmc1_flash.c ****   (void)XMC1000_NvmProgVerify(data, address);
 177              	 .loc 1 120 0
 178 0004 021C     	 mov r2,r0
 179              	 .loc 1 121 0
 180 0006 5B00     	 lsl r3,r3,#1
 181 0008 081C     	 mov r0,r1
 182              	.LVL6:
 183 000a 1B68     	 ldr r3,[r3]
 184 000c 111C     	 mov r1,r2
 185              	.LVL7:
 186 000e 9847     	 blx r3
 187              	.LVL8:
 122:../Libraries/XMCLib/src/xmc1_flash.c **** }
 188              	 .loc 1 122 0
 189              	 
 190 0010 08BD     	 pop {r3,pc}
 191              	 .cfi_endproc
 192              	.LFE51:
 194 0012 C046     	 .section .text.XMC_FLASH_WriteBlocks,"ax",%progbits
 195              	 .align 2
 196              	 .global XMC_FLASH_WriteBlocks
 197              	 .code 16
 198              	 .thumb_func
 200              	XMC_FLASH_WriteBlocks:
 201              	.LFB52:
 123:../Libraries/XMCLib/src/xmc1_flash.c **** 
 124:../Libraries/XMCLib/src/xmc1_flash.c **** /* Write blocks of data into flash*/
 125:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_WriteBlocks(uint32_t *address, const uint32_t *data, uint32_t num_blocks, bool verif
 126:../Libraries/XMCLib/src/xmc1_flash.c **** {
 202              	 .loc 1 126 0
 203              	 .cfi_startproc
 204              	.LVL9:
 205 0000 70B5     	 push {r4,r5,r6,lr}
 206              	.LCFI2:
 207              	 .cfi_def_cfa_offset 16
 208              	 .cfi_offset 4,-16
 209              	 .cfi_offset 5,-12
 210              	 .cfi_offset 6,-8
 211              	 .cfi_offset 14,-4
 127:../Libraries/XMCLib/src/xmc1_flash.c ****   uint32_t word;
 128:../Libraries/XMCLib/src/xmc1_flash.c ****   uint32_t block;
 129:../Libraries/XMCLib/src/xmc1_flash.c **** 
 130:../Libraries/XMCLib/src/xmc1_flash.c ****   XMC_ASSERT("XMC_FLASH_WriteBlocks: Starting address not aligned to Block",
 131:../Libraries/XMCLib/src/xmc1_flash.c ****                                                                    ((uint32_t)address & FLASH_BLOCK
 132:../Libraries/XMCLib/src/xmc1_flash.c **** 
 133:../Libraries/XMCLib/src/xmc1_flash.c ****   /* Configure the continuous Write option command and reset the NVM error / verification status*/
 134:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG &= (uint16_t)(~(uint16_t)NVM_NVMPROG_ACTION_Msk);
 212              	 .loc 1 134 0
 213 0002 FF26     	 mov r6,#255
 214 0004 164C     	 ldr r4,.L26
 215 0006 A588     	 ldrh r5,[r4,#4]
 216 0008 B543     	 bic r5,r6
 135:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG |= (uint16_t)(NVM_NVMPROG_RSTVERR_Msk | NVM_NVMPROG_RSTECC_Msk);
 217              	 .loc 1 135 0
 218 000a C026     	 mov r6,#192
 134:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG |= (uint16_t)(NVM_NVMPROG_RSTVERR_Msk | NVM_NVMPROG_RSTECC_Msk);
 219              	 .loc 1 134 0
 220 000c A580     	 strh r5,[r4,#4]
 221              	 .loc 1 135 0
 222 000e A588     	 ldrh r5,[r4,#4]
 223 0010 B601     	 lsl r6,r6,#6
 224 0012 3543     	 orr r5,r6
 225 0014 A580     	 strh r5,[r4,#4]
 136:../Libraries/XMCLib/src/xmc1_flash.c **** 
 137:../Libraries/XMCLib/src/xmc1_flash.c ****   if (verify == true)
 138:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 139:../Libraries/XMCLib/src/xmc1_flash.c ****     NVM->NVMPROG |= (uint16_t)FLASH_ACTION_CONTINUOUS_WRITE_VERIFY;
 226              	 .loc 1 139 0
 227 0016 A588     	 ldrh r5,[r4,#4]
 137:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 228              	 .loc 1 137 0
 229 0018 002B     	 cmp r3,#0
 230 001a 1DD0     	 beq .L16
 231              	 .loc 1 139 0
 232 001c 6123     	 mov r3,#97
 233              	.LVL10:
 234 001e 2B43     	 orr r3,r5
 235 0020 A380     	 strh r3,[r4,#4]
 236              	.L17:
 237              	.LVL11:
 140:../Libraries/XMCLib/src/xmc1_flash.c ****   }
 141:../Libraries/XMCLib/src/xmc1_flash.c ****   else
 142:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 143:../Libraries/XMCLib/src/xmc1_flash.c ****     NVM->NVMPROG |= (uint16_t)FLASH_ACTION_CONTINUOUS_WRITE;
 144:../Libraries/XMCLib/src/xmc1_flash.c ****   }
 145:../Libraries/XMCLib/src/xmc1_flash.c **** 
 146:../Libraries/XMCLib/src/xmc1_flash.c ****   for (block = 0U; block < num_blocks; ++block)
 238              	 .loc 1 146 0 discriminator 1
 239 0022 0026     	 mov r6,#0
 240 0024 002A     	 cmp r2,#0
 241 0026 11D0     	 beq .L19
 242              	.LBB24:
 243              	.LBB25:
 244              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc/xmc_flash.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @file xmc_flash.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * 2014-12-10:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * 2015-02-20:
  42:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *     - Updated for Documentation related changes<br>
  43:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * 2015-06-20: 
  44:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *     - Removed version macros and declaration of GetDriverVersion API 
  45:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @endcond 
  46:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
  48:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  49:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  50:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #ifndef XMC_FLASH_H
  51:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #define XMC_FLASH_H
  52:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  53:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**************************************************************************************************
  54:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * HEADER FILES
  55:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  **************************************************************************************************
  56:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  57:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #include "xmc_common.h"
  58:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  59:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #if UC_FAMILY == XMC1
  60:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  #include "xmc1_flash.h"
  61:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #endif
  62:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  
  63:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #if UC_FAMILY == XMC4
  64:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  #include "xmc4_flash.h"
  65:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #endif
  66:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  67:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
  68:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @addtogroup XMClib XMC Peripheral Library
  69:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @{
  70:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
  71:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  72:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
  73:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @addtogroup FLASH
  74:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @brief Flash driver for XMC microcontroller family.
  75:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Flash is a non volatile memory module used to store instruction code or constant data.
  77:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * The flash low level driver provides support to the following functionalities of flash memory.<BR
  78:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <OL>
  79:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC4
  80:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <LI>Provides function to program a page. ( XMC_FLASH_ProgramPage() )</LI><BR>
  81:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <LI>Provides functions to support read and write protection. ( XMC_FLASH_InstallProtection(), 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * XMC_FLASH_ConfirmProtection(), XMC_FLASH_VerifyReadProtection(), XMC_FLASH_VerifyWriteProtection
  83:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <LI>Provides function to erase sector. ( XMC_FLASH_EraseSector() ) </LI><BR> 
  84:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
  85:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC1
  86:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <LI>Provides functions to program and verify pages. ( XMC_FLASH_ProgramPage(), XMC_FLASH_Program
  87:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *  XMC_FLASH_ProgramVerifyPage() )</LI><BR>
  88:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <LI>Provides functions to write and verify blocks. ( XMC_FLASH_WriteBlocks(), XMC_FLASH_VerifyBl
  89:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <LI>Provides functions to read data in terms of word and blocks. ( XMC_FLASH_ReadBlocks(), XMC_F
  90:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * </LI><BR> 
  91:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * <LI>Provides function to erase page. ( XMC_FLASH_ErasePage() ) </LI><BR> 
  92:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
  93:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * </OL>
  94:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @{
  95:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /*******************************************************************************
  98:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * API PROTOTYPE
  99:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *******************************************************************************/
 100:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #ifdef __cplusplus
 101:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** extern "C" {
 102:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** #endif
 103:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
 104:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
 105:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 106:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param None
 107:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 108:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @return None
 109:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 110:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Description:</b><br>
 111:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC1
 112:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Clears the previous error status by reseting the ECC and VERR error status bits of NVMSTATUS reg
 113:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Call this API before starting any flash programming / erase related APIs to ensure all previous 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 115:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC4
 116:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Clears the previous error status by reseting the FSR status register.\n\n  Call this API before 
 117:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * programming / erase related APIs to ensure all previous errors are cleared.
 118:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 119:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 120:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 121:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * None 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 123:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
 124:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** void XMC_FLASH_ClearStatus(void);
 125:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
 126:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
 127:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 128:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param None
 129:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 130:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @return uint32_t Status of the previous flash operation.
 131:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 132:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Description:</b><br>
 133:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC1
 134:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Informs the status of flash by reading the NVMSTATUS register.\n\n  It indicates the ECC, VERR(v
 135:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * WRPERR (Write protocol error) errors as well as the current flash state. After calling the flash
 136:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * operation related APIs, call this API to get the verification status. The return value of this A
 137:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * against the members of @ref XMC_FLASH_STATUS_t enumeration to get the relevant status.
 138:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 139:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC4
 140:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Informs the status of flash by reading the FSR register.\n\n  It indicates the error status such
 141:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * PROER, PFDBER, ORIER, VER errors as well as the current flash state. After calling the flash rea
 142:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * operation related APIs, call this API to verify flash status. The return value of this API shall
 143:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * the members of @ref XMC_FLASH_STATUS_t enumeration to get the relevant status.
 144:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 145:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 146:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 147:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * None
 148:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 149:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** uint32_t XMC_FLASH_GetStatus(void);
 151:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
 152:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
 153:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 154:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param event_msk ORed values of @ref XMC_FLASH_EVENT_t enumeration
 155:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 156:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @return None
 157:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 158:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Description:</b><br>
 159:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Enables the particular flash events as specified in the input parameter.\n
 160:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 161:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 162:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * XMC_FLASH_DisableEvent()\n\n\n
 163:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 164:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** void XMC_FLASH_EnableEvent(const uint32_t event_msk);
 166:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
 167:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
 168:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 169:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param event_msk ORed values of @ref XMC_FLASH_EVENT_t enumeration
 170:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 171:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @return None
 172:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 173:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Description:</b><br>
 174:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Disables the particular flash events as specified in the input parameter.\n
 175:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 176:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 177:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * XMC_FLASH_EnableEvent()\n\n\n
 178:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 179:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** void XMC_FLASH_DisableEvent(const uint32_t event_msk);
 181:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
 182:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
 183:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 184:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param address    Pointer to the starting address of flash page from where the programming start
 185:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param data       Pointer to the source address where targeted data is located.
 186:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 187:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @return None
 188:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 189:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Description:</b><br>
 190:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC1
 191:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Programs a single flash page associated with the specified \a address.\n\n XMC1000 Flash can be 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * page (256 bytes) using this API. It calls the Flash Firmware routine \a XMC1000_NvmProgVerify(un
 193:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * to perform the programming. Refer XMC1000 reference manual of for more details on flash firmware
 194:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * (Section 25.3). Call XMC_FLASH_GetStatus() API after calling this API, to verify the programming
 195:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 196:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC4
 197:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Programs a single flash page associated with the specified \a address.\n\n  XMC4000 flash can be
 198:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * granularity of 256 bytes page using this API. Before entering into page write process, it clears
 199:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * bits inside status register. It starts the write process by issuing the page mode command follow
 200:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * command which loads the targeted \a data blocks into internal assembly buffer. Finally, it issue
 201:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * command which programs the \a data into flash. Call XMC_FLASH_GetStatus() API after calling this
 202:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * programming operation.\n
 203:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 204:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 205:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Note:</b><br>
 206:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Flash will be busy state during write is ongoing, hence no operations allowed until it completes
 207:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 208:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 209:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * None 
 210:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 211:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data);
 213:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
 214:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
 215:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 216:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param address Pointer to the starting address of the page to be erased.
 217:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 218:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @return None
 219:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 220:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Description:</b><br>
 221:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC1
 222:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Erases a complete sector starting from the \a address specified.\n\n  XMC1000 Flash can be erase
 223:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * of one page = 16 blocks of 16 Bytes = 256 Bytes using this API. It internally calls XMC_FLASH_Er
 224:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * times starting from the first page of the sector.. Call XMC_FLASH_GetStatus() API after calling 
 225:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * to verify the erase operation.\n
 226:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 227:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 228:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC4
 229:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Erases a sector associated with the specified \a address.\n\n  Before erase, it clears the error
 230:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * FSR status register. Issues the erase sector command sequence with the specified starting \a add
 231:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * erase process. Call XMC_FLASH_GetStatus() API after calling this API, to verify the erase operat
 232:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 233:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC1
 234:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 235:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * XMC_FLASH_ErasePages() \n\n\n
 236:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 237:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \if XMC4
 238:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 239:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * None
 240:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \endif
 241:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
 242:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** void XMC_FLASH_EraseSector(uint32_t *address);
 243:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** 
 244:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** /**
 245:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 246:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @param None
 247:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 248:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * @return true if flash is in busy state else returns \a false.
 249:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 250:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Description:</b><br>
 251:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Checks whether flash is in busy state or not.\n\n  It is checked by calling the XMC_FLASH_GetSta
 252:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * Refer XMC_FLASH_GetStatus() for more details.\n
 253:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 254:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * \par<b>Related APIs:</b><BR>
 255:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  * XMC_FLASH_GetStatus()\n\n\n
 256:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  *
 257:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****  */
 258:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** __STATIC_INLINE bool XMC_FLASH_IsBusy(void)
 259:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h **** {
 260:C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc\xmc_flash.h ****   return (bool)(XMC_FLASH_GetStatus() & XMC_FLASH_STATUS_BUSY);
 245              	 .loc 2 260 0 discriminator 1
 246 0028 0124     	 mov r4,#1
 247              	.LBB26:
 248              	.LBB27:
  95:../Libraries/XMCLib/src/xmc1_flash.c **** }
 249              	 .loc 1 95 0 discriminator 1
 250 002a 0D4D     	 ldr r5,.L26
 251              	.LVL12:
 252              	.L22:
 253              	.LBE27:
 254              	.LBE26:
 255              	.LBE25:
 256              	.LBE24:
 147:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 148:../Libraries/XMCLib/src/xmc1_flash.c ****     for (word = 0U; word < XMC_FLASH_WORDS_PER_BLOCK; ++word)
 149:../Libraries/XMCLib/src/xmc1_flash.c ****     {
 150:../Libraries/XMCLib/src/xmc1_flash.c ****       *address = *data;
 257              	 .loc 1 150 0 discriminator 1
 258 002c 0B68     	 ldr r3,[r1]
 259 002e 0360     	 str r3,[r0]
 260              	.LVL13:
 261 0030 4B68     	 ldr r3,[r1,#4]
 262 0032 4360     	 str r3,[r0,#4]
 263              	.LVL14:
 264 0034 8B68     	 ldr r3,[r1,#8]
 265 0036 8360     	 str r3,[r0,#8]
 266              	.LVL15:
 267 0038 CB68     	 ldr r3,[r1,#12]
 268 003a 1031     	 add r1,r1,#16
 269              	.LVL16:
 270 003c C360     	 str r3,[r0,#12]
 271 003e 1030     	 add r0,r0,#16
 272              	.LVL17:
 273              	.L20:
 274              	.LBB31:
 275              	.LBB30:
 276              	.LBB29:
 277              	.LBB28:
  95:../Libraries/XMCLib/src/xmc1_flash.c **** }
 278              	 .loc 1 95 0 discriminator 1
 279 0040 2B88     	 ldrh r3,[r5]
 280              	.LBE28:
 281              	.LBE29:
 282              	.LBE30:
 283              	.LBE31:
 151:../Libraries/XMCLib/src/xmc1_flash.c ****       data++;
 152:../Libraries/XMCLib/src/xmc1_flash.c ****       address++;
 153:../Libraries/XMCLib/src/xmc1_flash.c ****     }
 154:../Libraries/XMCLib/src/xmc1_flash.c ****       
 155:../Libraries/XMCLib/src/xmc1_flash.c ****     while (XMC_FLASH_IsBusy() == true)
 284              	 .loc 1 155 0 discriminator 1
 285 0042 1C42     	 tst r4,r3
 286 0044 FCD1     	 bne .L20
 146:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 287              	 .loc 1 146 0 discriminator 2
 288 0046 0136     	 add r6,r6,#1
 289              	.LVL18:
 290 0048 9642     	 cmp r6,r2
 291 004a EFD1     	 bne .L22
 292              	.LVL19:
 293              	.L19:
 156:../Libraries/XMCLib/src/xmc1_flash.c ****     {
 157:../Libraries/XMCLib/src/xmc1_flash.c ****     }
 158:../Libraries/XMCLib/src/xmc1_flash.c ****   }
 159:../Libraries/XMCLib/src/xmc1_flash.c **** 
 160:../Libraries/XMCLib/src/xmc1_flash.c ****   /* Stop continuous write operation */
 161:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG &= (uint16_t)(~(uint16_t)NVM_NVMPROG_ACTION_Msk);
 294              	 .loc 1 161 0
 295 004c FF21     	 mov r1,#255
 296              	.LVL20:
 297 004e 044A     	 ldr r2,.L26
 298              	.LVL21:
 162:../Libraries/XMCLib/src/xmc1_flash.c **** }
 299              	 .loc 1 162 0
 300              	 
 161:../Libraries/XMCLib/src/xmc1_flash.c **** }
 301              	 .loc 1 161 0
 302 0050 9388     	 ldrh r3,[r2,#4]
 303 0052 8B43     	 bic r3,r1
 304 0054 9380     	 strh r3,[r2,#4]
 305              	 .loc 1 162 0
 306 0056 70BD     	 pop {r4,r5,r6,pc}
 307              	.LVL22:
 308              	.L16:
 143:../Libraries/XMCLib/src/xmc1_flash.c ****   }
 309              	 .loc 1 143 0
 310 0058 A123     	 mov r3,#161
 311              	.LVL23:
 312 005a 2B43     	 orr r3,r5
 313 005c A380     	 strh r3,[r4,#4]
 314 005e E0E7     	 b .L17
 315              	.L27:
 316              	 .align 2
 317              	.L26:
 318 0060 00000540 	 .word 1074069504
 319              	 .cfi_endproc
 320              	.LFE52:
 322              	 .section .text.XMC_FLASH_ErasePages,"ax",%progbits
 323              	 .align 2
 324              	 .global XMC_FLASH_ErasePages
 325              	 .code 16
 326              	 .thumb_func
 328              	XMC_FLASH_ErasePages:
 329              	.LFB53:
 163:../Libraries/XMCLib/src/xmc1_flash.c **** 
 164:../Libraries/XMCLib/src/xmc1_flash.c **** /* Erase flash pages */
 165:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_ErasePages(uint32_t *address, uint32_t num_pages)
 166:../Libraries/XMCLib/src/xmc1_flash.c **** {
 330              	 .loc 1 166 0
 331              	 .cfi_startproc
 332              	.LVL24:
 333 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 334              	.LCFI3:
 335              	 .cfi_def_cfa_offset 24
 336              	 .cfi_offset 3,-24
 337              	 .cfi_offset 4,-20
 338              	 .cfi_offset 5,-16
 339              	 .cfi_offset 6,-12
 340              	 .cfi_offset 7,-8
 341              	 .cfi_offset 14,-4
 342 0002 4646     	 mov r6,r8
 343 0004 4F46     	 mov r7,r9
 344 0006 8846     	 mov r8,r1
 345 0008 C0B4     	 push {r6,r7}
 346              	.LCFI4:
 347              	 .cfi_def_cfa_offset 32
 348              	 .cfi_offset 8,-32
 349              	 .cfi_offset 9,-28
 350              	 .loc 1 166 0
 351 000a 071C     	 mov r7,r0
 167:../Libraries/XMCLib/src/xmc1_flash.c ****   uint32_t page;
 168:../Libraries/XMCLib/src/xmc1_flash.c **** 
 169:../Libraries/XMCLib/src/xmc1_flash.c ****   XMC_ASSERT("XMC_FLASH_ErasePages: Starting address not aligned to Page",
 170:../Libraries/XMCLib/src/xmc1_flash.c ****                                                                     ((uint32_t)address & FLASH_PAGE
 171:../Libraries/XMCLib/src/xmc1_flash.c **** 
 172:../Libraries/XMCLib/src/xmc1_flash.c ****   for (page = 0U; page < num_pages; ++page)
 352              	 .loc 1 172 0
 353 000c 0026     	 mov r6,#0
 354 000e 0029     	 cmp r1,#0
 355 0010 10D0     	 beq .L28
 173:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 174:../Libraries/XMCLib/src/xmc1_flash.c ****     (void)XMC1000_NvmErasePage(address);
 356              	 .loc 1 174 0
 357 0012 8023     	 mov r3,#128
 358 0014 5B00     	 lsl r3,r3,#1
 359 0016 9946     	 mov r9,r3
 360              	.LBB32:
 361              	.LBB33:
 362              	 .loc 2 260 0
 363 0018 0124     	 mov r4,#1
 364              	.LBB34:
 365              	.LBB35:
  95:../Libraries/XMCLib/src/xmc1_flash.c **** }
 366              	 .loc 1 95 0
 367 001a 084D     	 ldr r5,.L36
 368              	.LVL25:
 369              	.L33:
 370              	.LBE35:
 371              	.LBE34:
 372              	.LBE33:
 373              	.LBE32:
 374              	 .loc 1 174 0
 375 001c 4B46     	 mov r3,r9
 376 001e 381C     	 mov r0,r7
 377 0020 1B68     	 ldr r3,[r3]
 378 0022 9847     	 blx r3
 379              	.LVL26:
 380              	.L30:
 381              	.LBB39:
 382              	.LBB38:
 383              	.LBB37:
 384              	.LBB36:
  95:../Libraries/XMCLib/src/xmc1_flash.c **** }
 385              	 .loc 1 95 0 discriminator 1
 386 0024 2B88     	 ldrh r3,[r5]
 387              	.LBE36:
 388              	.LBE37:
 389              	.LBE38:
 390              	.LBE39:
 175:../Libraries/XMCLib/src/xmc1_flash.c **** 
 176:../Libraries/XMCLib/src/xmc1_flash.c ****     while (XMC_FLASH_IsBusy() == true)
 391              	 .loc 1 176 0 discriminator 1
 392 0026 1C42     	 tst r4,r3
 393 0028 FCD1     	 bne .L30
 177:../Libraries/XMCLib/src/xmc1_flash.c ****     {
 178:../Libraries/XMCLib/src/xmc1_flash.c ****     }
 179:../Libraries/XMCLib/src/xmc1_flash.c **** 
 180:../Libraries/XMCLib/src/xmc1_flash.c ****     /* Increment the page address for the next erase */
 181:../Libraries/XMCLib/src/xmc1_flash.c ****     address += XMC_FLASH_WORDS_PER_PAGE;
 394              	 .loc 1 181 0 discriminator 2
 395 002a 0137     	 add r7,r7,#1
 396              	.LVL27:
 172:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 397              	 .loc 1 172 0 discriminator 2
 398 002c 0136     	 add r6,r6,#1
 399              	.LVL28:
 400              	 .loc 1 181 0 discriminator 2
 401 002e FF37     	 add r7,r7,#255
 402              	.LVL29:
 172:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 403              	 .loc 1 172 0 discriminator 2
 404 0030 4645     	 cmp r6,r8
 405 0032 F3D1     	 bne .L33
 406              	.LVL30:
 407              	.L28:
 182:../Libraries/XMCLib/src/xmc1_flash.c **** 
 183:../Libraries/XMCLib/src/xmc1_flash.c ****   }
 184:../Libraries/XMCLib/src/xmc1_flash.c **** 
 185:../Libraries/XMCLib/src/xmc1_flash.c **** }
 408              	 .loc 1 185 0
 409              	 
 410              	.LVL31:
 411              	.LVL32:
 412 0034 0CBC     	 pop {r2,r3}
 413 0036 9046     	 mov r8,r2
 414 0038 9946     	 mov r9,r3
 415 003a F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 416              	.L37:
 417              	 .align 2
 418              	.L36:
 419 003c 00000540 	 .word 1074069504
 420              	 .cfi_endproc
 421              	.LFE53:
 423              	 .section .text.XMC_FLASH_VerifyBlocks,"ax",%progbits
 424              	 .align 2
 425              	 .global XMC_FLASH_VerifyBlocks
 426              	 .code 16
 427              	 .thumb_func
 429              	XMC_FLASH_VerifyBlocks:
 430              	.LFB54:
 186:../Libraries/XMCLib/src/xmc1_flash.c **** 
 187:../Libraries/XMCLib/src/xmc1_flash.c **** /* Write multiple data blocks and verify the written data */
 188:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_VerifyBlocks(uint32_t *address, const uint32_t *data, uint32_t num_blocks)
 189:../Libraries/XMCLib/src/xmc1_flash.c **** {
 431              	 .loc 1 189 0
 432              	 .cfi_startproc
 433              	.LVL33:
 434 0000 70B5     	 push {r4,r5,r6,lr}
 435              	.LCFI5:
 436              	 .cfi_def_cfa_offset 16
 437              	 .cfi_offset 4,-16
 438              	 .cfi_offset 5,-12
 439              	 .cfi_offset 6,-8
 440              	 .cfi_offset 14,-4
 190:../Libraries/XMCLib/src/xmc1_flash.c ****   uint32_t word;
 191:../Libraries/XMCLib/src/xmc1_flash.c ****   uint32_t block;
 192:../Libraries/XMCLib/src/xmc1_flash.c **** 
 193:../Libraries/XMCLib/src/xmc1_flash.c ****   XMC_ASSERT("XMC_FLASH_VerifyBlocks: Starting address not aligned to Block",
 194:../Libraries/XMCLib/src/xmc1_flash.c ****                                                                    ((uint32_t)address & FLASH_BLOCK
 195:../Libraries/XMCLib/src/xmc1_flash.c **** 
 196:../Libraries/XMCLib/src/xmc1_flash.c ****   /* Configure the Continuous write with verify option command and reset the NVM error / verificati
 197:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG &= (uint16_t)~NVM_NVMPROG_ACTION_Msk;
 441              	 .loc 1 197 0
 442 0002 FF25     	 mov r5,#255
 443 0004 104C     	 ldr r4,.L46
 198:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG |= (uint16_t)((uint16_t)NVM_NVMPROG_RSTVERR_Msk | 
 199:../Libraries/XMCLib/src/xmc1_flash.c ****                              (uint16_t)NVM_NVMPROG_RSTECC_Msk | 
 200:../Libraries/XMCLib/src/xmc1_flash.c ****                              (uint16_t)FLASH_ACTION_CONTINUOUS_VERIFY_ONLY);
 201:../Libraries/XMCLib/src/xmc1_flash.c **** 
 202:../Libraries/XMCLib/src/xmc1_flash.c ****   for (block = 0U; block < num_blocks; ++block)
 444              	 .loc 1 202 0
 445 0006 0026     	 mov r6,#0
 197:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG |= (uint16_t)((uint16_t)NVM_NVMPROG_RSTVERR_Msk | 
 446              	 .loc 1 197 0
 447 0008 A388     	 ldrh r3,[r4,#4]
 448 000a AB43     	 bic r3,r5
 449 000c A380     	 strh r3,[r4,#4]
 198:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG |= (uint16_t)((uint16_t)NVM_NVMPROG_RSTVERR_Msk | 
 450              	 .loc 1 198 0
 451 000e A388     	 ldrh r3,[r4,#4]
 452 0010 0E4D     	 ldr r5,.L46+4
 453 0012 2B43     	 orr r3,r5
 454 0014 A380     	 strh r3,[r4,#4]
 455              	.LVL34:
 456              	.LBB40:
 457              	.LBB41:
 458              	 .loc 2 260 0
 459 0016 0125     	 mov r5,#1
 460              	.LBE41:
 461              	.LBE40:
 462              	 .loc 1 202 0
 463 0018 002A     	 cmp r2,#0
 464 001a 0FD0     	 beq .L40
 465              	.LVL35:
 466              	.L43:
 203:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 204:../Libraries/XMCLib/src/xmc1_flash.c ****     for (word = 0U; word < XMC_FLASH_WORDS_PER_BLOCK; ++word)
 205:../Libraries/XMCLib/src/xmc1_flash.c ****     {
 206:../Libraries/XMCLib/src/xmc1_flash.c ****       *address = *data;
 467              	 .loc 1 206 0 discriminator 1
 468 001c 0B68     	 ldr r3,[r1]
 469 001e 0360     	 str r3,[r0]
 470              	.LVL36:
 471 0020 4B68     	 ldr r3,[r1,#4]
 472 0022 4360     	 str r3,[r0,#4]
 473              	.LVL37:
 474 0024 8B68     	 ldr r3,[r1,#8]
 475 0026 8360     	 str r3,[r0,#8]
 476              	.LVL38:
 477 0028 CB68     	 ldr r3,[r1,#12]
 478 002a 1031     	 add r1,r1,#16
 479              	.LVL39:
 480 002c C360     	 str r3,[r0,#12]
 481 002e 1030     	 add r0,r0,#16
 482              	.LVL40:
 483              	.L41:
 484              	.LBB45:
 485              	.LBB44:
 486              	.LBB42:
 487              	.LBB43:
  95:../Libraries/XMCLib/src/xmc1_flash.c **** }
 488              	 .loc 1 95 0 discriminator 1
 489 0030 2388     	 ldrh r3,[r4]
 490              	.LBE43:
 491              	.LBE42:
 492              	.LBE44:
 493              	.LBE45:
 207:../Libraries/XMCLib/src/xmc1_flash.c ****       data++;
 208:../Libraries/XMCLib/src/xmc1_flash.c ****       address++;
 209:../Libraries/XMCLib/src/xmc1_flash.c ****     }
 210:../Libraries/XMCLib/src/xmc1_flash.c **** 
 211:../Libraries/XMCLib/src/xmc1_flash.c ****     while (XMC_FLASH_IsBusy() == true)
 494              	 .loc 1 211 0 discriminator 1
 495 0032 1D42     	 tst r5,r3
 496 0034 FCD1     	 bne .L41
 202:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 497              	 .loc 1 202 0 discriminator 2
 498 0036 0136     	 add r6,r6,#1
 499              	.LVL41:
 500 0038 9642     	 cmp r6,r2
 501 003a EFD1     	 bne .L43
 502              	.LVL42:
 503              	.L40:
 212:../Libraries/XMCLib/src/xmc1_flash.c ****     {
 213:../Libraries/XMCLib/src/xmc1_flash.c ****     }
 214:../Libraries/XMCLib/src/xmc1_flash.c ****   }
 215:../Libraries/XMCLib/src/xmc1_flash.c **** 
 216:../Libraries/XMCLib/src/xmc1_flash.c ****   /* Stop continuous verify operation */
 217:../Libraries/XMCLib/src/xmc1_flash.c ****   NVM->NVMPROG &= (uint16_t)(~(uint16_t)NVM_NVMPROG_ACTION_Msk);
 504              	 .loc 1 217 0
 505 003c FF21     	 mov r1,#255
 506              	.LVL43:
 507 003e 024A     	 ldr r2,.L46
 508              	.LVL44:
 218:../Libraries/XMCLib/src/xmc1_flash.c **** }
 509              	 .loc 1 218 0
 510              	 
 217:../Libraries/XMCLib/src/xmc1_flash.c **** }
 511              	 .loc 1 217 0
 512 0040 9388     	 ldrh r3,[r2,#4]
 513 0042 8B43     	 bic r3,r1
 514 0044 9380     	 strh r3,[r2,#4]
 515              	 .loc 1 218 0
 516 0046 70BD     	 pop {r4,r5,r6,pc}
 517              	.L47:
 518              	 .align 2
 519              	.L46:
 520 0048 00000540 	 .word 1074069504
 521 004c E0300000 	 .word 12512
 522              	 .cfi_endproc
 523              	.LFE54:
 525              	 .section .text.XMC_FLASH_ReadBlocks,"ax",%progbits
 526              	 .align 2
 527              	 .global XMC_FLASH_ReadBlocks
 528              	 .code 16
 529              	 .thumb_func
 531              	XMC_FLASH_ReadBlocks:
 532              	.LFB55:
 219:../Libraries/XMCLib/src/xmc1_flash.c **** 
 220:../Libraries/XMCLib/src/xmc1_flash.c **** /* Read data blocks from flash */
 221:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_ReadBlocks(uint32_t *address, uint32_t *data, uint32_t num_blocks)
 222:../Libraries/XMCLib/src/xmc1_flash.c **** {
 533              	 .loc 1 222 0
 534              	 .cfi_startproc
 535              	.LVL45:
 536 0000 10B5     	 push {r4,lr}
 537              	.LCFI6:
 538              	 .cfi_def_cfa_offset 8
 539              	 .cfi_offset 4,-8
 540              	 .cfi_offset 14,-4
 223:../Libraries/XMCLib/src/xmc1_flash.c ****   uint32_t word;
 224:../Libraries/XMCLib/src/xmc1_flash.c ****   uint32_t block;
 225:../Libraries/XMCLib/src/xmc1_flash.c **** 
 226:../Libraries/XMCLib/src/xmc1_flash.c ****   XMC_ASSERT("XMC_FLASH_ReadBlocks: Starting address not aligned to Block",
 227:../Libraries/XMCLib/src/xmc1_flash.c ****                                                                   ((uint32_t)address & FLASH_BLOCK_
 228:../Libraries/XMCLib/src/xmc1_flash.c **** 
 229:../Libraries/XMCLib/src/xmc1_flash.c ****   for (block = 0U; block < num_blocks; ++block)
 541              	 .loc 1 229 0
 542 0002 0023     	 mov r3,#0
 543 0004 002A     	 cmp r2,#0
 544 0006 0CD0     	 beq .L48
 545              	.LVL46:
 546              	.L52:
 230:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 231:../Libraries/XMCLib/src/xmc1_flash.c ****     for (word = 0U; word < XMC_FLASH_WORDS_PER_BLOCK; ++word)
 232:../Libraries/XMCLib/src/xmc1_flash.c ****     {
 233:../Libraries/XMCLib/src/xmc1_flash.c ****       *data = *address;
 547              	 .loc 1 233 0 discriminator 1
 548 0008 0468     	 ldr r4,[r0]
 229:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 549              	 .loc 1 229 0 discriminator 1
 550 000a 0133     	 add r3,r3,#1
 551              	.LVL47:
 552              	 .loc 1 233 0 discriminator 1
 553 000c 0C60     	 str r4,[r1]
 554              	.LVL48:
 555 000e 4468     	 ldr r4,[r0,#4]
 556 0010 4C60     	 str r4,[r1,#4]
 557              	.LVL49:
 558 0012 8468     	 ldr r4,[r0,#8]
 559 0014 8C60     	 str r4,[r1,#8]
 560              	.LVL50:
 561 0016 C468     	 ldr r4,[r0,#12]
 562 0018 1030     	 add r0,r0,#16
 563              	.LVL51:
 564 001a CC60     	 str r4,[r1,#12]
 565 001c 1031     	 add r1,r1,#16
 566              	.LVL52:
 229:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 567              	 .loc 1 229 0 discriminator 1
 568 001e 9342     	 cmp r3,r2
 569 0020 F2D1     	 bne .L52
 570              	.LVL53:
 571              	.L48:
 234:../Libraries/XMCLib/src/xmc1_flash.c ****       data++;
 235:../Libraries/XMCLib/src/xmc1_flash.c ****       address++;
 236:../Libraries/XMCLib/src/xmc1_flash.c ****     }
 237:../Libraries/XMCLib/src/xmc1_flash.c ****   }
 238:../Libraries/XMCLib/src/xmc1_flash.c **** }
 572              	 .loc 1 238 0
 573              	 
 574 0022 10BD     	 pop {r4,pc}
 575              	 .cfi_endproc
 576              	.LFE55:
 578              	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 579              	 .align 2
 580              	 .global XMC_FLASH_EraseSector
 581              	 .code 16
 582              	 .thumb_func
 584              	XMC_FLASH_EraseSector:
 585              	.LFB56:
 239:../Libraries/XMCLib/src/xmc1_flash.c **** 
 240:../Libraries/XMCLib/src/xmc1_flash.c **** /* Erase single sector */
 241:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 242:../Libraries/XMCLib/src/xmc1_flash.c **** {
 586              	 .loc 1 242 0
 587              	 .cfi_startproc
 588              	.LVL54:
 589 0000 8023     	 mov r3,#128
 590 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 591              	.LCFI7:
 592              	 .cfi_def_cfa_offset 20
 593              	 .cfi_offset 4,-20
 594              	 .cfi_offset 5,-16
 595              	 .cfi_offset 6,-12
 596              	 .cfi_offset 7,-8
 597              	 .cfi_offset 14,-4
 598 0004 4746     	 mov r7,r8
 599 0006 5B01     	 lsl r3,r3,#5
 600 0008 80B4     	 push {r7}
 601              	.LCFI8:
 602              	 .cfi_def_cfa_offset 24
 603              	 .cfi_offset 8,-24
 604 000a 9846     	 mov r8,r3
 605              	.LBB46:
 606              	.LBB47:
 174:../Libraries/XMCLib/src/xmc1_flash.c **** 
 607              	 .loc 1 174 0
 608 000c 8027     	 mov r7,#128
 609              	.LBE47:
 610              	.LBE46:
 611              	 .loc 1 242 0
 612 000e 061C     	 mov r6,r0
 613              	.LBB57:
 614              	.LBB56:
 615              	.LBB48:
 616              	.LBB49:
 617              	 .loc 2 260 0
 618 0010 0124     	 mov r4,#1
 619              	.LBB50:
 620              	.LBB51:
  95:../Libraries/XMCLib/src/xmc1_flash.c **** }
 621              	 .loc 1 95 0
 622 0012 084D     	 ldr r5,.L59
 623 0014 8044     	 add r8,r8,r0
 624              	.LBE51:
 625              	.LBE50:
 626              	.LBE49:
 627              	.LBE48:
 174:../Libraries/XMCLib/src/xmc1_flash.c **** 
 628              	 .loc 1 174 0
 629 0016 7F00     	 lsl r7,r7,#1
 630              	.LVL55:
 631              	.L56:
 632 0018 301C     	 mov r0,r6
 633 001a 3B68     	 ldr r3,[r7]
 634 001c 9847     	 blx r3
 635              	.LVL56:
 636              	.L55:
 637              	.LBB55:
 638              	.LBB54:
 639              	.LBB53:
 640              	.LBB52:
  95:../Libraries/XMCLib/src/xmc1_flash.c **** }
 641              	 .loc 1 95 0
 642 001e 2B88     	 ldrh r3,[r5]
 643              	.LBE52:
 644              	.LBE53:
 645              	.LBE54:
 646              	.LBE55:
 176:../Libraries/XMCLib/src/xmc1_flash.c ****     {
 647              	 .loc 1 176 0
 648 0020 1C42     	 tst r4,r3
 649 0022 FCD1     	 bne .L55
 181:../Libraries/XMCLib/src/xmc1_flash.c **** 
 650              	 .loc 1 181 0
 651 0024 0136     	 add r6,r6,#1
 652              	.LVL57:
 653 0026 FF36     	 add r6,r6,#255
 654              	.LVL58:
 172:../Libraries/XMCLib/src/xmc1_flash.c ****   {
 655              	 .loc 1 172 0
 656 0028 4645     	 cmp r6,r8
 657 002a F5D1     	 bne .L56
 658              	.LBE56:
 659              	.LBE57:
 243:../Libraries/XMCLib/src/xmc1_flash.c ****   XMC_ASSERT("XMC_FLASH_EraseSector: Starting address not aligned to Sector",
 244:../Libraries/XMCLib/src/xmc1_flash.c ****                                                                  ((uint32_t)address & FLASH_SECTOR_
 245:../Libraries/XMCLib/src/xmc1_flash.c ****   XMC_FLASH_ErasePages(address, XMC_FLASH_PAGES_PER_SECTOR);
 246:../Libraries/XMCLib/src/xmc1_flash.c **** }
 660              	 .loc 1 246 0
 661              	 
 662              	.LVL59:
 663 002c 04BC     	 pop {r2}
 664 002e 9046     	 mov r8,r2
 665 0030 F0BD     	 pop {r4,r5,r6,r7,pc}
 666              	.L60:
 667 0032 C046     	 .align 2
 668              	.L59:
 669 0034 00000540 	 .word 1074069504
 670              	 .cfi_endproc
 671              	.LFE56:
 673              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 674              	 .align 2
 675              	 .global XMC_FLASH_ProgramPage
 676              	 .code 16
 677              	 .thumb_func
 679              	XMC_FLASH_ProgramPage:
 680              	.LFB57:
 247:../Libraries/XMCLib/src/xmc1_flash.c **** 
 248:../Libraries/XMCLib/src/xmc1_flash.c **** /* Program single page */
 249:../Libraries/XMCLib/src/xmc1_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 250:../Libraries/XMCLib/src/xmc1_flash.c **** {
 681              	 .loc 1 250 0
 682              	 .cfi_startproc
 683              	.LVL60:
 684 0000 08B5     	 push {r3,lr}
 685              	.LCFI9:
 686              	 .cfi_def_cfa_offset 8
 687              	 .cfi_offset 3,-8
 688              	 .cfi_offset 14,-4
 689              	.LBB58:
 690              	.LBB59:
 121:../Libraries/XMCLib/src/xmc1_flash.c **** }
 691              	 .loc 1 121 0
 692 0002 8223     	 mov r3,#130
 693              	.LBE59:
 694              	.LBE58:
 695              	 .loc 1 250 0
 696 0004 021C     	 mov r2,r0
 697              	.LVL61:
 698              	.LBB61:
 699              	.LBB60:
 121:../Libraries/XMCLib/src/xmc1_flash.c **** }
 700              	 .loc 1 121 0
 701 0006 5B00     	 lsl r3,r3,#1
 702 0008 081C     	 mov r0,r1
 703              	.LVL62:
 704 000a 1B68     	 ldr r3,[r3]
 705 000c 111C     	 mov r1,r2
 706              	.LVL63:
 707 000e 9847     	 blx r3
 708              	.LVL64:
 709              	.LBE60:
 710              	.LBE61:
 251:../Libraries/XMCLib/src/xmc1_flash.c ****   XMC_FLASH_ProgramVerifyPage(address, data);
 252:../Libraries/XMCLib/src/xmc1_flash.c **** }
 711              	 .loc 1 252 0
 712              	 
 713 0010 08BD     	 pop {r3,pc}
 714              	 .cfi_endproc
 715              	.LFE57:
 717 0012 C046     	 .text
 718              	.Letext0:
 719              	 .file 3 "c:\\users\\jutta.schuerba\\desktop\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 720              	 .file 4 "c:\\users\\jutta.schuerba\\desktop\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 721              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 722              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1000_RomFunctionTable.h"
 723              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/XMCLib/inc/xmc1_flash.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc1_flash.c
    {standard input}:18     .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:23     .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:43     .text.XMC_FLASH_ClearStatus:00000010 $d
    {standard input}:48     .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:53     .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:69     .text.XMC_FLASH_GetStatus:00000008 $d
    {standard input}:74     .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:79     .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:99     .text.XMC_FLASH_EnableEvent:0000000c $d
    {standard input}:104    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:109    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:127    .text.XMC_FLASH_DisableEvent:0000000c $d
    {standard input}:132    .text.XMC_FLASH_ErasePage:00000000 $t
    {standard input}:137    .text.XMC_FLASH_ErasePage:00000000 XMC_FLASH_ErasePage
    {standard input}:160    .text.XMC_FLASH_ProgramVerifyPage:00000000 $t
    {standard input}:165    .text.XMC_FLASH_ProgramVerifyPage:00000000 XMC_FLASH_ProgramVerifyPage
    {standard input}:195    .text.XMC_FLASH_WriteBlocks:00000000 $t
    {standard input}:200    .text.XMC_FLASH_WriteBlocks:00000000 XMC_FLASH_WriteBlocks
    {standard input}:318    .text.XMC_FLASH_WriteBlocks:00000060 $d
    {standard input}:323    .text.XMC_FLASH_ErasePages:00000000 $t
    {standard input}:328    .text.XMC_FLASH_ErasePages:00000000 XMC_FLASH_ErasePages
    {standard input}:419    .text.XMC_FLASH_ErasePages:0000003c $d
    {standard input}:424    .text.XMC_FLASH_VerifyBlocks:00000000 $t
    {standard input}:429    .text.XMC_FLASH_VerifyBlocks:00000000 XMC_FLASH_VerifyBlocks
    {standard input}:520    .text.XMC_FLASH_VerifyBlocks:00000048 $d
    {standard input}:526    .text.XMC_FLASH_ReadBlocks:00000000 $t
    {standard input}:531    .text.XMC_FLASH_ReadBlocks:00000000 XMC_FLASH_ReadBlocks
    {standard input}:579    .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:584    .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:669    .text.XMC_FLASH_EraseSector:00000034 $d
    {standard input}:674    .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:679    .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
