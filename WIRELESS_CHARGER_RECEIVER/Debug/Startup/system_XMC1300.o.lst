   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,2
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "system_XMC1300.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.SystemCoreSetup,"ax",%progbits
  18              	 .align 2
  19              	 .weak SystemCoreSetup
  20              	 .code 16
  21              	 .thumb_func
  23              	SystemCoreSetup:
  24              	.LFB35:
  25              	 .file 1 "../Startup/system_XMC1300.c"
   1:../Startup/system_XMC1300.c **** /**************************************************************************************************
   2:../Startup/system_XMC1300.c ****  * @file     system_XMC1300.c
   3:../Startup/system_XMC1300.c ****  * @brief    Device specific initialization for the XMC1300-Series according to CMSIS
   4:../Startup/system_XMC1300.c ****  * @version  V1.10
   5:../Startup/system_XMC1300.c ****  * @date     22 Aug 2016
   6:../Startup/system_XMC1300.c ****  *
   7:../Startup/system_XMC1300.c ****  * @cond
   8:../Startup/system_XMC1300.c ****  **************************************************************************************************
   9:../Startup/system_XMC1300.c ****  * Copyright (c) 2012-2016, Infineon Technologies AG
  10:../Startup/system_XMC1300.c ****  * All rights reserved.                        
  11:../Startup/system_XMC1300.c ****  *                                             
  12:../Startup/system_XMC1300.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Startup/system_XMC1300.c ****  * following conditions are met:   
  14:../Startup/system_XMC1300.c ****  *                                                                              
  15:../Startup/system_XMC1300.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Startup/system_XMC1300.c ****  * disclaimer.                        
  17:../Startup/system_XMC1300.c ****  * 
  18:../Startup/system_XMC1300.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Startup/system_XMC1300.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Startup/system_XMC1300.c ****  * 
  21:../Startup/system_XMC1300.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Startup/system_XMC1300.c ****  * products derived from this software without specific prior written permission.                  
  23:../Startup/system_XMC1300.c ****  *                                                                              
  24:../Startup/system_XMC1300.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Startup/system_XMC1300.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Startup/system_XMC1300.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Startup/system_XMC1300.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Startup/system_XMC1300.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Startup/system_XMC1300.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Startup/system_XMC1300.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Startup/system_XMC1300.c ****  *                                                                              
  32:../Startup/system_XMC1300.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Startup/system_XMC1300.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Startup/system_XMC1300.c ****  **************************************************************************************************
  35:../Startup/system_XMC1300.c ****  *
  36:../Startup/system_XMC1300.c ****  * *************************** Change history ********************************
  37:../Startup/system_XMC1300.c ****  * V1.2, 13 Dec 2012, PKB : Created change history table
  38:../Startup/system_XMC1300.c ****  * V1.3, 20 Dec 2012, PKB : Fixed SystemCoreClock computation
  39:../Startup/system_XMC1300.c ****  * V1.4, 02 Feb 2013, PKB : SCU_CLOCK -> SCU_CLK
  40:../Startup/system_XMC1300.c ****  * V1.5, 27 Nov 2013, DNE : Comments added in SystemInit function for MCLK support
  41:../Startup/system_XMC1300.c ****  * V1.6, 19 Feb 2014, JFT : Fixed SystemCoreClock when FDIV != 0 
  42:../Startup/system_XMC1300.c ****  * V1.7, 11 Dec 2014, JFT : SystemCoreClockSetup, SystemCoreSetup as weak functions
  43:../Startup/system_XMC1300.c ****  * V1.8, 03 Sep 2015, JFT : Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table (s
  44:../Startup/system_XMC1300.c ****  *                          MCLK = 32MHz, PCLK = 64MHz
  45:../Startup/system_XMC1300.c ****  * V1.9, 31 Mar 2016, JFT : Fix flash wait states to 1 cycle
  46:../Startup/system_XMC1300.c ****  * V1.10,22 Aug 2016, JFT : Update coding for fixed flash wait states using new macros in device he
  47:../Startup/system_XMC1300.c ****  *                          Add macro guard USE_DYNAMIC_FLASH_WS. If defined in compiler options, a
  48:../Startup/system_XMC1300.c ****  *                          are used for read accesses to the flash memory. Otherwise a fixed 1 WS 
  49:../Startup/system_XMC1300.c ****  * 
  50:../Startup/system_XMC1300.c ****  * @endcond 
  51:../Startup/system_XMC1300.c ****  */
  52:../Startup/system_XMC1300.c **** 
  53:../Startup/system_XMC1300.c **** /*******************************************************************************
  54:../Startup/system_XMC1300.c ****  * HEADER FILES
  55:../Startup/system_XMC1300.c ****  *******************************************************************************/
  56:../Startup/system_XMC1300.c **** 
  57:../Startup/system_XMC1300.c **** #include <XMC1300.h>
  58:../Startup/system_XMC1300.c **** #include "system_XMC1300.h"
  59:../Startup/system_XMC1300.c **** 
  60:../Startup/system_XMC1300.c **** /*******************************************************************************
  61:../Startup/system_XMC1300.c ****  * MACROS
  62:../Startup/system_XMC1300.c ****  *******************************************************************************/
  63:../Startup/system_XMC1300.c **** 
  64:../Startup/system_XMC1300.c **** /* Define WEAK attribute */
  65:../Startup/system_XMC1300.c **** #if !defined(__WEAK)
  66:../Startup/system_XMC1300.c **** #if defined ( __CC_ARM )
  67:../Startup/system_XMC1300.c **** #define __WEAK __attribute__ ((weak))
  68:../Startup/system_XMC1300.c **** #elif defined ( __ICCARM__ )
  69:../Startup/system_XMC1300.c **** #define __WEAK __weak
  70:../Startup/system_XMC1300.c **** #elif defined ( __GNUC__ )
  71:../Startup/system_XMC1300.c **** #define __WEAK __attribute__ ((weak))
  72:../Startup/system_XMC1300.c **** #elif defined ( __TASKING__ )
  73:../Startup/system_XMC1300.c **** #define __WEAK __attribute__ ((weak))
  74:../Startup/system_XMC1300.c **** #endif
  75:../Startup/system_XMC1300.c **** #endif
  76:../Startup/system_XMC1300.c **** 
  77:../Startup/system_XMC1300.c **** #define DCO1_FREQUENCY (64000000U)
  78:../Startup/system_XMC1300.c **** 
  79:../Startup/system_XMC1300.c **** /*******************************************************************************
  80:../Startup/system_XMC1300.c ****  * GLOBAL VARIABLES
  81:../Startup/system_XMC1300.c ****  *******************************************************************************/
  82:../Startup/system_XMC1300.c **** 
  83:../Startup/system_XMC1300.c **** #if defined ( __CC_ARM )
  84:../Startup/system_XMC1300.c **** uint32_t SystemCoreClock __attribute__((at(0x20003FFC)));
  85:../Startup/system_XMC1300.c **** #elif defined ( __ICCARM__ )
  86:../Startup/system_XMC1300.c **** __no_init uint32_t SystemCoreClock;
  87:../Startup/system_XMC1300.c **** #elif defined ( __GNUC__ )
  88:../Startup/system_XMC1300.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
  89:../Startup/system_XMC1300.c **** #elif defined ( __TASKING__ )
  90:../Startup/system_XMC1300.c **** uint32_t SystemCoreClock __at( 0x20003FFC );
  91:../Startup/system_XMC1300.c **** #endif
  92:../Startup/system_XMC1300.c **** 
  93:../Startup/system_XMC1300.c **** /*******************************************************************************
  94:../Startup/system_XMC1300.c ****  * API IMPLEMENTATION
  95:../Startup/system_XMC1300.c ****  *******************************************************************************/
  96:../Startup/system_XMC1300.c **** 
  97:../Startup/system_XMC1300.c **** __WEAK void SystemInit(void)
  98:../Startup/system_XMC1300.c **** {    
  99:../Startup/system_XMC1300.c ****   SystemCoreSetup();
 100:../Startup/system_XMC1300.c ****   SystemCoreClockSetup();
 101:../Startup/system_XMC1300.c **** }
 102:../Startup/system_XMC1300.c **** 
 103:../Startup/system_XMC1300.c **** __WEAK void SystemCoreSetup(void)
 104:../Startup/system_XMC1300.c **** {
  26              	 .loc 1 104 0
  27              	 .cfi_startproc
 105:../Startup/system_XMC1300.c **** #ifndef USE_DYNAMIC_FLASH_WS
 106:../Startup/system_XMC1300.c ****   /* Fix flash wait states to 1 cycle (see DS Addendum) */
 107:../Startup/system_XMC1300.c ****   NVM->NVMCONF |= NVM_NVMCONF_WS_Msk;
  28              	 .loc 1 107 0
  29 0000 8021     	 mov r1,#128
  30 0002 064B     	 ldr r3,.L2
  31 0004 4901     	 lsl r1,r1,#5
  32 0006 1A89     	 ldrh r2,[r3,#8]
 108:../Startup/system_XMC1300.c ****   NVM->CONFIG1 |= NVM_CONFIG1_FIXWS_Msk;
  33              	 .loc 1 108 0
  34 0008 8020     	 mov r0,#128
 107:../Startup/system_XMC1300.c ****   NVM->CONFIG1 |= NVM_CONFIG1_FIXWS_Msk;
  35              	 .loc 1 107 0
  36 000a 0A43     	 orr r2,r1
  37              	 .loc 1 108 0
  38 000c 4821     	 mov r1,#72
 107:../Startup/system_XMC1300.c ****   NVM->CONFIG1 |= NVM_CONFIG1_FIXWS_Msk;
  39              	 .loc 1 107 0
  40 000e 1A81     	 strh r2,[r3,#8]
  41              	 .loc 1 108 0
  42 0010 5A5A     	 ldrh r2,[r3,r1]
  43 0012 0001     	 lsl r0,r0,#4
  44 0014 0243     	 orr r2,r0
  45 0016 5A52     	 strh r2,[r3,r1]
 109:../Startup/system_XMC1300.c **** #endif
 110:../Startup/system_XMC1300.c **** }
  46              	 .loc 1 110 0
  47              	 
  48 0018 7047     	 bx lr
  49              	.L3:
  50 001a C046     	 .align 2
  51              	.L2:
  52 001c 00000540 	 .word 1074069504
  53              	 .cfi_endproc
  54              	.LFE35:
  56              	 .global __aeabi_uidiv
  57              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
  58              	 .align 2
  59              	 .weak SystemCoreClockUpdate
  60              	 .code 16
  61              	 .thumb_func
  63              	SystemCoreClockUpdate:
  64              	.LFB37:
 111:../Startup/system_XMC1300.c **** 
 112:../Startup/system_XMC1300.c **** __WEAK void SystemCoreClockSetup(void)
 113:../Startup/system_XMC1300.c **** {
 114:../Startup/system_XMC1300.c ****   /* Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table */
 115:../Startup/system_XMC1300.c ****   /* MCLK = 32MHz, PCLK = 64MHz */
 116:../Startup/system_XMC1300.c ****   
 117:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C0UL; /* disable bit protection */
 118:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 119:../Startup/system_XMC1300.c ****   while((SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk));
 120:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 121:../Startup/system_XMC1300.c **** 
 122:../Startup/system_XMC1300.c ****   SystemCoreClockUpdate();
 123:../Startup/system_XMC1300.c **** }
 124:../Startup/system_XMC1300.c **** 
 125:../Startup/system_XMC1300.c **** __WEAK void SystemCoreClockUpdate(void)
 126:../Startup/system_XMC1300.c **** {
  65              	 .loc 1 126 0
  66              	 .cfi_startproc
 127:../Startup/system_XMC1300.c ****   static uint32_t IDIV, FDIV;
 128:../Startup/system_XMC1300.c **** 
 129:../Startup/system_XMC1300.c ****   IDIV = ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_IDIV_Msk) >> SCU_CLK_CLKCR_IDIV_Pos;
  67              	 .loc 1 129 0
  68 0000 0C4A     	 ldr r2,.L9
 126:../Startup/system_XMC1300.c ****   static uint32_t IDIV, FDIV;
  69              	 .loc 1 126 0
  70 0002 08B5     	 push {r3,lr}
  71              	.LCFI0:
  72              	 .cfi_def_cfa_offset 8
  73              	 .cfi_offset 3,-8
  74              	 .cfi_offset 14,-4
  75              	 .loc 1 129 0
  76 0004 1368     	 ldr r3,[r2]
  77 0006 0C49     	 ldr r1,.L9+4
  78 0008 1B04     	 lsl r3,r3,#16
  79 000a 1B0E     	 lsr r3,r3,#24
  80 000c 0B60     	 str r3,[r1]
 130:../Startup/system_XMC1300.c ****   FDIV = ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_FDIV_Msk) >> SCU_CLK_CLKCR_FDIV_Pos;
  81              	 .loc 1 130 0
  82 000e FF21     	 mov r1,#255
  83 0010 1268     	 ldr r2,[r2]
  84 0012 1140     	 and r1,r2
  85 0014 094A     	 ldr r2,.L9+8
  86 0016 1160     	 str r1,[r2]
 131:../Startup/system_XMC1300.c ****   
 132:../Startup/system_XMC1300.c ****   if (IDIV != 0)
  87              	 .loc 1 132 0
  88 0018 002B     	 cmp r3,#0
  89 001a 03D1     	 bne .L8
 133:../Startup/system_XMC1300.c ****   {
 134:../Startup/system_XMC1300.c ****     /* Fractional divider is enabled and used */
 135:../Startup/system_XMC1300.c ****     SystemCoreClock = ((DCO1_FREQUENCY << 6U) / ((IDIV << 8) + FDIV)) << 1U;
 136:../Startup/system_XMC1300.c ****   }
 137:../Startup/system_XMC1300.c ****   else
 138:../Startup/system_XMC1300.c ****   {
 139:../Startup/system_XMC1300.c ****     /* Fractional divider bypassed. Simply divide DCO_DCLK by 2 */
 140:../Startup/system_XMC1300.c ****     SystemCoreClock = DCO1_FREQUENCY >> 1U;
  90              	 .loc 1 140 0
  91 001c 0848     	 ldr r0,.L9+12
  92              	.L5:
  93 001e 094B     	 ldr r3,.L9+16
 141:../Startup/system_XMC1300.c ****   }
 142:../Startup/system_XMC1300.c **** }
  94              	 .loc 1 142 0
  95              	 
  96 0020 1860     	 str r0,[r3]
  97 0022 08BD     	 pop {r3,pc}
  98              	.L8:
 135:../Startup/system_XMC1300.c ****   }
  99              	 .loc 1 135 0
 100 0024 1B02     	 lsl r3,r3,#8
 101 0026 5918     	 add r1,r3,r1
 102 0028 0748     	 ldr r0,.L9+20
 103 002a FFF7FEFF 	 bl __aeabi_uidiv
 104              	.LVL0:
 105 002e 4000     	 lsl r0,r0,#1
 106 0030 F5E7     	 b .L5
 107              	.L10:
 108 0032 C046     	 .align 2
 109              	.L9:
 110 0034 00030140 	 .word 1073808128
 111 0038 00000000 	 .word .LANCHOR0
 112 003c 00000000 	 .word .LANCHOR1
 113 0040 0048E801 	 .word 32000000
 114 0044 00000000 	 .word .LANCHOR2
 115 0048 000024F4 	 .word -198967296
 116              	 .cfi_endproc
 117              	.LFE37:
 119              	 .section .text.SystemCoreClockSetup,"ax",%progbits
 120              	 .align 2
 121              	 .weak SystemCoreClockSetup
 122              	 .code 16
 123              	 .thumb_func
 125              	SystemCoreClockSetup:
 126              	.LFB36:
 113:../Startup/system_XMC1300.c ****   /* Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table */
 127              	 .loc 1 113 0
 128              	 .cfi_startproc
 117:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 129              	 .loc 1 117 0
 130 0000 C022     	 mov r2,#192
 119:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 131              	 .loc 1 119 0
 132 0002 8021     	 mov r1,#128
 113:../Startup/system_XMC1300.c ****   /* Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table */
 133              	 .loc 1 113 0
 134 0004 08B5     	 push {r3,lr}
 135              	.LCFI1:
 136              	 .cfi_def_cfa_offset 8
 137              	 .cfi_offset 3,-8
 138              	 .cfi_offset 14,-4
 117:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 139              	 .loc 1 117 0
 140 0006 074B     	 ldr r3,.L14
 119:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 141              	 .loc 1 119 0
 142 0008 C905     	 lsl r1,r1,#23
 117:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 143              	 .loc 1 117 0
 144 000a 5A62     	 str r2,[r3,#36]
 118:../Startup/system_XMC1300.c ****   while((SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk));
 145              	 .loc 1 118 0
 146 000c 064A     	 ldr r2,.L14+4
 147 000e 074B     	 ldr r3,.L14+8
 148 0010 1360     	 str r3,[r2]
 149              	.L12:
 119:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 150              	 .loc 1 119 0 discriminator 1
 151 0012 1368     	 ldr r3,[r2]
 152 0014 0B42     	 tst r3,r1
 153 0016 FCD1     	 bne .L12
 120:../Startup/system_XMC1300.c **** 
 154              	 .loc 1 120 0
 155 0018 C322     	 mov r2,#195
 156 001a 024B     	 ldr r3,.L14
 123:../Startup/system_XMC1300.c **** 
 157              	 .loc 1 123 0
 158              	 
 120:../Startup/system_XMC1300.c **** 
 159              	 .loc 1 120 0
 160 001c 5A62     	 str r2,[r3,#36]
 122:../Startup/system_XMC1300.c **** }
 161              	 .loc 1 122 0
 162 001e FFF7FEFF 	 bl SystemCoreClockUpdate
 163              	.LVL1:
 123:../Startup/system_XMC1300.c **** 
 164              	 .loc 1 123 0
 165 0022 08BD     	 pop {r3,pc}
 166              	.L15:
 167              	 .align 2
 168              	.L14:
 169 0024 00000140 	 .word 1073807360
 170 0028 00030140 	 .word 1073808128
 171 002c 0001F13F 	 .word 1072759040
 172              	 .cfi_endproc
 173              	.LFE36:
 175              	 .section .text.SystemInit,"ax",%progbits
 176              	 .align 2
 177              	 .weak SystemInit
 178              	 .code 16
 179              	 .thumb_func
 181              	SystemInit:
 182              	.LFB34:
  98:../Startup/system_XMC1300.c ****   SystemCoreSetup();
 183              	 .loc 1 98 0
 184              	 .cfi_startproc
 185 0000 08B5     	 push {r3,lr}
 186              	.LCFI2:
 187              	 .cfi_def_cfa_offset 8
 188              	 .cfi_offset 3,-8
 189              	 .cfi_offset 14,-4
  99:../Startup/system_XMC1300.c ****   SystemCoreClockSetup();
 190              	 .loc 1 99 0
 191 0002 FFF7FEFF 	 bl SystemCoreSetup
 192              	.LVL2:
 101:../Startup/system_XMC1300.c **** 
 193              	 .loc 1 101 0
 194              	 
 100:../Startup/system_XMC1300.c **** }
 195              	 .loc 1 100 0
 196 0006 FFF7FEFF 	 bl SystemCoreClockSetup
 197              	.LVL3:
 101:../Startup/system_XMC1300.c **** 
 198              	 .loc 1 101 0
 199 000a 08BD     	 pop {r3,pc}
 200              	 .cfi_endproc
 201              	.LFE34:
 203              	 .global SystemCoreClock
 204              	 .section .bss.IDIV.4933,"aw",%nobits
 205              	 .align 2
 206              	 .set .LANCHOR0,.+0
 209              	IDIV.4933:
 210 0000 00000000 	 .space 4
 211              	 .section .no_init,"aw",%progbits
 212              	 .align 2
 213              	 .set .LANCHOR2,.+0
 216              	SystemCoreClock:
 217 0000 00000000 	 .space 4
 218              	 .section .bss.FDIV.4934,"aw",%nobits
 219              	 .align 2
 220              	 .set .LANCHOR1,.+0
 223              	FDIV.4934:
 224 0000 00000000 	 .space 4
 225              	 .text
 226              	.Letext0:
 227              	 .file 2 "c:\\users\\jutta.schuerba\\desktop\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 228              	 .file 3 "c:\\users\\jutta.schuerba\\desktop\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 229              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/WIRELESS_CHARGER_RECVEIVER_delivered/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC1300.c
    {standard input}:18     .text.SystemCoreSetup:00000000 $t
    {standard input}:23     .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:52     .text.SystemCoreSetup:0000001c $d
    {standard input}:58     .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:63     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:110    .text.SystemCoreClockUpdate:00000034 $d
    {standard input}:120    .text.SystemCoreClockSetup:00000000 $t
    {standard input}:125    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:169    .text.SystemCoreClockSetup:00000024 $d
    {standard input}:176    .text.SystemInit:00000000 $t
    {standard input}:181    .text.SystemInit:00000000 SystemInit
    {standard input}:216    .no_init:00000000 SystemCoreClock
    {standard input}:205    .bss.IDIV.4933:00000000 $d
    {standard input}:209    .bss.IDIV.4933:00000000 IDIV.4933
    {standard input}:212    .no_init:00000000 $d
    {standard input}:219    .bss.FDIV.4934:00000000 $d
    {standard input}:223    .bss.FDIV.4934:00000000 FDIV.4934
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
