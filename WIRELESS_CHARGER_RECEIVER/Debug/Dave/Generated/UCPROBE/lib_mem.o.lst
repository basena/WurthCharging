   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,2
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "lib_mem.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.Mem_Init,"ax",%progbits
  18              	 .align 2
  19              	 .global Mem_Init
  20              	 .code 16
  21              	 .thumb_func
  23              	Mem_Init:
  24              	.LFB0:
  25              	 .file 1 "../Dave/Generated/UCPROBE/lib_mem.c"
   1:../Dave/Generated/UCPROBE/lib_mem.c **** /*
   2:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
   3:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                uC/LIB
   4:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        CUSTOM LIBRARY MODULES
   5:../Dave/Generated/UCPROBE/lib_mem.c **** *
   6:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (c) Copyright 2004-2014; Micrium, Inc.; Weston, FL
   7:../Dave/Generated/UCPROBE/lib_mem.c **** *
   8:../Dave/Generated/UCPROBE/lib_mem.c **** *                  All rights reserved.  Protected by international copyright laws.
   9:../Dave/Generated/UCPROBE/lib_mem.c **** *
  10:../Dave/Generated/UCPROBE/lib_mem.c **** *                  uC/LIB is provided in source form to registered licensees ONLY.  It is
  11:../Dave/Generated/UCPROBE/lib_mem.c **** *                  illegal to distribute this source code to any third party unless you receive
  12:../Dave/Generated/UCPROBE/lib_mem.c **** *                  written permission by an authorized Micrium representative.  Knowledge of
  13:../Dave/Generated/UCPROBE/lib_mem.c **** *                  the source code may NOT be used to develop a similar product.
  14:../Dave/Generated/UCPROBE/lib_mem.c **** *
  15:../Dave/Generated/UCPROBE/lib_mem.c **** *                  Please help us continue to provide the Embedded community with the finest
  16:../Dave/Generated/UCPROBE/lib_mem.c **** *                  software available.  Your honesty is greatly appreciated.
  17:../Dave/Generated/UCPROBE/lib_mem.c **** *
  18:../Dave/Generated/UCPROBE/lib_mem.c **** *                  You can find our product's user manual, API reference, release notes and
  19:../Dave/Generated/UCPROBE/lib_mem.c **** *                  more information at: https://doc.micrium.com
  20:../Dave/Generated/UCPROBE/lib_mem.c **** *
  21:../Dave/Generated/UCPROBE/lib_mem.c **** *                  You can contact us at: http://www.micrium.com
  22:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  23:../Dave/Generated/UCPROBE/lib_mem.c **** */
  24:../Dave/Generated/UCPROBE/lib_mem.c **** 
  25:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  26:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  27:../Dave/Generated/UCPROBE/lib_mem.c **** *
  28:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     STANDARD MEMORY OPERATIONS
  29:../Dave/Generated/UCPROBE/lib_mem.c **** *
  30:../Dave/Generated/UCPROBE/lib_mem.c **** * Filename      : lib_mem.c
  31:../Dave/Generated/UCPROBE/lib_mem.c **** * Version       : V1.38.01
  32:../Dave/Generated/UCPROBE/lib_mem.c **** * Programmer(s) : ITJ
  33:../Dave/Generated/UCPROBE/lib_mem.c **** *                 FGK
  34:../Dave/Generated/UCPROBE/lib_mem.c **** *                 JFD
  35:../Dave/Generated/UCPROBE/lib_mem.c **** *                 FBJ
  36:../Dave/Generated/UCPROBE/lib_mem.c **** *                 EJ
  37:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  38:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  39:../Dave/Generated/UCPROBE/lib_mem.c **** *
  40:../Dave/Generated/UCPROBE/lib_mem.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  41:../Dave/Generated/UCPROBE/lib_mem.c **** *
  42:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  43:../Dave/Generated/UCPROBE/lib_mem.c **** *
  44:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  45:../Dave/Generated/UCPROBE/lib_mem.c **** *
  46:../Dave/Generated/UCPROBE/lib_mem.c **** *                               where
  47:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <Custom Library Directory>      directory path for custom l
  48:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <cpu>                           directory name for specific
  49:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <compiler>                      directory name for specific
  50:../Dave/Generated/UCPROBE/lib_mem.c **** *
  51:../Dave/Generated/UCPROBE/lib_mem.c **** *                     (b) Product-specific library functions are implemented in individual products
  52:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  53:../Dave/Generated/UCPROBE/lib_mem.c **** */
  54:../Dave/Generated/UCPROBE/lib_mem.c **** 
  55:../Dave/Generated/UCPROBE/lib_mem.c **** 
  56:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  57:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  58:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            INCLUDE FILES
  59:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  60:../Dave/Generated/UCPROBE/lib_mem.c **** */
  61:../Dave/Generated/UCPROBE/lib_mem.c **** 
  62:../Dave/Generated/UCPROBE/lib_mem.c **** #define    MICRIUM_SOURCE
  63:../Dave/Generated/UCPROBE/lib_mem.c **** #define    LIB_MEM_MODULE
  64:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_mem.h"
  65:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_math.h"
  66:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_str.h"
  67:../Dave/Generated/UCPROBE/lib_mem.c **** 
  68:../Dave/Generated/UCPROBE/lib_mem.c **** 
  69:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  70:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  71:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            LOCAL DEFINES
  72:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  73:../Dave/Generated/UCPROBE/lib_mem.c **** */
  74:../Dave/Generated/UCPROBE/lib_mem.c **** 
  75:../Dave/Generated/UCPROBE/lib_mem.c **** 
  76:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  77:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  78:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           LOCAL CONSTANTS
  79:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  80:../Dave/Generated/UCPROBE/lib_mem.c **** */
  81:../Dave/Generated/UCPROBE/lib_mem.c **** 
  82:../Dave/Generated/UCPROBE/lib_mem.c **** 
  83:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  84:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  85:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          LOCAL DATA TYPES
  86:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  87:../Dave/Generated/UCPROBE/lib_mem.c **** */
  88:../Dave/Generated/UCPROBE/lib_mem.c **** 
  89:../Dave/Generated/UCPROBE/lib_mem.c **** 
  90:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  91:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  92:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            LOCAL TABLES
  93:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  94:../Dave/Generated/UCPROBE/lib_mem.c **** */
  95:../Dave/Generated/UCPROBE/lib_mem.c **** 
  96:../Dave/Generated/UCPROBE/lib_mem.c **** 
  97:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  98:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  99:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       LOCAL GLOBAL VARIABLES
 100:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 101:../Dave/Generated/UCPROBE/lib_mem.c **** */
 102:../Dave/Generated/UCPROBE/lib_mem.c **** 
 103:../Dave/Generated/UCPROBE/lib_mem.c **** 
 104:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 105:../Dave/Generated/UCPROBE/lib_mem.c **** #ifndef  LIB_MEM_CFG_HEAP_BASE_ADDR
 106:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_INT08U   Mem_Heap[LIB_MEM_CFG_HEAP_SIZE];                   /* Mem heap.                       
 107:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 108:../Dave/Generated/UCPROBE/lib_mem.c **** 
 109:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_SEG      Mem_SegHeap;                                       /* Heap mem seg.                   
 110:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 111:../Dave/Generated/UCPROBE/lib_mem.c **** 
 112:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_SEG     *Mem_SegHeadPtr;                                    /* Ptr to head of seg list.        
 113:../Dave/Generated/UCPROBE/lib_mem.c **** 
 114:../Dave/Generated/UCPROBE/lib_mem.c **** 
 115:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 116:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 117:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      LOCAL FUNCTION PROTOTYPES
 118:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 119:../Dave/Generated/UCPROBE/lib_mem.c **** */
 120:../Dave/Generated/UCPROBE/lib_mem.c **** 
 121:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_SegCreateCritical    (const  CPU_CHAR      *p_name,
 122:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 123:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_ADDR       seg_base_addr,
 124:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 125:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size);
 126:../Dave/Generated/UCPROBE/lib_mem.c **** 
 127:../Dave/Generated/UCPROBE/lib_mem.c **** static  MEM_SEG      *Mem_SegOverlapChkCritical(       CPU_ADDR       seg_base_addr,
 128:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 129:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 130:../Dave/Generated/UCPROBE/lib_mem.c **** 
 131:../Dave/Generated/UCPROBE/lib_mem.c **** static  void         *Mem_SegAllocInternal     (const  CPU_CHAR      *p_name,
 132:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 133:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 134:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     align,
 135:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 136:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 137:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 138:../Dave/Generated/UCPROBE/lib_mem.c **** 
 139:../Dave/Generated/UCPROBE/lib_mem.c **** static  void         *Mem_SegAllocExtCritical  (       MEM_SEG       *p_seg,
 140:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 141:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     align,
 142:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 143:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 144:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 145:../Dave/Generated/UCPROBE/lib_mem.c **** 
 146:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_DynPoolCreateInternal(const  CPU_CHAR      *p_name,
 147:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_DYN_POOL  *p_pool,
 148:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 149:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_size,
 150:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_align,
 151:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_padding_align,
 152:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_init,
 153:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_max,
 154:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 155:../Dave/Generated/UCPROBE/lib_mem.c **** 
 156:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
 157:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_SegAllocTrackCritical(const  CPU_CHAR      *p_name,
 158:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 159:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 160:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 161:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 162:../Dave/Generated/UCPROBE/lib_mem.c **** 
 163:../Dave/Generated/UCPROBE/lib_mem.c **** #if ((LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED) && \
 164:../Dave/Generated/UCPROBE/lib_mem.c ****      (LIB_MEM_CFG_HEAP_SIZE      >  0u))
 165:../Dave/Generated/UCPROBE/lib_mem.c **** static  CPU_BOOLEAN   Mem_PoolBlkIsValidAddr   (       MEM_POOL      *p_pool,
 166:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        void          *p_mem);
 167:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 168:../Dave/Generated/UCPROBE/lib_mem.c **** 
 169:../Dave/Generated/UCPROBE/lib_mem.c **** 
 170:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 171:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 172:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     LOCAL CONFIGURATION ERRORS
 173:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 174:../Dave/Generated/UCPROBE/lib_mem.c **** */
 175:../Dave/Generated/UCPROBE/lib_mem.c **** 
 176:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 177:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 178:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 179:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            GLOBAL FUNCTIONS
 180:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 181:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 182:../Dave/Generated/UCPROBE/lib_mem.c **** */
 183:../Dave/Generated/UCPROBE/lib_mem.c **** 
 184:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 185:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 186:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Init()
 187:../Dave/Generated/UCPROBE/lib_mem.c **** *
 188:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : (1) Initializes Memory Management Module :
 189:../Dave/Generated/UCPROBE/lib_mem.c **** *
 190:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) Initialize heap memory pool
 191:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Initialize      memory pool table
 192:../Dave/Generated/UCPROBE/lib_mem.c **** *
 193:../Dave/Generated/UCPROBE/lib_mem.c **** *
 194:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : none.
 195:../Dave/Generated/UCPROBE/lib_mem.c **** *
 196:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 197:../Dave/Generated/UCPROBE/lib_mem.c **** *
 198:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 199:../Dave/Generated/UCPROBE/lib_mem.c **** *
 200:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (2) Mem_Init() MUST be called ... :
 201:../Dave/Generated/UCPROBE/lib_mem.c **** *
 202:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) ONLY ONCE from a product's application; ...
 203:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) BEFORE product's application calls any memory library module function(s)
 204:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 205:../Dave/Generated/UCPROBE/lib_mem.c **** */
 206:../Dave/Generated/UCPROBE/lib_mem.c **** 
 207:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Init (void)
 208:../Dave/Generated/UCPROBE/lib_mem.c **** {
  26              	 .loc 1 208 0
  27              	 .cfi_startproc
  28 0000 38B5     	 push {r3,r4,r5,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 16
  31              	 .cfi_offset 3,-16
  32              	 .cfi_offset 4,-12
  33              	 .cfi_offset 5,-8
  34              	 .cfi_offset 14,-4
 209:../Dave/Generated/UCPROBE/lib_mem.c **** 
 210:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT SEG LIST
 211:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegHeadPtr = DEF_NULL;
  35              	 .loc 1 211 0
  36 0002 0023     	 mov r3,#0
  37 0004 094C     	 ldr r4,.L2
  38              	.LBB14:
 212:../Dave/Generated/UCPROBE/lib_mem.c **** 
 213:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 214:../Dave/Generated/UCPROBE/lib_mem.c ****     {
 215:../Dave/Generated/UCPROBE/lib_mem.c ****         LIB_ERR   err;
 216:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_ADDR  heap_base_addr;
 217:../Dave/Generated/UCPROBE/lib_mem.c **** 
 218:../Dave/Generated/UCPROBE/lib_mem.c **** 
 219:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT HEAP SEG
 220:../Dave/Generated/UCPROBE/lib_mem.c **** #ifdef  LIB_MEM_CFG_HEAP_BASE_ADDR
 221:../Dave/Generated/UCPROBE/lib_mem.c ****         heap_base_addr = LIB_MEM_CFG_HEAP_BASE_ADDR;
 222:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 223:../Dave/Generated/UCPROBE/lib_mem.c ****         heap_base_addr = (CPU_ADDR)&Mem_Heap[0u];
  39              	 .loc 1 223 0
  40 0006 0A4D     	 ldr r5,.L2+4
  41              	.LVL0:
  42              	.LBE14:
 211:../Dave/Generated/UCPROBE/lib_mem.c **** 
  43              	 .loc 1 211 0
  44 0008 2360     	 str r3,[r4]
  45              	.LBB21:
  46              	.LBB15:
  47              	.LBB16:
 224:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 225:../Dave/Generated/UCPROBE/lib_mem.c **** 
 226:../Dave/Generated/UCPROBE/lib_mem.c ****         Mem_SegCreate("Heap",
 227:../Dave/Generated/UCPROBE/lib_mem.c ****                       &Mem_SegHeap,                             /* Create heap seg.                
 228:../Dave/Generated/UCPROBE/lib_mem.c ****                        heap_base_addr,
 229:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_MEM_CFG_HEAP_SIZE,
 230:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_MEM_PADDING_ALIGN_NONE,
 231:../Dave/Generated/UCPROBE/lib_mem.c ****                       &err);
 232:../Dave/Generated/UCPROBE/lib_mem.c ****         if (err != LIB_MEM_ERR_NONE) {
 233:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_SW_EXCEPTION(;);
 234:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 235:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 236:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 237:../Dave/Generated/UCPROBE/lib_mem.c **** }
 238:../Dave/Generated/UCPROBE/lib_mem.c **** 
 239:../Dave/Generated/UCPROBE/lib_mem.c **** 
 240:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 241:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 242:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Clr()
 243:../Dave/Generated/UCPROBE/lib_mem.c **** *
 244:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears data buffer (see Note #2).
 245:../Dave/Generated/UCPROBE/lib_mem.c **** *
 246:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to clear.
 247:../Dave/Generated/UCPROBE/lib_mem.c **** *
 248:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to clear (see Note #1).
 249:../Dave/Generated/UCPROBE/lib_mem.c **** *
 250:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 251:../Dave/Generated/UCPROBE/lib_mem.c **** *
 252:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 253:../Dave/Generated/UCPROBE/lib_mem.c **** *
 254:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null clears allowed (i.e. zero-length clears).
 255:../Dave/Generated/UCPROBE/lib_mem.c **** *
 256:../Dave/Generated/UCPROBE/lib_mem.c **** *                   See also 'Mem_Set()  Note #1'.
 257:../Dave/Generated/UCPROBE/lib_mem.c **** *
 258:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Clear data by setting each data octet to 0.
 259:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 260:../Dave/Generated/UCPROBE/lib_mem.c **** */
 261:../Dave/Generated/UCPROBE/lib_mem.c **** 
 262:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Clr (void        *pmem,
 263:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_SIZE_T   size)
 264:../Dave/Generated/UCPROBE/lib_mem.c **** {
 265:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_Set(pmem,
 266:../Dave/Generated/UCPROBE/lib_mem.c ****             0u,                                                 /* See Note #2.                    
 267:../Dave/Generated/UCPROBE/lib_mem.c ****             size);
 268:../Dave/Generated/UCPROBE/lib_mem.c **** }
 269:../Dave/Generated/UCPROBE/lib_mem.c **** 
 270:../Dave/Generated/UCPROBE/lib_mem.c **** 
 271:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 272:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 273:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Set()
 274:../Dave/Generated/UCPROBE/lib_mem.c **** *
 275:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Fills data buffer with specified data octet.
 276:../Dave/Generated/UCPROBE/lib_mem.c **** *
 277:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to fill with specified data octet.
 278:../Dave/Generated/UCPROBE/lib_mem.c **** *
 279:../Dave/Generated/UCPROBE/lib_mem.c **** *               data_val    Data fill octet value.
 280:../Dave/Generated/UCPROBE/lib_mem.c **** *
 281:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to fill (see Note #1).
 282:../Dave/Generated/UCPROBE/lib_mem.c **** *
 283:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 284:../Dave/Generated/UCPROBE/lib_mem.c **** *
 285:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 286:../Dave/Generated/UCPROBE/lib_mem.c **** *
 287:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null sets allowed (i.e. zero-length sets).
 288:../Dave/Generated/UCPROBE/lib_mem.c **** *
 289:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) For best CPU performance, optimized to fill data buffer using 'CPU_ALIGN'-sized
 290:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 291:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 292:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 293:../Dave/Generated/UCPROBE/lib_mem.c **** *
 294:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 295:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 296:../Dave/Generated/UCPROBE/lib_mem.c **** *
 297:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 298:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 299:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 300:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 301:../Dave/Generated/UCPROBE/lib_mem.c **** */
 302:../Dave/Generated/UCPROBE/lib_mem.c **** 
 303:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Set (void        *pmem,
 304:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_INT08U   data_val,
 305:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_SIZE_T   size)
 306:../Dave/Generated/UCPROBE/lib_mem.c **** {
 307:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   size_rem;
 308:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ALIGN    data_align;
 309:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ALIGN   *pmem_align;
 310:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *pmem_08;
 311:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_DATA     mem_align_mod;
 312:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_DATA     i;
 313:../Dave/Generated/UCPROBE/lib_mem.c **** 
 314:../Dave/Generated/UCPROBE/lib_mem.c **** 
 315:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 316:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 317:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 318:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 319:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pmem == (void *)0) {
 320:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 321:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 322:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 323:../Dave/Generated/UCPROBE/lib_mem.c **** 
 324:../Dave/Generated/UCPROBE/lib_mem.c **** 
 325:../Dave/Generated/UCPROBE/lib_mem.c ****     data_align = 0u;
 326:../Dave/Generated/UCPROBE/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 327:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 328:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 329:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 330:../Dave/Generated/UCPROBE/lib_mem.c **** 
 331:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem      =  size;
 332:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod = (CPU_INT08U)((CPU_ADDR)pmem % sizeof(CPU_ALIGN));   /* See Note #3.            
 333:../Dave/Generated/UCPROBE/lib_mem.c **** 
 334:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem;
 335:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_align_mod != 0u) {                                  /* If leading octets avail,        
 336:../Dave/Generated/UCPROBE/lib_mem.c ****         i = mem_align_mod;
 337:../Dave/Generated/UCPROBE/lib_mem.c ****         while ((size_rem > 0) &&                                /* ... start mem buf fill with lead
 338:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 339:../Dave/Generated/UCPROBE/lib_mem.c ****            *pmem_08++ = data_val;
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 341:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 342:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 343:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 344:../Dave/Generated/UCPROBE/lib_mem.c **** 
 345:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_align = (CPU_ALIGN *)pmem_08;                          /* See Note #2.                    
 346:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 347:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 348:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 349:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 350:../Dave/Generated/UCPROBE/lib_mem.c **** 
 351:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem_align;
 352:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 353:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08++   = data_val;
 354:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem   -= sizeof(CPU_INT08U);
 355:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 356:../Dave/Generated/UCPROBE/lib_mem.c **** }
 357:../Dave/Generated/UCPROBE/lib_mem.c **** 
 358:../Dave/Generated/UCPROBE/lib_mem.c **** 
 359:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 360:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 361:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Copy()
 362:../Dave/Generated/UCPROBE/lib_mem.c **** *
 363:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Copies data octets from one memory buffer to another memory buffer.
 364:../Dave/Generated/UCPROBE/lib_mem.c **** *
 365:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 366:../Dave/Generated/UCPROBE/lib_mem.c **** *
 367:../Dave/Generated/UCPROBE/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 368:../Dave/Generated/UCPROBE/lib_mem.c **** *
 369:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of octets to copy (see Note #1).
 370:../Dave/Generated/UCPROBE/lib_mem.c **** *
 371:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 372:../Dave/Generated/UCPROBE/lib_mem.c **** *
 373:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 374:../Dave/Generated/UCPROBE/lib_mem.c **** *
 375:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null copies allowed (i.e. zero-length copies).
 376:../Dave/Generated/UCPROBE/lib_mem.c **** *
 377:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Memory buffers NOT checked for overlapping.
 378:../Dave/Generated/UCPROBE/lib_mem.c **** *
 379:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) IEEE Std 1003.1, 2004 Edition, Section 'memcpy() : DESCRIPTION' states that
 380:../Dave/Generated/UCPROBE/lib_mem.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 381:../Dave/Generated/UCPROBE/lib_mem.c **** *
 382:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) However, data octets from a source memory buffer at a higher address value 
 383:../Dave/Generated/UCPROBE/lib_mem.c **** *                       successfully copy to a destination memory buffer at a lower  address value 
 384:../Dave/Generated/UCPROBE/lib_mem.c **** *                       if any octets of the memory buffers overlap as long as no individual, atomi
 385:../Dave/Generated/UCPROBE/lib_mem.c **** *                       word copy overlaps.
 386:../Dave/Generated/UCPROBE/lib_mem.c **** *
 387:../Dave/Generated/UCPROBE/lib_mem.c **** *                       Since Mem_Copy() performs the data octet copy via 'CPU_ALIGN'-sized words &
 388:../Dave/Generated/UCPROBE/lib_mem.c **** *                       octets; & since 'CPU_ALIGN'-sized words MUST be accessed on word-aligned ad
 389:../Dave/Generated/UCPROBE/lib_mem.c **** *                       (see Note #3b), neither 'CPU_ALIGN'-sized words nor octets at unique addres
 390:../Dave/Generated/UCPROBE/lib_mem.c **** *                       ever overlap.
 391:../Dave/Generated/UCPROBE/lib_mem.c **** *
 392:../Dave/Generated/UCPROBE/lib_mem.c **** *                       Therefore, Mem_Copy() SHOULD be able to successfully copy overlapping memor
 393:../Dave/Generated/UCPROBE/lib_mem.c **** *                       buffers as long as the source memory buffer is at a higher address value th
 394:../Dave/Generated/UCPROBE/lib_mem.c **** *                       destination memory buffer.
 395:../Dave/Generated/UCPROBE/lib_mem.c **** *
 396:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 397:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 398:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 399:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 400:../Dave/Generated/UCPROBE/lib_mem.c **** *
 401:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 402:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 403:../Dave/Generated/UCPROBE/lib_mem.c **** *
 404:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 405:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 406:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 407:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 408:../Dave/Generated/UCPROBE/lib_mem.c **** */
 409:../Dave/Generated/UCPROBE/lib_mem.c **** 
 410:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_OPTIMIZE_ASM_EN != DEF_ENABLED)
 411:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Copy (       void        *pdest,
 412:../Dave/Generated/UCPROBE/lib_mem.c ****                 const  void        *psrc,
 413:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size)
 414:../Dave/Generated/UCPROBE/lib_mem.c **** {
 415:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 416:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 417:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 418:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 419:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 420:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 421:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      i;
 422:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 423:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 424:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 425:../Dave/Generated/UCPROBE/lib_mem.c **** 
 426:../Dave/Generated/UCPROBE/lib_mem.c **** 
 427:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 428:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 429:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 430:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 431:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pdest == (void *)0) {
 432:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 433:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 434:../Dave/Generated/UCPROBE/lib_mem.c ****     if (psrc  == (void *)0) {
 435:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 436:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 437:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 438:../Dave/Generated/UCPROBE/lib_mem.c **** 
 439:../Dave/Generated/UCPROBE/lib_mem.c **** 
 440:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem           =  size;
 441:../Dave/Generated/UCPROBE/lib_mem.c **** 
 442:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest;
 443:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc;
 444:../Dave/Generated/UCPROBE/lib_mem.c **** 
 445:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_gap_octets     = pmem_08_src - pmem_08_dest;
 446:../Dave/Generated/UCPROBE/lib_mem.c **** 
 447:../Dave/Generated/UCPROBE/lib_mem.c **** 
 448:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 449:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 450:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 451:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 452:../Dave/Generated/UCPROBE/lib_mem.c **** 
 453:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 454:../Dave/Generated/UCPROBE/lib_mem.c **** 
 455:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 456:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 457:../Dave/Generated/UCPROBE/lib_mem.c ****             if (mem_align_mod_dest != 0u) {                     /* If leading octets avail,        
 458:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 460:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                    *pmem_08_dest++ = *pmem_08_src++;
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 463:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 464:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 465:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 466:../Dave/Generated/UCPROBE/lib_mem.c **** 
 467:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)pmem_08_dest;  /* See Note #3.                    
 468:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)pmem_08_src;
 469:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 470:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 471:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 472:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 473:../Dave/Generated/UCPROBE/lib_mem.c **** 
 474:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest;
 475:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src;
 476:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 477:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 478:../Dave/Generated/UCPROBE/lib_mem.c **** 
 479:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 480:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 481:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 482:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 483:../Dave/Generated/UCPROBE/lib_mem.c **** }
 484:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 485:../Dave/Generated/UCPROBE/lib_mem.c **** 
 486:../Dave/Generated/UCPROBE/lib_mem.c **** 
 487:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 488:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 489:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Move()
 490:../Dave/Generated/UCPROBE/lib_mem.c **** *
 491:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Moves data octets from one memory buffer to another memory buffer, or within the sa
 492:../Dave/Generated/UCPROBE/lib_mem.c **** *               memory buffer. Overlapping is correctly handled for all move operations.
 493:../Dave/Generated/UCPROBE/lib_mem.c **** *
 494:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 495:../Dave/Generated/UCPROBE/lib_mem.c **** *
 496:../Dave/Generated/UCPROBE/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 497:../Dave/Generated/UCPROBE/lib_mem.c **** *
 498:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of octets to move (see Note #1).
 499:../Dave/Generated/UCPROBE/lib_mem.c **** *
 500:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 501:../Dave/Generated/UCPROBE/lib_mem.c **** *
 502:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 503:../Dave/Generated/UCPROBE/lib_mem.c **** *
 504:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null move operations allowed (i.e. zero-length).
 505:../Dave/Generated/UCPROBE/lib_mem.c **** *
 506:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Memory buffers checked for overlapping.
 507:../Dave/Generated/UCPROBE/lib_mem.c **** *
 508:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 509:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 510:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 511:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 512:../Dave/Generated/UCPROBE/lib_mem.c **** *
 513:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 514:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 515:../Dave/Generated/UCPROBE/lib_mem.c **** *
 516:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 517:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 518:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 519:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 520:../Dave/Generated/UCPROBE/lib_mem.c **** */
 521:../Dave/Generated/UCPROBE/lib_mem.c **** 
 522:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Move (       void        *pdest,
 523:../Dave/Generated/UCPROBE/lib_mem.c ****                 const  void        *psrc,
 524:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size)
 525:../Dave/Generated/UCPROBE/lib_mem.c **** {
 526:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 527:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 528:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 529:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 530:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 531:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 532:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08S    i;
 533:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 534:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 535:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 536:../Dave/Generated/UCPROBE/lib_mem.c **** 
 537:../Dave/Generated/UCPROBE/lib_mem.c **** 
 538:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 539:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {
 540:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 541:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 542:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pdest == (void *)0) {
 543:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 544:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 545:../Dave/Generated/UCPROBE/lib_mem.c ****     if (psrc  == (void *)0) {
 546:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 547:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 548:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 549:../Dave/Generated/UCPROBE/lib_mem.c **** 
 550:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src  = (const CPU_INT08U *)psrc;
 551:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest = (      CPU_INT08U *)pdest;
 552:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pmem_08_src > pmem_08_dest) {
 553:../Dave/Generated/UCPROBE/lib_mem.c ****         Mem_Copy(pdest, psrc, size);
 554:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 555:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 556:../Dave/Generated/UCPROBE/lib_mem.c **** 
 557:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem           =  size;
 558:../Dave/Generated/UCPROBE/lib_mem.c **** 
 559:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest + size - 1;
 560:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 561:../Dave/Generated/UCPROBE/lib_mem.c **** 
 562:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_gap_octets     = pmem_08_dest - pmem_08_src;
 563:../Dave/Generated/UCPROBE/lib_mem.c **** 
 564:../Dave/Generated/UCPROBE/lib_mem.c **** 
 565:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 566:../Dave/Generated/UCPROBE/lib_mem.c **** 
 567:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 568:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 569:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 570:../Dave/Generated/UCPROBE/lib_mem.c **** 
 571:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 572:../Dave/Generated/UCPROBE/lib_mem.c **** 
 573:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 574:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 575:../Dave/Generated/UCPROBE/lib_mem.c ****             if (mem_align_mod_dest != (sizeof(CPU_ALIGN) - 1)) {/* If leading octets avail,        
 576:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 578:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 579:../Dave/Generated/UCPROBE/lib_mem.c ****                    *pmem_08_dest-- = *pmem_08_src--;
 580:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 581:../Dave/Generated/UCPROBE/lib_mem.c ****                     i--;
 582:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 583:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 584:../Dave/Generated/UCPROBE/lib_mem.c **** 
 585:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #3.                    
 586:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)((CPU_INT08U *)pmem_08_dest - sizeof(CPU_ALIGN) + 
 587:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN) + 
 588:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 589:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 590:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 591:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 592:../Dave/Generated/UCPROBE/lib_mem.c **** 
 593:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest + sizeof(CPU_ALIGN) - 1;
 594:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src  + sizeof(CPU_ALIGN) - 1;
 595:../Dave/Generated/UCPROBE/lib_mem.c **** 
 596:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 597:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 598:../Dave/Generated/UCPROBE/lib_mem.c **** 
 599:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 600:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 601:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 602:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 603:../Dave/Generated/UCPROBE/lib_mem.c **** }
 604:../Dave/Generated/UCPROBE/lib_mem.c **** 
 605:../Dave/Generated/UCPROBE/lib_mem.c **** 
 606:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 607:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 608:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Cmp()
 609:../Dave/Generated/UCPROBE/lib_mem.c **** *
 610:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Verifies that ALL data octets in two memory buffers are identical in sequence.
 611:../Dave/Generated/UCPROBE/lib_mem.c **** *
 612:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p1_mem      Pointer to first  memory buffer.
 613:../Dave/Generated/UCPROBE/lib_mem.c **** *
 614:../Dave/Generated/UCPROBE/lib_mem.c **** *               p2_mem      Pointer to second memory buffer.
 615:../Dave/Generated/UCPROBE/lib_mem.c **** *
 616:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to compare (see Note #1).
 617:../Dave/Generated/UCPROBE/lib_mem.c **** *
 618:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : DEF_YES, if 'size' number of data octets are identical in both memory buffers.
 619:../Dave/Generated/UCPROBE/lib_mem.c **** *
 620:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NO,  otherwise.
 621:../Dave/Generated/UCPROBE/lib_mem.c **** *
 622:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 623:../Dave/Generated/UCPROBE/lib_mem.c **** *
 624:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null compares allowed (i.e. zero-length compares); 'DEF_YES' returned to indica
 625:../Dave/Generated/UCPROBE/lib_mem.c **** *                   identical null compare.
 626:../Dave/Generated/UCPROBE/lib_mem.c **** *
 627:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Many memory buffer comparisons vary ONLY in the least significant octets -- e.g
 628:../Dave/Generated/UCPROBE/lib_mem.c **** *                   network address buffers.  Consequently, memory buffer comparison is more effici
 629:../Dave/Generated/UCPROBE/lib_mem.c **** *                   if the comparison starts from the end of the memory buffers which will abort so
 630:../Dave/Generated/UCPROBE/lib_mem.c **** *                   on dissimilar memory buffers that vary only in the least significant octets.
 631:../Dave/Generated/UCPROBE/lib_mem.c **** *
 632:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to compare data buffers using 'CPU_ALIGN'-s
 633:../Dave/Generated/UCPROBE/lib_mem.c **** *                   data words. Since many word-aligned processors REQUIRE that multi-octet words b
 634:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 635:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 636:../Dave/Generated/UCPROBE/lib_mem.c **** *
 637:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 638:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 639:../Dave/Generated/UCPROBE/lib_mem.c **** *
 640:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 641:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 642:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 643:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 644:../Dave/Generated/UCPROBE/lib_mem.c **** */
 645:../Dave/Generated/UCPROBE/lib_mem.c **** 
 646:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_BOOLEAN  Mem_Cmp (const  void        *p1_mem,
 647:../Dave/Generated/UCPROBE/lib_mem.c ****                       const  void        *p2_mem,
 648:../Dave/Generated/UCPROBE/lib_mem.c ****                              CPU_SIZE_T   size)
 649:../Dave/Generated/UCPROBE/lib_mem.c **** {
 650:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 651:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *p1_mem_align;
 652:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *p2_mem_align;
 653:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *p1_mem_08;
 654:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *p2_mem_08;
 655:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      i;
 656:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_1;
 657:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_2;
 658:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 659:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_cmp;
 660:../Dave/Generated/UCPROBE/lib_mem.c **** 
 661:../Dave/Generated/UCPROBE/lib_mem.c **** 
 662:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 663:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_YES);
 664:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 665:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p1_mem == (void *)0) {
 666:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 667:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 668:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p2_mem == (void *)0) {
 669:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 670:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 671:../Dave/Generated/UCPROBE/lib_mem.c **** 
 672:../Dave/Generated/UCPROBE/lib_mem.c **** 
 673:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_cmp         =  DEF_YES;                                 /* Assume mem bufs are identical un
 674:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem        =  size;
 675:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Start @ end of mem bufs (see Not
 676:../Dave/Generated/UCPROBE/lib_mem.c ****     p1_mem_08       = (const CPU_INT08U *)p1_mem + size;
 677:../Dave/Generated/UCPROBE/lib_mem.c ****     p2_mem_08       = (const CPU_INT08U *)p2_mem + size;
 678:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 679:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_1 = (CPU_INT08U)((CPU_ADDR)p1_mem_08 % sizeof(CPU_ALIGN));
 680:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 681:../Dave/Generated/UCPROBE/lib_mem.c **** 
 682:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_aligned     = (mem_align_mod_1 == mem_align_mod_2) ? DEF_YES : DEF_NO;
 683:../Dave/Generated/UCPROBE/lib_mem.c **** 
 684:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_aligned == DEF_YES) {                               /* If mem bufs' alignment offset eq
 685:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize cmp for mem buf ali
 686:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_align_mod_1 != 0u) {                            /* If trailing octets avail,       
 687:../Dave/Generated/UCPROBE/lib_mem.c ****             i = mem_align_mod_1;
 688:../Dave/Generated/UCPROBE/lib_mem.c ****             while ((mem_cmp == DEF_YES) &&                      /* ... cmp mem bufs while identical
 689:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 690:../Dave/Generated/UCPROBE/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 691:../Dave/Generated/UCPROBE/lib_mem.c ****                 p1_mem_08--;
 692:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_08--;
 693:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_08 != *p2_mem_08) {                 /* If ANY data octet(s) NOT identic
 694:../Dave/Generated/UCPROBE/lib_mem.c ****                      mem_cmp = DEF_NO;
 695:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 696:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem -= sizeof(CPU_INT08U);
 697:../Dave/Generated/UCPROBE/lib_mem.c ****                 i--;
 698:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 699:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 700:../Dave/Generated/UCPROBE/lib_mem.c **** 
 701:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_cmp == DEF_YES) {                               /* If cmp still identical, cmp alig
 702:../Dave/Generated/UCPROBE/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3.                    
 703:../Dave/Generated/UCPROBE/lib_mem.c ****             p2_mem_align = (CPU_ALIGN *)p2_mem_08;
 704:../Dave/Generated/UCPROBE/lib_mem.c **** 
 705:../Dave/Generated/UCPROBE/lib_mem.c ****             while ((mem_cmp  == DEF_YES) &&                     /* Cmp mem bufs while identical & .
 706:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 707:../Dave/Generated/UCPROBE/lib_mem.c ****                 p1_mem_align--;
 708:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_align--;
 709:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_align != *p2_mem_align) {           /* If ANY data octet(s) NOT identic
 710:../Dave/Generated/UCPROBE/lib_mem.c ****                      mem_cmp = DEF_NO;
 711:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 712:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem -= sizeof(CPU_ALIGN);
 713:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 714:../Dave/Generated/UCPROBE/lib_mem.c **** 
 715:../Dave/Generated/UCPROBE/lib_mem.c ****             p1_mem_08 = (CPU_INT08U *)p1_mem_align;
 716:../Dave/Generated/UCPROBE/lib_mem.c ****             p2_mem_08 = (CPU_INT08U *)p2_mem_align;
 717:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 718:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 719:../Dave/Generated/UCPROBE/lib_mem.c **** 
 720:../Dave/Generated/UCPROBE/lib_mem.c ****     while ((mem_cmp == DEF_YES) &&                              /* Cmp mem bufs while identical ...
 721:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 722:../Dave/Generated/UCPROBE/lib_mem.c ****         p1_mem_08--;
 723:../Dave/Generated/UCPROBE/lib_mem.c ****         p2_mem_08--;
 724:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p1_mem_08 != *p2_mem_08) {                         /* If ANY data octet(s) NOT identic
 725:../Dave/Generated/UCPROBE/lib_mem.c ****              mem_cmp = DEF_NO;
 726:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 727:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem -= sizeof(CPU_INT08U);
 728:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 729:../Dave/Generated/UCPROBE/lib_mem.c **** 
 730:../Dave/Generated/UCPROBE/lib_mem.c ****     return (mem_cmp);
 731:../Dave/Generated/UCPROBE/lib_mem.c **** }
 732:../Dave/Generated/UCPROBE/lib_mem.c **** 
 733:../Dave/Generated/UCPROBE/lib_mem.c **** 
 734:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 735:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 736:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_HeapAlloc()
 737:../Dave/Generated/UCPROBE/lib_mem.c **** *
 738:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates a memory block from the heap memory segment.
 739:../Dave/Generated/UCPROBE/lib_mem.c **** *
 740:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : size            Size      of memory block to allocate (in bytes).
 741:../Dave/Generated/UCPROBE/lib_mem.c **** *
 742:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Alignment of memory block to specific word boundary (in bytes).
 743:../Dave/Generated/UCPROBE/lib_mem.c **** *
 744:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
 745:../Dave/Generated/UCPROBE/lib_mem.c **** *
 746:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
 747:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           allocate the memory block, if any error(s);
 748:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (b) Return 0, otherwise.
 749:../Dave/Generated/UCPROBE/lib_mem.c **** *
 750:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 751:../Dave/Generated/UCPROBE/lib_mem.c **** *
 752:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
 753:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY          No more memory available on hea
 754:../Dave/Generated/UCPROBE/lib_mem.c **** *
 755:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegAllocInternal()--------
 756:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
 757:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
 758:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
 759:../Dave/Generated/UCPROBE/lib_mem.c **** *
 760:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
 761:../Dave/Generated/UCPROBE/lib_mem.c **** *
 762:../Dave/Generated/UCPROBE/lib_mem.c **** *               Pointer to NULL,         otherwise.
 763:../Dave/Generated/UCPROBE/lib_mem.c **** *
 764:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 765:../Dave/Generated/UCPROBE/lib_mem.c **** *
 766:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Pointers to variables that return values MUST be initialized PRIOR to all other
 767:../Dave/Generated/UCPROBE/lib_mem.c **** *                   validation or function handling in case of any error(s).
 768:../Dave/Generated/UCPROBE/lib_mem.c **** *
 769:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) This function is DEPRECATED and will be removed in a future version of this pro
 770:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegAlloc(), Mem_SegAllocExt() or Mem_SegAllocHW() should be used instead.
 771:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 772:../Dave/Generated/UCPROBE/lib_mem.c **** */
 773:../Dave/Generated/UCPROBE/lib_mem.c **** 
 774:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 775:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_HeapAlloc (CPU_SIZE_T   size,
 776:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T   align,
 777:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T  *p_bytes_reqd,
 778:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR     *p_err)
 779:../Dave/Generated/UCPROBE/lib_mem.c **** {
 780:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_mem;
 781:../Dave/Generated/UCPROBE/lib_mem.c **** 
 782:../Dave/Generated/UCPROBE/lib_mem.c **** 
 783:../Dave/Generated/UCPROBE/lib_mem.c ****     p_mem = Mem_SegAllocInternal(DEF_NULL,
 784:../Dave/Generated/UCPROBE/lib_mem.c ****                                 &Mem_SegHeap,
 785:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
 786:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
 787:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_CFG_HEAP_PADDING_ALIGN,
 788:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
 789:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
 790:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err == LIB_MEM_ERR_SEG_OVF) {
 791:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 792:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 793:../Dave/Generated/UCPROBE/lib_mem.c **** 
 794:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_mem);
 795:../Dave/Generated/UCPROBE/lib_mem.c **** }
 796:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 797:../Dave/Generated/UCPROBE/lib_mem.c **** 
 798:../Dave/Generated/UCPROBE/lib_mem.c **** 
 799:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 800:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 801:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        Mem_HeapGetSizeRem()
 802:../Dave/Generated/UCPROBE/lib_mem.c **** *
 803:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets remaining heap memory size available to allocate.
 804:../Dave/Generated/UCPROBE/lib_mem.c **** *
 805:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : align       Desired word boundary alignment (in bytes) to return remaining memory s
 806:../Dave/Generated/UCPROBE/lib_mem.c **** *
 807:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 808:../Dave/Generated/UCPROBE/lib_mem.c **** *
 809:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 810:../Dave/Generated/UCPROBE/lib_mem.c **** *
 811:../Dave/Generated/UCPROBE/lib_mem.c **** *                               --------------------RETURNED BY Mem_SegRemSizeGet()----------------
 812:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 813:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
 814:../Dave/Generated/UCPROBE/lib_mem.c **** *
 815:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Remaining heap memory size (in bytes), if NO error(s).
 816:../Dave/Generated/UCPROBE/lib_mem.c **** *
 817:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                                     otherwise.
 818:../Dave/Generated/UCPROBE/lib_mem.c **** *
 819:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 820:../Dave/Generated/UCPROBE/lib_mem.c **** *
 821:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
 822:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegRemSizeGet() should be used instead.
 823:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 824:../Dave/Generated/UCPROBE/lib_mem.c **** */
 825:../Dave/Generated/UCPROBE/lib_mem.c **** 
 826:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 827:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_HeapGetSizeRem (CPU_SIZE_T   align,
 828:../Dave/Generated/UCPROBE/lib_mem.c ****                                 LIB_ERR     *p_err)
 829:../Dave/Generated/UCPROBE/lib_mem.c **** {
 830:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
 831:../Dave/Generated/UCPROBE/lib_mem.c **** 
 832:../Dave/Generated/UCPROBE/lib_mem.c **** 
 833:../Dave/Generated/UCPROBE/lib_mem.c ****     rem_size = Mem_SegRemSizeGet(&Mem_SegHeap,
 834:../Dave/Generated/UCPROBE/lib_mem.c ****                                   align,
 835:../Dave/Generated/UCPROBE/lib_mem.c ****                                   DEF_NULL,
 836:../Dave/Generated/UCPROBE/lib_mem.c ****                                   p_err);
 837:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 838:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
 839:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 840:../Dave/Generated/UCPROBE/lib_mem.c **** 
 841:../Dave/Generated/UCPROBE/lib_mem.c ****     return (rem_size);
 842:../Dave/Generated/UCPROBE/lib_mem.c **** }
 843:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 844:../Dave/Generated/UCPROBE/lib_mem.c **** 
 845:../Dave/Generated/UCPROBE/lib_mem.c **** 
 846:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 847:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 848:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegCreate()
 849:../Dave/Generated/UCPROBE/lib_mem.c **** *
 850:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation.
 851:../Dave/Generated/UCPROBE/lib_mem.c **** *
 852:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
 853:../Dave/Generated/UCPROBE/lib_mem.c **** *
 854:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
 855:../Dave/Generated/UCPROBE/lib_mem.c **** *
 856:../Dave/Generated/UCPROBE/lib_mem.c **** *               seg_base_addr   Address of segment's first byte.
 857:../Dave/Generated/UCPROBE/lib_mem.c **** *
 858:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Total size of segment, in bytes.
 859:../Dave/Generated/UCPROBE/lib_mem.c **** *
 860:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
 861:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
 862:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
 863:../Dave/Generated/UCPROBE/lib_mem.c **** *
 864:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 865:../Dave/Generated/UCPROBE/lib_mem.c **** *
 866:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
 867:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size specif
 868:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid padding alignment.
 869:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
 870:../Dave/Generated/UCPROBE/lib_mem.c **** *
 871:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -------------------RETURNED BY Mem_SegOverlapChkCritical()-----
 872:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
 873:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
 874:../Dave/Generated/UCPROBE/lib_mem.c **** *
 875:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
 876:../Dave/Generated/UCPROBE/lib_mem.c **** *
 877:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 878:../Dave/Generated/UCPROBE/lib_mem.c **** *
 879:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) New segments are checked for overlap with existing segments. A critical section
 880:../Dave/Generated/UCPROBE/lib_mem.c **** *                   to be maintained during the whole list search and add procedure to prevent a re
 881:../Dave/Generated/UCPROBE/lib_mem.c **** *                   call from creating another segment overlapping with the one being added.
 882:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 883:../Dave/Generated/UCPROBE/lib_mem.c **** */
 884:../Dave/Generated/UCPROBE/lib_mem.c **** 
 885:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_SegCreate (const  CPU_CHAR    *p_name,
 886:../Dave/Generated/UCPROBE/lib_mem.c ****                             MEM_SEG     *p_seg,
 887:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_ADDR     seg_base_addr,
 888:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   size,
 889:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   padding_align,
 890:../Dave/Generated/UCPROBE/lib_mem.c ****                             LIB_ERR     *p_err)
 891:../Dave/Generated/UCPROBE/lib_mem.c **** {
 892:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 893:../Dave/Generated/UCPROBE/lib_mem.c **** 
 894:../Dave/Generated/UCPROBE/lib_mem.c **** 
 895:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 896:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 897:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 898:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 899:../Dave/Generated/UCPROBE/lib_mem.c **** 
 900:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 901:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 902:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 903:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 904:../Dave/Generated/UCPROBE/lib_mem.c **** 
 905:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized seg.      
 906:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 907:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 908:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 909:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Chk for addr space ovf.         
 910:../Dave/Generated/UCPROBE/lib_mem.c ****     if (seg_base_addr + (size - 1u) < seg_base_addr) {
 911:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 912:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 913:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 914:../Dave/Generated/UCPROBE/lib_mem.c **** 
 915:../Dave/Generated/UCPROBE/lib_mem.c ****     if ((padding_align               != LIB_MEM_PADDING_ALIGN_NONE) &&
 916:../Dave/Generated/UCPROBE/lib_mem.c ****         (MATH_IS_PWR2(padding_align) != DEF_YES)) {
 917:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
 918:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 919:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 920:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 921:../Dave/Generated/UCPROBE/lib_mem.c **** 
 922:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
  48              	 .loc 1 922 0
  49 000a FFF7FEFF 	 bl CPU_SR_Save
  50              	.LVL1:
  51              	.LBB17:
  52              	.LBB18:
 923:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 924:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)Mem_SegOverlapChkCritical(seg_base_addr,              /* Chk for overlap.                
 925:../Dave/Generated/UCPROBE/lib_mem.c ****                                     size,
 926:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_err);
 927:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 928:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 929:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 930:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 931:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 932:../Dave/Generated/UCPROBE/lib_mem.c **** 
 933:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegCreateCritical(p_name,                               /* Create seg.                     
 934:../Dave/Generated/UCPROBE/lib_mem.c ****                           p_seg,
 935:../Dave/Generated/UCPROBE/lib_mem.c ****                           seg_base_addr,
 936:../Dave/Generated/UCPROBE/lib_mem.c ****                           padding_align,
 937:../Dave/Generated/UCPROBE/lib_mem.c ****                           size);
 938:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 939:../Dave/Generated/UCPROBE/lib_mem.c **** 
 940:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 941:../Dave/Generated/UCPROBE/lib_mem.c **** }
 942:../Dave/Generated/UCPROBE/lib_mem.c **** 
 943:../Dave/Generated/UCPROBE/lib_mem.c **** 
 944:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 945:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 946:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegClr()
 947:../Dave/Generated/UCPROBE/lib_mem.c **** *
 948:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears a memory segment.
 949:../Dave/Generated/UCPROBE/lib_mem.c **** *
 950:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment data. Must be allocated by caller.
 951:../Dave/Generated/UCPROBE/lib_mem.c **** *
 952:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 953:../Dave/Generated/UCPROBE/lib_mem.c **** *
 954:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 955:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 956:../Dave/Generated/UCPROBE/lib_mem.c **** *
 957:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
 958:../Dave/Generated/UCPROBE/lib_mem.c **** *
 959:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 960:../Dave/Generated/UCPROBE/lib_mem.c **** *
 961:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function must be used with extreme caution. It must only be called on memo
 962:../Dave/Generated/UCPROBE/lib_mem.c **** *                   segments that are no longer used.
 963:../Dave/Generated/UCPROBE/lib_mem.c **** *
 964:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) This function is disabled when debug mode is enabled to avoid heap memory leaks
 965:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 966:../Dave/Generated/UCPROBE/lib_mem.c **** */
 967:../Dave/Generated/UCPROBE/lib_mem.c **** 
 968:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_DISABLED)
 969:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_SegClr (MEM_SEG  *p_seg,
 970:../Dave/Generated/UCPROBE/lib_mem.c ****                   LIB_ERR  *p_err)
 971:../Dave/Generated/UCPROBE/lib_mem.c **** {
 972:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 973:../Dave/Generated/UCPROBE/lib_mem.c **** 
 974:../Dave/Generated/UCPROBE/lib_mem.c **** 
 975:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 976:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 977:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 978:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 979:../Dave/Generated/UCPROBE/lib_mem.c **** 
 980:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 981:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 982:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 983:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 984:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 985:../Dave/Generated/UCPROBE/lib_mem.c **** 
 986:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 987:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 988:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 989:../Dave/Generated/UCPROBE/lib_mem.c **** 
 990:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 991:../Dave/Generated/UCPROBE/lib_mem.c **** }
 992:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 993:../Dave/Generated/UCPROBE/lib_mem.c **** 
 994:../Dave/Generated/UCPROBE/lib_mem.c **** 
 995:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 996:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 997:../Dave/Generated/UCPROBE/lib_mem.c **** *                                         Mem_SegRemSizeGet()
 998:../Dave/Generated/UCPROBE/lib_mem.c **** *
 999:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets free space of memory segment.
1000:../Dave/Generated/UCPROBE/lib_mem.c **** *
1001:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg       Pointer to segment data.
1002:../Dave/Generated/UCPROBE/lib_mem.c **** *
1003:../Dave/Generated/UCPROBE/lib_mem.c **** *               align       Alignment in bytes to assume for calculation of free space.
1004:../Dave/Generated/UCPROBE/lib_mem.c **** *
1005:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg_info  Pointer to structure that will receive further segment info data (used 
1006:../Dave/Generated/UCPROBE/lib_mem.c **** *                           total size, base address and next allocation address).
1007:../Dave/Generated/UCPROBE/lib_mem.c **** *
1008:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1009:../Dave/Generated/UCPROBE/lib_mem.c **** *
1010:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1011:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
1012:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
1013:../Dave/Generated/UCPROBE/lib_mem.c **** *
1014:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Memory segment remaining size in bytes,     if successful.
1015:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                                          otherwise or if memory segment empty.
1016:../Dave/Generated/UCPROBE/lib_mem.c **** *
1017:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application,
1018:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_HeapGetSizeRem(),
1019:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_OutputUsage().
1020:../Dave/Generated/UCPROBE/lib_mem.c **** *
1021:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : None.
1022:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1023:../Dave/Generated/UCPROBE/lib_mem.c **** */
1024:../Dave/Generated/UCPROBE/lib_mem.c **** 
1025:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_SegRemSizeGet (MEM_SEG       *p_seg,
1026:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T     align,
1027:../Dave/Generated/UCPROBE/lib_mem.c ****                                MEM_SEG_INFO  *p_seg_info,
1028:../Dave/Generated/UCPROBE/lib_mem.c ****                                LIB_ERR       *p_err)
1029:../Dave/Generated/UCPROBE/lib_mem.c **** {
1030:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
1031:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  total_size;
1032:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  used_size;
1033:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    next_addr_align;
1034:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
1035:../Dave/Generated/UCPROBE/lib_mem.c **** 
1036:../Dave/Generated/UCPROBE/lib_mem.c **** 
1037:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1038:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
1039:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(seg_info);
1040:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1041:../Dave/Generated/UCPROBE/lib_mem.c **** 
1042:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk for invalid align val.      
1043:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
1044:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1045:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1046:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1047:../Dave/Generated/UCPROBE/lib_mem.c **** 
1048:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Dflt to heap in case p_seg is nu
1049:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1050:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
1051:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1052:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1053:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1054:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1055:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1056:../Dave/Generated/UCPROBE/lib_mem.c **** 
1057:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Calc seg stats.                 
1058:../Dave/Generated/UCPROBE/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
1059:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
1060:../Dave/Generated/UCPROBE/lib_mem.c **** 
1061:../Dave/Generated/UCPROBE/lib_mem.c ****     total_size = p_seg->AddrEnd  - p_seg->AddrBase + 1u;
1062:../Dave/Generated/UCPROBE/lib_mem.c ****     used_size  = next_addr_align - p_seg->AddrBase;
1063:../Dave/Generated/UCPROBE/lib_mem.c ****     rem_size   = total_size      - used_size;
1064:../Dave/Generated/UCPROBE/lib_mem.c **** 
1065:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg_info != DEF_NULL) {
1066:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->TotalSize     = total_size;
1067:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->UsedSize      = used_size;
1068:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrBase      = p_seg->AddrBase;
1069:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
1070:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1071:../Dave/Generated/UCPROBE/lib_mem.c **** 
1072:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1073:../Dave/Generated/UCPROBE/lib_mem.c **** 
1074:../Dave/Generated/UCPROBE/lib_mem.c ****     return (rem_size);
1075:../Dave/Generated/UCPROBE/lib_mem.c **** }
1076:../Dave/Generated/UCPROBE/lib_mem.c **** 
1077:../Dave/Generated/UCPROBE/lib_mem.c **** 
1078:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1079:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1080:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegAlloc()
1081:../Dave/Generated/UCPROBE/lib_mem.c **** *
1082:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment. Returned memory block will be aligned on a
1083:../Dave/Generated/UCPROBE/lib_mem.c **** *               word boundary.
1084:../Dave/Generated/UCPROBE/lib_mem.c **** *
1085:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
1086:../Dave/Generated/UCPROBE/lib_mem.c **** *
1087:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg   Pointer to segment from which to allocate memory. Will be allocated from
1088:../Dave/Generated/UCPROBE/lib_mem.c **** *                       general-purpose heap if null.
1089:../Dave/Generated/UCPROBE/lib_mem.c **** *
1090:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Size of memory block to allocate, in bytes.
1091:../Dave/Generated/UCPROBE/lib_mem.c **** *
1092:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1093:../Dave/Generated/UCPROBE/lib_mem.c **** *
1094:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1095:../Dave/Generated/UCPROBE/lib_mem.c **** *
1096:../Dave/Generated/UCPROBE/lib_mem.c **** *                           ------------------RETURNED BY Mem_SegAllocInternal()-------------------
1097:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment requeste
1098:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size specified.
1099:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Error or segment data pointer NULL.
1100:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF             Allocation would overflow memory segmen
1101:../Dave/Generated/UCPROBE/lib_mem.c **** *
1102:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1103:../Dave/Generated/UCPROBE/lib_mem.c **** *
1104:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1105:../Dave/Generated/UCPROBE/lib_mem.c **** *
1106:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1107:../Dave/Generated/UCPROBE/lib_mem.c **** *
1108:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) The memory block returned  by this function will be aligned on a word boundary.
1109:../Dave/Generated/UCPROBE/lib_mem.c **** *                   order to specify a specific alignment value, use either Mem_SegAllocExt() or
1110:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegAllocHW().
1111:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1112:../Dave/Generated/UCPROBE/lib_mem.c **** */
1113:../Dave/Generated/UCPROBE/lib_mem.c **** 
1114:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAlloc (const  CPU_CHAR    *p_name,
1115:../Dave/Generated/UCPROBE/lib_mem.c ****                             MEM_SEG     *p_seg,
1116:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   size,
1117:../Dave/Generated/UCPROBE/lib_mem.c ****                             LIB_ERR     *p_err)
1118:../Dave/Generated/UCPROBE/lib_mem.c **** {
1119:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1120:../Dave/Generated/UCPROBE/lib_mem.c **** 
1121:../Dave/Generated/UCPROBE/lib_mem.c **** 
1122:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1123:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1124:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
1125:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1126:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1127:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1128:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1129:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1130:../Dave/Generated/UCPROBE/lib_mem.c **** 
1131:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
1132:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1133:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1134:../Dave/Generated/UCPROBE/lib_mem.c ****                                  sizeof(CPU_ALIGN),
1135:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1136:../Dave/Generated/UCPROBE/lib_mem.c ****                                  DEF_NULL,
1137:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1138:../Dave/Generated/UCPROBE/lib_mem.c **** 
1139:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
1140:../Dave/Generated/UCPROBE/lib_mem.c **** }
1141:../Dave/Generated/UCPROBE/lib_mem.c **** 
1142:../Dave/Generated/UCPROBE/lib_mem.c **** 
1143:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1144:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1145:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_SegAllocExt()
1146:../Dave/Generated/UCPROBE/lib_mem.c **** *
1147:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified memory segment.
1148:../Dave/Generated/UCPROBE/lib_mem.c **** *
1149:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1150:../Dave/Generated/UCPROBE/lib_mem.c **** *
1151:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1152:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1153:../Dave/Generated/UCPROBE/lib_mem.c **** *
1154:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1155:../Dave/Generated/UCPROBE/lib_mem.c **** *
1156:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1157:../Dave/Generated/UCPROBE/lib_mem.c **** *
1158:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1159:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1160:../Dave/Generated/UCPROBE/lib_mem.c **** *
1161:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1162:../Dave/Generated/UCPROBE/lib_mem.c **** *
1163:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1164:../Dave/Generated/UCPROBE/lib_mem.c **** *
1165:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1166:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1167:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1168:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1169:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1170:../Dave/Generated/UCPROBE/lib_mem.c **** *
1171:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1172:../Dave/Generated/UCPROBE/lib_mem.c **** *
1173:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1174:../Dave/Generated/UCPROBE/lib_mem.c **** *
1175:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1176:../Dave/Generated/UCPROBE/lib_mem.c **** *
1177:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1178:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1179:../Dave/Generated/UCPROBE/lib_mem.c **** */
1180:../Dave/Generated/UCPROBE/lib_mem.c **** 
1181:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAllocExt (const  CPU_CHAR    *p_name,
1182:../Dave/Generated/UCPROBE/lib_mem.c ****                                MEM_SEG     *p_seg,
1183:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T   size,
1184:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T   align,
1185:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T  *p_bytes_reqd,
1186:../Dave/Generated/UCPROBE/lib_mem.c ****                                LIB_ERR     *p_err)
1187:../Dave/Generated/UCPROBE/lib_mem.c **** {
1188:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1189:../Dave/Generated/UCPROBE/lib_mem.c **** 
1190:../Dave/Generated/UCPROBE/lib_mem.c **** 
1191:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1192:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1193:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
1194:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1195:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1196:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1197:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1198:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1199:../Dave/Generated/UCPROBE/lib_mem.c **** 
1200:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
1201:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1202:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1203:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
1204:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1205:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
1206:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1207:../Dave/Generated/UCPROBE/lib_mem.c **** 
1208:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
1209:../Dave/Generated/UCPROBE/lib_mem.c **** }
1210:../Dave/Generated/UCPROBE/lib_mem.c **** 
1211:../Dave/Generated/UCPROBE/lib_mem.c **** 
1212:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1213:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1214:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_SegAllocHW()
1215:../Dave/Generated/UCPROBE/lib_mem.c **** *
1216:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment. The returned buffer will be padded in func
1217:../Dave/Generated/UCPROBE/lib_mem.c **** *               of memory segment's properties.
1218:../Dave/Generated/UCPROBE/lib_mem.c **** *
1219:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1220:../Dave/Generated/UCPROBE/lib_mem.c **** *
1221:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1222:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1223:../Dave/Generated/UCPROBE/lib_mem.c **** *
1224:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1225:../Dave/Generated/UCPROBE/lib_mem.c **** *
1226:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1227:../Dave/Generated/UCPROBE/lib_mem.c **** *
1228:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1229:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1230:../Dave/Generated/UCPROBE/lib_mem.c **** *
1231:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1232:../Dave/Generated/UCPROBE/lib_mem.c **** *
1233:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1234:../Dave/Generated/UCPROBE/lib_mem.c **** *
1235:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1236:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1237:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1238:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1239:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1240:../Dave/Generated/UCPROBE/lib_mem.c **** *
1241:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1242:../Dave/Generated/UCPROBE/lib_mem.c **** *
1243:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1244:../Dave/Generated/UCPROBE/lib_mem.c **** *
1245:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1246:../Dave/Generated/UCPROBE/lib_mem.c **** *
1247:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1248:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1249:../Dave/Generated/UCPROBE/lib_mem.c **** */
1250:../Dave/Generated/UCPROBE/lib_mem.c **** 
1251:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAllocHW (const  CPU_CHAR    *p_name,
1252:../Dave/Generated/UCPROBE/lib_mem.c ****                               MEM_SEG     *p_seg,
1253:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T   size,
1254:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T   align,
1255:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T  *p_bytes_reqd,
1256:../Dave/Generated/UCPROBE/lib_mem.c ****                               LIB_ERR     *p_err)
1257:../Dave/Generated/UCPROBE/lib_mem.c **** {
1258:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1259:../Dave/Generated/UCPROBE/lib_mem.c **** 
1260:../Dave/Generated/UCPROBE/lib_mem.c **** 
1261:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1262:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1263:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
1264:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1265:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1266:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1267:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1268:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1269:../Dave/Generated/UCPROBE/lib_mem.c **** 
1270:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
1271:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1272:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1273:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
1274:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg->PaddingAlign,
1275:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
1276:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1277:../Dave/Generated/UCPROBE/lib_mem.c **** 
1278:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
1279:../Dave/Generated/UCPROBE/lib_mem.c **** }
1280:../Dave/Generated/UCPROBE/lib_mem.c **** 
1281:../Dave/Generated/UCPROBE/lib_mem.c **** 
1282:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1283:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1284:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolCreate()
1285:../Dave/Generated/UCPROBE/lib_mem.c **** *
1286:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : (1) Creates a memory pool :
1287:../Dave/Generated/UCPROBE/lib_mem.c **** *
1288:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) Create    memory pool from heap or dedicated memory
1289:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Allocate  memory pool memory blocks
1290:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (c) Configure memory pool
1291:../Dave/Generated/UCPROBE/lib_mem.c **** *
1292:../Dave/Generated/UCPROBE/lib_mem.c **** *
1293:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool          Pointer to a memory pool structure to create (see Note #1).
1294:../Dave/Generated/UCPROBE/lib_mem.c **** *
1295:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_mem_base      Memory pool segment base address :
1296:../Dave/Generated/UCPROBE/lib_mem.c **** *
1297:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (a)     Null address    Memory pool allocated from general-
1298:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (b) Non-null address    Memory pool allocated from dedicate
1299:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                   specified by its base address.
1300:../Dave/Generated/UCPROBE/lib_mem.c **** *
1301:../Dave/Generated/UCPROBE/lib_mem.c **** *               mem_size        Size      of memory pool segment          (in bytes).
1302:../Dave/Generated/UCPROBE/lib_mem.c **** *
1303:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_nbr         Number    of memory pool blocks to create.
1304:../Dave/Generated/UCPROBE/lib_mem.c **** *
1305:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size      of memory pool blocks to create (in bytes).
1306:../Dave/Generated/UCPROBE/lib_mem.c **** *
1307:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Alignment of memory pool blocks to specific word boundary (in bytes
1308:../Dave/Generated/UCPROBE/lib_mem.c **** *
1309:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
1310:../Dave/Generated/UCPROBE/lib_mem.c **** *
1311:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
1312:../Dave/Generated/UCPROBE/lib_mem.c **** *                                               allocate the memory pool, if any error(s);
1313:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (b) Return 0, otherwise.
1314:../Dave/Generated/UCPROBE/lib_mem.c **** *
1315:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1316:../Dave/Generated/UCPROBE/lib_mem.c **** *
1317:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
1318:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Pointer to memory pool is n
1319:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN       Invalid block alignment req
1320:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR         Invalid number of blocks sp
1321:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE        Invalid block size specifie
1322:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size.
1323:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY              No more memory available on
1324:../Dave/Generated/UCPROBE/lib_mem.c **** *
1325:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------RETURNED BY Mem_SegOverlapChkCritical()---------
1326:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
1327:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
1328:../Dave/Generated/UCPROBE/lib_mem.c **** *
1329:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -----------------RETURNED BY Mem_SegAllocExtCritical()---------
1330:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1331:../Dave/Generated/UCPROBE/lib_mem.c **** *
1332:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1333:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignm
1334:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size s
1335:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
1336:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1337:../Dave/Generated/UCPROBE/lib_mem.c **** *
1338:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -----------------------RETURNED BY Mem_PoolClr()---------------
1339:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Argument 'p_pool' passed a 
1340:../Dave/Generated/UCPROBE/lib_mem.c **** *
1341:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1342:../Dave/Generated/UCPROBE/lib_mem.c **** *
1343:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1344:../Dave/Generated/UCPROBE/lib_mem.c **** *
1345:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1346:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolCreate() or Mem_DynPoolCreateHW() should be used instead.
1347:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1348:../Dave/Generated/UCPROBE/lib_mem.c **** */
1349:../Dave/Generated/UCPROBE/lib_mem.c **** 
1350:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1351:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolCreate (MEM_POOL          *p_pool,
1352:../Dave/Generated/UCPROBE/lib_mem.c ****                       void              *p_mem_base,
1353:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         mem_size,
1354:../Dave/Generated/UCPROBE/lib_mem.c ****                       MEM_POOL_BLK_QTY   blk_nbr,
1355:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         blk_size,
1356:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         blk_align,
1357:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T        *p_bytes_reqd,
1358:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR           *p_err)
1359:../Dave/Generated/UCPROBE/lib_mem.c **** {
1360:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG           *p_seg;
1361:../Dave/Generated/UCPROBE/lib_mem.c ****     void              *p_pool_mem;
1362:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T         pool_size;
1363:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T         blk_size_align;
1364:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR           pool_addr_end;
1365:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_POOL_BLK_QTY   blk_ix;
1366:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U        *p_blk;
1367:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
1368:../Dave/Generated/UCPROBE/lib_mem.c **** 
1369:../Dave/Generated/UCPROBE/lib_mem.c **** 
1370:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* --------------- VALIDATE RTN ERR
1371:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1372:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1373:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1374:../Dave/Generated/UCPROBE/lib_mem.c **** 
1375:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------- VALIDATE MEM POOL 
1376:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {
1377:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1378:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1379:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1380:../Dave/Generated/UCPROBE/lib_mem.c **** 
1381:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_mem_base != DEF_NULL) {
1382:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_size < 1u) {
1383:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
1384:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
1385:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1386:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1387:../Dave/Generated/UCPROBE/lib_mem.c **** 
1388:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_nbr < 1u) {
1389:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
1390:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1391:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1392:../Dave/Generated/UCPROBE/lib_mem.c **** 
1393:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < 1u) {
1394:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1395:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1396:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1397:../Dave/Generated/UCPROBE/lib_mem.c **** 
1398:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk that req alignment is a pwr 
1399:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
1400:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1401:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1402:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1403:../Dave/Generated/UCPROBE/lib_mem.c **** 
1404:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_PoolClr(p_pool, p_err);                                 /* Init mem pool.                  
1405:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
1406:../Dave/Generated/UCPROBE/lib_mem.c ****          return;
1407:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1408:../Dave/Generated/UCPROBE/lib_mem.c **** 
1409:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------- DETERMINE AND/OR ALLOC 
1410:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_mem_base == DEF_NULL) {                               /* Use heap seg.                   
1411:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
1412:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {                                                    /* Use other seg.                  
1413:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
1414:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
1415:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     mem_size,
1416:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_err);
1417:../Dave/Generated/UCPROBE/lib_mem.c ****         switch (*p_err) {
1418:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_EXISTS:                /* Seg already exists.             
1419:../Dave/Generated/UCPROBE/lib_mem.c ****                  break;
1420:../Dave/Generated/UCPROBE/lib_mem.c **** 
1421:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_NONE:                              /* Seg must be created.            
1422:../Dave/Generated/UCPROBE/lib_mem.c ****                  p_seg = (MEM_SEG *)Mem_SegAllocExtCritical(&Mem_SegHeap,
1423:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              sizeof(MEM_SEG),
1424:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              sizeof(CPU_ALIGN),
1425:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              LIB_MEM_PADDING_ALIGN_NONE,
1426:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              p_bytes_reqd,
1427:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              p_err);
1428:../Dave/Generated/UCPROBE/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
1429:../Dave/Generated/UCPROBE/lib_mem.c ****                      CPU_CRITICAL_EXIT();
1430:../Dave/Generated/UCPROBE/lib_mem.c ****                      return;
1431:../Dave/Generated/UCPROBE/lib_mem.c ****                  }
1432:../Dave/Generated/UCPROBE/lib_mem.c **** 
1433:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
1434:../Dave/Generated/UCPROBE/lib_mem.c ****                  Mem_SegAllocTrackCritical("Unknown segment data",
1435:../Dave/Generated/UCPROBE/lib_mem.c ****                                            &Mem_SegHeap,
1436:../Dave/Generated/UCPROBE/lib_mem.c ****                                             sizeof(MEM_SEG),
1437:../Dave/Generated/UCPROBE/lib_mem.c ****                                             p_err);
1438:../Dave/Generated/UCPROBE/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
1439:../Dave/Generated/UCPROBE/lib_mem.c ****                      CPU_CRITICAL_EXIT();
1440:../Dave/Generated/UCPROBE/lib_mem.c ****                      return;
1441:../Dave/Generated/UCPROBE/lib_mem.c ****                  }
1442:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1443:../Dave/Generated/UCPROBE/lib_mem.c **** 
1444:../Dave/Generated/UCPROBE/lib_mem.c ****                  Mem_SegCreateCritical(          DEF_NULL,
1445:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  p_seg,
1446:../Dave/Generated/UCPROBE/lib_mem.c ****                                        (CPU_ADDR)p_mem_base,
1447:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  LIB_MEM_PADDING_ALIGN_NONE,
1448:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  mem_size);
1449:../Dave/Generated/UCPROBE/lib_mem.c ****                  break;
1450:../Dave/Generated/UCPROBE/lib_mem.c **** 
1451:../Dave/Generated/UCPROBE/lib_mem.c **** 
1452:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_OVERLAP:
1453:../Dave/Generated/UCPROBE/lib_mem.c ****             default:
1454:../Dave/Generated/UCPROBE/lib_mem.c ****                  CPU_CRITICAL_EXIT();
1455:../Dave/Generated/UCPROBE/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
1456:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1457:../Dave/Generated/UCPROBE/lib_mem.c **** 
1458:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
1459:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1460:../Dave/Generated/UCPROBE/lib_mem.c **** 
1461:../Dave/Generated/UCPROBE/lib_mem.c **** 
1462:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ---------------- ALLOC MEM FOR P
1463:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Calc blk size with align.       
1464:../Dave/Generated/UCPROBE/lib_mem.c ****     blk_size_align =  MATH_ROUND_INC_UP_PWR2(blk_size, blk_align);
1465:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
1466:../Dave/Generated/UCPROBE/lib_mem.c **** 
1467:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Alloc mem for pool.             
1468:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_mem = (void *)Mem_SegAllocInternal("Unnamed static pool",
1469:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_seg,
1470:../Dave/Generated/UCPROBE/lib_mem.c ****                                                pool_size,
1471:../Dave/Generated/UCPROBE/lib_mem.c ****                                                blk_align,
1472:../Dave/Generated/UCPROBE/lib_mem.c ****                                                LIB_MEM_PADDING_ALIGN_NONE,
1473:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_bytes_reqd,
1474:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_err);
1475:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
1476:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1477:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1478:../Dave/Generated/UCPROBE/lib_mem.c **** 
1479:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------ ALLOC MEM FOR FREE 
1480:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl = (void *)Mem_SegAllocInternal("Unnamed static pool free blk tbl",
1481:../Dave/Generated/UCPROBE/lib_mem.c ****                                                       &Mem_SegHeap,
1482:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        blk_nbr * sizeof(void *),
1483:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        sizeof(CPU_ALIGN),
1484:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_MEM_PADDING_ALIGN_NONE,
1485:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        p_bytes_reqd,
1486:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        p_err);
1487:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
1488:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1489:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1490:../Dave/Generated/UCPROBE/lib_mem.c **** 
1491:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT BLK LIST
1492:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = (CPU_INT08U *)p_pool_mem;
1493:../Dave/Generated/UCPROBE/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
1494:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
1495:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                      += blk_size_align;
1496:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1497:../Dave/Generated/UCPROBE/lib_mem.c **** 
1498:../Dave/Generated/UCPROBE/lib_mem.c **** 
1499:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT POOL DAT
1500:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_addr_end         = (CPU_ADDR)p_pool_mem + (pool_size - 1u);
1501:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
1502:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = (void *)pool_addr_end;
1503:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        =  blk_nbr;
1504:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
1505:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  =  blk_nbr;
1506:../Dave/Generated/UCPROBE/lib_mem.c **** }
1507:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1508:../Dave/Generated/UCPROBE/lib_mem.c **** 
1509:../Dave/Generated/UCPROBE/lib_mem.c **** 
1510:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1511:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1512:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_PoolClr()
1513:../Dave/Generated/UCPROBE/lib_mem.c **** *
1514:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears a memory pool (see Note #1).
1515:../Dave/Generated/UCPROBE/lib_mem.c **** *
1516:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure to clear (see Note #2).
1517:../Dave/Generated/UCPROBE/lib_mem.c **** *
1518:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err        Pointer to variable that will receive the return error code from this 
1519:../Dave/Generated/UCPROBE/lib_mem.c **** *
1520:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1521:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1522:../Dave/Generated/UCPROBE/lib_mem.c **** *
1523:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1524:../Dave/Generated/UCPROBE/lib_mem.c **** *
1525:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application,
1526:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_PoolCreate().
1527:../Dave/Generated/UCPROBE/lib_mem.c **** *
1528:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) (a) Mem_PoolClr() ONLY clears a memory pool structure's variables & should ONLY
1529:../Dave/Generated/UCPROBE/lib_mem.c **** *                       called to initialize a memory pool structure prior to calling Mem_PoolCreat
1530:../Dave/Generated/UCPROBE/lib_mem.c **** *
1531:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Mem_PoolClr() does NOT deallocate memory from the memory pool or deallocate
1532:../Dave/Generated/UCPROBE/lib_mem.c **** *                       memory pool itself & MUST NOT be called after calling Mem_PoolCreate() sinc
1533:../Dave/Generated/UCPROBE/lib_mem.c **** *                       this will likely corrupt the memory pool management.
1534:../Dave/Generated/UCPROBE/lib_mem.c **** *
1535:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Assumes 'p_pool' points to a valid memory pool (if non-NULL).
1536:../Dave/Generated/UCPROBE/lib_mem.c **** *
1537:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) This function is DEPRECATED and will be removed in a future version of this pro
1538:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1539:../Dave/Generated/UCPROBE/lib_mem.c **** */
1540:../Dave/Generated/UCPROBE/lib_mem.c **** 
1541:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1542:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolClr (MEM_POOL  *p_pool,
1543:../Dave/Generated/UCPROBE/lib_mem.c ****                    LIB_ERR   *p_err)
1544:../Dave/Generated/UCPROBE/lib_mem.c **** {
1545:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE RTN ERR 
1546:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1547:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1548:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1549:../Dave/Generated/UCPROBE/lib_mem.c **** 
1550:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------------- VALIDATE MEM POOL
1551:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {
1552:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1553:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1554:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1555:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1556:../Dave/Generated/UCPROBE/lib_mem.c **** 
1557:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrStart = DEF_NULL;
1558:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
1559:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       = 0u;
1560:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        = 0u;
1561:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
1562:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
1563:../Dave/Generated/UCPROBE/lib_mem.c **** 
1564:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1565:../Dave/Generated/UCPROBE/lib_mem.c **** }
1566:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1567:../Dave/Generated/UCPROBE/lib_mem.c **** 
1568:../Dave/Generated/UCPROBE/lib_mem.c **** 
1569:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1570:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1571:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolBlkGet()
1572:../Dave/Generated/UCPROBE/lib_mem.c **** *
1573:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets a memory block from memory pool.
1574:../Dave/Generated/UCPROBE/lib_mem.c **** *
1575:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to  memory pool to get memory block from.
1576:../Dave/Generated/UCPROBE/lib_mem.c **** *
1577:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Size of requested memory (in bytes).
1578:../Dave/Generated/UCPROBE/lib_mem.c **** *
1579:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1580:../Dave/Generated/UCPROBE/lib_mem.c **** *
1581:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1582:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid memory pool block size requeste
1583:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL pointer
1584:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY          NO memory blocks available in memory po
1585:../Dave/Generated/UCPROBE/lib_mem.c **** *
1586:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
1587:../Dave/Generated/UCPROBE/lib_mem.c **** *
1588:../Dave/Generated/UCPROBE/lib_mem.c **** *               Pointer to NULL,         otherwise.
1589:../Dave/Generated/UCPROBE/lib_mem.c **** *
1590:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1591:../Dave/Generated/UCPROBE/lib_mem.c **** *
1592:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1593:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkGet() should be used instead.
1594:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1595:../Dave/Generated/UCPROBE/lib_mem.c **** */
1596:../Dave/Generated/UCPROBE/lib_mem.c **** 
1597:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1598:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_PoolBlkGet (MEM_POOL    *p_pool,
1599:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size,
1600:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_ERR     *p_err)
1601:../Dave/Generated/UCPROBE/lib_mem.c **** {
1602:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blk;
1603:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
1604:../Dave/Generated/UCPROBE/lib_mem.c **** 
1605:../Dave/Generated/UCPROBE/lib_mem.c **** 
1606:../Dave/Generated/UCPROBE/lib_mem.c ****    (void)&size;                                                 /* Prevent possible 'variable unuse
1607:../Dave/Generated/UCPROBE/lib_mem.c **** 
1608:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1609:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Validate err ptr.               
1610:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1611:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1612:../Dave/Generated/UCPROBE/lib_mem.c **** 
1613:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate pool ptr.              
1614:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1615:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1616:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1617:../Dave/Generated/UCPROBE/lib_mem.c **** 
1618:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Validate req'd size as non-NULL.
1619:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1620:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1621:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1622:../Dave/Generated/UCPROBE/lib_mem.c **** 
1623:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size > p_pool->BlkSize) {                               /* Validate req'd size <= mem pool 
1624:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1625:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1626:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1627:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1628:../Dave/Generated/UCPROBE/lib_mem.c **** 
1629:../Dave/Generated/UCPROBE/lib_mem.c **** 
1630:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------------- GET MEM BLK FROM 
1631:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = DEF_NULL;
1632:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
1633:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
1634:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTblIx                     -= 1u;
1635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                                     = p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx];
1636:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = DEF_NULL;
1637:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1638:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
1639:../Dave/Generated/UCPROBE/lib_mem.c **** 
1640:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
1641:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_EMPTY;
1642:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
1643:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
1644:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1645:../Dave/Generated/UCPROBE/lib_mem.c **** 
1646:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
1647:../Dave/Generated/UCPROBE/lib_mem.c **** }
1648:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1649:../Dave/Generated/UCPROBE/lib_mem.c **** 
1650:../Dave/Generated/UCPROBE/lib_mem.c **** 
1651:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1652:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1653:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolBlkFree()
1654:../Dave/Generated/UCPROBE/lib_mem.c **** *
1655:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Free a memory block to memory pool.
1656:../Dave/Generated/UCPROBE/lib_mem.c **** *
1657:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to memory pool to free memory block.
1658:../Dave/Generated/UCPROBE/lib_mem.c **** *
1659:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_blk   Pointer to memory block address to free.
1660:../Dave/Generated/UCPROBE/lib_mem.c **** *
1661:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1662:../Dave/Generated/UCPROBE/lib_mem.c **** *
1663:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                        Operation was successful.
1664:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                    Argument 'p_pool'/'p_blk' passe
1665:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                       a NULL pointer.
1666:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR            Invalid memory block address.
1667:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL            Memory block address al
1668:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                        in memory pool.
1669:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL                   Pool is full.
1670:../Dave/Generated/UCPROBE/lib_mem.c **** *
1671:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1672:../Dave/Generated/UCPROBE/lib_mem.c **** *
1673:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1674:../Dave/Generated/UCPROBE/lib_mem.c **** *
1675:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1676:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkFree() should be used instead.
1677:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1678:../Dave/Generated/UCPROBE/lib_mem.c **** */
1679:../Dave/Generated/UCPROBE/lib_mem.c **** 
1680:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1681:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolBlkFree (MEM_POOL  *p_pool,
1682:../Dave/Generated/UCPROBE/lib_mem.c ****                        void      *p_blk,
1683:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_ERR   *p_err)
1684:../Dave/Generated/UCPROBE/lib_mem.c **** {
1685:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1686:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   tbl_ix;
1687:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_BOOLEAN  addr_valid;
1688:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1689:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
1690:../Dave/Generated/UCPROBE/lib_mem.c **** 
1691:../Dave/Generated/UCPROBE/lib_mem.c **** 
1692:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1693:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1694:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1695:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1696:../Dave/Generated/UCPROBE/lib_mem.c **** 
1697:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptrs.              
1698:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1699:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1700:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1701:../Dave/Generated/UCPROBE/lib_mem.c **** 
1702:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
1703:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1704:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1705:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1706:../Dave/Generated/UCPROBE/lib_mem.c **** 
1707:../Dave/Generated/UCPROBE/lib_mem.c ****     addr_valid = Mem_PoolBlkIsValidAddr(p_pool, p_blk);         /* Validate mem blk as valid pool b
1708:../Dave/Generated/UCPROBE/lib_mem.c ****     if (addr_valid != DEF_OK) {
1709:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR;
1710:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1711:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1712:../Dave/Generated/UCPROBE/lib_mem.c **** 
1713:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Make sure blk isn't already in f
1714:../Dave/Generated/UCPROBE/lib_mem.c ****     for (tbl_ix = 0u; tbl_ix < p_pool->BlkNbr; tbl_ix++) {
1715:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkFreeTbl[tbl_ix] == p_blk) {
1716:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
1717:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL;
1718:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
1719:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1720:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1721:../Dave/Generated/UCPROBE/lib_mem.c **** #else                                                           /* Double-free possibility if not i
1722:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
1723:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1724:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- FREE MEM BLK TO 
1725:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreeTblIx >= p_pool->BlkNbr) {
1726:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
1727:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
1728:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1729:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1730:../Dave/Generated/UCPROBE/lib_mem.c **** 
1731:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = p_blk;
1732:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
1733:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
1734:../Dave/Generated/UCPROBE/lib_mem.c **** 
1735:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1736:../Dave/Generated/UCPROBE/lib_mem.c **** }
1737:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1738:../Dave/Generated/UCPROBE/lib_mem.c **** 
1739:../Dave/Generated/UCPROBE/lib_mem.c **** 
1740:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1741:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1742:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_PoolBlkGetNbrAvail()
1743:../Dave/Generated/UCPROBE/lib_mem.c **** *
1744:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Get memory pool's remaining number of blocks available to allocate.
1745:../Dave/Generated/UCPROBE/lib_mem.c **** *
1746:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure.
1747:../Dave/Generated/UCPROBE/lib_mem.c **** *
1748:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err    Pointer to variable that will receive the return error code from this func
1749:../Dave/Generated/UCPROBE/lib_mem.c **** *
1750:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1751:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1752:../Dave/Generated/UCPROBE/lib_mem.c **** *
1753:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Remaining memory pool blocks,   if NO error(s).
1754:../Dave/Generated/UCPROBE/lib_mem.c **** *
1755:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                              otherwise.
1756:../Dave/Generated/UCPROBE/lib_mem.c **** *
1757:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1758:../Dave/Generated/UCPROBE/lib_mem.c **** *
1759:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1760:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkNbrAvailGet() should be used instead.
1761:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1762:../Dave/Generated/UCPROBE/lib_mem.c **** */
1763:../Dave/Generated/UCPROBE/lib_mem.c **** 
1764:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1765:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_POOL_BLK_QTY  Mem_PoolBlkGetNbrAvail (MEM_POOL  *p_pool,
1766:../Dave/Generated/UCPROBE/lib_mem.c ****                                           LIB_ERR   *p_err)
1767:../Dave/Generated/UCPROBE/lib_mem.c **** {
1768:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
1769:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
1770:../Dave/Generated/UCPROBE/lib_mem.c **** 
1771:../Dave/Generated/UCPROBE/lib_mem.c **** 
1772:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1773:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- VALIDATE RTN ERR
1774:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1775:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(0u);
1776:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1777:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ---------------- VALIDATE MEM PO
1778:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptr.               
1779:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err =  LIB_MEM_ERR_NULL_PTR;
1780:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1781:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1782:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1783:../Dave/Generated/UCPROBE/lib_mem.c **** 
1784:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
1785:../Dave/Generated/UCPROBE/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
1786:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
1787:../Dave/Generated/UCPROBE/lib_mem.c **** 
1788:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1789:../Dave/Generated/UCPROBE/lib_mem.c **** 
1790:../Dave/Generated/UCPROBE/lib_mem.c ****     return (nbr_avail);
1791:../Dave/Generated/UCPROBE/lib_mem.c **** }
1792:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1793:../Dave/Generated/UCPROBE/lib_mem.c **** 
1794:../Dave/Generated/UCPROBE/lib_mem.c **** 
1795:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1796:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1797:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_DynPoolCreate()
1798:../Dave/Generated/UCPROBE/lib_mem.c **** *
1799:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool.
1800:../Dave/Generated/UCPROBE/lib_mem.c **** *
1801:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1802:../Dave/Generated/UCPROBE/lib_mem.c **** *
1803:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool          Pointer to pool data.
1804:../Dave/Generated/UCPROBE/lib_mem.c **** *
1805:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1806:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1807:../Dave/Generated/UCPROBE/lib_mem.c **** *
1808:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1809:../Dave/Generated/UCPROBE/lib_mem.c **** *
1810:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1811:../Dave/Generated/UCPROBE/lib_mem.c **** *
1812:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1813:../Dave/Generated/UCPROBE/lib_mem.c **** *
1814:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1815:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1816:../Dave/Generated/UCPROBE/lib_mem.c **** *
1817:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1818:../Dave/Generated/UCPROBE/lib_mem.c **** *
1819:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1820:../Dave/Generated/UCPROBE/lib_mem.c **** *
1821:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   --------------------RETURNED BY Mem_DynPoolCreateInternal()----
1822:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
1823:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
1824:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
1825:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
1826:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1827:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1828:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1829:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1830:../Dave/Generated/UCPROBE/lib_mem.c **** *
1831:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
1832:../Dave/Generated/UCPROBE/lib_mem.c **** *
1833:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1834:../Dave/Generated/UCPROBE/lib_mem.c **** *
1835:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1836:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1837:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1838:../Dave/Generated/UCPROBE/lib_mem.c **** */
1839:../Dave/Generated/UCPROBE/lib_mem.c **** 
1840:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolCreate (const  CPU_CHAR      *p_name,
1841:../Dave/Generated/UCPROBE/lib_mem.c ****                                 MEM_DYN_POOL  *p_pool,
1842:../Dave/Generated/UCPROBE/lib_mem.c ****                                 MEM_SEG       *p_seg,
1843:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_size,
1844:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_align,
1845:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_init,
1846:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_max,
1847:../Dave/Generated/UCPROBE/lib_mem.c ****                                 LIB_ERR       *p_err)
1848:../Dave/Generated/UCPROBE/lib_mem.c **** {
1849:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1850:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1851:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
1852:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1853:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1854:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1855:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1856:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1857:../Dave/Generated/UCPROBE/lib_mem.c **** 
1858:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
1859:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
1860:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
1861:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_size,
1862:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_align,
1863:../Dave/Generated/UCPROBE/lib_mem.c ****                               LIB_MEM_PADDING_ALIGN_NONE,
1864:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_init,
1865:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_max,
1866:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
1867:../Dave/Generated/UCPROBE/lib_mem.c **** }
1868:../Dave/Generated/UCPROBE/lib_mem.c **** 
1869:../Dave/Generated/UCPROBE/lib_mem.c **** 
1870:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1871:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1872:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        Mem_DynPoolCreateHW()
1873:../Dave/Generated/UCPROBE/lib_mem.c **** *
1874:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool. Memory blocks will be padded according to memory seg
1875:../Dave/Generated/UCPROBE/lib_mem.c **** *               properties.
1876:../Dave/Generated/UCPROBE/lib_mem.c **** *
1877:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1878:../Dave/Generated/UCPROBE/lib_mem.c **** *
1879:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool          Pointer to pool data.
1880:../Dave/Generated/UCPROBE/lib_mem.c **** *
1881:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will allocate fro
1882:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1883:../Dave/Generated/UCPROBE/lib_mem.c **** *
1884:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1885:../Dave/Generated/UCPROBE/lib_mem.c **** *
1886:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1887:../Dave/Generated/UCPROBE/lib_mem.c **** *
1888:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1889:../Dave/Generated/UCPROBE/lib_mem.c **** *
1890:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1891:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1892:../Dave/Generated/UCPROBE/lib_mem.c **** *
1893:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1894:../Dave/Generated/UCPROBE/lib_mem.c **** *
1895:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1896:../Dave/Generated/UCPROBE/lib_mem.c **** *
1897:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -------------------RETURNED BY Mem_DynPoolCreateInternal()-----
1898:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1899:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1900:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1901:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1902:../Dave/Generated/UCPROBE/lib_mem.c **** *
1903:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
1904:../Dave/Generated/UCPROBE/lib_mem.c **** *
1905:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1906:../Dave/Generated/UCPROBE/lib_mem.c **** *
1907:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1908:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1909:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1910:../Dave/Generated/UCPROBE/lib_mem.c **** */
1911:../Dave/Generated/UCPROBE/lib_mem.c **** 
1912:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolCreateHW (const  CPU_CHAR      *p_name,
1913:../Dave/Generated/UCPROBE/lib_mem.c ****                                   MEM_DYN_POOL  *p_pool,
1914:../Dave/Generated/UCPROBE/lib_mem.c ****                                   MEM_SEG       *p_seg,
1915:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_size,
1916:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_align,
1917:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_init,
1918:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_max,
1919:../Dave/Generated/UCPROBE/lib_mem.c ****                                   LIB_ERR       *p_err)
1920:../Dave/Generated/UCPROBE/lib_mem.c **** {
1921:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1922:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1923:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
1924:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1925:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1926:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1927:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1928:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1929:../Dave/Generated/UCPROBE/lib_mem.c **** 
1930:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
1931:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
1932:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
1933:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_size,
1934:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_align,
1935:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg->PaddingAlign,
1936:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_init,
1937:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_max,
1938:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
1939:../Dave/Generated/UCPROBE/lib_mem.c **** }
1940:../Dave/Generated/UCPROBE/lib_mem.c **** 
1941:../Dave/Generated/UCPROBE/lib_mem.c **** 
1942:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1943:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1944:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_DynPoolBlkGet()
1945:../Dave/Generated/UCPROBE/lib_mem.c **** *
1946:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets a memory block from specified pool, growing it if needed.
1947:../Dave/Generated/UCPROBE/lib_mem.c **** *
1948:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
1949:../Dave/Generated/UCPROBE/lib_mem.c **** *
1950:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1951:../Dave/Generated/UCPROBE/lib_mem.c **** *
1952:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                    Operation was successful.
1953:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Pool data pointer NULL.
1954:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY              Pools is empty.
1955:../Dave/Generated/UCPROBE/lib_mem.c **** *
1956:../Dave/Generated/UCPROBE/lib_mem.c **** *                           ----------------------RETURNED BY Mem_SegAllocInternal()---------------
1957:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignment requ
1958:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size specified
1959:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Error or segment data pointer NULL.
1960:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF                 Allocation would overflow memory se
1961:../Dave/Generated/UCPROBE/lib_mem.c **** *
1962:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if successful.
1963:../Dave/Generated/UCPROBE/lib_mem.c **** *
1964:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1965:../Dave/Generated/UCPROBE/lib_mem.c **** *
1966:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1967:../Dave/Generated/UCPROBE/lib_mem.c **** *
1968:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1969:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1970:../Dave/Generated/UCPROBE/lib_mem.c **** */
1971:../Dave/Generated/UCPROBE/lib_mem.c **** 
1972:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_DynPoolBlkGet (MEM_DYN_POOL  *p_pool,
1973:../Dave/Generated/UCPROBE/lib_mem.c ****                           LIB_ERR       *p_err)
1974:../Dave/Generated/UCPROBE/lib_mem.c **** {
1975:../Dave/Generated/UCPROBE/lib_mem.c ****            void      *p_blk;
1976:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_CHAR  *p_pool_name;
1977:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
1978:../Dave/Generated/UCPROBE/lib_mem.c **** 
1979:../Dave/Generated/UCPROBE/lib_mem.c **** 
1980:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1981:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
1982:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1983:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1984:../Dave/Generated/UCPROBE/lib_mem.c **** 
1985:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
1986:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1987:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1988:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1989:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1990:../Dave/Generated/UCPROBE/lib_mem.c **** 
1991:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Ensure pool is not empty if qty 
1992:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
1993:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
1994:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
1995:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
1996:../Dave/Generated/UCPROBE/lib_mem.c **** 
1997:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_EMPTY;
1998:../Dave/Generated/UCPROBE/lib_mem.c ****             return (DEF_NULL);
1999:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2000:../Dave/Generated/UCPROBE/lib_mem.c **** 
2001:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkAllocCnt++;
2002:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2003:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2004:../Dave/Generated/UCPROBE/lib_mem.c **** 
2005:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- ALLOC FROM FREE 
2006:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
2007:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
2008:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
2009:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = *((void **)p_blk);
2010:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2011:../Dave/Generated/UCPROBE/lib_mem.c **** 
2012:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
2013:../Dave/Generated/UCPROBE/lib_mem.c **** 
2014:../Dave/Generated/UCPROBE/lib_mem.c ****         return (p_blk);
2015:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2016:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
2017:../Dave/Generated/UCPROBE/lib_mem.c **** 
2018:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ ALLOC NEW BLK
2019:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2020:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_name = p_pool->NamePtr;
2021:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2022:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_name = DEF_NULL;
2023:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2024:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_pool_name,
2025:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->PoolSegPtr,
2026:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkSize,
2027:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkAlign,
2028:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkPaddingAlign,
2029:../Dave/Generated/UCPROBE/lib_mem.c ****                                  DEF_NULL,
2030:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
2031:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2032:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2033:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2034:../Dave/Generated/UCPROBE/lib_mem.c **** 
2035:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
2036:../Dave/Generated/UCPROBE/lib_mem.c **** }
2037:../Dave/Generated/UCPROBE/lib_mem.c **** 
2038:../Dave/Generated/UCPROBE/lib_mem.c **** 
2039:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2040:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2041:../Dave/Generated/UCPROBE/lib_mem.c **** *                                         Mem_DynPoolBlkFree()
2042:../Dave/Generated/UCPROBE/lib_mem.c **** *
2043:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Frees memory block, making it available for future use.
2044:../Dave/Generated/UCPROBE/lib_mem.c **** *
2045:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2046:../Dave/Generated/UCPROBE/lib_mem.c **** *
2047:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_blk   Pointer to first byte of memory block.
2048:../Dave/Generated/UCPROBE/lib_mem.c **** *
2049:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2050:../Dave/Generated/UCPROBE/lib_mem.c **** *
2051:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE        Operation was successful.
2052:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR    'p_pool' or 'p_blk' pointer passed is NULL.
2053:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL   Pool is full.
2054:../Dave/Generated/UCPROBE/lib_mem.c **** *
2055:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
2056:../Dave/Generated/UCPROBE/lib_mem.c **** *
2057:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2058:../Dave/Generated/UCPROBE/lib_mem.c **** *
2059:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2060:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2061:../Dave/Generated/UCPROBE/lib_mem.c **** */
2062:../Dave/Generated/UCPROBE/lib_mem.c **** 
2063:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolBlkFree (MEM_DYN_POOL  *p_pool,
2064:../Dave/Generated/UCPROBE/lib_mem.c ****                           void          *p_blk,
2065:../Dave/Generated/UCPROBE/lib_mem.c ****                           LIB_ERR       *p_err)
2066:../Dave/Generated/UCPROBE/lib_mem.c **** {
2067:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
2068:../Dave/Generated/UCPROBE/lib_mem.c **** 
2069:../Dave/Generated/UCPROBE/lib_mem.c **** 
2070:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2071:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2072:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2073:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2074:../Dave/Generated/UCPROBE/lib_mem.c **** 
2075:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2076:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2077:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2078:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2079:../Dave/Generated/UCPROBE/lib_mem.c **** 
2080:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
2081:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2082:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2083:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2084:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2085:../Dave/Generated/UCPROBE/lib_mem.c **** 
2086:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {       /* Ensure pool is not full.        
2087:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
2088:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
2089:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
2090:../Dave/Generated/UCPROBE/lib_mem.c **** 
2091:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_FULL;
2092:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2093:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2094:../Dave/Generated/UCPROBE/lib_mem.c **** 
2095:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkAllocCnt--;
2096:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2097:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2098:../Dave/Generated/UCPROBE/lib_mem.c **** 
2099:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
2100:../Dave/Generated/UCPROBE/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
2101:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
2102:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
2103:../Dave/Generated/UCPROBE/lib_mem.c **** 
2104:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
2105:../Dave/Generated/UCPROBE/lib_mem.c **** }
2106:../Dave/Generated/UCPROBE/lib_mem.c **** 
2107:../Dave/Generated/UCPROBE/lib_mem.c **** 
2108:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2109:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2110:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_DynPoolBlkNbrAvailGet()
2111:../Dave/Generated/UCPROBE/lib_mem.c **** *
2112:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets number of available blocks in dynamic memory pool. This call will fail with a
2113:../Dave/Generated/UCPROBE/lib_mem.c **** *               dynamic memory pool for which no limit was set at creation.
2114:../Dave/Generated/UCPROBE/lib_mem.c **** *
2115:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2116:../Dave/Generated/UCPROBE/lib_mem.c **** *
2117:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2118:../Dave/Generated/UCPROBE/lib_mem.c **** *
2119:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
2120:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            'p_pool' pointer passed is NULL.
2121:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_UNLIMITED      Pool has no specified limit.
2122:../Dave/Generated/UCPROBE/lib_mem.c **** *
2123:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Number of blocks available in dynamic memory pool, if successful.
2124:../Dave/Generated/UCPROBE/lib_mem.c **** *
2125:../Dave/Generated/UCPROBE/lib_mem.c **** *               0, if pool is empty or if an error occurred.
2126:../Dave/Generated/UCPROBE/lib_mem.c **** *
2127:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2128:../Dave/Generated/UCPROBE/lib_mem.c **** *
2129:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : None.
2130:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2131:../Dave/Generated/UCPROBE/lib_mem.c **** */
2132:../Dave/Generated/UCPROBE/lib_mem.c **** 
2133:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_DynPoolBlkNbrAvailGet (MEM_DYN_POOL  *p_pool,
2134:../Dave/Generated/UCPROBE/lib_mem.c ****                                        LIB_ERR       *p_err)
2135:../Dave/Generated/UCPROBE/lib_mem.c **** {
2136:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  blk_nbr_avail;
2137:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
2138:../Dave/Generated/UCPROBE/lib_mem.c **** 
2139:../Dave/Generated/UCPROBE/lib_mem.c **** 
2140:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2141:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2142:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2143:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2144:../Dave/Generated/UCPROBE/lib_mem.c **** 
2145:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2146:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2147:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
2148:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2149:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2150:../Dave/Generated/UCPROBE/lib_mem.c **** 
2151:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
2152:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
2153:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
2154:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2155:../Dave/Generated/UCPROBE/lib_mem.c **** 
2156:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
2157:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2158:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_nbr_avail = 0u;
2159:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err         = LIB_MEM_ERR_POOL_UNLIMITED;
2160:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2161:../Dave/Generated/UCPROBE/lib_mem.c **** 
2162:../Dave/Generated/UCPROBE/lib_mem.c ****     return (blk_nbr_avail);
2163:../Dave/Generated/UCPROBE/lib_mem.c **** }
2164:../Dave/Generated/UCPROBE/lib_mem.c **** 
2165:../Dave/Generated/UCPROBE/lib_mem.c **** 
2166:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2167:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2168:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_OutputUsage()
2169:../Dave/Generated/UCPROBE/lib_mem.c **** *
2170:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Outputs memory usage report through 'out_fnct'.
2171:../Dave/Generated/UCPROBE/lib_mem.c **** *
2172:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : out_fnct        Pointer to output function.
2173:../Dave/Generated/UCPROBE/lib_mem.c **** *
2174:../Dave/Generated/UCPROBE/lib_mem.c **** *               print_details   DEF_YES, if the size of each allocation should be printed.
2175:../Dave/Generated/UCPROBE/lib_mem.c **** *                               DEF_NO,  otherwise.
2176:../Dave/Generated/UCPROBE/lib_mem.c **** *
2177:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2178:../Dave/Generated/UCPROBE/lib_mem.c **** *
2179:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
2180:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            'out_fnct' pointer passed is NU
2181:../Dave/Generated/UCPROBE/lib_mem.c **** *
2182:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegRemSizeGet()-----------
2183:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
2184:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
2185:../Dave/Generated/UCPROBE/lib_mem.c **** *
2186:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
2187:../Dave/Generated/UCPROBE/lib_mem.c **** *
2188:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2189:../Dave/Generated/UCPROBE/lib_mem.c **** *
2190:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2191:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2192:../Dave/Generated/UCPROBE/lib_mem.c **** */
2193:../Dave/Generated/UCPROBE/lib_mem.c **** 
2194:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2195:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_OutputUsage(void     (*out_fnct) (CPU_CHAR *),
2196:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR   *p_err)
2197:../Dave/Generated/UCPROBE/lib_mem.c **** {
2198:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CHAR   str[DEF_INT_32U_NBR_DIG_MAX];
2199:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG   *p_seg;
2200:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
2201:../Dave/Generated/UCPROBE/lib_mem.c **** 
2202:../Dave/Generated/UCPROBE/lib_mem.c **** 
2203:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2204:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2205:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2206:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2207:../Dave/Generated/UCPROBE/lib_mem.c **** 
2208:../Dave/Generated/UCPROBE/lib_mem.c ****     if (out_fnct == DEF_NULL) {                                 /* Chk for NULL out fnct ptr.      
2209:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2210:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2211:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2212:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2213:../Dave/Generated/UCPROBE/lib_mem.c **** 
2214:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("---------------- Memory allocation info ----------------\r\n");
2215:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("| Type    | Size       | Free size  | Name\r\n");
2216:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("|---------|------------|------------|-------------------\r\n");
2217:../Dave/Generated/UCPROBE/lib_mem.c **** 
2218:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
2219:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg = Mem_SegHeadPtr;
2220:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_seg != DEF_NULL) {
2221:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SIZE_T       rem_size;
2222:../Dave/Generated/UCPROBE/lib_mem.c ****         MEM_SEG_INFO     seg_info;
2223:../Dave/Generated/UCPROBE/lib_mem.c ****         MEM_ALLOC_INFO  *p_alloc;
2224:../Dave/Generated/UCPROBE/lib_mem.c **** 
2225:../Dave/Generated/UCPROBE/lib_mem.c **** 
2226:../Dave/Generated/UCPROBE/lib_mem.c ****         rem_size = Mem_SegRemSizeGet(p_seg, 1u, &seg_info, p_err);
2227:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
2228:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2229:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2230:../Dave/Generated/UCPROBE/lib_mem.c **** 
2231:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct("| Section | ");
2232:../Dave/Generated/UCPROBE/lib_mem.c **** 
2233:../Dave/Generated/UCPROBE/lib_mem.c ****         (void)Str_FmtNbr_Int32U(seg_info.TotalSize,
2234:../Dave/Generated/UCPROBE/lib_mem.c ****                                 10u,
2235:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2236:../Dave/Generated/UCPROBE/lib_mem.c ****                                 ' ',
2237:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NO,
2238:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_YES,
2239:../Dave/Generated/UCPROBE/lib_mem.c ****                                &str[0u]);
2240:../Dave/Generated/UCPROBE/lib_mem.c **** 
2241:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(str);
2242:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(" | ");
2243:../Dave/Generated/UCPROBE/lib_mem.c **** 
2244:../Dave/Generated/UCPROBE/lib_mem.c ****         (void)Str_FmtNbr_Int32U(rem_size,
2245:../Dave/Generated/UCPROBE/lib_mem.c ****                                 10u,
2246:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2247:../Dave/Generated/UCPROBE/lib_mem.c ****                                 ' ',
2248:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NO,
2249:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_YES,
2250:../Dave/Generated/UCPROBE/lib_mem.c ****                                &str[0u]);
2251:../Dave/Generated/UCPROBE/lib_mem.c **** 
2252:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(str);
2253:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(" | ");
2254:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct((p_seg->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_seg->NamePtr : (CPU_CHAR *)"Unknown")
2255:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct("\r\n");
2256:../Dave/Generated/UCPROBE/lib_mem.c **** 
2257:../Dave/Generated/UCPROBE/lib_mem.c ****         p_alloc = p_seg->AllocInfoHeadPtr;
2258:../Dave/Generated/UCPROBE/lib_mem.c ****         while (p_alloc != DEF_NULL) {
2259:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct("| -> Obj  | ");
2260:../Dave/Generated/UCPROBE/lib_mem.c **** 
2261:../Dave/Generated/UCPROBE/lib_mem.c ****             (void)Str_FmtNbr_Int32U(p_alloc->Size,
2262:../Dave/Generated/UCPROBE/lib_mem.c ****                                     10u,
2263:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_NBR_BASE_DEC,
2264:../Dave/Generated/UCPROBE/lib_mem.c ****                                     ' ',
2265:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_NO,
2266:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_YES,
2267:../Dave/Generated/UCPROBE/lib_mem.c ****                                    &str[0u]);
2268:../Dave/Generated/UCPROBE/lib_mem.c **** 
2269:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct(str);
2270:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct(" |            | ");
2271:../Dave/Generated/UCPROBE/lib_mem.c **** 
2272:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct((p_alloc->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_alloc->NamePtr : (CPU_CHAR *)"U
2273:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct("\r\n");
2274:../Dave/Generated/UCPROBE/lib_mem.c **** 
2275:../Dave/Generated/UCPROBE/lib_mem.c ****             p_alloc = p_alloc->NextPtr;
2276:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2277:../Dave/Generated/UCPROBE/lib_mem.c **** 
2278:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = p_seg->NextPtr;
2279:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2280:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
2281:../Dave/Generated/UCPROBE/lib_mem.c **** 
2282:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
2283:../Dave/Generated/UCPROBE/lib_mem.c **** }
2284:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2285:../Dave/Generated/UCPROBE/lib_mem.c **** 
2286:../Dave/Generated/UCPROBE/lib_mem.c **** 
2287:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2288:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2289:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2290:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           LOCAL FUNCTIONS
2291:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2292:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2293:../Dave/Generated/UCPROBE/lib_mem.c **** */
2294:../Dave/Generated/UCPROBE/lib_mem.c **** 
2295:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2296:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2297:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       Mem_SegCreateCritical()
2298:../Dave/Generated/UCPROBE/lib_mem.c **** *
2299:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation or dynamic po
2300:../Dave/Generated/UCPROBE/lib_mem.c **** *
2301:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
2302:../Dave/Generated/UCPROBE/lib_mem.c **** *
2303:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
2304:../Dave/Generated/UCPROBE/lib_mem.c **** *               -----           Argument validated by caller.
2305:../Dave/Generated/UCPROBE/lib_mem.c **** *
2306:../Dave/Generated/UCPROBE/lib_mem.c **** *               seg_base_addr   Segment's first byte address.
2307:../Dave/Generated/UCPROBE/lib_mem.c **** *
2308:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2309:../Dave/Generated/UCPROBE/lib_mem.c **** *                               from this memory segment. MUST be a power of 2.
2310:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_PADDING_ALIGN_NONE means no padding.
2311:../Dave/Generated/UCPROBE/lib_mem.c **** *               -------------   Argument validated by caller.
2312:../Dave/Generated/UCPROBE/lib_mem.c **** *
2313:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Total size of segment, in bytes.
2314:../Dave/Generated/UCPROBE/lib_mem.c **** *               ----            Argument validated by caller.
2315:../Dave/Generated/UCPROBE/lib_mem.c **** *
2316:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to segment data, if successful.
2317:../Dave/Generated/UCPROBE/lib_mem.c **** *
2318:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2319:../Dave/Generated/UCPROBE/lib_mem.c **** *
2320:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2321:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegCreate().
2322:../Dave/Generated/UCPROBE/lib_mem.c **** *
2323:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2324:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2325:../Dave/Generated/UCPROBE/lib_mem.c **** */
2326:../Dave/Generated/UCPROBE/lib_mem.c **** 
2327:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_SegCreateCritical(const  CPU_CHAR    *p_name,
2328:../Dave/Generated/UCPROBE/lib_mem.c ****                                            MEM_SEG     *p_seg,
2329:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_ADDR     seg_base_addr,
2330:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_SIZE_T   padding_align,
2331:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_SIZE_T   size)
2332:../Dave/Generated/UCPROBE/lib_mem.c **** {
2333:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrBase         =  seg_base_addr;
2334:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
  53              	 .loc 1 2334 0
  54 000e 094A     	 ldr r2,.L2+8
2333:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
  55              	 .loc 1 2333 0
  56 0010 094B     	 ldr r3,.L2+12
  57              	 .loc 1 2334 0
  58 0012 AA18     	 add r2,r5,r2
  59 0014 5A60     	 str r2,[r3,#4]
2335:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
2336:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NextPtr          =  Mem_SegHeadPtr;
  60              	 .loc 1 2336 0
  61 0016 2268     	 ldr r2,[r4]
2333:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
  62              	 .loc 1 2333 0
  63 0018 1D60     	 str r5,[r3]
  64              	 .loc 1 2336 0
  65 001a DA60     	 str r2,[r3,#12]
2337:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->PaddingAlign     =  padding_align;
  66              	 .loc 1 2337 0
  67 001c 0122     	 mov r2,#1
2335:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
  68              	 .loc 1 2335 0
  69 001e 9D60     	 str r5,[r3,#8]
  70              	 .loc 1 2337 0
  71 0020 1A61     	 str r2,[r3,#16]
2338:../Dave/Generated/UCPROBE/lib_mem.c **** 
2339:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2340:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NamePtr          = p_name;
2341:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AllocInfoHeadPtr = DEF_NULL;
2342:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2343:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)&p_name;
2344:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2345:../Dave/Generated/UCPROBE/lib_mem.c **** 
2346:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegHeadPtr = p_seg;
  72              	 .loc 1 2346 0
  73 0022 2360     	 str r3,[r4]
  74              	.LBE18:
  75              	.LBE17:
  76              	.LBE16:
  77              	.LBE15:
  78              	.LBE21:
 237:../Dave/Generated/UCPROBE/lib_mem.c **** 
  79              	 .loc 1 237 0
  80              	 
  81              	.LBB22:
  82              	.LBB20:
  83              	.LBB19:
 938:../Dave/Generated/UCPROBE/lib_mem.c **** 
  84              	 .loc 1 938 0
  85 0024 FFF7FEFF 	 bl CPU_SR_Restore
  86              	.LVL2:
  87              	.LVL3:
  88              	.LBE19:
  89              	.LBE20:
  90              	.LBE22:
 237:../Dave/Generated/UCPROBE/lib_mem.c **** 
  91              	 .loc 1 237 0
  92 0028 38BD     	 pop {r3,r4,r5,pc}
  93              	.L3:
  94 002a C046     	 .align 2
  95              	.L2:
  96 002c 00000000 	 .word Mem_SegHeadPtr
  97 0030 00000000 	 .word Mem_Heap
  98 0034 FF030000 	 .word 1023
  99 0038 00000000 	 .word Mem_SegHeap
 100              	 .cfi_endproc
 101              	.LFE0:
 103              	 .section .text.Mem_Clr,"ax",%progbits
 104              	 .align 2
 105              	 .global Mem_Clr
 106              	 .code 16
 107              	 .thumb_func
 109              	Mem_Clr:
 110              	.LFB1:
 264:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_Set(pmem,
 111              	 .loc 1 264 0
 112              	 .cfi_startproc
 113              	.LVL4:
 114              	.LBB25:
 115              	.LBB26:
 332:../Dave/Generated/UCPROBE/lib_mem.c **** 
 116              	 .loc 1 332 0
 117 0000 0323     	 mov r3,#3
 118              	.LBE26:
 119              	.LBE25:
 264:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_Set(pmem,
 120              	 .loc 1 264 0
 121 0002 70B5     	 push {r4,r5,r6,lr}
 122              	.LCFI1:
 123              	 .cfi_def_cfa_offset 16
 124              	 .cfi_offset 4,-16
 125              	 .cfi_offset 5,-12
 126              	 .cfi_offset 6,-8
 127              	 .cfi_offset 14,-4
 128              	.LBB30:
 129              	.LBB27:
 332:../Dave/Generated/UCPROBE/lib_mem.c **** 
 130              	 .loc 1 332 0
 131 0004 0340     	 and r3,r0
 132              	.LVL5:
 133              	.LBE27:
 134              	.LBE30:
 264:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_Set(pmem,
 135              	 .loc 1 264 0
 136 0006 051C     	 mov r5,r0
 137 0008 0C1C     	 mov r4,r1
 138              	.LBB31:
 139              	.LBB28:
 335:../Dave/Generated/UCPROBE/lib_mem.c ****         i = mem_align_mod;
 140              	 .loc 1 335 0
 141 000a 002B     	 cmp r3,#0
 142 000c 1AD0     	 beq .L5
 143              	.LVL6:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 144              	 .loc 1 337 0
 145 000e 0029     	 cmp r1,#0
 146 0010 2DD0     	 beq .L4
 339:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 147              	 .loc 1 339 0
 148 0012 0022     	 mov r2,#0
 149 0014 411C     	 add r1,r0,#1
 150              	.LVL7:
 151 0016 0270     	 strb r2,[r0]
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 152              	 .loc 1 340 0
 153 0018 601E     	 sub r0,r4,#1
 154              	.LVL8:
 341:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 155              	 .loc 1 341 0
 156 001a 5E1C     	 add r6,r3,#1
 157              	.LVL9:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 158              	 .loc 1 337 0
 159 001c 0028     	 cmp r0,#0
 160 001e 26D0     	 beq .L4
 161 0020 042E     	 cmp r6,#4
 162 0022 25D0     	 beq .L14
 163              	.LVL10:
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 164              	 .loc 1 340 0
 165 0024 A01E     	 sub r0,r4,#2
 166              	.LVL11:
 339:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 167              	 .loc 1 339 0
 168 0026 A91C     	 add r1,r5,#2
 169              	.LVL12:
 170 0028 6A70     	 strb r2,[r5,#1]
 171              	.LVL13:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 172              	 .loc 1 337 0
 173 002a 0028     	 cmp r0,#0
 174 002c 1FD0     	 beq .L4
 175 002e 022B     	 cmp r3,#2
 176 0030 1ED0     	 beq .L14
 177              	.LVL14:
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 178              	 .loc 1 340 0
 179 0032 033C     	 sub r4,r4,#3
 180              	.LVL15:
 339:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 181              	 .loc 1 339 0
 182 0034 E91C     	 add r1,r5,#3
 183              	.LVL16:
 184 0036 AA70     	 strb r2,[r5,#2]
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 185              	 .loc 1 337 0
 186 0038 002C     	 cmp r4,#0
 187 003a 18D0     	 beq .L4
 188              	.LVL17:
 189              	.L8:
 346:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 190              	 .loc 1 346 0
 191 003c 0D1C     	 mov r5,r1
 192              	.LVL18:
 193 003e 032C     	 cmp r4,#3
 194 0040 02D8     	 bhi .L12
 195 0042 0FE0     	 b .L10
 196              	.LVL19:
 197              	.L5:
 198 0044 0329     	 cmp r1,#3
 199 0046 0BD9     	 bls .L9
 200              	.LVL20:
 201              	.L12:
 347:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 202              	 .loc 1 347 0
 203 0048 261F     	 sub r6,r4,#4
 204 004a B608     	 lsr r6,r6,#2
 205 004c 0136     	 add r6,r6,#1
 206 004e B600     	 lsl r6,r6,#2
 207 0050 281C     	 mov r0,r5
 208 0052 0021     	 mov r1,#0
 209 0054 321C     	 mov r2,r6
 210 0056 FFF7FEFF 	 bl memset
 211              	.LVL21:
 212 005a 0323     	 mov r3,#3
 213              	.LVL22:
 214 005c AD19     	 add r5,r5,r6
 215 005e 1C40     	 and r4,r3
 216              	.LVL23:
 217              	.L9:
 352:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08++   = data_val;
 218              	 .loc 1 352 0
 219 0060 002C     	 cmp r4,#0
 220 0062 04D0     	 beq .L4
 221              	.LVL24:
 222              	.L10:
 223 0064 281C     	 mov r0,r5
 224 0066 0021     	 mov r1,#0
 225 0068 221C     	 mov r2,r4
 226 006a FFF7FEFF 	 bl memset
 227              	.LVL25:
 228              	.L4:
 229              	.LBE28:
 230              	.LBE31:
 268:../Dave/Generated/UCPROBE/lib_mem.c **** 
 231              	 .loc 1 268 0
 232              	 
 233 006e 70BD     	 pop {r4,r5,r6,pc}
 234              	.LVL26:
 235              	.L14:
 236              	.LBB32:
 237              	.LBB29:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 238              	 .loc 1 337 0
 239 0070 041C     	 mov r4,r0
 240              	.LVL27:
 241 0072 E3E7     	 b .L8
 242              	.LBE29:
 243              	.LBE32:
 244              	 .cfi_endproc
 245              	.LFE1:
 247              	 .section .text.Mem_Set,"ax",%progbits
 248              	 .align 2
 249              	 .global Mem_Set
 250              	 .code 16
 251              	 .thumb_func
 253              	Mem_Set:
 254              	.LFB2:
 306:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   size_rem;
 255              	 .loc 1 306 0
 256              	 .cfi_startproc
 257              	.LVL28:
 258 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 259              	.LCFI2:
 260              	 .cfi_def_cfa_offset 24
 261              	 .cfi_offset 3,-24
 262              	 .cfi_offset 4,-20
 263              	 .cfi_offset 5,-16
 264              	 .cfi_offset 6,-12
 265              	 .cfi_offset 7,-8
 266              	 .cfi_offset 14,-4
 332:../Dave/Generated/UCPROBE/lib_mem.c **** 
 267              	 .loc 1 332 0
 268 0002 0323     	 mov r3,#3
 327:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 269              	 .loc 1 327 0
 270 0004 0C02     	 lsl r4,r1,#8
 271              	.LVL29:
 328:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 272              	 .loc 1 328 0
 273 0006 0C43     	 orr r4,r1
 274              	.LVL30:
 327:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 275              	 .loc 1 327 0
 276 0008 2402     	 lsl r4,r4,#8
 277              	.LVL31:
 328:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 278              	 .loc 1 328 0
 279 000a 0C43     	 orr r4,r1
 280              	.LVL32:
 327:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 281              	 .loc 1 327 0
 282 000c 2402     	 lsl r4,r4,#8
 283              	.LVL33:
 328:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 284              	 .loc 1 328 0
 285 000e 0C43     	 orr r4,r1
 286              	.LVL34:
 332:../Dave/Generated/UCPROBE/lib_mem.c **** 
 287              	 .loc 1 332 0
 288 0010 0340     	 and r3,r0
 289              	.LVL35:
 335:../Dave/Generated/UCPROBE/lib_mem.c ****         i = mem_align_mod;
 290              	 .loc 1 335 0
 291 0012 19D0     	 beq .L27
 292              	.LVL36:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 293              	 .loc 1 337 0
 294 0014 002A     	 cmp r2,#0
 295 0016 28D0     	 beq .L26
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 296              	 .loc 1 340 0
 297 0018 561E     	 sub r6,r2,#1
 339:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 298              	 .loc 1 339 0
 299 001a 451C     	 add r5,r0,#1
 300              	.LVL37:
 301 001c 0170     	 strb r1,[r0]
 302              	.LVL38:
 341:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 303              	 .loc 1 341 0
 304 001e 5F1C     	 add r7,r3,#1
 305              	.LVL39:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 306              	 .loc 1 337 0
 307 0020 002E     	 cmp r6,#0
 308 0022 22D0     	 beq .L26
 309 0024 042F     	 cmp r7,#4
 310 0026 21D0     	 beq .L37
 311              	.LVL40:
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 312              	 .loc 1 340 0
 313 0028 961E     	 sub r6,r2,#2
 314              	.LVL41:
 339:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 315              	 .loc 1 339 0
 316 002a 851C     	 add r5,r0,#2
 317              	.LVL42:
 318 002c 4170     	 strb r1,[r0,#1]
 319              	.LVL43:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 320              	 .loc 1 337 0
 321 002e 002E     	 cmp r6,#0
 322 0030 1BD0     	 beq .L26
 323 0032 022B     	 cmp r3,#2
 324 0034 1AD0     	 beq .L37
 325              	.LVL44:
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 326              	 .loc 1 340 0
 327 0036 033A     	 sub r2,r2,#3
 328              	.LVL45:
 339:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 329              	 .loc 1 339 0
 330 0038 C51C     	 add r5,r0,#3
 331              	.LVL46:
 332 003a 8170     	 strb r1,[r0,#2]
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 333              	 .loc 1 337 0
 334 003c 002A     	 cmp r2,#0
 335 003e 14D0     	 beq .L26
 336              	.LVL47:
 337              	.L30:
 346:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 338              	 .loc 1 346 0
 339 0040 281C     	 mov r0,r5
 340              	.LVL48:
 341 0042 032A     	 cmp r2,#3
 342 0044 02D8     	 bhi .L35
 343              	.LVL49:
 344 0046 0EE0     	 b .L33
 345              	.LVL50:
 346              	.L27:
 347 0048 032A     	 cmp r2,#3
 348 004a 0AD9     	 bls .L31
 349              	.LVL51:
 350              	.L35:
 351 004c 151F     	 sub r5,r2,#4
 352 004e AD08     	 lsr r5,r5,#2
 353 0050 0135     	 add r5,r5,#1
 354 0052 AD00     	 lsl r5,r5,#2
 355 0054 031C     	 mov r3,r0
 356              	.LVL52:
 357 0056 4019     	 add r0,r0,r5
 358              	.LVL53:
 359              	.L32:
 347:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 360              	 .loc 1 347 0
 361 0058 10C3     	 stmia r3!,{r4}
 362              	.LVL54:
 346:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 363              	 .loc 1 346 0
 364 005a 9842     	 cmp r0,r3
 365 005c FCD1     	 bne .L32
 366 005e 0323     	 mov r3,#3
 367              	.LVL55:
 368 0060 1A40     	 and r2,r3
 369              	.LVL56:
 370              	.L31:
 352:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08++   = data_val;
 371              	 .loc 1 352 0
 372 0062 002A     	 cmp r2,#0
 373 0064 01D0     	 beq .L26
 374              	.LVL57:
 375              	.L33:
 376 0066 FFF7FEFF 	 bl memset
 377              	.LVL58:
 378              	.L26:
 356:../Dave/Generated/UCPROBE/lib_mem.c **** 
 379              	 .loc 1 356 0
 380              	 
 381              	.LVL59:
 382 006a F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 383              	.LVL60:
 384              	.L37:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 385              	 .loc 1 337 0
 386 006c 321C     	 mov r2,r6
 387              	.LVL61:
 388 006e E7E7     	 b .L30
 389              	 .cfi_endproc
 390              	.LFE2:
 392              	 .section .text.Mem_Copy,"ax",%progbits
 393              	 .align 2
 394              	 .global Mem_Copy
 395              	 .code 16
 396              	 .thumb_func
 398              	Mem_Copy:
 399              	.LFB3:
 414:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 400              	 .loc 1 414 0
 401              	 .cfi_startproc
 402              	.LVL62:
 403 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 404              	.LCFI3:
 405              	 .cfi_def_cfa_offset 20
 406              	 .cfi_offset 4,-20
 407              	 .cfi_offset 5,-16
 408              	 .cfi_offset 6,-12
 409              	 .cfi_offset 7,-8
 410              	 .cfi_offset 14,-4
 445:../Dave/Generated/UCPROBE/lib_mem.c **** 
 411              	 .loc 1 445 0
 412 0002 0B1A     	 sub r3,r1,r0
 448:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 413              	 .loc 1 448 0
 414 0004 032B     	 cmp r3,#3
 415 0006 05D9     	 bls .L50
 450:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 416              	 .loc 1 450 0
 417 0008 0323     	 mov r3,#3
 418 000a 1C1C     	 mov r4,r3
 451:../Dave/Generated/UCPROBE/lib_mem.c **** 
 419              	 .loc 1 451 0
 420 000c 0B40     	 and r3,r1
 450:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 421              	 .loc 1 450 0
 422 000e 0440     	 and r4,r0
 423              	.LVL63:
 453:../Dave/Generated/UCPROBE/lib_mem.c **** 
 424              	 .loc 1 453 0
 425 0010 9C42     	 cmp r4,r3
 426 0012 31D0     	 beq .L92
 427              	.LVL64:
 428              	.L50:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 429              	 .loc 1 479 0
 430 0014 002A     	 cmp r2,#0
 431 0016 2ED0     	 beq .L49
 432 0018 0023     	 mov r3,#0
 433 001a 1D1C     	 mov r5,r3
 434 001c 0C1D     	 add r4,r1,#4
 435 001e A042     	 cmp r0,r4
 436 0020 5D41     	 adc r5,r5,r3
 437 0022 2C1C     	 mov r4,r5
 438 0024 051D     	 add r5,r0,#4
 439 0026 A942     	 cmp r1,r5
 440 0028 5B41     	 adc r3,r3,r3
 441 002a 2343     	 orr r3,r4
 442 002c 0924     	 mov r4,#9
 443 002e 9442     	 cmp r4,r2
 444 0030 A441     	 sbc r4,r4,r4
 445 0032 6442     	 neg r4,r4
 446 0034 1C42     	 tst r4,r3
 447 0036 50D0     	 beq .L71
 448 0038 031C     	 mov r3,r0
 449 003a 0B43     	 orr r3,r1
 450 003c 9B07     	 lsl r3,r3,#30
 451 003e 4CD1     	 bne .L71
 452 0040 0024     	 mov r4,#0
 453 0042 0025     	 mov r5,#0
 454 0044 131F     	 sub r3,r2,#4
 455 0046 9B08     	 lsr r3,r3,#2
 456 0048 0133     	 add r3,r3,#1
 457 004a 9E00     	 lsl r6,r3,#2
 458              	.LVL65:
 459              	.L59:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 460              	 .loc 1 480 0
 461 004c 0F59     	 ldr r7,[r1,r4]
 462 004e 0135     	 add r5,r5,#1
 463 0050 0751     	 str r7,[r0,r4]
 464 0052 0434     	 add r4,r4,#4
 465 0054 AB42     	 cmp r3,r5
 466 0056 F9D8     	 bhi .L59
 467 0058 931B     	 sub r3,r2,r6
 468 005a 8019     	 add r0,r0,r6
 469 005c 8919     	 add r1,r1,r6
 470 005e B242     	 cmp r2,r6
 471 0060 09D0     	 beq .L49
 472              	.LVL66:
 473 0062 0A78     	 ldrb r2,[r1]
 474 0064 0270     	 strb r2,[r0]
 475              	.LVL67:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 476              	 .loc 1 479 0
 477 0066 012B     	 cmp r3,#1
 478 0068 05D0     	 beq .L49
 479              	.LVL68:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 480              	 .loc 1 480 0
 481 006a 4A78     	 ldrb r2,[r1,#1]
 482 006c 4270     	 strb r2,[r0,#1]
 483              	.LVL69:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 484              	 .loc 1 479 0
 485 006e 022B     	 cmp r3,#2
 486 0070 01D0     	 beq .L49
 487              	.LVL70:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 488              	 .loc 1 480 0
 489 0072 8B78     	 ldrb r3,[r1,#2]
 490              	.LVL71:
 491 0074 8370     	 strb r3,[r0,#2]
 492              	.LVL72:
 493              	.L49:
 483:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 494              	 .loc 1 483 0
 495              	 
 496 0076 F0BD     	 pop {r4,r5,r6,r7,pc}
 497              	.LVL73:
 498              	.L92:
 457:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 499              	 .loc 1 457 0
 500 0078 002C     	 cmp r4,#0
 501 007a 1DD0     	 beq .L66
 502              	.LVL74:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 503              	 .loc 1 459 0
 504 007c 002A     	 cmp r2,#0
 505 007e FAD0     	 beq .L49
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 506              	 .loc 1 461 0
 507 0080 0E78     	 ldrb r6,[r1]
 508 0082 431C     	 add r3,r0,#1
 509              	.LVL75:
 510 0084 0670     	 strb r6,[r0]
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 511              	 .loc 1 462 0
 512 0086 561E     	 sub r6,r2,#1
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 513              	 .loc 1 461 0
 514 0088 4D1C     	 add r5,r1,#1
 515              	.LVL76:
 463:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 516              	 .loc 1 463 0
 517 008a 671C     	 add r7,r4,#1
 518              	.LVL77:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 519              	 .loc 1 459 0
 520 008c 002E     	 cmp r6,#0
 521 008e F2D0     	 beq .L49
 522 0090 042F     	 cmp r7,#4
 523 0092 29D0     	 beq .L70
 524              	.LVL78:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 525              	 .loc 1 461 0
 526 0094 4E78     	 ldrb r6,[r1,#1]
 527              	.LVL79:
 528 0096 831C     	 add r3,r0,#2
 529              	.LVL80:
 530 0098 4670     	 strb r6,[r0,#1]
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 531              	 .loc 1 462 0
 532 009a 961E     	 sub r6,r2,#2
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 533              	 .loc 1 461 0
 534 009c 8D1C     	 add r5,r1,#2
 535              	.LVL81:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 536              	 .loc 1 459 0
 537 009e 002E     	 cmp r6,#0
 538 00a0 E9D0     	 beq .L49
 539 00a2 022C     	 cmp r4,#2
 540 00a4 20D0     	 beq .L70
 541              	.LVL82:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 542              	 .loc 1 461 0
 543 00a6 CD1C     	 add r5,r1,#3
 544 00a8 8978     	 ldrb r1,[r1,#2]
 545              	.LVL83:
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 546              	 .loc 1 462 0
 547 00aa 033A     	 sub r2,r2,#3
 548              	.LVL84:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 549              	 .loc 1 461 0
 550 00ac C31C     	 add r3,r0,#3
 551              	.LVL85:
 552 00ae 8170     	 strb r1,[r0,#2]
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 553              	 .loc 1 459 0
 554 00b0 002A     	 cmp r2,#0
 555 00b2 E0D0     	 beq .L49
 556              	.LVL86:
 557              	.L54:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 558              	 .loc 1 461 0
 559 00b4 291C     	 mov r1,r5
 560 00b6 181C     	 mov r0,r3
 561              	.LVL87:
 562              	.L66:
 469:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 563              	 .loc 1 469 0
 564 00b8 032A     	 cmp r2,#3
 565 00ba ABD9     	 bls .L50
 566 00bc 0023     	 mov r3,#0
 567 00be 141F     	 sub r4,r2,#4
 568              	.LVL88:
 569 00c0 A408     	 lsr r4,r4,#2
 570 00c2 0134     	 add r4,r4,#1
 571 00c4 A400     	 lsl r4,r4,#2
 572              	.LVL89:
 573              	.L56:
 470:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 574              	 .loc 1 470 0
 575 00c6 CD58     	 ldr r5,[r1,r3]
 576 00c8 C550     	 str r5,[r0,r3]
 577 00ca 0433     	 add r3,r3,#4
 469:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 578              	 .loc 1 469 0
 579 00cc A342     	 cmp r3,r4
 580 00ce FAD1     	 bne .L56
 581              	.LVL90:
 582 00d0 C018     	 add r0,r0,r3
 583              	.LVL91:
 584 00d2 C918     	 add r1,r1,r3
 585              	.LVL92:
 586 00d4 0323     	 mov r3,#3
 587              	.LVL93:
 588 00d6 1A40     	 and r2,r3
 589              	.LVL94:
 590 00d8 9CE7     	 b .L50
 591              	.LVL95:
 592              	.L71:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 593              	 .loc 1 479 0
 594 00da 0023     	 mov r3,#0
 595              	.LVL96:
 596              	.L58:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 597              	 .loc 1 480 0
 598 00dc CC5C     	 ldrb r4,[r1,r3]
 599 00de C454     	 strb r4,[r0,r3]
 600              	.LVL97:
 601 00e0 0133     	 add r3,r3,#1
 602              	.LVL98:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 603              	 .loc 1 479 0
 604 00e2 9342     	 cmp r3,r2
 605 00e4 FAD1     	 bne .L58
 606 00e6 C6E7     	 b .L49
 607              	.LVL99:
 608              	.L70:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 609              	 .loc 1 459 0
 610 00e8 321C     	 mov r2,r6
 611              	.LVL100:
 612 00ea E3E7     	 b .L54
 613              	 .cfi_endproc
 614              	.LFE3:
 616              	 .section .text.Mem_Move,"ax",%progbits
 617              	 .align 2
 618              	 .global Mem_Move
 619              	 .code 16
 620              	 .thumb_func
 622              	Mem_Move:
 623              	.LFB4:
 525:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 624              	 .loc 1 525 0
 625              	 .cfi_startproc
 626              	.LVL101:
 627 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 628              	.LCFI4:
 629              	 .cfi_def_cfa_offset 20
 630              	 .cfi_offset 4,-20
 631              	 .cfi_offset 5,-16
 632              	 .cfi_offset 6,-12
 633              	 .cfi_offset 7,-8
 634              	 .cfi_offset 14,-4
 552:../Dave/Generated/UCPROBE/lib_mem.c ****         Mem_Copy(pdest, psrc, size);
 635              	 .loc 1 552 0
 636 0002 8142     	 cmp r1,r0
 637 0004 2AD8     	 bhi .L159
 638              	.LVL102:
 559:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 639              	 .loc 1 559 0
 640 0006 531E     	 sub r3,r2,#1
 641 0008 C018     	 add r0,r0,r3
 642              	.LVL103:
 560:../Dave/Generated/UCPROBE/lib_mem.c **** 
 643              	 .loc 1 560 0
 644 000a C918     	 add r1,r1,r3
 645              	.LVL104:
 562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 646              	 .loc 1 562 0
 647 000c 441A     	 sub r4,r0,r1
 565:../Dave/Generated/UCPROBE/lib_mem.c **** 
 648              	 .loc 1 565 0
 649 000e 032C     	 cmp r4,#3
 650 0010 0AD8     	 bhi .L160
 651              	.LVL105:
 652              	.L110:
 599:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 653              	 .loc 1 599 0
 654 0012 002A     	 cmp r2,#0
 655 0014 07D0     	 beq .L93
 656 0016 5342     	 neg r3,r2
 657              	.LVL106:
 658              	.L116:
 659 0018 CC18     	 add r4,r1,r3
 600:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 660              	 .loc 1 600 0
 661 001a A55C     	 ldrb r5,[r4,r2]
 662 001c C418     	 add r4,r0,r3
 663 001e A554     	 strb r5,[r4,r2]
 601:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 664              	 .loc 1 601 0
 665 0020 013A     	 sub r2,r2,#1
 666              	.LVL107:
 599:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 667              	 .loc 1 599 0
 668 0022 002A     	 cmp r2,#0
 669 0024 F8D1     	 bne .L116
 670              	.LVL108:
 671              	.L93:
 603:../Dave/Generated/UCPROBE/lib_mem.c **** 
 672              	 .loc 1 603 0
 673              	 
 674 0026 F0BD     	 pop {r4,r5,r6,r7,pc}
 675              	.LVL109:
 676              	.L160:
 568:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 677              	 .loc 1 568 0
 678 0028 0325     	 mov r5,#3
 679 002a 2C1C     	 mov r4,r5
 569:../Dave/Generated/UCPROBE/lib_mem.c **** 
 680              	 .loc 1 569 0
 681 002c 0D40     	 and r5,r1
 568:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 682              	 .loc 1 568 0
 683 002e 0440     	 and r4,r0
 684              	.LVL110:
 571:../Dave/Generated/UCPROBE/lib_mem.c **** 
 685              	 .loc 1 571 0
 686 0030 AC42     	 cmp r4,r5
 687 0032 EED1     	 bne .L110
 688              	.LVL111:
 575:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 689              	 .loc 1 575 0
 690 0034 032C     	 cmp r4,#3
 691 0036 4CD0     	 beq .L161
 692              	.LVL112:
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 693              	 .loc 1 577 0
 694 0038 002A     	 cmp r2,#0
 695 003a 0BD0     	 beq .L112
 696 003c E443     	 mvn r4,r4
 697              	.LVL113:
 698 003e 0419     	 add r4,r0,r4
 699              	.LVL114:
 700 0040 02E0     	 b .L113
 701              	.LVL115:
 702              	.L162:
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 703              	 .loc 1 577 0 is_stmt 0 discriminator 1
 704 0042 A042     	 cmp r0,r4
 705 0044 46D0     	 beq .L120
 706 0046 013B     	 sub r3,r3,#1
 707              	.LVL116:
 708              	.L113:
 579:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 709              	 .loc 1 579 0 is_stmt 1
 710 0048 0139     	 sub r1,r1,#1
 711 004a 4A78     	 ldrb r2,[r1,#1]
 712              	.LVL117:
 713 004c 0138     	 sub r0,r0,#1
 714              	.LVL118:
 715 004e 4270     	 strb r2,[r0,#1]
 716              	.LVL119:
 580:../Dave/Generated/UCPROBE/lib_mem.c ****                     i--;
 717              	 .loc 1 580 0
 718 0050 1A1E     	 sub r2,r3,#0
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 719              	 .loc 1 577 0
 720 0052 F6D1     	 bne .L162
 721              	.LVL120:
 722              	.L112:
 586:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN) + 
 723              	 .loc 1 586 0
 724 0054 0338     	 sub r0,r0,#3
 725              	.LVL121:
 587:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 726              	 .loc 1 587 0
 727 0056 0339     	 sub r1,r1,#3
 728              	.LVL122:
 729 0058 0022     	 mov r2,#0
 730 005a 53E0     	 b .L114
 731              	.LVL123:
 732              	.L159:
 733              	.LBB35:
 734              	.LBB36:
 445:../Dave/Generated/UCPROBE/lib_mem.c **** 
 735              	 .loc 1 445 0
 736 005c 0B1A     	 sub r3,r1,r0
 448:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 737              	 .loc 1 448 0
 738 005e 032B     	 cmp r3,#3
 739 0060 05D9     	 bls .L95
 450:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 740              	 .loc 1 450 0
 741 0062 0323     	 mov r3,#3
 742 0064 1C1C     	 mov r4,r3
 451:../Dave/Generated/UCPROBE/lib_mem.c **** 
 743              	 .loc 1 451 0
 744 0066 0B40     	 and r3,r1
 450:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 745              	 .loc 1 450 0
 746 0068 0440     	 and r4,r0
 747              	.LVL124:
 453:../Dave/Generated/UCPROBE/lib_mem.c **** 
 748              	 .loc 1 453 0
 749 006a 9C42     	 cmp r4,r3
 750 006c 4DD0     	 beq .L163
 751              	.LVL125:
 752              	.L95:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 753              	 .loc 1 479 0
 754 006e 002A     	 cmp r2,#0
 755 0070 D9D0     	 beq .L93
 756 0072 0023     	 mov r3,#0
 757 0074 1D1C     	 mov r5,r3
 758 0076 0C1D     	 add r4,r1,#4
 759 0078 A042     	 cmp r0,r4
 760 007a 5D41     	 adc r5,r5,r3
 761 007c 2C1C     	 mov r4,r5
 762 007e 051D     	 add r5,r0,#4
 763 0080 A942     	 cmp r1,r5
 764 0082 5B41     	 adc r3,r3,r3
 765 0084 2343     	 orr r3,r4
 766 0086 0924     	 mov r4,#9
 767 0088 9442     	 cmp r4,r2
 768 008a A441     	 sbc r4,r4,r4
 769 008c 6442     	 neg r4,r4
 770 008e 1C42     	 tst r4,r3
 771 0090 70D0     	 beq .L125
 772 0092 031C     	 mov r3,r0
 773 0094 0B43     	 orr r3,r1
 774 0096 9B07     	 lsl r3,r3,#30
 775 0098 6CD1     	 bne .L125
 776 009a 0024     	 mov r4,#0
 777 009c 0025     	 mov r5,#0
 778 009e 131F     	 sub r3,r2,#4
 779 00a0 9B08     	 lsr r3,r3,#2
 780 00a2 0133     	 add r3,r3,#1
 781 00a4 9E00     	 lsl r6,r3,#2
 782              	.L104:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 783              	 .loc 1 480 0
 784 00a6 0F59     	 ldr r7,[r1,r4]
 785 00a8 0135     	 add r5,r5,#1
 786 00aa 0751     	 str r7,[r0,r4]
 787 00ac 0434     	 add r4,r4,#4
 788 00ae AB42     	 cmp r3,r5
 789 00b0 F9D8     	 bhi .L104
 790 00b2 8019     	 add r0,r0,r6
 791 00b4 8919     	 add r1,r1,r6
 792 00b6 931B     	 sub r3,r2,r6
 793 00b8 B242     	 cmp r2,r6
 794 00ba B4D0     	 beq .L93
 795              	.LVL126:
 796 00bc 0A78     	 ldrb r2,[r1]
 797 00be 0270     	 strb r2,[r0]
 798              	.LVL127:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 799              	 .loc 1 479 0
 800 00c0 012B     	 cmp r3,#1
 801 00c2 B0D0     	 beq .L93
 802              	.LVL128:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 803              	 .loc 1 480 0
 804 00c4 4A78     	 ldrb r2,[r1,#1]
 805 00c6 4270     	 strb r2,[r0,#1]
 806              	.LVL129:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 807              	 .loc 1 479 0
 808 00c8 022B     	 cmp r3,#2
 809 00ca ACD0     	 beq .L93
 810              	.LVL130:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 811              	 .loc 1 480 0
 812 00cc 8B78     	 ldrb r3,[r1,#2]
 813              	.LVL131:
 814 00ce 8370     	 strb r3,[r0,#2]
 815 00d0 A9E7     	 b .L93
 816              	.LVL132:
 817              	.L161:
 818              	.LBE36:
 819              	.LBE35:
 559:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 820              	 .loc 1 559 0
 821 00d2 041C     	 mov r4,r0
 822              	.LVL133:
 823              	.L120:
 586:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN) + 
 824              	 .loc 1 586 0
 825 00d4 E01E     	 sub r0,r4,#3
 826              	.LVL134:
 587:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 827              	 .loc 1 587 0
 828 00d6 0339     	 sub r1,r1,#3
 829              	.LVL135:
 588:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 830              	 .loc 1 588 0
 831 00d8 032A     	 cmp r2,#3
 832 00da 13D9     	 bls .L114
 833 00dc 161F     	 sub r6,r2,#4
 834 00de B608     	 lsr r6,r6,#2
 835 00e0 B300     	 lsl r3,r6,#2
 836 00e2 E41A     	 sub r4,r4,r3
 837              	.LVL136:
 587:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 838              	 .loc 1 587 0
 839 00e4 0D1C     	 mov r5,r1
 586:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN) + 
 840              	 .loc 1 586 0
 841 00e6 031C     	 mov r3,r0
 842 00e8 073C     	 sub r4,r4,#7
 843              	.LVL137:
 844              	.L115:
 589:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 845              	 .loc 1 589 0
 846 00ea 043D     	 sub r5,r5,#4
 847              	.LVL138:
 848 00ec 6F68     	 ldr r7,[r5,#4]
 849 00ee 043B     	 sub r3,r3,#4
 850              	.LVL139:
 851 00f0 5F60     	 str r7,[r3,#4]
 588:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 852              	 .loc 1 588 0
 853 00f2 A342     	 cmp r3,r4
 854 00f4 F9D1     	 bne .L115
 855 00f6 0136     	 add r6,r6,#1
 856 00f8 B600     	 lsl r6,r6,#2
 857 00fa 7342     	 neg r3,r6
 858              	.LVL140:
 859 00fc C018     	 add r0,r0,r3
 860              	.LVL141:
 861 00fe C918     	 add r1,r1,r3
 862 0100 0323     	 mov r3,#3
 863 0102 1A40     	 and r2,r3
 864              	.LVL142:
 865              	.L114:
 593:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src  + sizeof(CPU_ALIGN) - 1;
 866              	 .loc 1 593 0
 867 0104 0330     	 add r0,r0,#3
 868              	.LVL143:
 594:../Dave/Generated/UCPROBE/lib_mem.c **** 
 869              	 .loc 1 594 0
 870 0106 0331     	 add r1,r1,#3
 871              	.LVL144:
 872 0108 83E7     	 b .L110
 873              	.LVL145:
 874              	.L163:
 875              	.LBB38:
 876              	.LBB37:
 457:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 877              	 .loc 1 457 0
 878 010a 002C     	 cmp r4,#0
 879 010c 21D0     	 beq .L118
 880              	.LVL146:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 881              	 .loc 1 459 0
 882 010e 002A     	 cmp r2,#0
 883 0110 00D1     	 bne .LCB1266
 884 0112 88E7     	 b .L93
 885              	.LCB1266:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 886              	 .loc 1 461 0
 887 0114 0E78     	 ldrb r6,[r1]
 888 0116 431C     	 add r3,r0,#1
 889              	.LVL147:
 890 0118 0670     	 strb r6,[r0]
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 891              	 .loc 1 462 0
 892 011a 561E     	 sub r6,r2,#1
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 893              	 .loc 1 461 0
 894 011c 4D1C     	 add r5,r1,#1
 895              	.LVL148:
 463:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 896              	 .loc 1 463 0
 897 011e 671C     	 add r7,r4,#1
 898              	.LVL149:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 899              	 .loc 1 459 0
 900 0120 002E     	 cmp r6,#0
 901 0122 00D1     	 bne .LCB1285
 902 0124 7FE7     	 b .L93
 903              	.LCB1285:
 904 0126 042F     	 cmp r7,#4
 905 0128 2BD0     	 beq .L124
 906              	.LVL150:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 907              	 .loc 1 461 0
 908 012a 4E78     	 ldrb r6,[r1,#1]
 909 012c 831C     	 add r3,r0,#2
 910              	.LVL151:
 911 012e 4670     	 strb r6,[r0,#1]
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 912              	 .loc 1 462 0
 913 0130 961E     	 sub r6,r2,#2
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 914              	 .loc 1 461 0
 915 0132 8D1C     	 add r5,r1,#2
 916              	.LVL152:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 917              	 .loc 1 459 0
 918 0134 002E     	 cmp r6,#0
 919 0136 00D1     	 bne .LCB1306
 920 0138 75E7     	 b .L93
 921              	.LCB1306:
 922 013a 022C     	 cmp r4,#2
 923 013c 21D0     	 beq .L124
 924              	.LVL153:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 925              	 .loc 1 461 0
 926 013e CD1C     	 add r5,r1,#3
 927 0140 8978     	 ldrb r1,[r1,#2]
 928              	.LVL154:
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 929              	 .loc 1 462 0
 930 0142 033A     	 sub r2,r2,#3
 931              	.LVL155:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 932              	 .loc 1 461 0
 933 0144 C31C     	 add r3,r0,#3
 934              	.LVL156:
 935 0146 8170     	 strb r1,[r0,#2]
 936              	.LVL157:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 937              	 .loc 1 459 0
 938 0148 002A     	 cmp r2,#0
 939 014a 00D1     	 bne .LCB1338
 940 014c 6BE7     	 b .L93
 941              	.LCB1338:
 942              	.LVL158:
 943              	.L99:
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 944              	 .loc 1 461 0
 945 014e 291C     	 mov r1,r5
 946              	.LVL159:
 947 0150 181C     	 mov r0,r3
 948              	.LVL160:
 949              	.L118:
 469:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 950              	 .loc 1 469 0
 951 0152 032A     	 cmp r2,#3
 952 0154 8BD9     	 bls .L95
 953 0156 0023     	 mov r3,#0
 954 0158 141F     	 sub r4,r2,#4
 955              	.LVL161:
 956 015a A408     	 lsr r4,r4,#2
 957 015c 0134     	 add r4,r4,#1
 958 015e A400     	 lsl r4,r4,#2
 959              	.L101:
 470:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 960              	 .loc 1 470 0
 961 0160 CD58     	 ldr r5,[r1,r3]
 962 0162 C550     	 str r5,[r0,r3]
 963 0164 0433     	 add r3,r3,#4
 469:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 964              	 .loc 1 469 0
 965 0166 A342     	 cmp r3,r4
 966 0168 FAD1     	 bne .L101
 967              	.LVL162:
 968 016a C018     	 add r0,r0,r3
 969              	.LVL163:
 970 016c C918     	 add r1,r1,r3
 971              	.LVL164:
 972 016e 0323     	 mov r3,#3
 973              	.LVL165:
 974 0170 1A40     	 and r2,r3
 975              	.LVL166:
 976 0172 7CE7     	 b .L95
 977              	.LVL167:
 978              	.L125:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 979              	 .loc 1 479 0
 980 0174 0023     	 mov r3,#0
 981              	.L103:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 982              	 .loc 1 480 0
 983 0176 CC5C     	 ldrb r4,[r1,r3]
 984 0178 C454     	 strb r4,[r0,r3]
 985 017a 0133     	 add r3,r3,#1
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 986              	 .loc 1 479 0
 987 017c 9342     	 cmp r3,r2
 988 017e FAD1     	 bne .L103
 989 0180 51E7     	 b .L93
 990              	.LVL168:
 991              	.L124:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 992              	 .loc 1 459 0
 993 0182 321C     	 mov r2,r6
 994              	.LVL169:
 995 0184 E3E7     	 b .L99
 996              	.LBE37:
 997              	.LBE38:
 998              	 .cfi_endproc
 999              	.LFE4:
 1001 0186 C046     	 .section .text.Mem_Cmp,"ax",%progbits
 1002              	 .align 2
 1003              	 .global Mem_Cmp
 1004              	 .code 16
 1005              	 .thumb_func
 1007              	Mem_Cmp:
 1008              	.LFB5:
 649:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 1009              	 .loc 1 649 0
 1010              	 .cfi_startproc
 1011              	.LVL170:
 1012 0000 30B5     	 push {r4,r5,lr}
 1013              	.LCFI5:
 1014              	 .cfi_def_cfa_offset 12
 1015              	 .cfi_offset 4,-12
 1016              	 .cfi_offset 5,-8
 1017              	 .cfi_offset 14,-4
 663:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1018              	 .loc 1 663 0
 1019 0002 0123     	 mov r3,#1
 662:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_YES);
 1020              	 .loc 1 662 0
 1021 0004 002A     	 cmp r2,#0
 1022 0006 17D0     	 beq .L184
 665:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 1023              	 .loc 1 665 0
 1024 0008 0028     	 cmp r0,#0
 1025 000a 14D0     	 beq .L179
 668:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 1026              	 .loc 1 668 0
 1027 000c 0029     	 cmp r1,#0
 1028 000e 12D0     	 beq .L179
 1029              	.LVL171:
 679:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 1030              	 .loc 1 679 0
 1031 0010 0233     	 add r3,r3,#2
 1032 0012 1C1C     	 mov r4,r3
 676:../Dave/Generated/UCPROBE/lib_mem.c ****     p2_mem_08       = (const CPU_INT08U *)p2_mem + size;
 1033              	 .loc 1 676 0
 1034 0014 8018     	 add r0,r0,r2
 1035              	.LVL172:
 677:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 1036              	 .loc 1 677 0
 1037 0016 8918     	 add r1,r1,r2
 1038              	.LVL173:
 679:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 1039              	 .loc 1 679 0
 1040 0018 0440     	 and r4,r0
 1041              	.LVL174:
 680:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1042              	 .loc 1 680 0
 1043 001a 0B40     	 and r3,r1
 682:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1044              	 .loc 1 682 0
 1045 001c 9C42     	 cmp r4,r3
 1046 001e 1CD0     	 beq .L195
 1047              	.LVL175:
 1048              	.L167:
 1049 0020 521A     	 sub r2,r2,r1
 1050              	.LVL176:
 1051 0022 02E0     	 b .L173
 1052              	.LVL177:
 1053              	.L196:
 1054 0024 8B18     	 add r3,r1,r2
 720:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 1055              	 .loc 1 720 0 discriminator 1
 1056 0026 002B     	 cmp r3,#0
 1057 0028 15D0     	 beq .L191
 1058              	.LVL178:
 1059              	.L173:
 722:../Dave/Generated/UCPROBE/lib_mem.c ****         p2_mem_08--;
 1060              	 .loc 1 722 0
 1061 002a 0138     	 sub r0,r0,#1
 1062              	.LVL179:
 723:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p1_mem_08 != *p2_mem_08) {                         /* If ANY data octet(s) NOT identic
 1063              	 .loc 1 723 0
 1064 002c 0139     	 sub r1,r1,#1
 1065              	.LVL180:
 720:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 1066              	 .loc 1 720 0
 1067 002e 0478     	 ldrb r4,[r0]
 1068 0030 0B78     	 ldrb r3,[r1]
 1069 0032 9C42     	 cmp r4,r3
 1070 0034 F6D0     	 beq .L196
 1071              	.LVL181:
 1072              	.L179:
 666:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1073              	 .loc 1 666 0
 1074 0036 0023     	 mov r3,#0
 1075              	.L184:
 731:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1076              	 .loc 1 731 0
 1077 0038 181C     	 mov r0,r3
 1078              	 
 1079 003a 30BD     	 pop {r4,r5,pc}
 1080              	.LVL182:
 1081              	.L170:
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 1082              	 .loc 1 705 0
 1083 003c 032A     	 cmp r2,#3
 1084 003e EFD9     	 bls .L167
 1085              	.LVL183:
 1086              	.L185:
 707:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_align--;
 1087              	 .loc 1 707 0
 1088 0040 0438     	 sub r0,r0,#4
 1089              	.LVL184:
 708:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_align != *p2_mem_align) {           /* If ANY data octet(s) NOT identic
 1090              	 .loc 1 708 0
 1091 0042 0439     	 sub r1,r1,#4
 1092              	.LVL185:
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 1093              	 .loc 1 705 0
 1094 0044 0368     	 ldr r3,[r0]
 1095 0046 0C68     	 ldr r4,[r1]
 712:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 1096              	 .loc 1 712 0
 1097 0048 043A     	 sub r2,r2,#4
 1098              	.LVL186:
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 1099              	 .loc 1 705 0
 1100 004a A342     	 cmp r3,r4
 1101 004c F3D1     	 bne .L179
 1102              	.LVL187:
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 1103              	 .loc 1 705 0 is_stmt 0 discriminator 1
 1104 004e 032A     	 cmp r2,#3
 1105 0050 F6D8     	 bhi .L185
 1106              	.LVL188:
 720:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 1107              	 .loc 1 720 0 is_stmt 1
 1108 0052 002A     	 cmp r2,#0
 1109 0054 E4D1     	 bne .L167
 1110              	.LVL189:
 1111              	.L191:
 1112 0056 0123     	 mov r3,#1
 1113              	.LVL190:
 1114 0058 EEE7     	 b .L184
 1115              	.LVL191:
 1116              	.L195:
 686:../Dave/Generated/UCPROBE/lib_mem.c ****             i = mem_align_mod_1;
 1117              	 .loc 1 686 0
 1118 005a 002C     	 cmp r4,#0
 1119 005c EED0     	 beq .L170
 1120 005e 241A     	 sub r4,r4,r0
 1121              	.LVL192:
 1122 0060 04E0     	 b .L169
 1123              	.LVL193:
 1124              	.L197:
 688:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 1125              	 .loc 1 688 0 discriminator 1
 1126 0062 002A     	 cmp r2,#0
 1127 0064 F7D0     	 beq .L191
 1128 0066 0319     	 add r3,r0,r4
 689:../Dave/Generated/UCPROBE/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 1129              	 .loc 1 689 0
 1130 0068 002B     	 cmp r3,#0
 1131 006a E7D0     	 beq .L170
 1132              	.L169:
 691:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_08--;
 1133              	 .loc 1 691 0
 1134 006c 0138     	 sub r0,r0,#1
 1135              	.LVL194:
 692:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_08 != *p2_mem_08) {                 /* If ANY data octet(s) NOT identic
 1136              	 .loc 1 692 0
 1137 006e 0139     	 sub r1,r1,#1
 1138              	.LVL195:
 688:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 1139              	 .loc 1 688 0
 1140 0070 0578     	 ldrb r5,[r0]
 1141 0072 0B78     	 ldrb r3,[r1]
 696:../Dave/Generated/UCPROBE/lib_mem.c ****                 i--;
 1142              	 .loc 1 696 0
 1143 0074 013A     	 sub r2,r2,#1
 1144              	.LVL196:
 688:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 1145              	 .loc 1 688 0
 1146 0076 9D42     	 cmp r5,r3
 1147 0078 F3D0     	 beq .L197
 666:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1148              	 .loc 1 666 0
 1149 007a 0023     	 mov r3,#0
 1150 007c DCE7     	 b .L184
 1151              	 .cfi_endproc
 1152              	.LFE5:
 1154 007e C046     	 .section .text.Mem_HeapAlloc,"ax",%progbits
 1155              	 .align 2
 1156              	 .global Mem_HeapAlloc
 1157              	 .code 16
 1158              	 .thumb_func
 1160              	Mem_HeapAlloc:
 1161              	.LFB6:
 779:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_mem;
 1162              	 .loc 1 779 0
 1163              	 .cfi_startproc
 1164              	.LVL197:
 1165 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1166              	.LCFI6:
 1167              	 .cfi_def_cfa_offset 24
 1168              	 .cfi_offset 3,-24
 1169              	 .cfi_offset 4,-20
 1170              	 .cfi_offset 5,-16
 1171              	 .cfi_offset 6,-12
 1172              	 .cfi_offset 7,-8
 1173              	 .cfi_offset 14,-4
 1174 0002 4F46     	 mov r7,r9
 1175 0004 4646     	 mov r6,r8
 1176 0006 0C1C     	 mov r4,r1
 1177 0008 C0B4     	 push {r6,r7}
 1178              	.LCFI7:
 1179              	 .cfi_def_cfa_offset 32
 1180              	 .cfi_offset 8,-32
 1181              	 .cfi_offset 9,-28
 779:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_mem;
 1182              	 .loc 1 779 0
 1183 000a 1D1C     	 mov r5,r3
 1184 000c 071C     	 mov r7,r0
 1185              	.LVL198:
 1186 000e 9146     	 mov r9,r2
 1187              	.LVL199:
 1188              	.LBB43:
 1189              	.LBB44:
2347:../Dave/Generated/UCPROBE/lib_mem.c **** }
2348:../Dave/Generated/UCPROBE/lib_mem.c **** 
2349:../Dave/Generated/UCPROBE/lib_mem.c **** 
2350:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2351:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2352:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_SegOverlapChkCritical()
2353:../Dave/Generated/UCPROBE/lib_mem.c **** *
2354:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Checks if existing memory segment exists or overlaps with specified memory area.
2355:../Dave/Generated/UCPROBE/lib_mem.c **** *
2356:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : seg_base_addr   Address of first byte of memory area.
2357:../Dave/Generated/UCPROBE/lib_mem.c **** *
2358:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory area, in bytes.
2359:../Dave/Generated/UCPROBE/lib_mem.c **** *
2360:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2361:../Dave/Generated/UCPROBE/lib_mem.c **** *
2362:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another existi
2363:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
2364:../Dave/Generated/UCPROBE/lib_mem.c **** *
2365:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory segment that overlaps.
2366:../Dave/Generated/UCPROBE/lib_mem.c **** *
2367:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2368:../Dave/Generated/UCPROBE/lib_mem.c **** *
2369:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2370:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegCreate().
2371:../Dave/Generated/UCPROBE/lib_mem.c **** *
2372:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2373:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2374:../Dave/Generated/UCPROBE/lib_mem.c **** */
2375:../Dave/Generated/UCPROBE/lib_mem.c **** 
2376:../Dave/Generated/UCPROBE/lib_mem.c **** static  MEM_SEG  *Mem_SegOverlapChkCritical (CPU_ADDR     seg_base_addr,
2377:../Dave/Generated/UCPROBE/lib_mem.c ****                                              CPU_SIZE_T   size,
2378:../Dave/Generated/UCPROBE/lib_mem.c ****                                              LIB_ERR     *p_err)
2379:../Dave/Generated/UCPROBE/lib_mem.c **** {
2380:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG   *p_seg_chk;
2381:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_new_end;
2382:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_chk_start;
2383:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_chk_end;
2384:../Dave/Generated/UCPROBE/lib_mem.c **** 
2385:../Dave/Generated/UCPROBE/lib_mem.c **** 
2386:../Dave/Generated/UCPROBE/lib_mem.c ****     seg_new_end = seg_base_addr + (size - 1u);
2387:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg_chk   = Mem_SegHeadPtr;
2388:../Dave/Generated/UCPROBE/lib_mem.c **** 
2389:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_seg_chk != DEF_NULL) {
2390:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
2391:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_end   = (CPU_ADDR)p_seg_chk->AddrEnd;
2392:../Dave/Generated/UCPROBE/lib_mem.c **** 
2393:../Dave/Generated/UCPROBE/lib_mem.c ****         if ((seg_base_addr == seg_chk_start) && (seg_new_end == seg_chk_end)) {
2394:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_EXISTS;
2395:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
2396:../Dave/Generated/UCPROBE/lib_mem.c ****         } else if (((seg_base_addr >= seg_chk_start) && (seg_base_addr <= seg_chk_end)) ||
2397:../Dave/Generated/UCPROBE/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
2398:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_OVERLAP;
2399:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
2400:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2401:../Dave/Generated/UCPROBE/lib_mem.c **** 
2402:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_chk = p_seg_chk->NextPtr;
2403:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2404:../Dave/Generated/UCPROBE/lib_mem.c **** 
2405:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
2406:../Dave/Generated/UCPROBE/lib_mem.c **** 
2407:../Dave/Generated/UCPROBE/lib_mem.c ****     return (DEF_NULL);
2408:../Dave/Generated/UCPROBE/lib_mem.c **** }
2409:../Dave/Generated/UCPROBE/lib_mem.c **** 
2410:../Dave/Generated/UCPROBE/lib_mem.c **** 
2411:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2412:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2413:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       Mem_SegAllocInternal()
2414:../Dave/Generated/UCPROBE/lib_mem.c **** *
2415:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment.
2416:../Dave/Generated/UCPROBE/lib_mem.c **** *
2417:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
2418:../Dave/Generated/UCPROBE/lib_mem.c **** *
2419:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory.
2420:../Dave/Generated/UCPROBE/lib_mem.c **** *               -----           Argument validated by caller.
2421:../Dave/Generated/UCPROBE/lib_mem.c **** *
2422:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2423:../Dave/Generated/UCPROBE/lib_mem.c **** *
2424:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2425:../Dave/Generated/UCPROBE/lib_mem.c **** *
2426:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2427:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2428:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
2429:../Dave/Generated/UCPROBE/lib_mem.c **** *
2430:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2431:../Dave/Generated/UCPROBE/lib_mem.c **** *                                the allocation to succeed. Set to DEF_NULL to skip calculation.
2432:../Dave/Generated/UCPROBE/lib_mem.c **** *
2433:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2434:../Dave/Generated/UCPROBE/lib_mem.c **** *
2435:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2436:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2437:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2438:../Dave/Generated/UCPROBE/lib_mem.c **** *
2439:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocExtCritical()--------
2440:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2441:../Dave/Generated/UCPROBE/lib_mem.c **** *
2442:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2443:../Dave/Generated/UCPROBE/lib_mem.c **** *
2444:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2445:../Dave/Generated/UCPROBE/lib_mem.c **** *
2446:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_DynPoolBlkGet(),
2447:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_DynPoolCreateInternal(),
2448:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_HeapAlloc(),
2449:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_PoolCreate(),
2450:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAlloc(),
2451:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocExt(),
2452:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocHW().
2453:../Dave/Generated/UCPROBE/lib_mem.c **** *
2454:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2455:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2456:../Dave/Generated/UCPROBE/lib_mem.c **** */
2457:../Dave/Generated/UCPROBE/lib_mem.c **** 
2458:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  *Mem_SegAllocInternal (const  CPU_CHAR    *p_name,
2459:../Dave/Generated/UCPROBE/lib_mem.c ****                                             MEM_SEG     *p_seg,
2460:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   size,
2461:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   align,
2462:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   padding_align,
2463:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T  *p_bytes_reqd,
2464:../Dave/Generated/UCPROBE/lib_mem.c ****                                             LIB_ERR     *p_err)
2465:../Dave/Generated/UCPROBE/lib_mem.c **** {
2466:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
2467:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
2468:../Dave/Generated/UCPROBE/lib_mem.c **** 
2469:../Dave/Generated/UCPROBE/lib_mem.c **** 
2470:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2471:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
2472:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
2473:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2474:../Dave/Generated/UCPROBE/lib_mem.c **** 
2475:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized mem req.  
2476:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_SIZE;
2477:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2478:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2479:../Dave/Generated/UCPROBE/lib_mem.c **** 
2480:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk that align is a pwr of 2.   
2481:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
2482:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2483:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2484:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2485:../Dave/Generated/UCPROBE/lib_mem.c **** 
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1190              	 .loc 1 2486 0
 1191 0010 FFF7FEFF 	 bl CPU_SR_Save
 1192              	.LVL200:
 1193 0014 184E     	 ldr r6,.L210
 1194              	.LBB45:
 1195              	.LBB46:
2487:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
2488:../Dave/Generated/UCPROBE/lib_mem.c ****                                     size,
2489:../Dave/Generated/UCPROBE/lib_mem.c ****                                     align,
2490:../Dave/Generated/UCPROBE/lib_mem.c ****                                     padding_align,
2491:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_bytes_reqd,
2492:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_err);
2493:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2495:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2496:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2497:../Dave/Generated/UCPROBE/lib_mem.c **** 
2498:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
2499:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegAllocTrackCritical(p_name,
2500:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
2501:../Dave/Generated/UCPROBE/lib_mem.c ****                               size,
2502:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
2503:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2504:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2505:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2506:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2507:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2508:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)&p_name;
2509:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2510:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
2511:../Dave/Generated/UCPROBE/lib_mem.c **** 
2512:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
2513:../Dave/Generated/UCPROBE/lib_mem.c **** }
2514:../Dave/Generated/UCPROBE/lib_mem.c **** 
2515:../Dave/Generated/UCPROBE/lib_mem.c **** 
2516:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2517:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2518:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_SegAllocExtCritical()
2519:../Dave/Generated/UCPROBE/lib_mem.c **** *
2520:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment.
2521:../Dave/Generated/UCPROBE/lib_mem.c **** *
2522:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment from which to allocate memory.
2523:../Dave/Generated/UCPROBE/lib_mem.c **** *
2524:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2525:../Dave/Generated/UCPROBE/lib_mem.c **** *
2526:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2527:../Dave/Generated/UCPROBE/lib_mem.c **** *
2528:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2529:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2530:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
2531:../Dave/Generated/UCPROBE/lib_mem.c **** *
2532:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2533:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
2534:../Dave/Generated/UCPROBE/lib_mem.c **** *
2535:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2536:../Dave/Generated/UCPROBE/lib_mem.c **** *
2537:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF     Allocation would overflow memory segmen
2538:../Dave/Generated/UCPROBE/lib_mem.c **** *
2539:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2540:../Dave/Generated/UCPROBE/lib_mem.c **** *
2541:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2542:../Dave/Generated/UCPROBE/lib_mem.c **** *
2543:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2544:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocInternal(),
2545:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocTrackCritical().
2546:../Dave/Generated/UCPROBE/lib_mem.c **** *
2547:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2548:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2549:../Dave/Generated/UCPROBE/lib_mem.c **** */
2550:../Dave/Generated/UCPROBE/lib_mem.c **** 
2551:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  *Mem_SegAllocExtCritical (MEM_SEG     *p_seg,
2552:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   size,
2553:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   align,
2554:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   padding_align,
2555:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T  *p_bytes_reqd,
2556:../Dave/Generated/UCPROBE/lib_mem.c ****                                         LIB_ERR     *p_err)
2557:../Dave/Generated/UCPROBE/lib_mem.c **** {
2558:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    blk_addr;
2559:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    addr_next;
2560:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  size_rem_seg;
2561:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  size_tot_blk;
2562:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  blk_align = DEF_MAX(align, padding_align);
 1196              	 .loc 1 2562 0
 1197 0016 211E     	 sub r1,r4,#0
 1198 0018 7368     	 ldr r3,[r6,#4]
 1199 001a 9846     	 mov r8,r3
 1200              	.LVL201:
 1201 001c 00D1     	 bne .L199
 1202 001e 0131     	 add r1,r1,#1
 1203              	.L199:
 1204              	.LVL202:
2563:../Dave/Generated/UCPROBE/lib_mem.c **** 
2564:../Dave/Generated/UCPROBE/lib_mem.c **** 
2565:../Dave/Generated/UCPROBE/lib_mem.c ****     blk_addr     = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext,      /* Compute align'ed blk addr.      
 1205              	 .loc 1 2565 0
 1206 0020 B468     	 ldr r4,[r6,#8]
 1207              	.LVL203:
 1208 0022 4B42     	 neg r3,r1
 1209 0024 2340     	 and r3,r4
 1210 0026 1A1C     	 mov r2,r3
 1211 0028 4B1E     	 sub r3,r1,#1
 1212 002a 2340     	 and r3,r4
 1213 002c 00D0     	 beq .L200
 1214 002e 0B1C     	 mov r3,r1
 1215              	.L200:
 1216 0030 9B18     	 add r3,r3,r2
 1217              	.LVL204:
 1218 0032 4246     	 mov r2,r8
2566:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
2567:../Dave/Generated/UCPROBE/lib_mem.c ****     addr_next    = MATH_ROUND_INC_UP_PWR2(blk_addr + size,      /* Compute addr of next alloc.     
 1219              	 .loc 1 2567 0
 1220 0034 DF19     	 add r7,r3,r7
 1221              	.LVL205:
 1222 0036 0132     	 add r2,r2,#1
2568:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem_seg = p_seg->AddrEnd - p_seg->AddrNext + 1u;
 1223              	 .loc 1 2569 0
 1224 0038 121B     	 sub r2,r2,r4
 1225              	.LVL206:
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 1226              	 .loc 1 2570 0
 1227 003a 3C1B     	 sub r4,r7,r4
 1228              	.LVL207:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 1229              	 .loc 1 2571 0
 1230 003c A242     	 cmp r2,r4
 1231 003e 10D3     	 bcc .L209
2572:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
2573:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
2574:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2575:../Dave/Generated/UCPROBE/lib_mem.c **** 
2576:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_SEG_OVF;
2577:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2578:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2579:../Dave/Generated/UCPROBE/lib_mem.c **** 
2580:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext = addr_next;
2581:../Dave/Generated/UCPROBE/lib_mem.c **** 
2582:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1232              	 .loc 1 2582 0
 1233 0040 0E4A     	 ldr r2,.L210+4
 1234              	.LVL208:
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1235              	 .loc 1 2580 0
 1236 0042 B760     	 str r7,[r6,#8]
 1237              	.LVL209:
 1238              	 .loc 1 2582 0
 1239 0044 2A80     	 strh r2,[r5]
2583:../Dave/Generated/UCPROBE/lib_mem.c **** 
2584:../Dave/Generated/UCPROBE/lib_mem.c ****     return ((void *)blk_addr);
 1240              	 .loc 1 2584 0
 1241 0046 1C1C     	 mov r4,r3
 1242              	.LVL210:
 1243              	.LBE46:
 1244              	.LBE45:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1245              	 .loc 1 2510 0
 1246 0048 FFF7FEFF 	 bl CPU_SR_Restore
 1247              	.LVL211:
 1248              	.L203:
 1249              	.LBE44:
 1250              	.LBE43:
 790:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 1251              	 .loc 1 790 0
 1252 004c 2A88     	 ldrh r2,[r5]
 1253 004e 0C4B     	 ldr r3,.L210+8
 1254 0050 9A42     	 cmp r2,r3
 1255 0052 01D1     	 bne .L204
 791:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1256              	 .loc 1 791 0
 1257 0054 0B4B     	 ldr r3,.L210+12
 1258 0056 2B80     	 strh r3,[r5]
 1259              	.L204:
 795:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 1260              	 .loc 1 795 0
 1261 0058 201C     	 mov r0,r4
 1262              	 
 1263              	.LVL212:
 1264              	.LVL213:
 1265              	.LVL214:
 1266 005a 0CBC     	 pop {r2,r3}
 1267 005c 9046     	 mov r8,r2
 1268 005e 9946     	 mov r9,r3
 1269 0060 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1270              	.LVL215:
 1271              	.L209:
 1272              	.LBB52:
 1273              	.LBB51:
 1274              	.LBB49:
 1275              	.LBB47:
2572:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 1276              	 .loc 1 2572 0
 1277 0062 4B46     	 mov r3,r9
 1278              	.LVL216:
 1279 0064 002B     	 cmp r3,#0
 1280 0066 01D0     	 beq .L202
 1281              	.LVL217:
2573:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 1282              	 .loc 1 2573 0
 1283 0068 A41A     	 sub r4,r4,r2
 1284              	.LVL218:
 1285 006a 1C60     	 str r4,[r3]
 1286              	.LVL219:
 1287              	.L202:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1288              	 .loc 1 2576 0
 1289 006c 044B     	 ldr r3,.L210+8
 1290              	.LVL220:
 1291              	.LBE47:
 1292              	.LBE49:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1293              	 .loc 1 2495 0
 1294 006e 0024     	 mov r4,#0
 1295              	.LBB50:
 1296              	.LBB48:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1297              	 .loc 1 2576 0
 1298 0070 2B80     	 strh r3,[r5]
 1299              	.LBE48:
 1300              	.LBE50:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1301              	 .loc 1 2494 0
 1302 0072 FFF7FEFF 	 bl CPU_SR_Restore
 1303              	.LVL221:
 1304 0076 E9E7     	 b .L203
 1305              	.L211:
 1306              	 .align 2
 1307              	.L210:
 1308 0078 00000000 	 .word Mem_SegHeap
 1309 007c 10270000 	 .word 10000
 1310 0080 D9270000 	 .word 10201
 1311 0084 E3270000 	 .word 10211
 1312              	.LBE51:
 1313              	.LBE52:
 1314              	 .cfi_endproc
 1315              	.LFE6:
 1317              	 .section .text.Mem_HeapGetSizeRem,"ax",%progbits
 1318              	 .align 2
 1319              	 .global Mem_HeapGetSizeRem
 1320              	 .code 16
 1321              	 .thumb_func
 1323              	Mem_HeapGetSizeRem:
 1324              	.LFB7:
 829:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1325              	 .loc 1 829 0
 1326              	 .cfi_startproc
 1327              	.LVL222:
 1328 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1329              	.LCFI8:
 1330              	 .cfi_def_cfa_offset 20
 1331              	 .cfi_offset 4,-20
 1332              	 .cfi_offset 5,-16
 1333              	 .cfi_offset 6,-12
 1334              	 .cfi_offset 7,-8
 1335              	 .cfi_offset 14,-4
 1336 0002 4746     	 mov r7,r8
 1337 0004 061C     	 mov r6,r0
 1338              	.LVL223:
 1339 0006 80B4     	 push {r7}
 1340              	.LCFI9:
 1341              	 .cfi_def_cfa_offset 24
 1342              	 .cfi_offset 8,-24
 829:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1343              	 .loc 1 829 0
 1344 0008 0F1C     	 mov r7,r1
 1345              	.LVL224:
 1346              	.LBB55:
 1347              	.LBB56:
1057:../Dave/Generated/UCPROBE/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1348              	 .loc 1 1057 0
 1349 000a FFF7FEFF 	 bl CPU_SR_Save
 1350              	.LVL225:
1058:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1351              	 .loc 1 1058 0
 1352 000e 0A4B     	 ldr r3,.L217
 1353 0010 7542     	 neg r5,r6
 1354 0012 9846     	 mov r8,r3
 1355 0014 9B68     	 ldr r3,[r3,#8]
 1356 0016 741E     	 sub r4,r6,#1
 1357 0018 1D40     	 and r5,r3
 1358 001a 1C40     	 and r4,r3
 1359 001c 00D0     	 beq .L213
 1360 001e 341C     	 mov r4,r6
 1361              	.L213:
 1362              	.LVL226:
1059:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1363              	 .loc 1 1059 0
 1364 0020 FFF7FEFF 	 bl CPU_SR_Restore
 1365              	.LVL227:
 1366 0024 4346     	 mov r3,r8
 1367 0026 5868     	 ldr r0,[r3,#4]
1072:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1368              	 .loc 1 1072 0
 1369 0028 044B     	 ldr r3,.L217+4
 1370 002a 0130     	 add r0,r0,#1
 1371 002c 401B     	 sub r0,r0,r5
1063:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1372              	 .loc 1 1063 0
 1373 002e 001B     	 sub r0,r0,r4
 1374              	.LVL228:
1072:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1375              	 .loc 1 1072 0
 1376 0030 3B80     	 strh r3,[r7]
 1377              	.LVL229:
 1378              	.LBE56:
 1379              	.LBE55:
 842:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 1380              	 .loc 1 842 0
 1381              	 
 1382              	.LVL230:
 1383              	.LVL231:
 1384              	.LVL232:
 1385 0032 04BC     	 pop {r2}
 1386 0034 9046     	 mov r8,r2
 1387 0036 F0BD     	 pop {r4,r5,r6,r7,pc}
 1388              	.L218:
 1389              	 .align 2
 1390              	.L217:
 1391 0038 00000000 	 .word Mem_SegHeap
 1392 003c 10270000 	 .word 10000
 1393              	 .cfi_endproc
 1394              	.LFE7:
 1396              	 .section .text.Mem_SegCreate,"ax",%progbits
 1397              	 .align 2
 1398              	 .global Mem_SegCreate
 1399              	 .code 16
 1400              	 .thumb_func
 1402              	Mem_SegCreate:
 1403              	.LFB8:
 891:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1404              	 .loc 1 891 0
 1405              	 .cfi_startproc
 1406              	.LVL233:
 1407 0000 70B5     	 push {r4,r5,r6,lr}
 1408              	.LCFI10:
 1409              	 .cfi_def_cfa_offset 16
 1410              	 .cfi_offset 4,-16
 1411              	 .cfi_offset 5,-12
 1412              	 .cfi_offset 6,-8
 1413              	 .cfi_offset 14,-4
 891:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1414              	 .loc 1 891 0
 1415 0002 0C1C     	 mov r4,r1
 1416 0004 1D1C     	 mov r5,r3
 1417 0006 161C     	 mov r6,r2
 922:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1418              	 .loc 1 922 0
 1419 0008 FFF7FEFF 	 bl CPU_SR_Save
 1420              	.LVL234:
 1421              	.LBB57:
 1422              	.LBB58:
2336:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->PaddingAlign     =  padding_align;
 1423              	 .loc 1 2336 0
 1424 000c 084B     	 ldr r3,.L220
 1425 000e 013D     	 sub r5,r5,#1
 1426              	.LVL235:
 1427 0010 1A68     	 ldr r2,[r3]
2334:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
 1428              	 .loc 1 2334 0
 1429 0012 AD19     	 add r5,r5,r6
 1430              	.LVL236:
2336:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->PaddingAlign     =  padding_align;
 1431              	 .loc 1 2336 0
 1432 0014 E260     	 str r2,[r4,#12]
2337:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1433              	 .loc 1 2337 0
 1434 0016 049A     	 ldr r2,[sp,#16]
2333:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
 1435              	 .loc 1 2333 0
 1436 0018 2660     	 str r6,[r4]
2334:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
 1437              	 .loc 1 2334 0
 1438 001a 6560     	 str r5,[r4,#4]
2335:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NextPtr          =  Mem_SegHeadPtr;
 1439              	 .loc 1 2335 0
 1440 001c A660     	 str r6,[r4,#8]
2337:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1441              	 .loc 1 2337 0
 1442 001e 2261     	 str r2,[r4,#16]
2346:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1443              	 .loc 1 2346 0
 1444 0020 1C60     	 str r4,[r3]
 1445              	.LBE58:
 1446              	.LBE57:
 938:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1447              	 .loc 1 938 0
 1448 0022 FFF7FEFF 	 bl CPU_SR_Restore
 1449              	.LVL237:
 940:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1450              	 .loc 1 940 0
 1451 0026 034B     	 ldr r3,.L220+4
 1452 0028 059A     	 ldr r2,[sp,#20]
 941:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1453              	 .loc 1 941 0
 1454              	 
 940:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1455              	 .loc 1 940 0
 1456 002a 1380     	 strh r3,[r2]
 1457              	.LVL238:
 1458              	.LVL239:
 941:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1459              	 .loc 1 941 0
 1460 002c 70BD     	 pop {r4,r5,r6,pc}
 1461              	.L221:
 1462 002e C046     	 .align 2
 1463              	.L220:
 1464 0030 00000000 	 .word Mem_SegHeadPtr
 1465 0034 10270000 	 .word 10000
 1466              	 .cfi_endproc
 1467              	.LFE8:
 1469              	 .section .text.Mem_SegClr,"ax",%progbits
 1470              	 .align 2
 1471              	 .global Mem_SegClr
 1472              	 .code 16
 1473              	 .thumb_func
 1475              	Mem_SegClr:
 1476              	.LFB9:
 971:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1477              	 .loc 1 971 0
 1478              	 .cfi_startproc
 1479              	.LVL240:
 1480 0000 38B5     	 push {r3,r4,r5,lr}
 1481              	.LCFI11:
 1482              	 .cfi_def_cfa_offset 16
 1483              	 .cfi_offset 3,-16
 1484              	 .cfi_offset 4,-12
 1485              	 .cfi_offset 5,-8
 1486              	 .cfi_offset 14,-4
 971:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1487              	 .loc 1 971 0
 1488 0002 041C     	 mov r4,r0
 1489 0004 0D1C     	 mov r5,r1
 986:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1490              	 .loc 1 986 0
 1491 0006 FFF7FEFF 	 bl CPU_SR_Save
 1492              	.LVL241:
 987:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1493              	 .loc 1 987 0
 1494 000a 2368     	 ldr r3,[r4]
 991:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 1495              	 .loc 1 991 0
 1496              	 
 987:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1497              	 .loc 1 987 0
 1498 000c A360     	 str r3,[r4,#8]
 988:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1499              	 .loc 1 988 0
 1500 000e FFF7FEFF 	 bl CPU_SR_Restore
 1501              	.LVL242:
 990:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1502              	 .loc 1 990 0
 1503 0012 014B     	 ldr r3,.L223
 1504 0014 2B80     	 strh r3,[r5]
 1505              	.LVL243:
 1506              	.LVL244:
 991:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 1507              	 .loc 1 991 0
 1508 0016 38BD     	 pop {r3,r4,r5,pc}
 1509              	.L224:
 1510              	 .align 2
 1511              	.L223:
 1512 0018 10270000 	 .word 10000
 1513              	 .cfi_endproc
 1514              	.LFE9:
 1516              	 .section .text.Mem_SegRemSizeGet,"ax",%progbits
 1517              	 .align 2
 1518              	 .global Mem_SegRemSizeGet
 1519              	 .code 16
 1520              	 .thumb_func
 1522              	Mem_SegRemSizeGet:
 1523              	.LFB10:
1029:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1524              	 .loc 1 1029 0
 1525              	 .cfi_startproc
 1526              	.LVL245:
 1527 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1528              	.LCFI12:
 1529              	 .cfi_def_cfa_offset 20
 1530              	 .cfi_offset 4,-20
 1531              	 .cfi_offset 5,-16
 1532              	 .cfi_offset 6,-12
 1533              	 .cfi_offset 7,-8
 1534              	 .cfi_offset 14,-4
 1535 0002 4746     	 mov r7,r8
 1536 0004 151C     	 mov r5,r2
 1537 0006 80B4     	 push {r7}
 1538              	.LCFI13:
 1539              	 .cfi_def_cfa_offset 24
 1540              	 .cfi_offset 8,-24
1029:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1541              	 .loc 1 1029 0
 1542 0008 8846     	 mov r8,r1
 1543 000a 071C     	 mov r7,r0
 1544 000c 1E1C     	 mov r6,r3
1048:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1545              	 .loc 1 1048 0
 1546 000e 0028     	 cmp r0,#0
 1547 0010 1DD0     	 beq .L235
 1548              	.L226:
 1549              	.LVL246:
1057:../Dave/Generated/UCPROBE/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1550              	 .loc 1 1057 0
 1551 0012 FFF7FEFF 	 bl CPU_SR_Save
 1552              	.LVL247:
1058:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1553              	 .loc 1 1058 0
 1554 0016 4346     	 mov r3,r8
 1555 0018 4146     	 mov r1,r8
 1556 001a BA68     	 ldr r2,[r7,#8]
 1557 001c 5B42     	 neg r3,r3
 1558 001e 4C1E     	 sub r4,r1,#1
 1559 0020 1340     	 and r3,r2
 1560 0022 1440     	 and r4,r2
 1561 0024 00D0     	 beq .L227
 1562              	.LVL248:
 1563 0026 4446     	 mov r4,r8
 1564              	.L227:
1058:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1565              	 .loc 1 1058 0 is_stmt 0 discriminator 4
 1566 0028 E418     	 add r4,r4,r3
 1567              	.LVL249:
1059:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1568              	 .loc 1 1059 0 is_stmt 1 discriminator 4
 1569 002a FFF7FEFF 	 bl CPU_SR_Restore
 1570              	.LVL250:
 1571 002e 0CCF     	 ldmia r7!,{r2,r3}
 1572              	.LVL251:
 1573 0030 0133     	 add r3,r3,#1
1061:../Dave/Generated/UCPROBE/lib_mem.c ****     used_size  = next_addr_align - p_seg->AddrBase;
 1574              	 .loc 1 1061 0 discriminator 4
 1575 0032 9B1A     	 sub r3,r3,r2
 1576              	.LVL252:
1062:../Dave/Generated/UCPROBE/lib_mem.c ****     rem_size   = total_size      - used_size;
 1577              	 .loc 1 1062 0 discriminator 4
 1578 0034 A11A     	 sub r1,r4,r2
 1579              	.LVL253:
1063:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1580              	 .loc 1 1063 0 discriminator 4
 1581 0036 581A     	 sub r0,r3,r1
 1582              	.LVL254:
1065:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->TotalSize     = total_size;
 1583              	 .loc 1 1065 0 discriminator 4
 1584 0038 002D     	 cmp r5,#0
 1585 003a 03D0     	 beq .L228
1066:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->UsedSize      = used_size;
 1586              	 .loc 1 1066 0
 1587 003c 6B60     	 str r3,[r5,#4]
1067:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrBase      = p_seg->AddrBase;
 1588              	 .loc 1 1067 0
 1589 003e 2960     	 str r1,[r5]
1068:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
 1590              	 .loc 1 1068 0
 1591 0040 AA60     	 str r2,[r5,#8]
1069:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1592              	 .loc 1 1069 0
 1593 0042 EC60     	 str r4,[r5,#12]
 1594              	.L228:
1072:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1595              	 .loc 1 1072 0
 1596 0044 034B     	 ldr r3,.L236
 1597              	.LVL255:
1075:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1598              	 .loc 1 1075 0
 1599              	 
1072:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1600              	 .loc 1 1072 0
 1601 0046 3380     	 strh r3,[r6]
 1602              	.LVL256:
 1603              	.LVL257:
 1604              	.LVL258:
 1605              	.LVL259:
 1606              	.LVL260:
1075:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1607              	 .loc 1 1075 0
 1608 0048 04BC     	 pop {r2}
 1609 004a 9046     	 mov r8,r2
 1610 004c F0BD     	 pop {r4,r5,r6,r7,pc}
 1611              	.LVL261:
 1612              	.L235:
1050:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 1613              	 .loc 1 1050 0
 1614 004e 024F     	 ldr r7,.L236+4
 1615 0050 DFE7     	 b .L226
 1616              	.L237:
 1617 0052 C046     	 .align 2
 1618              	.L236:
 1619 0054 10270000 	 .word 10000
 1620 0058 00000000 	 .word Mem_SegHeap
 1621              	 .cfi_endproc
 1622              	.LFE10:
 1624              	 .section .text.Mem_SegAlloc,"ax",%progbits
 1625              	 .align 2
 1626              	 .global Mem_SegAlloc
 1627              	 .code 16
 1628              	 .thumb_func
 1630              	Mem_SegAlloc:
 1631              	.LFB11:
1118:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
 1632              	 .loc 1 1118 0
 1633              	 .cfi_startproc
 1634              	.LVL262:
 1635 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1636              	.LCFI14:
 1637              	 .cfi_def_cfa_offset 24
 1638              	 .cfi_offset 3,-24
 1639              	 .cfi_offset 4,-20
 1640              	 .cfi_offset 5,-16
 1641              	 .cfi_offset 6,-12
 1642              	 .cfi_offset 7,-8
 1643              	 .cfi_offset 14,-4
1118:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
 1644              	 .loc 1 1118 0
 1645 0002 0C1C     	 mov r4,r1
 1646 0004 171C     	 mov r7,r2
 1647 0006 1D1C     	 mov r5,r3
1122:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1648              	 .loc 1 1122 0
 1649 0008 0029     	 cmp r1,#0
 1650 000a 18D0     	 beq .L246
 1651              	.L239:
 1652              	.LVL263:
 1653              	.LBB63:
 1654              	.LBB64:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 1655              	 .loc 1 2486 0
 1656 000c FFF7FEFF 	 bl CPU_SR_Save
 1657              	.LVL264:
 1658              	.LBB65:
 1659              	.LBB66:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 1660              	 .loc 1 2565 0
 1661 0010 A368     	 ldr r3,[r4,#8]
 1662 0012 0321     	 mov r1,#3
 1663 0014 1A1C     	 mov r2,r3
 1664 0016 6668     	 ldr r6,[r4,#4]
 1665              	.LVL265:
 1666 0018 8A43     	 bic r2,r1
 1667 001a 1940     	 and r1,r3
 1668 001c 00D0     	 beq .L240
 1669 001e 0421     	 mov r1,#4
 1670              	.L240:
 1671 0020 8918     	 add r1,r1,r2
 1672              	.LVL266:
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 1673              	 .loc 1 2567 0
 1674 0022 CF19     	 add r7,r1,r7
 1675              	.LVL267:
 1676 0024 0136     	 add r6,r6,#1
 1677              	.LVL268:
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 1678              	 .loc 1 2569 0
 1679 0026 F61A     	 sub r6,r6,r3
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 1680              	 .loc 1 2570 0
 1681 0028 FB1A     	 sub r3,r7,r3
 1682              	.LVL269:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 1683              	 .loc 1 2571 0
 1684 002a 9E42     	 cmp r6,r3
 1685 002c 09D3     	 bcc .L247
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1686              	 .loc 1 2582 0
 1687 002e 084B     	 ldr r3,.L248
 1688              	.LVL270:
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1689              	 .loc 1 2580 0
 1690 0030 A760     	 str r7,[r4,#8]
 1691              	.LVL271:
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1692              	 .loc 1 2582 0
 1693 0032 2B80     	 strh r3,[r5]
 1694              	 .loc 1 2584 0
 1695 0034 0C1C     	 mov r4,r1
 1696              	.LVL272:
 1697              	.LBE66:
 1698              	.LBE65:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1699              	 .loc 1 2510 0
 1700 0036 FFF7FEFF 	 bl CPU_SR_Restore
 1701              	.LVL273:
 1702              	.L242:
 1703              	.LBE64:
 1704              	.LBE63:
1140:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1705              	 .loc 1 1140 0
 1706 003a 201C     	 mov r0,r4
 1707              	 
 1708              	.LVL274:
 1709              	.LVL275:
 1710 003c F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1711              	.LVL276:
 1712              	.L246:
1124:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 1713              	 .loc 1 1124 0
 1714 003e 054C     	 ldr r4,.L248+4
 1715 0040 E4E7     	 b .L239
 1716              	.LVL277:
 1717              	.L247:
 1718              	.LBB72:
 1719              	.LBB71:
 1720              	.LBB69:
 1721              	.LBB67:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1722              	 .loc 1 2576 0
 1723 0042 054B     	 ldr r3,.L248+8
 1724              	.LVL278:
 1725              	.LBE67:
 1726              	.LBE69:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1727              	 .loc 1 2495 0
 1728 0044 0024     	 mov r4,#0
 1729              	.LVL279:
 1730              	.LBB70:
 1731              	.LBB68:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1732              	 .loc 1 2576 0
 1733 0046 2B80     	 strh r3,[r5]
 1734              	.LBE68:
 1735              	.LBE70:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1736              	 .loc 1 2494 0
 1737 0048 FFF7FEFF 	 bl CPU_SR_Restore
 1738              	.LVL280:
 1739 004c F5E7     	 b .L242
 1740              	.L249:
 1741 004e C046     	 .align 2
 1742              	.L248:
 1743 0050 10270000 	 .word 10000
 1744 0054 00000000 	 .word Mem_SegHeap
 1745 0058 D9270000 	 .word 10201
 1746              	.LBE71:
 1747              	.LBE72:
 1748              	 .cfi_endproc
 1749              	.LFE11:
 1751              	 .section .text.Mem_SegAllocExt,"ax",%progbits
 1752              	 .align 2
 1753              	 .global Mem_SegAllocExt
 1754              	 .code 16
 1755              	 .thumb_func
 1757              	Mem_SegAllocExt:
 1758              	.LFB12:
1187:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
 1759              	 .loc 1 1187 0
 1760              	 .cfi_startproc
 1761              	.LVL281:
 1762 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1763              	.LCFI15:
 1764              	 .cfi_def_cfa_offset 24
 1765              	 .cfi_offset 3,-24
 1766              	 .cfi_offset 4,-20
 1767              	 .cfi_offset 5,-16
 1768              	 .cfi_offset 6,-12
 1769              	 .cfi_offset 7,-8
 1770              	 .cfi_offset 14,-4
1187:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
 1771              	 .loc 1 1187 0
 1772 0002 0D1C     	 mov r5,r1
 1773 0004 161C     	 mov r6,r2
 1774 0006 1C1C     	 mov r4,r3
1191:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1775              	 .loc 1 1191 0
 1776 0008 0029     	 cmp r1,#0
 1777 000a 1DD0     	 beq .L261
 1778              	.L251:
 1779              	.LVL282:
 1780              	.LBB77:
 1781              	.LBB78:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 1782              	 .loc 1 2486 0
 1783 000c FFF7FEFF 	 bl CPU_SR_Save
 1784              	.LVL283:
 1785 0010 6F68     	 ldr r7,[r5,#4]
 1786              	.LVL284:
 1787              	.LBB79:
 1788              	.LBB80:
2562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1789              	 .loc 1 2562 0
 1790 0012 002C     	 cmp r4,#0
 1791 0014 00D1     	 bne .L252
 1792 0016 0134     	 add r4,r4,#1
 1793              	.LVL285:
 1794              	.L252:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 1795              	 .loc 1 2565 0
 1796 0018 A968     	 ldr r1,[r5,#8]
 1797 001a 6342     	 neg r3,r4
 1798 001c 0B40     	 and r3,r1
 1799 001e 1A1C     	 mov r2,r3
 1800 0020 631E     	 sub r3,r4,#1
 1801 0022 0B40     	 and r3,r1
 1802 0024 00D0     	 beq .L253
 1803 0026 231C     	 mov r3,r4
 1804              	.L253:
 1805 0028 9B18     	 add r3,r3,r2
 1806              	.LVL286:
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 1807              	 .loc 1 2567 0
 1808 002a 9E19     	 add r6,r3,r6
 1809              	.LVL287:
 1810 002c 7C1C     	 add r4,r7,#1
 1811              	.LVL288:
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 1812              	 .loc 1 2569 0
 1813 002e 641A     	 sub r4,r4,r1
 1814              	.LVL289:
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 1815              	 .loc 1 2570 0
 1816 0030 711A     	 sub r1,r6,r1
 1817              	.LVL290:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 1818              	 .loc 1 2571 0
 1819 0032 8C42     	 cmp r4,r1
 1820 0034 0AD3     	 bcc .L262
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1821              	 .loc 1 2582 0
 1822 0036 0B4A     	 ldr r2,.L263
 1823 0038 0799     	 ldr r1,[sp,#28]
 1824              	.LVL291:
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1825              	 .loc 1 2580 0
 1826 003a AE60     	 str r6,[r5,#8]
 1827              	.LVL292:
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1828              	 .loc 1 2582 0
 1829 003c 0A80     	 strh r2,[r1]
 1830              	 .loc 1 2584 0
 1831 003e 1C1C     	 mov r4,r3
 1832              	.LVL293:
 1833              	.LBE80:
 1834              	.LBE79:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1835              	 .loc 1 2510 0
 1836 0040 FFF7FEFF 	 bl CPU_SR_Restore
 1837              	.LVL294:
 1838              	.L256:
 1839              	.LBE78:
 1840              	.LBE77:
1209:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1841              	 .loc 1 1209 0
 1842 0044 201C     	 mov r0,r4
 1843              	 
 1844              	.LVL295:
 1845              	.LVL296:
 1846 0046 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1847              	.LVL297:
 1848              	.L261:
1193:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 1849              	 .loc 1 1193 0
 1850 0048 074D     	 ldr r5,.L263+4
 1851 004a DFE7     	 b .L251
 1852              	.LVL298:
 1853              	.L262:
 1854              	.LBB86:
 1855              	.LBB85:
 1856              	.LBB83:
 1857              	.LBB81:
2572:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 1858              	 .loc 1 2572 0
 1859 004c 069B     	 ldr r3,[sp,#24]
 1860              	.LVL299:
 1861 004e 002B     	 cmp r3,#0
 1862 0050 01D0     	 beq .L255
2573:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 1863              	 .loc 1 2573 0
 1864 0052 091B     	 sub r1,r1,r4
 1865              	.LVL300:
 1866 0054 1960     	 str r1,[r3]
 1867              	.LVL301:
 1868              	.L255:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1869              	 .loc 1 2576 0
 1870 0056 054B     	 ldr r3,.L263+8
 1871 0058 079A     	 ldr r2,[sp,#28]
 1872              	.LBE81:
 1873              	.LBE83:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 1874              	 .loc 1 2495 0
 1875 005a 0024     	 mov r4,#0
 1876              	.LVL302:
 1877              	.LBB84:
 1878              	.LBB82:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1879              	 .loc 1 2576 0
 1880 005c 1380     	 strh r3,[r2]
 1881              	.LBE82:
 1882              	.LBE84:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 1883              	 .loc 1 2494 0
 1884 005e FFF7FEFF 	 bl CPU_SR_Restore
 1885              	.LVL303:
 1886 0062 EFE7     	 b .L256
 1887              	.L264:
 1888              	 .align 2
 1889              	.L263:
 1890 0064 10270000 	 .word 10000
 1891 0068 00000000 	 .word Mem_SegHeap
 1892 006c D9270000 	 .word 10201
 1893              	.LBE85:
 1894              	.LBE86:
 1895              	 .cfi_endproc
 1896              	.LFE12:
 1898              	 .section .text.Mem_SegAllocHW,"ax",%progbits
 1899              	 .align 2
 1900              	 .global Mem_SegAllocHW
 1901              	 .code 16
 1902              	 .thumb_func
 1904              	Mem_SegAllocHW:
 1905              	.LFB13:
1257:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
 1906              	 .loc 1 1257 0
 1907              	 .cfi_startproc
 1908              	.LVL304:
 1909 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1910              	.LCFI16:
 1911              	 .cfi_def_cfa_offset 24
 1912              	 .cfi_offset 3,-24
 1913              	 .cfi_offset 4,-20
 1914              	 .cfi_offset 5,-16
 1915              	 .cfi_offset 6,-12
 1916              	 .cfi_offset 7,-8
 1917              	 .cfi_offset 14,-4
1257:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
 1918              	 .loc 1 1257 0
 1919 0002 0E1C     	 mov r6,r1
 1920 0004 141C     	 mov r4,r2
 1921 0006 1D1C     	 mov r5,r3
1261:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1922              	 .loc 1 1261 0
 1923 0008 0029     	 cmp r1,#0
 1924 000a 29D0     	 beq .L280
 1925              	.L266:
 1926              	.LVL305:
1270:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
 1927              	 .loc 1 1270 0
 1928 000c 3769     	 ldr r7,[r6,#16]
 1929              	.LVL306:
 1930              	.LBB91:
 1931              	.LBB92:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 1932              	 .loc 1 2486 0
 1933 000e FFF7FEFF 	 bl CPU_SR_Save
 1934              	.LVL307:
 1935 0012 7368     	 ldr r3,[r6,#4]
 1936              	.LBB93:
 1937              	.LBB94:
2562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1938              	 .loc 1 2562 0
 1939 0014 2A1E     	 sub r2,r5,#0
 1940 0016 9C46     	 mov ip,r3
 1941              	.LVL308:
 1942 0018 BA42     	 cmp r2,r7
 1943 001a 00D2     	 bcs .L267
 1944              	.LVL309:
 1945 001c 3A1C     	 mov r2,r7
 1946              	.LVL310:
 1947              	.L267:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 1948              	 .loc 1 2565 0
 1949 001e B568     	 ldr r5,[r6,#8]
 1950              	.LVL311:
 1951 0020 5342     	 neg r3,r2
 1952 0022 2B40     	 and r3,r5
 1953 0024 191C     	 mov r1,r3
 1954 0026 531E     	 sub r3,r2,#1
 1955 0028 2B40     	 and r3,r5
 1956 002a 00D0     	 beq .L268
 1957 002c 131C     	 mov r3,r2
 1958              	.L268:
 1959 002e 5B18     	 add r3,r3,r1
 1960              	.LVL312:
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 1961              	 .loc 1 2567 0
 1962 0030 1919     	 add r1,r3,r4
 1963 0032 7A42     	 neg r2,r7
 1964              	.LVL313:
 1965 0034 0A40     	 and r2,r1
 1966 0036 141C     	 mov r4,r2
 1967              	.LVL314:
 1968 0038 7A1E     	 sub r2,r7,#1
 1969 003a 0A40     	 and r2,r1
 1970 003c 00D0     	 beq .L269
 1971 003e 3A1C     	 mov r2,r7
 1972              	.L269:
 1973 0040 6146     	 mov r1,ip
 1974 0042 1219     	 add r2,r2,r4
 1975              	.LVL315:
 1976 0044 0131     	 add r1,r1,#1
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 1977              	 .loc 1 2569 0
 1978 0046 491B     	 sub r1,r1,r5
 1979              	.LVL316:
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 1980              	 .loc 1 2570 0
 1981 0048 551B     	 sub r5,r2,r5
 1982              	.LVL317:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 1983              	 .loc 1 2571 0
 1984 004a A942     	 cmp r1,r5
 1985 004c 0AD3     	 bcc .L281
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1986              	 .loc 1 2580 0
 1987 004e B260     	 str r2,[r6,#8]
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1988              	 .loc 1 2582 0
 1989 0050 0799     	 ldr r1,[sp,#28]
 1990              	.LVL318:
 1991 0052 0A4A     	 ldr r2,.L282
 1992              	.LVL319:
 1993              	 .loc 1 2584 0
 1994 0054 1C1C     	 mov r4,r3
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1995              	 .loc 1 2582 0
 1996 0056 0A80     	 strh r2,[r1]
 1997              	.LBE94:
 1998              	.LBE93:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1999              	 .loc 1 2510 0
 2000 0058 FFF7FEFF 	 bl CPU_SR_Restore
 2001              	.LVL320:
 2002              	.L272:
 2003              	.LBE92:
 2004              	.LBE91:
1279:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2005              	 .loc 1 1279 0
 2006 005c 201C     	 mov r0,r4
 2007              	 
 2008              	.LVL321:
 2009              	.LVL322:
 2010 005e F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 2011              	.LVL323:
 2012              	.L280:
1263:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 2013              	 .loc 1 1263 0
 2014 0060 074E     	 ldr r6,.L282+4
 2015 0062 D3E7     	 b .L266
 2016              	.LVL324:
 2017              	.L281:
 2018              	.LBB100:
 2019              	.LBB99:
 2020              	.LBB97:
 2021              	.LBB95:
2572:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 2022              	 .loc 1 2572 0
 2023 0064 069B     	 ldr r3,[sp,#24]
 2024              	.LVL325:
 2025 0066 002B     	 cmp r3,#0
 2026 0068 01D0     	 beq .L271
2573:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 2027              	 .loc 1 2573 0
 2028 006a 6D1A     	 sub r5,r5,r1
 2029              	.LVL326:
 2030 006c 1D60     	 str r5,[r3]
 2031              	.LVL327:
 2032              	.L271:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2033              	 .loc 1 2576 0
 2034 006e 054B     	 ldr r3,.L282+8
 2035 0070 079A     	 ldr r2,[sp,#28]
 2036              	.LVL328:
 2037              	.LBE95:
 2038              	.LBE97:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2039              	 .loc 1 2495 0
 2040 0072 0024     	 mov r4,#0
 2041              	.LBB98:
 2042              	.LBB96:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2043              	 .loc 1 2576 0
 2044 0074 1380     	 strh r3,[r2]
 2045              	.LBE96:
 2046              	.LBE98:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2047              	 .loc 1 2494 0
 2048 0076 FFF7FEFF 	 bl CPU_SR_Restore
 2049              	.LVL329:
 2050 007a EFE7     	 b .L272
 2051              	.L283:
 2052              	 .align 2
 2053              	.L282:
 2054 007c 10270000 	 .word 10000
 2055 0080 00000000 	 .word Mem_SegHeap
 2056 0084 D9270000 	 .word 10201
 2057              	.LBE99:
 2058              	.LBE100:
 2059              	 .cfi_endproc
 2060              	.LFE13:
 2062              	 .section .text.Mem_PoolCreate,"ax",%progbits
 2063              	 .align 2
 2064              	 .global Mem_PoolCreate
 2065              	 .code 16
 2066              	 .thumb_func
 2068              	Mem_PoolCreate:
 2069              	.LFB14:
1359:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG           *p_seg;
 2070              	 .loc 1 1359 0
 2071              	 .cfi_startproc
 2072              	.LVL330:
 2073 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2074              	.LCFI17:
 2075              	 .cfi_def_cfa_offset 20
 2076              	 .cfi_offset 4,-20
 2077              	 .cfi_offset 5,-16
 2078              	 .cfi_offset 6,-12
 2079              	 .cfi_offset 7,-8
 2080              	 .cfi_offset 14,-4
 2081 0002 4446     	 mov r4,r8
 2082 0004 5F46     	 mov r7,fp
 2083 0006 4D46     	 mov r5,r9
 2084 0008 5646     	 mov r6,r10
 2085 000a 9846     	 mov r8,r3
 2086              	.LBB117:
 2087              	.LBB118:
1557:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
 2088              	 .loc 1 1557 0
 2089 000c 0023     	 mov r3,#0
 2090              	.LVL331:
 2091              	.LBE118:
 2092              	.LBE117:
1359:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG           *p_seg;
 2093              	 .loc 1 1359 0
 2094 000e F0B4     	 push {r4,r5,r6,r7}
 2095              	.LCFI18:
 2096              	 .cfi_def_cfa_offset 36
 2097              	 .cfi_offset 8,-36
 2098              	 .cfi_offset 9,-32
 2099              	 .cfi_offset 10,-28
 2100              	 .cfi_offset 11,-24
 2101 0010 83B0     	 sub sp,sp,#12
 2102              	.LCFI19:
 2103              	 .cfi_def_cfa_offset 48
 2104              	.LBB122:
 2105              	.LBB119:
1557:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
 2106              	 .loc 1 1557 0
 2107 0012 0360     	 str r3,[r0]
1558:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       = 0u;
 2108              	 .loc 1 1558 0
 2109 0014 4360     	 str r3,[r0,#4]
1559:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        = 0u;
 2110              	 .loc 1 1559 0
 2111 0016 C360     	 str r3,[r0,#12]
1560:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
 2112              	 .loc 1 1560 0
 2113 0018 8360     	 str r3,[r0,#8]
1561:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
 2114              	 .loc 1 1561 0
 2115 001a 0361     	 str r3,[r0,#16]
1562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2116              	 .loc 1 1562 0
 2117 001c 4361     	 str r3,[r0,#20]
 2118              	.LBE119:
 2119              	.LBE122:
1359:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG           *p_seg;
 2120              	 .loc 1 1359 0
 2121 001e 141C     	 mov r4,r2
 2122              	.LBB123:
 2123              	.LBB120:
1564:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2124              	 .loc 1 1564 0
 2125 0020 814B     	 ldr r3,.L347
 2126 0022 0F9A     	 ldr r2,[sp,#60]
 2127              	.LVL332:
 2128              	.LBE120:
 2129              	.LBE123:
1359:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG           *p_seg;
 2130              	 .loc 1 1359 0
 2131 0024 071C     	 mov r7,r0
 2132 0026 0D1E     	 sub r5,r1,#0
 2133              	.LVL333:
 2134              	.LBB124:
 2135              	.LBB121:
1564:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2136              	 .loc 1 1564 0
 2137 0028 1380     	 strh r3,[r2]
 2138              	.LBE121:
 2139              	.LBE124:
1410:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 2140              	 .loc 1 1410 0
 2141 002a 00D1     	 bne .LCB3073
 2142 002c CBE0     	 b .L312
 2143              	.LCB3073:
1413:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 2144              	 .loc 1 1413 0
 2145 002e FFF7FEFF 	 bl CPU_SR_Save
 2146              	.LVL334:
 2147              	.LBB125:
 2148              	.LBB126:
2387:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2149              	 .loc 1 2387 0
 2150 0032 7E4B     	 ldr r3,.L347+4
 2151 0034 621E     	 sub r2,r4,#1
 2152 0036 9946     	 mov r9,r3
 2153 0038 1B68     	 ldr r3,[r3]
2386:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg_chk   = Mem_SegHeadPtr;
 2154              	 .loc 1 2386 0
 2155 003a AA18     	 add r2,r5,r2
 2156              	.LVL335:
2387:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2157              	 .loc 1 2387 0
 2158 003c 9C46     	 mov ip,r3
 2159              	.LVL336:
2389:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 2160              	 .loc 1 2389 0
 2161 003e 002B     	 cmp r3,#0
 2162 0040 24D0     	 beq .L286
 2163 0042 1C1C     	 mov r4,r3
 2164              	.LVL337:
 2165 0044 06E0     	 b .L294
 2166              	.LVL338:
 2167              	.L287:
2396:../Dave/Generated/UCPROBE/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 2168              	 .loc 1 2396 0
 2169 0046 9D42     	 cmp r5,r3
 2170 0048 19D2     	 bcs .L340
 2171              	.L290:
2397:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_OVERLAP;
 2172              	 .loc 1 2397 0
 2173 004a 9A42     	 cmp r2,r3
 2174 004c 0BD2     	 bcs .L291
2402:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2175              	 .loc 1 2402 0
 2176 004e E468     	 ldr r4,[r4,#12]
 2177              	.LVL339:
2389:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 2178              	 .loc 1 2389 0
 2179 0050 002C     	 cmp r4,#0
 2180 0052 1BD0     	 beq .L286
 2181              	.LVL340:
 2182              	.L294:
2390:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_end   = (CPU_ADDR)p_seg_chk->AddrEnd;
 2183              	 .loc 1 2390 0
 2184 0054 2368     	 ldr r3,[r4]
 2185              	.LVL341:
2391:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2186              	 .loc 1 2391 0
 2187 0056 6168     	 ldr r1,[r4,#4]
 2188              	.LVL342:
2393:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_EXISTS;
 2189              	 .loc 1 2393 0
 2190 0058 9D42     	 cmp r5,r3
 2191 005a F4D1     	 bne .L287
 2192 005c 8A42     	 cmp r2,r1
 2193 005e 00D1     	 bne .LCB3128
 2194 0060 B6E0     	 b .L341
 2195              	.LCB3128:
2396:../Dave/Generated/UCPROBE/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 2196              	 .loc 1 2396 0
 2197 0062 8D42     	 cmp r5,r1
 2198 0064 F1D8     	 bhi .L290
 2199              	.L291:
2398:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
 2200              	 .loc 1 2398 0
 2201 0066 724B     	 ldr r3,.L347+8
 2202              	.LVL343:
 2203 0068 0F9A     	 ldr r2,[sp,#60]
 2204              	.LVL344:
 2205 006a 1380     	 strh r3,[r2]
 2206              	.LBE126:
 2207              	.LBE125:
1454:../Dave/Generated/UCPROBE/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 2208              	 .loc 1 1454 0
 2209 006c FFF7FEFF 	 bl CPU_SR_Restore
 2210              	.LVL345:
 2211              	.L284:
1506:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2212              	 .loc 1 1506 0
 2213 0070 03B0     	 add sp,sp,#12
 2214              	 
 2215              	.LVL346:
 2216              	.LVL347:
 2217 0072 3CBC     	 pop {r2,r3,r4,r5}
 2218 0074 9046     	 mov r8,r2
 2219 0076 9946     	 mov r9,r3
 2220 0078 A246     	 mov r10,r4
 2221 007a AB46     	 mov fp,r5
 2222 007c F0BD     	 pop {r4,r5,r6,r7,pc}
 2223              	.LVL348:
 2224              	.L340:
 2225              	.LBB130:
 2226              	.LBB127:
2396:../Dave/Generated/UCPROBE/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 2227              	 .loc 1 2396 0
 2228 007e 8D42     	 cmp r5,r1
 2229 0080 F1D9     	 bls .L291
 2230 0082 9D42     	 cmp r5,r3
 2231 0084 E1D9     	 bls .L290
2402:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2232              	 .loc 1 2402 0
 2233 0086 E468     	 ldr r4,[r4,#12]
 2234              	.LVL349:
2389:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 2235              	 .loc 1 2389 0
 2236 0088 002C     	 cmp r4,#0
 2237 008a E3D1     	 bne .L294
 2238              	.LVL350:
 2239              	.L286:
 2240              	.LBE127:
 2241              	.LBE130:
 2242              	.LBB131:
 2243              	.LBB132:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 2244              	 .loc 1 2565 0
 2245 008c 0326     	 mov r6,#3
 2246              	.LBE132:
 2247              	.LBE131:
 2248              	.LBB137:
 2249              	.LBB128:
2405:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2250              	 .loc 1 2405 0
 2251 008e 664B     	 ldr r3,.L347
 2252 0090 0F99     	 ldr r1,[sp,#60]
 2253 0092 0B80     	 strh r3,[r1]
 2254 0094 6749     	 ldr r1,.L347+12
 2255 0096 4B68     	 ldr r3,[r1,#4]
 2256 0098 0193     	 str r3,[sp,#4]
 2257              	.LVL351:
 2258              	.LBE128:
 2259              	.LBE137:
 2260              	.LBB138:
 2261              	.LBB133:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 2262              	 .loc 1 2565 0
 2263 009a 8B68     	 ldr r3,[r1,#8]
 2264 009c 1E40     	 and r6,r3
 2265 009e B246     	 mov r10,r6
 2266 00a0 00D0     	 beq .LCB3232
 2267 00a2 92E0     	 b .L342
 2268              	.LCB3232:
 2269              	.L295:
 2270 00a4 0326     	 mov r6,#3
 2271 00a6 B346     	 mov fp,r6
 2272 00a8 1E1C     	 mov r6,r3
 2273 00aa 5C46     	 mov r4,fp
 2274 00ac A643     	 bic r6,r4
 2275 00ae B346     	 mov fp,r6
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 2276              	 .loc 1 2567 0
 2277 00b0 1426     	 mov r6,#20
 2278 00b2 019C     	 ldr r4,[sp,#4]
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 2279              	 .loc 1 2565 0
 2280 00b4 DA44     	 add r10,r10,fp
 2281              	.LVL352:
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 2282              	 .loc 1 2567 0
 2283 00b6 5644     	 add r6,r6,r10
 2284              	.LVL353:
 2285 00b8 0134     	 add r4,r4,#1
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 2286              	 .loc 1 2569 0
 2287 00ba E41A     	 sub r4,r4,r3
 2288              	.LVL354:
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 2289              	 .loc 1 2570 0
 2290 00bc F31A     	 sub r3,r6,r3
 2291              	.LVL355:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 2292              	 .loc 1 2571 0
 2293 00be 9C42     	 cmp r4,r3
 2294 00c0 00D2     	 bcs .LCB3252
 2295 00c2 96E0     	 b .L343
 2296              	.LCB3252:
 2297              	 .loc 1 2584 0
 2298 00c4 5446     	 mov r4,r10
 2299              	.LVL356:
 2300              	.LBE133:
 2301              	.LBE138:
 2302              	.LBB139:
 2303              	.LBB140:
2336:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->PaddingAlign     =  padding_align;
 2304              	 .loc 1 2336 0
 2305 00c6 6346     	 mov r3,ip
 2306              	.LVL357:
 2307 00c8 E360     	 str r3,[r4,#12]
2337:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2308              	 .loc 1 2337 0
 2309 00ca 0123     	 mov r3,#1
 2310 00cc 2361     	 str r3,[r4,#16]
2346:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2311              	 .loc 1 2346 0
 2312 00ce 4B46     	 mov r3,r9
 2313              	.LBE140:
 2314              	.LBE139:
 2315              	.LBB142:
 2316              	.LBB134:
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2317              	 .loc 1 2580 0
 2318 00d0 8E60     	 str r6,[r1,#8]
 2319              	.LVL358:
 2320              	.LBE134:
 2321              	.LBE142:
 2322              	.LBB143:
 2323              	.LBB141:
2333:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
 2324              	 .loc 1 2333 0
 2325 00d2 2560     	 str r5,[r4]
2334:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
 2326              	 .loc 1 2334 0
 2327 00d4 6260     	 str r2,[r4,#4]
2335:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NextPtr          =  Mem_SegHeadPtr;
 2328              	 .loc 1 2335 0
 2329 00d6 A560     	 str r5,[r4,#8]
2346:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2330              	 .loc 1 2346 0
 2331 00d8 1C60     	 str r4,[r3]
 2332              	.LVL359:
 2333              	.L289:
 2334              	.LBE141:
 2335              	.LBE143:
1458:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2336              	 .loc 1 1458 0
 2337 00da FFF7FEFF 	 bl CPU_SR_Restore
 2338              	.LVL360:
 2339              	.L285:
1464:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 2340              	 .loc 1 1464 0
 2341 00de 0D9B     	 ldr r3,[sp,#52]
 2342 00e0 0C9A     	 ldr r2,[sp,#48]
 2343 00e2 5D42     	 neg r5,r3
 2344              	.LVL361:
 2345 00e4 2A40     	 and r2,r5
 2346 00e6 5D1E     	 sub r5,r3,#1
 2347 00e8 0C9B     	 ldr r3,[sp,#48]
 2348 00ea 2B40     	 and r3,r5
 2349 00ec 00D0     	 beq .L298
 2350 00ee 0D9B     	 ldr r3,[sp,#52]
 2351              	.L298:
1464:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 2352              	 .loc 1 1464 0 is_stmt 0 discriminator 4
 2353 00f0 9D18     	 add r5,r3,r2
 2354              	.LVL362:
1465:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2355              	 .loc 1 1465 0 is_stmt 1 discriminator 4
 2356 00f2 4346     	 mov r3,r8
 2357 00f4 6B43     	 mul r3,r5
 2358 00f6 9946     	 mov r9,r3
 2359              	.LVL363:
 2360              	.LBB144:
 2361              	.LBB145:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 2362              	 .loc 1 2486 0 discriminator 4
 2363 00f8 FFF7FEFF 	 bl CPU_SR_Save
 2364              	.LVL364:
 2365              	.LBB146:
 2366              	.LBB147:
2562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2367              	 .loc 1 2562 0 discriminator 4
 2368 00fc 0D9E     	 ldr r6,[sp,#52]
 2369 00fe 6268     	 ldr r2,[r4,#4]
 2370              	.LVL365:
 2371 0100 002E     	 cmp r6,#0
 2372 0102 00D1     	 bne .L299
 2373 0104 0136     	 add r6,r6,#1
 2374              	.LVL366:
 2375              	.L299:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 2376              	 .loc 1 2565 0 discriminator 4
 2377 0106 A368     	 ldr r3,[r4,#8]
 2378 0108 7142     	 neg r1,r6
 2379 010a 1940     	 and r1,r3
 2380 010c 8A46     	 mov r10,r1
 2381 010e 711E     	 sub r1,r6,#1
 2382 0110 1940     	 and r1,r3
 2383 0112 00D0     	 beq .L300
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 2384              	 .loc 1 2565 0 is_stmt 0
 2385 0114 311C     	 mov r1,r6
 2386              	.L300:
 2387 0116 5144     	 add r1,r1,r10
 2388              	.LVL367:
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 2389              	 .loc 1 2567 0 is_stmt 1
 2390 0118 8C46     	 mov ip,r1
 2391 011a CC44     	 add ip,ip,r9
 2392              	.LVL368:
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 2393              	 .loc 1 2570 0
 2394 011c 6646     	 mov r6,ip
 2395              	.LVL369:
 2396 011e 0132     	 add r2,r2,#1
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 2397              	 .loc 1 2569 0
 2398 0120 D21A     	 sub r2,r2,r3
 2399              	.LVL370:
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 2400              	 .loc 1 2570 0
 2401 0122 F31A     	 sub r3,r6,r3
 2402              	.LVL371:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 2403              	 .loc 1 2571 0
 2404 0124 9A42     	 cmp r2,r3
 2405 0126 58D3     	 bcc .L344
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2406              	 .loc 1 2582 0
 2407 0128 3F4B     	 ldr r3,.L347
 2408              	.LVL372:
 2409 012a 0F9A     	 ldr r2,[sp,#60]
 2410              	.LVL373:
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2411              	 .loc 1 2580 0
 2412 012c A660     	 str r6,[r4,#8]
 2413              	.LVL374:
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2414              	 .loc 1 2582 0
 2415 012e 1380     	 strh r3,[r2]
 2416              	 .loc 1 2584 0
 2417 0130 0C1C     	 mov r4,r1
 2418              	.LVL375:
 2419              	.LBE147:
 2420              	.LBE146:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2421              	 .loc 1 2510 0
 2422 0132 FFF7FEFF 	 bl CPU_SR_Restore
 2423              	.LVL376:
 2424              	.L303:
 2425              	.LBE145:
 2426              	.LBE144:
1475:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 2427              	 .loc 1 1475 0
 2428 0136 0F9B     	 ldr r3,[sp,#60]
 2429 0138 1A88     	 ldrh r2,[r3]
 2430 013a 3B4B     	 ldr r3,.L347
 2431 013c 9A42     	 cmp r2,r3
 2432 013e 97D1     	 bne .L284
1480:../Dave/Generated/UCPROBE/lib_mem.c ****                                                       &Mem_SegHeap,
 2433              	 .loc 1 1480 0
 2434 0140 4346     	 mov r3,r8
 2435 0142 9B00     	 lsl r3,r3,#2
 2436 0144 9B46     	 mov fp,r3
 2437              	.LVL377:
 2438              	.LBB153:
 2439              	.LBB154:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 2440              	 .loc 1 2486 0
 2441 0146 FFF7FEFF 	 bl CPU_SR_Save
 2442              	.LVL378:
 2443 014a 3A49     	 ldr r1,.L347+12
 2444              	.LBB155:
 2445              	.LBB156:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 2446              	 .loc 1 2565 0
 2447 014c 0322     	 mov r2,#3
 2448 014e 4B68     	 ldr r3,[r1,#4]
 2449 0150 9C46     	 mov ip,r3
 2450              	.LVL379:
 2451 0152 8B68     	 ldr r3,[r1,#8]
 2452 0154 1E1C     	 mov r6,r3
 2453              	.LVL380:
 2454 0156 9643     	 bic r6,r2
 2455 0158 B246     	 mov r10,r6
 2456 015a 1A40     	 and r2,r3
 2457 015c 00D0     	 beq .L305
 2458 015e 0422     	 mov r2,#4
 2459              	.L305:
 2460 0160 0126     	 mov r6,#1
 2461 0162 5244     	 add r2,r2,r10
 2462              	.LVL381:
 2463 0164 B246     	 mov r10,r6
 2464 0166 D444     	 add ip,ip,r10
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 2465              	 .loc 1 2569 0
 2466 0168 6646     	 mov r6,ip
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 2467              	 .loc 1 2567 0
 2468 016a 9344     	 add fp,fp,r2
 2469              	.LVL382:
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 2470              	 .loc 1 2569 0
 2471 016c F61A     	 sub r6,r6,r3
 2472 016e B446     	 mov ip,r6
 2473              	.LVL383:
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 2474              	 .loc 1 2570 0
 2475 0170 5E46     	 mov r6,fp
 2476              	.LVL384:
 2477 0172 F31A     	 sub r3,r6,r3
 2478              	.LVL385:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 2479              	 .loc 1 2571 0
 2480 0174 9C45     	 cmp ip,r3
 2481 0176 47D3     	 bcc .L345
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2482              	 .loc 1 2580 0
 2483 0178 8E60     	 str r6,[r1,#8]
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2484              	 .loc 1 2582 0
 2485 017a 2B4B     	 ldr r3,.L347
 2486              	.LVL386:
 2487 017c 0F99     	 ldr r1,[sp,#60]
 2488              	 .loc 1 2584 0
 2489 017e 9246     	 mov r10,r2
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2490              	 .loc 1 2582 0
 2491 0180 0B80     	 strh r3,[r1]
 2492              	.LBE156:
 2493              	.LBE155:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2494              	 .loc 1 2510 0
 2495 0182 FFF7FEFF 	 bl CPU_SR_Restore
 2496              	.LVL387:
 2497              	.L308:
 2498              	.LBE154:
 2499              	.LBE153:
1480:../Dave/Generated/UCPROBE/lib_mem.c ****                                                       &Mem_SegHeap,
 2500              	 .loc 1 1480 0
 2501 0186 5346     	 mov r3,r10
 2502 0188 3B61     	 str r3,[r7,#16]
1487:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 2503              	 .loc 1 1487 0
 2504 018a 0F9B     	 ldr r3,[sp,#60]
 2505 018c 1A88     	 ldrh r2,[r3]
 2506 018e 264B     	 ldr r3,.L347
 2507 0190 9A42     	 cmp r2,r3
 2508 0192 00D0     	 beq .LCB3521
 2509 0194 6CE7     	 b .L284
 2510              	.LCB3521:
 2511              	.LVL388:
1493:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2512              	 .loc 1 1493 0 discriminator 1
 2513 0196 4346     	 mov r3,r8
 2514 0198 002B     	 cmp r3,#0
 2515 019a 0AD0     	 beq .L310
 2516              	.LVL389:
1493:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2517              	 .loc 1 1493 0 is_stmt 0 discriminator 3
 2518 019c 5146     	 mov r1,r10
 2519 019e 221C     	 mov r2,r4
 2520 01a0 0023     	 mov r3,#0
 2521              	.LVL390:
 2522 01a2 00E0     	 b .L311
 2523              	.LVL391:
 2524              	.L346:
 2525 01a4 3969     	 ldr r1,[r7,#16]
 2526              	.LVL392:
 2527              	.L311:
1494:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                      += blk_size_align;
 2528              	 .loc 1 1494 0 is_stmt 1 discriminator 3
 2529 01a6 9800     	 lsl r0,r3,#2
1493:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2530              	 .loc 1 1493 0 discriminator 3
 2531 01a8 0133     	 add r3,r3,#1
 2532              	.LVL393:
1494:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                      += blk_size_align;
 2533              	 .loc 1 1494 0 discriminator 3
 2534 01aa 4250     	 str r2,[r0,r1]
1495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2535              	 .loc 1 1495 0 discriminator 3
 2536 01ac 5219     	 add r2,r2,r5
 2537              	.LVL394:
1493:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2538              	 .loc 1 1493 0 discriminator 3
 2539 01ae 4345     	 cmp r3,r8
 2540 01b0 F8D1     	 bne .L346
 2541              	.LVL395:
 2542              	.L310:
 2543 01b2 4946     	 mov r1,r9
1503:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
 2544              	 .loc 1 1503 0
 2545 01b4 4346     	 mov r3,r8
 2546 01b6 0139     	 sub r1,r1,#1
1500:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
 2547              	 .loc 1 1500 0
 2548 01b8 6118     	 add r1,r4,r1
1501:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = (void *)pool_addr_end;
 2549              	 .loc 1 1501 0
 2550 01ba 3C60     	 str r4,[r7]
1502:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        =  blk_nbr;
 2551              	 .loc 1 1502 0
 2552 01bc 7960     	 str r1,[r7,#4]
1503:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
 2553              	 .loc 1 1503 0
 2554 01be BB60     	 str r3,[r7,#8]
1504:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  =  blk_nbr;
 2555              	 .loc 1 1504 0
 2556 01c0 FD60     	 str r5,[r7,#12]
1505:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2557              	 .loc 1 1505 0
 2558 01c2 7B61     	 str r3,[r7,#20]
 2559 01c4 54E7     	 b .L284
 2560              	.LVL396:
 2561              	.L312:
1411:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {                                                    /* Use other seg.                  
 2562              	 .loc 1 1411 0
 2563 01c6 1B4C     	 ldr r4,.L347+12
 2564              	.LVL397:
 2565 01c8 89E7     	 b .L285
 2566              	.LVL398:
 2567              	.L342:
 2568              	.LBB160:
 2569              	.LBB135:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 2570              	 .loc 1 2565 0
 2571 01ca 0424     	 mov r4,#4
 2572 01cc A246     	 mov r10,r4
 2573 01ce 69E7     	 b .L295
 2574              	.LVL399:
 2575              	.L341:
 2576              	.LBE135:
 2577              	.LBE160:
 2578              	.LBB161:
 2579              	.LBB129:
2394:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
 2580              	 .loc 1 2394 0
 2581 01d0 9E23     	 mov r3,#158
 2582              	.LVL400:
 2583 01d2 0F9A     	 ldr r2,[sp,#60]
 2584              	.LVL401:
 2585 01d4 9B01     	 lsl r3,r3,#6
 2586 01d6 1380     	 strh r3,[r2]
 2587 01d8 7FE7     	 b .L289
 2588              	.LVL402:
 2589              	.L344:
 2590              	.LBE129:
 2591              	.LBE161:
 2592              	.LBB162:
 2593              	.LBB152:
 2594              	.LBB150:
 2595              	.LBB148:
2572:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 2596              	 .loc 1 2572 0
 2597 01da 0E99     	 ldr r1,[sp,#56]
 2598              	.LVL403:
 2599 01dc 0029     	 cmp r1,#0
 2600 01de 01D0     	 beq .L302
2573:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 2601              	 .loc 1 2573 0
 2602 01e0 9B1A     	 sub r3,r3,r2
 2603              	.LVL404:
 2604 01e2 0B60     	 str r3,[r1]
 2605              	.LVL405:
 2606              	.L302:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2607              	 .loc 1 2576 0
 2608 01e4 144B     	 ldr r3,.L347+16
 2609 01e6 0F9A     	 ldr r2,[sp,#60]
 2610              	.LVL406:
 2611              	.LBE148:
 2612              	.LBE150:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2613              	 .loc 1 2495 0
 2614 01e8 0024     	 mov r4,#0
 2615              	.LVL407:
 2616              	.LBB151:
 2617              	.LBB149:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2618              	 .loc 1 2576 0
 2619 01ea 1380     	 strh r3,[r2]
 2620              	.LBE149:
 2621              	.LBE151:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2622              	 .loc 1 2494 0
 2623 01ec FFF7FEFF 	 bl CPU_SR_Restore
 2624              	.LVL408:
 2625 01f0 A1E7     	 b .L303
 2626              	.LVL409:
 2627              	.L343:
 2628              	.LBE152:
 2629              	.LBE162:
 2630              	.LBB163:
 2631              	.LBB136:
2572:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 2632              	 .loc 1 2572 0
 2633 01f2 0E9A     	 ldr r2,[sp,#56]
 2634              	.LVL410:
 2635 01f4 002A     	 cmp r2,#0
 2636 01f6 01D0     	 beq .L297
2573:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 2637              	 .loc 1 2573 0
 2638 01f8 1B1B     	 sub r3,r3,r4
 2639              	.LVL411:
 2640 01fa 1360     	 str r3,[r2]
 2641              	.LVL412:
 2642              	.L297:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2643              	 .loc 1 2576 0
 2644 01fc 0E4B     	 ldr r3,.L347+16
 2645 01fe 0F9A     	 ldr r2,[sp,#60]
 2646 0200 1380     	 strh r3,[r2]
 2647              	.LBE136:
 2648              	.LBE163:
1429:../Dave/Generated/UCPROBE/lib_mem.c ****                      return;
 2649              	 .loc 1 1429 0
 2650 0202 FFF7FEFF 	 bl CPU_SR_Restore
 2651              	.LVL413:
1430:../Dave/Generated/UCPROBE/lib_mem.c ****                  }
 2652              	 .loc 1 1430 0
 2653 0206 33E7     	 b .L284
 2654              	.LVL414:
 2655              	.L345:
 2656              	.LBB164:
 2657              	.LBB159:
 2658              	.LBB158:
 2659              	.LBB157:
2572:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 2660              	 .loc 1 2572 0
 2661 0208 0E9A     	 ldr r2,[sp,#56]
 2662              	.LVL415:
 2663 020a 002A     	 cmp r2,#0
 2664 020c 03D0     	 beq .L307
2573:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 2665              	 .loc 1 2573 0
 2666 020e 6246     	 mov r2,ip
 2667 0210 9B1A     	 sub r3,r3,r2
 2668              	.LVL416:
 2669 0212 0E9A     	 ldr r2,[sp,#56]
 2670 0214 1360     	 str r3,[r2]
 2671              	.LVL417:
 2672              	.L307:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2673              	 .loc 1 2576 0
 2674 0216 084B     	 ldr r3,.L347+16
 2675 0218 0F9A     	 ldr r2,[sp,#60]
 2676 021a 1380     	 strh r3,[r2]
 2677              	.LBE157:
 2678              	.LBE158:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2679              	 .loc 1 2494 0
 2680 021c FFF7FEFF 	 bl CPU_SR_Restore
 2681              	.LVL418:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2682              	 .loc 1 2495 0
 2683 0220 0023     	 mov r3,#0
 2684 0222 9A46     	 mov r10,r3
 2685 0224 AFE7     	 b .L308
 2686              	.L348:
 2687 0226 C046     	 .align 2
 2688              	.L347:
 2689 0228 10270000 	 .word 10000
 2690 022c 00000000 	 .word Mem_SegHeadPtr
 2691 0230 7F270000 	 .word 10111
 2692 0234 00000000 	 .word Mem_SegHeap
 2693 0238 D9270000 	 .word 10201
 2694              	.LBE159:
 2695              	.LBE164:
 2696              	 .cfi_endproc
 2697              	.LFE14:
 2699              	 .section .text.Mem_PoolClr,"ax",%progbits
 2700              	 .align 2
 2701              	 .global Mem_PoolClr
 2702              	 .code 16
 2703              	 .thumb_func
 2705              	Mem_PoolClr:
 2706              	.LFB15:
1544:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE RTN ERR 
 2707              	 .loc 1 1544 0
 2708              	 .cfi_startproc
 2709              	.LVL419:
1557:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
 2710              	 .loc 1 1557 0
 2711 0000 0023     	 mov r3,#0
 2712 0002 0360     	 str r3,[r0]
1558:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       = 0u;
 2713              	 .loc 1 1558 0
 2714 0004 4360     	 str r3,[r0,#4]
1559:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        = 0u;
 2715              	 .loc 1 1559 0
 2716 0006 C360     	 str r3,[r0,#12]
1560:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
 2717              	 .loc 1 1560 0
 2718 0008 8360     	 str r3,[r0,#8]
1561:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
 2719              	 .loc 1 1561 0
 2720 000a 0361     	 str r3,[r0,#16]
1562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2721              	 .loc 1 1562 0
 2722 000c 4361     	 str r3,[r0,#20]
1564:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2723              	 .loc 1 1564 0
 2724 000e 014B     	 ldr r3,.L350
1565:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2725              	 .loc 1 1565 0
 2726              	 
1564:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2727              	 .loc 1 1564 0
 2728 0010 0B80     	 strh r3,[r1]
1565:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2729              	 .loc 1 1565 0
 2730 0012 7047     	 bx lr
 2731              	.L351:
 2732              	 .align 2
 2733              	.L350:
 2734 0014 10270000 	 .word 10000
 2735              	 .cfi_endproc
 2736              	.LFE15:
 2738              	 .section .text.Mem_PoolBlkGet,"ax",%progbits
 2739              	 .align 2
 2740              	 .global Mem_PoolBlkGet
 2741              	 .code 16
 2742              	 .thumb_func
 2744              	Mem_PoolBlkGet:
 2745              	.LFB16:
1601:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blk;
 2746              	 .loc 1 1601 0
 2747              	 .cfi_startproc
 2748              	.LVL420:
 2749 0000 38B5     	 push {r3,r4,r5,lr}
 2750              	.LCFI20:
 2751              	 .cfi_def_cfa_offset 16
 2752              	 .cfi_offset 3,-16
 2753              	 .cfi_offset 4,-12
 2754              	 .cfi_offset 5,-8
 2755              	 .cfi_offset 14,-4
1601:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blk;
 2756              	 .loc 1 1601 0
 2757 0002 041C     	 mov r4,r0
 2758 0004 151C     	 mov r5,r2
1632:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 2759              	 .loc 1 1632 0
 2760 0006 FFF7FEFF 	 bl CPU_SR_Save
 2761              	.LVL421:
1633:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTblIx                     -= 1u;
 2762              	 .loc 1 1633 0
 2763 000a 6369     	 ldr r3,[r4,#20]
 2764 000c 002B     	 cmp r3,#0
 2765 000e 0FD0     	 beq .L353
1635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = DEF_NULL;
 2766              	 .loc 1 1635 0
 2767 0010 2269     	 ldr r2,[r4,#16]
1634:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                                     = p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx];
 2768              	 .loc 1 1634 0
 2769 0012 013B     	 sub r3,r3,#1
 2770 0014 6361     	 str r3,[r4,#20]
1635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = DEF_NULL;
 2771              	 .loc 1 1635 0
 2772 0016 9B00     	 lsl r3,r3,#2
 2773 0018 D318     	 add r3,r2,r3
1636:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2774              	 .loc 1 1636 0
 2775 001a 0022     	 mov r2,#0
1635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = DEF_NULL;
 2776              	 .loc 1 1635 0
 2777 001c 1C68     	 ldr r4,[r3]
 2778              	.LVL422:
1636:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2779              	 .loc 1 1636 0
 2780 001e 1A60     	 str r2,[r3]
1638:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2781              	 .loc 1 1638 0
 2782 0020 FFF7FEFF 	 bl CPU_SR_Restore
 2783              	.LVL423:
1640:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_EMPTY;
 2784              	 .loc 1 1640 0
 2785 0024 002C     	 cmp r4,#0
 2786 0026 05D0     	 beq .L355
1643:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2787              	 .loc 1 1643 0
 2788 0028 044B     	 ldr r3,.L358
 2789              	.LVL424:
 2790              	.L354:
 2791 002a 2B80     	 strh r3,[r5]
1647:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2792              	 .loc 1 1647 0
 2793 002c 201C     	 mov r0,r4
 2794              	 
 2795              	.LVL425:
 2796 002e 38BD     	 pop {r3,r4,r5,pc}
 2797              	.LVL426:
 2798              	.L353:
1638:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2799              	 .loc 1 1638 0
 2800 0030 FFF7FEFF 	 bl CPU_SR_Restore
 2801              	.LVL427:
 2802              	.L355:
1641:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 2803              	 .loc 1 1641 0
 2804 0034 024B     	 ldr r3,.L358+4
 2805 0036 0024     	 mov r4,#0
 2806 0038 F7E7     	 b .L354
 2807              	.L359:
 2808 003a C046     	 .align 2
 2809              	.L358:
 2810 003c 10270000 	 .word 10000
 2811 0040 DE270000 	 .word 10206
 2812              	 .cfi_endproc
 2813              	.LFE16:
 2815              	 .section .text.Mem_PoolBlkFree,"ax",%progbits
 2816              	 .align 2
 2817              	 .global Mem_PoolBlkFree
 2818              	 .code 16
 2819              	 .thumb_func
 2821              	Mem_PoolBlkFree:
 2822              	.LFB17:
1684:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 2823              	 .loc 1 1684 0
 2824              	 .cfi_startproc
 2825              	.LVL428:
 2826 0000 70B5     	 push {r4,r5,r6,lr}
 2827              	.LCFI21:
 2828              	 .cfi_def_cfa_offset 16
 2829              	 .cfi_offset 4,-16
 2830              	 .cfi_offset 5,-12
 2831              	 .cfi_offset 6,-8
 2832              	 .cfi_offset 14,-4
1684:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 2833              	 .loc 1 1684 0
 2834 0002 041C     	 mov r4,r0
 2835 0004 151C     	 mov r5,r2
 2836 0006 0E1C     	 mov r6,r1
1722:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2837              	 .loc 1 1722 0
 2838 0008 FFF7FEFF 	 bl CPU_SR_Save
 2839              	.LVL429:
1725:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2840              	 .loc 1 1725 0
 2841 000c 6369     	 ldr r3,[r4,#20]
 2842 000e A268     	 ldr r2,[r4,#8]
 2843 0010 9342     	 cmp r3,r2
 2844 0012 09D2     	 bcs .L363
1731:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
 2845              	 .loc 1 1731 0
 2846 0014 2169     	 ldr r1,[r4,#16]
 2847 0016 9A00     	 lsl r2,r3,#2
1732:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2848              	 .loc 1 1732 0
 2849 0018 0133     	 add r3,r3,#1
1731:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
 2850              	 .loc 1 1731 0
 2851 001a 5650     	 str r6,[r2,r1]
1732:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2852              	 .loc 1 1732 0
 2853 001c 6361     	 str r3,[r4,#20]
1733:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2854              	 .loc 1 1733 0
 2855 001e FFF7FEFF 	 bl CPU_SR_Restore
 2856              	.LVL430:
1735:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2857              	 .loc 1 1735 0
 2858 0022 044B     	 ldr r3,.L364
 2859 0024 2B80     	 strh r3,[r5]
 2860              	.L360:
1736:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2861              	 .loc 1 1736 0
 2862              	 
 2863              	.LVL431:
 2864              	.LVL432:
 2865              	.LVL433:
 2866 0026 70BD     	 pop {r4,r5,r6,pc}
 2867              	.LVL434:
 2868              	.L363:
1726:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2869              	 .loc 1 1726 0
 2870 0028 FFF7FEFF 	 bl CPU_SR_Restore
 2871              	.LVL435:
1727:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 2872              	 .loc 1 1727 0
 2873 002c 024B     	 ldr r3,.L364+4
 2874 002e 2B80     	 strh r3,[r5]
1728:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 2875              	 .loc 1 1728 0
 2876 0030 F9E7     	 b .L360
 2877              	.L365:
 2878 0032 C046     	 .align 2
 2879              	.L364:
 2880 0034 10270000 	 .word 10000
 2881 0038 DD270000 	 .word 10205
 2882              	 .cfi_endproc
 2883              	.LFE17:
 2885              	 .section .text.Mem_PoolBlkGetNbrAvail,"ax",%progbits
 2886              	 .align 2
 2887              	 .global Mem_PoolBlkGetNbrAvail
 2888              	 .code 16
 2889              	 .thumb_func
 2891              	Mem_PoolBlkGetNbrAvail:
 2892              	.LFB18:
1767:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
 2893              	 .loc 1 1767 0
 2894              	 .cfi_startproc
 2895              	.LVL436:
 2896 0000 38B5     	 push {r3,r4,r5,lr}
 2897              	.LCFI22:
 2898              	 .cfi_def_cfa_offset 16
 2899              	 .cfi_offset 3,-16
 2900              	 .cfi_offset 4,-12
 2901              	 .cfi_offset 5,-8
 2902              	 .cfi_offset 14,-4
1767:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
 2903              	 .loc 1 1767 0
 2904 0002 041C     	 mov r4,r0
 2905 0004 0D1C     	 mov r5,r1
1784:../Dave/Generated/UCPROBE/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2906              	 .loc 1 1784 0
 2907 0006 FFF7FEFF 	 bl CPU_SR_Save
 2908              	.LVL437:
1785:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2909              	 .loc 1 1785 0
 2910 000a 6469     	 ldr r4,[r4,#20]
 2911              	.LVL438:
1786:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2912              	 .loc 1 1786 0
 2913 000c FFF7FEFF 	 bl CPU_SR_Restore
 2914              	.LVL439:
1788:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2915              	 .loc 1 1788 0
 2916 0010 014B     	 ldr r3,.L367
1791:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2917              	 .loc 1 1791 0
 2918 0012 201C     	 mov r0,r4
1788:../Dave/Generated/UCPROBE/lib_mem.c **** 
 2919              	 .loc 1 1788 0
 2920 0014 2B80     	 strh r3,[r5]
1791:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 2921              	 .loc 1 1791 0
 2922              	 
 2923              	.LVL440:
 2924              	.LVL441:
 2925 0016 38BD     	 pop {r3,r4,r5,pc}
 2926              	.L368:
 2927              	 .align 2
 2928              	.L367:
 2929 0018 10270000 	 .word 10000
 2930              	 .cfi_endproc
 2931              	.LFE18:
 2933              	 .section .text.Mem_DynPoolCreate,"ax",%progbits
 2934              	 .align 2
 2935              	 .global Mem_DynPoolCreate
 2936              	 .code 16
 2937              	 .thumb_func
 2939              	Mem_DynPoolCreate:
 2940              	.LFB19:
1848:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2941              	 .loc 1 1848 0
 2942              	 .cfi_startproc
 2943              	.LVL442:
 2944 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 2945              	.LCFI23:
 2946              	 .cfi_def_cfa_offset 24
 2947              	 .cfi_offset 3,-24
 2948              	 .cfi_offset 4,-20
 2949              	 .cfi_offset 5,-16
 2950              	 .cfi_offset 6,-12
 2951              	 .cfi_offset 7,-8
 2952              	 .cfi_offset 14,-4
 2953 0002 4D46     	 mov r5,r9
 2954 0004 5646     	 mov r6,r10
 2955 0006 5F46     	 mov r7,fp
 2956 0008 4446     	 mov r4,r8
 2957 000a 9146     	 mov r9,r2
 2958 000c F0B4     	 push {r4,r5,r6,r7}
 2959              	.LCFI24:
 2960              	 .cfi_def_cfa_offset 40
 2961              	 .cfi_offset 8,-40
 2962              	 .cfi_offset 9,-36
 2963              	 .cfi_offset 10,-32
 2964              	 .cfi_offset 11,-28
1848:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2965              	 .loc 1 1848 0
 2966 000e 0E1C     	 mov r6,r1
 2967 0010 1D1C     	 mov r5,r3
1849:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 2968              	 .loc 1 1849 0
 2969 0012 002A     	 cmp r2,#0
 2970 0014 00D1     	 bne .LCB4213
 2971 0016 76E0     	 b .L393
 2972              	.LCB4213:
 2973              	.LVL443:
 2974              	.L370:
 2975              	.LBB172:
 2976              	.LBB173:
2585:../Dave/Generated/UCPROBE/lib_mem.c **** }
2586:../Dave/Generated/UCPROBE/lib_mem.c **** 
2587:../Dave/Generated/UCPROBE/lib_mem.c **** 
2588:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2589:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2590:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_SegAllocTrackCritical()
2591:../Dave/Generated/UCPROBE/lib_mem.c **** *
2592:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Tracks segment allocation, adding the 'size' of the allocation under the 'p_name' e
2593:../Dave/Generated/UCPROBE/lib_mem.c **** *
2594:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to the name of the object. This string is not copied and its memory
2595:../Dave/Generated/UCPROBE/lib_mem.c **** *                       remain accessible at all times.
2596:../Dave/Generated/UCPROBE/lib_mem.c **** *
2597:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg   Pointer to segment data.
2598:../Dave/Generated/UCPROBE/lib_mem.c **** *
2599:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Allocation size, in bytes.
2600:../Dave/Generated/UCPROBE/lib_mem.c **** *
2601:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2602:../Dave/Generated/UCPROBE/lib_mem.c **** *
2603:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_HEAP_EMPTY      No more memory available on heap
2604:../Dave/Generated/UCPROBE/lib_mem.c **** *
2605:../Dave/Generated/UCPROBE/lib_mem.c **** *                           --------------RETURNED BY Mem_SegAllocExtCritical()---------------
2606:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF         Allocation would overflow memory segment.
2607:../Dave/Generated/UCPROBE/lib_mem.c **** *
2608:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
2609:../Dave/Generated/UCPROBE/lib_mem.c **** *
2610:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2611:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocInternal().
2612:../Dave/Generated/UCPROBE/lib_mem.c **** *
2613:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2614:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2615:../Dave/Generated/UCPROBE/lib_mem.c **** */
2616:../Dave/Generated/UCPROBE/lib_mem.c **** 
2617:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2618:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_SegAllocTrackCritical (const  CPU_CHAR    *p_name,
2619:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_SEG     *p_seg,
2620:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T   size,
2621:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 LIB_ERR     *p_err)
2622:../Dave/Generated/UCPROBE/lib_mem.c **** {
2623:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_ALLOC_INFO  *p_alloc;
2624:../Dave/Generated/UCPROBE/lib_mem.c **** 
2625:../Dave/Generated/UCPROBE/lib_mem.c **** 
2626:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------- UPDATE ALLOC INFO LIST, 
2627:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc = p_seg->AllocInfoHeadPtr;
2628:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_alloc != DEF_NULL) {
2629:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_alloc->NamePtr == p_name) {
2630:../Dave/Generated/UCPROBE/lib_mem.c ****             p_alloc->Size += size;
2631:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_NONE;
2632:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2633:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2634:../Dave/Generated/UCPROBE/lib_mem.c **** 
2635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_alloc = p_alloc->NextPtr;
2636:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2637:../Dave/Generated/UCPROBE/lib_mem.c **** 
2638:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------- ADD NEW ALLOC INFO ENT
2639:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc = Mem_SegAllocExtCritical(&Mem_SegHeap,             /* Alloc new alloc info struct on h
2640:../Dave/Generated/UCPROBE/lib_mem.c ****                                        sizeof(MEM_ALLOC_INFO),
2641:../Dave/Generated/UCPROBE/lib_mem.c ****                                        sizeof(CPU_ALIGN),
2642:../Dave/Generated/UCPROBE/lib_mem.c ****                                        LIB_MEM_PADDING_ALIGN_NONE,
2643:../Dave/Generated/UCPROBE/lib_mem.c ****                                        DEF_NULL,
2644:../Dave/Generated/UCPROBE/lib_mem.c ****                                        p_err);
2645:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2646:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2647:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2648:../Dave/Generated/UCPROBE/lib_mem.c **** 
2649:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->NamePtr = p_name;                                  /* Populate alloc info.            
2650:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->Size    = size;
2651:../Dave/Generated/UCPROBE/lib_mem.c **** 
2652:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->NextPtr        = p_seg->AllocInfoHeadPtr;          /* Prepend new item in list.       
2653:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AllocInfoHeadPtr = p_alloc;
2654:../Dave/Generated/UCPROBE/lib_mem.c **** }
2655:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2656:../Dave/Generated/UCPROBE/lib_mem.c **** 
2657:../Dave/Generated/UCPROBE/lib_mem.c **** 
2658:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2659:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2660:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_DynPoolCreateInternal()
2661:../Dave/Generated/UCPROBE/lib_mem.c **** *
2662:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool.
2663:../Dave/Generated/UCPROBE/lib_mem.c **** *
2664:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name              Pointer to pool name.
2665:../Dave/Generated/UCPROBE/lib_mem.c **** *
2666:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool              Pointer to pool data.
2667:../Dave/Generated/UCPROBE/lib_mem.c **** *
2668:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg               Pointer to segment from which to allocate memory.
2669:../Dave/Generated/UCPROBE/lib_mem.c **** *
2670:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size            Size of memory block to allocate from pool, in bytes. See Note 
2671:../Dave/Generated/UCPROBE/lib_mem.c **** *
2672:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align           Required alignment of memory block, in bytes. MUST be a power o
2673:../Dave/Generated/UCPROBE/lib_mem.c **** *
2674:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_padding_align   Block's padding alignment, in bytes, that will be added at the 
2675:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   of block's buffer. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_
2676:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   means no padding.
2677:../Dave/Generated/UCPROBE/lib_mem.c **** *
2678:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init        Initial number of elements to be allocated in pool.
2679:../Dave/Generated/UCPROBE/lib_mem.c **** *
2680:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max         Maximum number of elements that can be allocated from this pool
2681:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_BLK_QTY_UNLIMITED if no limit.
2682:../Dave/Generated/UCPROBE/lib_mem.c **** *
2683:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2684:../Dave/Generated/UCPROBE/lib_mem.c **** *
2685:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
2686:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
2687:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
2688:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
2689:../Dave/Generated/UCPROBE/lib_mem.c **** *
2690:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
2691:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2692:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2693:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2694:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2695:../Dave/Generated/UCPROBE/lib_mem.c **** *
2696:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
2697:../Dave/Generated/UCPROBE/lib_mem.c **** *
2698:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_DynPoolCreate(),
2699:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_DynPoolCreateHW().
2700:../Dave/Generated/UCPROBE/lib_mem.c **** *
2701:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
2702:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
2703:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2704:../Dave/Generated/UCPROBE/lib_mem.c **** */
2705:../Dave/Generated/UCPROBE/lib_mem.c **** 
2706:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_DynPoolCreateInternal (const  CPU_CHAR      *p_name,
2707:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_DYN_POOL  *p_pool,
2708:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_SEG       *p_seg,
2709:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_size,
2710:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_align,
2711:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_padding_align,
2712:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_init,
2713:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_max,
2714:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 LIB_ERR       *p_err)
2715:../Dave/Generated/UCPROBE/lib_mem.c **** {
2716:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blks;
2717:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   blk_size_align;
2718:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   blk_align_worst = DEF_MAX(blk_align, blk_padding_align);
 2977              	 .loc 1 2718 0
 2978 0018 0A9F     	 ldr r7,[sp,#40]
 2979 001a 002F     	 cmp r7,#0
 2980 001c 00D1     	 bne .L371
 2981 001e 0137     	 add r7,r7,#1
 2982              	.L371:
 2983              	.LVL444:
2719:../Dave/Generated/UCPROBE/lib_mem.c **** 
2720:../Dave/Generated/UCPROBE/lib_mem.c **** 
2721:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2722:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2723:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
2724:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2725:../Dave/Generated/UCPROBE/lib_mem.c **** 
2726:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2727:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2728:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2729:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2730:../Dave/Generated/UCPROBE/lib_mem.c **** 
2731:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < 1u) {                                        /* Chk for inv blk size.           
2732:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
2733:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2734:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2735:../Dave/Generated/UCPROBE/lib_mem.c **** 
2736:../Dave/Generated/UCPROBE/lib_mem.c ****     if ((blk_qty_max  != LIB_MEM_BLK_QTY_UNLIMITED) &&          /* Chk for invalid blk qty.        
2737:../Dave/Generated/UCPROBE/lib_mem.c ****         (blk_qty_init >  blk_qty_max)) {
2738:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
2739:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2740:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2741:../Dave/Generated/UCPROBE/lib_mem.c **** 
2742:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk for illegal align spec.     
2743:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
2744:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2745:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2746:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2747:../Dave/Generated/UCPROBE/lib_mem.c **** 
2748:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Calc blk size with align.       
2749:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < sizeof(void *)) {                            /* If size if smaller than ptr ... 
2750:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... inc size to ptr size.       
2751:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(sizeof(void *), blk_align_worst);
 2984              	 .loc 1 2751 0
 2985 0020 7B42     	 neg r3,r7
 2986 0022 9846     	 mov r8,r3
2749:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... inc size to ptr size.       
 2987              	 .loc 1 2749 0
 2988 0024 032D     	 cmp r5,#3
 2989 0026 1DD8     	 bhi .L372
 2990              	 .loc 1 2751 0
 2991 0028 0424     	 mov r4,#4
 2992 002a 7A1E     	 sub r2,r7,#1
 2993 002c 2340     	 and r3,r4
 2994 002e 9346     	 mov fp,r2
 2995 0030 1440     	 and r4,r2
 2996 0032 66D1     	 bne .L394
 2997              	.L375:
2752:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2753:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(blk_size, blk_align_worst);
 2998              	 .loc 1 2753 0
 2999 0034 1C19     	 add r4,r3,r4
 3000              	.LVL445:
2754:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2755:../Dave/Generated/UCPROBE/lib_mem.c **** 
2756:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_qty_init != 0u) {                                   /* Alloc init blks.                
 3001              	 .loc 1 2756 0
 3002 0036 0B9B     	 ldr r3,[sp,#44]
 3003 0038 002B     	 cmp r3,#0
 3004 003a 1ED1     	 bne .L395
 3005              	.L376:
2757:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
2758:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_seg,
2759:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     blk_size_align * blk_qty_init,
2760:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     blk_align_worst,
2761:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     LIB_MEM_PADDING_ALIGN_NONE,
2762:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     DEF_NULL,
2763:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_err);
2764:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
2765:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2766:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2767:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2768:../Dave/Generated/UCPROBE/lib_mem.c **** 
2769:../Dave/Generated/UCPROBE/lib_mem.c **** 
2770:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ----------------- CREATE POOL DA
2771:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolSegPtr      = p_seg;
 3006              	 .loc 1 2771 0
 3007 003c 4B46     	 mov r3,r9
 3008 003e 3360     	 str r3,[r6]
2772:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize         = blk_size;
2773:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAlign        = blk_align_worst;
2774:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkPaddingAlign = blk_padding_align;
 3009              	 .loc 1 2774 0
 3010 0040 0123     	 mov r3,#1
 3011 0042 F360     	 str r3,[r6,#12]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkQtyMax       = blk_qty_max;
 3012              	 .loc 1 2775 0
 3013 0044 0C9B     	 ldr r3,[sp,#48]
2772:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize         = blk_size;
 3014              	 .loc 1 2772 0
 3015 0046 7560     	 str r5,[r6,#4]
 3016              	 .loc 1 2775 0
 3017 0048 7361     	 str r3,[r6,#20]
2776:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3018              	 .loc 1 2776 0
 3019 004a 0B9B     	 ldr r3,[sp,#44]
2773:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkPaddingAlign = blk_padding_align;
 3020              	 .loc 1 2773 0
 3021 004c B760     	 str r7,[r6,#8]
 3022              	 .loc 1 2776 0
 3023 004e B361     	 str r3,[r6,#24]
2777:../Dave/Generated/UCPROBE/lib_mem.c **** 
2778:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_qty_init != 0u) {                                   /* Init free list.                 
2779:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SIZE_T  i;
2780:../Dave/Generated/UCPROBE/lib_mem.c **** 
2781:../Dave/Generated/UCPROBE/lib_mem.c **** 
2782:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = (void *)p_blks;
2783:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
2784:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
2785:../Dave/Generated/UCPROBE/lib_mem.c ****             p_blks            += blk_size_align;
2786:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2787:../Dave/Generated/UCPROBE/lib_mem.c ****        *((void **)p_blks) = DEF_NULL;
2788:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2789:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = DEF_NULL;
 3024              	 .loc 1 2789 0
 3025 0050 3361     	 str r3,[r6,#16]
 3026              	.LVL446:
 3027              	.L384:
2790:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2791:../Dave/Generated/UCPROBE/lib_mem.c **** 
2792:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2793:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->NamePtr = p_name;
2794:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2795:../Dave/Generated/UCPROBE/lib_mem.c **** 
2796:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 3028              	 .loc 1 2796 0
 3029 0052 334B     	 ldr r3,.L398
 3030 0054 0D9A     	 ldr r2,[sp,#52]
 3031 0056 1380     	 strh r3,[r2]
 3032              	.L369:
 3033              	.LBE173:
 3034              	.LBE172:
1867:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3035              	 .loc 1 1867 0
 3036              	 
 3037              	.LVL447:
 3038              	.LVL448:
 3039              	.LVL449:
 3040 0058 3CBC     	 pop {r2,r3,r4,r5}
 3041 005a 9046     	 mov r8,r2
 3042 005c 9946     	 mov r9,r3
 3043 005e A246     	 mov r10,r4
 3044 0060 AB46     	 mov fp,r5
 3045 0062 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 3046              	.LVL450:
 3047              	.L372:
 3048              	.LBB186:
 3049              	.LBB184:
2753:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3050              	 .loc 1 2753 0
 3051 0064 1C1C     	 mov r4,r3
 3052 0066 7B1E     	 sub r3,r7,#1
 3053 0068 9B46     	 mov fp,r3
 3054 006a 2C40     	 and r4,r5
 3055 006c 2B40     	 and r3,r5
 3056 006e E1D0     	 beq .L375
 3057 0070 3B1C     	 mov r3,r7
 3058 0072 1C19     	 add r4,r3,r4
 3059              	.LVL451:
2756:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
 3060              	 .loc 1 2756 0
 3061 0074 0B9B     	 ldr r3,[sp,#44]
 3062 0076 002B     	 cmp r3,#0
 3063 0078 E0D0     	 beq .L376
 3064              	.L395:
2757:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_seg,
 3065              	 .loc 1 2757 0
 3066 007a 6343     	 mul r3,r4
 3067 007c 9A46     	 mov r10,r3
 3068              	.LVL452:
 3069              	.LBB174:
 3070              	.LBB175:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 3071              	 .loc 1 2486 0
 3072 007e FFF7FEFF 	 bl CPU_SR_Save
 3073              	.LVL453:
 3074 0082 4B46     	 mov r3,r9
 3075              	.LBB176:
 3076              	.LBB177:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 3077              	 .loc 1 2565 0
 3078 0084 9A68     	 ldr r2,[r3,#8]
 3079 0086 5968     	 ldr r1,[r3,#4]
 3080              	.LVL454:
 3081 0088 4346     	 mov r3,r8
 3082 008a 1340     	 and r3,r2
 3083 008c 9846     	 mov r8,r3
 3084 008e 5B46     	 mov r3,fp
 3085 0090 1340     	 and r3,r2
 3086 0092 3BD1     	 bne .L396
 3087              	.L377:
 3088 0094 4344     	 add r3,r3,r8
 3089              	.LVL455:
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 3090              	 .loc 1 2567 0
 3091 0096 9C46     	 mov ip,r3
 3092 0098 0131     	 add r1,r1,#1
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 3093              	 .loc 1 2569 0
 3094 009a 891A     	 sub r1,r1,r2
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 3095              	 .loc 1 2567 0
 3096 009c D444     	 add ip,ip,r10
 3097              	.LVL456:
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 3098              	 .loc 1 2569 0
 3099 009e 8846     	 mov r8,r1
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 3100              	 .loc 1 2570 0
 3101 00a0 6146     	 mov r1,ip
 3102 00a2 8A1A     	 sub r2,r1,r2
 3103              	.LVL457:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 3104              	 .loc 1 2571 0
 3105 00a4 9045     	 cmp r8,r2
 3106 00a6 33D3     	 bcc .L397
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3107              	 .loc 1 2580 0
 3108 00a8 4A46     	 mov r2,r9
 3109              	.LVL458:
 3110 00aa 6146     	 mov r1,ip
 3111 00ac 9160     	 str r1,[r2,#8]
 3112              	.LVL459:
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3113              	 .loc 1 2582 0
 3114 00ae 1C4A     	 ldr r2,.L398
 3115 00b0 0D99     	 ldr r1,[sp,#52]
2584:../Dave/Generated/UCPROBE/lib_mem.c **** }
 3116              	 .loc 1 2584 0
 3117 00b2 9846     	 mov r8,r3
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3118              	 .loc 1 2582 0
 3119 00b4 0A80     	 strh r2,[r1]
 3120              	.LBE177:
 3121              	.LBE176:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3122              	 .loc 1 2510 0
 3123 00b6 FFF7FEFF 	 bl CPU_SR_Restore
 3124              	.LVL460:
 3125              	.L379:
 3126              	.LBE175:
 3127              	.LBE174:
2764:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
 3128              	 .loc 1 2764 0
 3129 00ba 0D9B     	 ldr r3,[sp,#52]
 3130 00bc 1A88     	 ldrh r2,[r3]
 3131 00be 184B     	 ldr r3,.L398
 3132 00c0 9A42     	 cmp r2,r3
 3133 00c2 C9D1     	 bne .L369
 3134              	.LVL461:
2771:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize         = blk_size;
 3135              	 .loc 1 2771 0
 3136 00c4 4B46     	 mov r3,r9
 3137 00c6 3360     	 str r3,[r6]
2774:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkQtyMax       = blk_qty_max;
 3138              	 .loc 1 2774 0
 3139 00c8 0123     	 mov r3,#1
 3140 00ca F360     	 str r3,[r6,#12]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3141              	 .loc 1 2775 0
 3142 00cc 0C9B     	 ldr r3,[sp,#48]
2772:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAlign        = blk_align_worst;
 3143              	 .loc 1 2772 0
 3144 00ce 7560     	 str r5,[r6,#4]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3145              	 .loc 1 2775 0
 3146 00d0 7361     	 str r3,[r6,#20]
2776:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3147              	 .loc 1 2776 0
 3148 00d2 0023     	 mov r3,#0
 3149 00d4 B361     	 str r3,[r6,#24]
 3150              	.LBB181:
2782:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3151              	 .loc 1 2782 0
 3152 00d6 4346     	 mov r3,r8
 3153 00d8 3361     	 str r3,[r6,#16]
 3154              	.LVL462:
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3155              	 .loc 1 2783 0
 3156 00da 0B9B     	 ldr r3,[sp,#44]
 3157              	.LBE181:
2773:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkPaddingAlign = blk_padding_align;
 3158              	 .loc 1 2773 0
 3159 00dc B760     	 str r7,[r6,#8]
 3160              	.LBB182:
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3161              	 .loc 1 2783 0
 3162 00de 5D1E     	 sub r5,r3,#1
 3163              	.LVL463:
 3164 00e0 4246     	 mov r2,r8
 3165 00e2 0023     	 mov r3,#0
 3166 00e4 002D     	 cmp r5,#0
 3167 00e6 08D0     	 beq .L383
 3168              	.LVL464:
 3169              	.L389:
2784:../Dave/Generated/UCPROBE/lib_mem.c ****             p_blks            += blk_size_align;
 3170              	 .loc 1 2784 0
 3171 00e8 1119     	 add r1,r2,r4
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3172              	 .loc 1 2783 0
 3173 00ea 0133     	 add r3,r3,#1
 3174              	.LVL465:
2784:../Dave/Generated/UCPROBE/lib_mem.c ****             p_blks            += blk_size_align;
 3175              	 .loc 1 2784 0
 3176 00ec 1160     	 str r1,[r2]
 3177              	.LVL466:
 3178 00ee 0A1C     	 mov r2,r1
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3179              	 .loc 1 2783 0
 3180 00f0 AB42     	 cmp r3,r5
 3181 00f2 F9D1     	 bne .L389
 3182 00f4 5346     	 mov r3,r10
 3183              	.LVL467:
 3184 00f6 1C1B     	 sub r4,r3,r4
 3185              	.LVL468:
 3186 00f8 A044     	 add r8,r8,r4
 3187              	.LVL469:
 3188              	.L383:
2787:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 3189              	 .loc 1 2787 0
 3190 00fa 0023     	 mov r3,#0
 3191 00fc 4246     	 mov r2,r8
 3192              	.LVL470:
 3193 00fe 1360     	 str r3,[r2]
 3194 0100 A7E7     	 b .L384
 3195              	.LVL471:
 3196              	.L394:
 3197              	.LBE182:
2751:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 3198              	 .loc 1 2751 0
 3199 0102 3C1C     	 mov r4,r7
 3200 0104 96E7     	 b .L375
 3201              	.LVL472:
 3202              	.L393:
 3203              	.LBE184:
 3204              	.LBE186:
1851:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 3205              	 .loc 1 1851 0
 3206 0106 074B     	 ldr r3,.L398+4
 3207              	.LVL473:
 3208 0108 9946     	 mov r9,r3
 3209 010a 85E7     	 b .L370
 3210              	.LVL474:
 3211              	.L396:
 3212              	.LBB187:
 3213              	.LBB185:
 3214              	.LBB183:
 3215              	.LBB180:
 3216              	.LBB179:
 3217              	.LBB178:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 3218              	 .loc 1 2565 0
 3219 010c 3B1C     	 mov r3,r7
 3220 010e C1E7     	 b .L377
 3221              	.LVL475:
 3222              	.L397:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3223              	 .loc 1 2576 0
 3224 0110 054B     	 ldr r3,.L398+8
 3225              	.LVL476:
 3226 0112 0D9A     	 ldr r2,[sp,#52]
 3227              	.LVL477:
 3228 0114 1380     	 strh r3,[r2]
 3229              	.LBE178:
 3230              	.LBE179:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3231              	 .loc 1 2494 0
 3232 0116 FFF7FEFF 	 bl CPU_SR_Restore
 3233              	.LVL478:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3234              	 .loc 1 2495 0
 3235 011a 0023     	 mov r3,#0
 3236 011c 9846     	 mov r8,r3
 3237 011e CCE7     	 b .L379
 3238              	.L399:
 3239              	 .align 2
 3240              	.L398:
 3241 0120 10270000 	 .word 10000
 3242 0124 00000000 	 .word Mem_SegHeap
 3243 0128 D9270000 	 .word 10201
 3244              	.LBE180:
 3245              	.LBE183:
 3246              	.LBE185:
 3247              	.LBE187:
 3248              	 .cfi_endproc
 3249              	.LFE19:
 3251              	 .section .text.Mem_DynPoolCreateHW,"ax",%progbits
 3252              	 .align 2
 3253              	 .global Mem_DynPoolCreateHW
 3254              	 .code 16
 3255              	 .thumb_func
 3257              	Mem_DynPoolCreateHW:
 3258              	.LFB20:
1920:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 3259              	 .loc 1 1920 0
 3260              	 .cfi_startproc
 3261              	.LVL479:
 3262 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3263              	.LCFI25:
 3264              	 .cfi_def_cfa_offset 20
 3265              	 .cfi_offset 4,-20
 3266              	 .cfi_offset 5,-16
 3267              	 .cfi_offset 6,-12
 3268              	 .cfi_offset 7,-8
 3269              	 .cfi_offset 14,-4
 3270 0002 5646     	 mov r6,r10
 3271 0004 4446     	 mov r4,r8
 3272 0006 5F46     	 mov r7,fp
 3273 0008 4D46     	 mov r5,r9
 3274 000a F0B4     	 push {r4,r5,r6,r7}
 3275              	.LCFI26:
 3276              	 .cfi_def_cfa_offset 36
 3277              	 .cfi_offset 8,-36
 3278              	 .cfi_offset 9,-32
 3279              	 .cfi_offset 10,-28
 3280              	 .cfi_offset 11,-24
 3281 000c 9046     	 mov r8,r2
 3282 000e 83B0     	 sub sp,sp,#12
 3283              	.LCFI27:
 3284              	 .cfi_def_cfa_offset 48
1920:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 3285              	 .loc 1 1920 0
 3286 0010 0E1C     	 mov r6,r1
 3287 0012 9A46     	 mov r10,r3
1921:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 3288              	 .loc 1 1921 0
 3289 0014 002A     	 cmp r2,#0
 3290 0016 00D1     	 bne .LCB4696
 3291 0018 81E0     	 b .L428
 3292              	.LCB4696:
 3293              	.LVL480:
 3294              	.L401:
1930:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
 3295              	 .loc 1 1930 0
 3296 001a 4346     	 mov r3,r8
 3297              	.LBB195:
 3298              	.LBB196:
2718:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3299              	 .loc 1 2718 0
 3300 001c 0C9F     	 ldr r7,[sp,#48]
 3301              	.LBE196:
 3302              	.LBE195:
1930:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
 3303              	 .loc 1 1930 0
 3304 001e 1D69     	 ldr r5,[r3,#16]
 3305              	.LVL481:
 3306              	.LBB214:
 3307              	.LBB211:
2718:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3308              	 .loc 1 2718 0
 3309 0020 AF42     	 cmp r7,r5
 3310 0022 00D2     	 bcs .L402
 3311 0024 2F1C     	 mov r7,r5
 3312              	.LVL482:
 3313              	.L402:
2749:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... inc size to ptr size.       
 3314              	 .loc 1 2749 0
 3315 0026 5346     	 mov r3,r10
 3316 0028 032B     	 cmp r3,#3
 3317 002a 1FD8     	 bhi .L403
 3318              	.LVL483:
2751:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 3319              	 .loc 1 2751 0
 3320 002c 0424     	 mov r4,#4
 3321 002e 7A42     	 neg r2,r7
 3322 0030 7B1E     	 sub r3,r7,#1
 3323              	.LVL484:
 3324 0032 2240     	 and r2,r4
 3325 0034 1C40     	 and r4,r3
 3326 0036 00D0     	 beq .LCB4742
 3327 0038 6FE0     	 b .L429
 3328              	.LCB4742:
 3329              	.L404:
2756:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
 3330              	 .loc 1 2756 0
 3331 003a 0D9B     	 ldr r3,[sp,#52]
2751:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 3332              	 .loc 1 2751 0
 3333 003c A418     	 add r4,r4,r2
 3334              	.LVL485:
2756:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
 3335              	 .loc 1 2756 0
 3336 003e 002B     	 cmp r3,#0
 3337 0040 20D1     	 bne .L430
 3338              	.L407:
2771:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize         = blk_size;
 3339              	 .loc 1 2771 0
 3340 0042 4346     	 mov r3,r8
 3341 0044 3360     	 str r3,[r6]
2772:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAlign        = blk_align_worst;
 3342              	 .loc 1 2772 0
 3343 0046 5346     	 mov r3,r10
 3344 0048 7360     	 str r3,[r6,#4]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3345              	 .loc 1 2775 0
 3346 004a 0E9B     	 ldr r3,[sp,#56]
2773:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkPaddingAlign = blk_padding_align;
 3347              	 .loc 1 2773 0
 3348 004c B760     	 str r7,[r6,#8]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3349              	 .loc 1 2775 0
 3350 004e 7361     	 str r3,[r6,#20]
2776:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3351              	 .loc 1 2776 0
 3352 0050 0D9B     	 ldr r3,[sp,#52]
2774:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkQtyMax       = blk_qty_max;
 3353              	 .loc 1 2774 0
 3354 0052 F560     	 str r5,[r6,#12]
2776:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3355              	 .loc 1 2776 0
 3356 0054 B361     	 str r3,[r6,#24]
2789:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3357              	 .loc 1 2789 0
 3358 0056 3361     	 str r3,[r6,#16]
 3359              	.LVL486:
 3360              	.L416:
 3361              	 .loc 1 2796 0
 3362 0058 394B     	 ldr r3,.L434
 3363 005a 0F9A     	 ldr r2,[sp,#60]
 3364 005c 1380     	 strh r3,[r2]
 3365              	.L400:
 3366              	.LBE211:
 3367              	.LBE214:
1939:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3368              	 .loc 1 1939 0
 3369 005e 03B0     	 add sp,sp,#12
 3370              	 
 3371              	.LVL487:
 3372              	.LVL488:
 3373              	.LVL489:
 3374              	.LVL490:
 3375 0060 3CBC     	 pop {r2,r3,r4,r5}
 3376 0062 9046     	 mov r8,r2
 3377 0064 9946     	 mov r9,r3
 3378 0066 A246     	 mov r10,r4
 3379 0068 AB46     	 mov fp,r5
 3380 006a F0BD     	 pop {r4,r5,r6,r7,pc}
 3381              	.LVL491:
 3382              	.L403:
 3383              	.LBB215:
 3384              	.LBB212:
2753:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3385              	 .loc 1 2753 0
 3386 006c 5246     	 mov r2,r10
 3387 006e 5346     	 mov r3,r10
 3388              	.LVL492:
 3389 0070 7C42     	 neg r4,r7
 3390 0072 2240     	 and r2,r4
 3391 0074 7C1E     	 sub r4,r7,#1
 3392 0076 2340     	 and r3,r4
 3393 0078 00D0     	 beq .L406
 3394 007a 3B1C     	 mov r3,r7
 3395              	.L406:
 3396 007c 9C18     	 add r4,r3,r2
 3397              	.LVL493:
2756:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
 3398              	 .loc 1 2756 0
 3399 007e 0D9B     	 ldr r3,[sp,#52]
 3400 0080 002B     	 cmp r3,#0
 3401 0082 DED0     	 beq .L407
 3402              	.L430:
2757:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_seg,
 3403              	 .loc 1 2757 0
 3404 0084 6343     	 mul r3,r4
 3405 0086 9B46     	 mov fp,r3
 3406              	.LVL494:
 3407              	.LBB197:
 3408              	.LBB198:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 3409              	 .loc 1 2486 0
 3410 0088 FFF7FEFF 	 bl CPU_SR_Save
 3411              	.LVL495:
 3412 008c 4346     	 mov r3,r8
 3413 008e 5B68     	 ldr r3,[r3,#4]
 3414 0090 0190     	 str r0,[sp,#4]
 3415              	.LVL496:
 3416 0092 9946     	 mov r9,r3
 3417              	.LVL497:
 3418              	.LBB199:
 3419              	.LBB200:
2562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3420              	 .loc 1 2562 0
 3421 0094 BC46     	 mov ip,r7
 3422 0096 002F     	 cmp r7,#0
 3423 0098 46D0     	 beq .L431
 3424              	.L408:
 3425              	.LVL498:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 3426              	 .loc 1 2565 0
 3427 009a 4346     	 mov r3,r8
 3428 009c 9A68     	 ldr r2,[r3,#8]
 3429 009e 6346     	 mov r3,ip
 3430 00a0 5942     	 neg r1,r3
 3431 00a2 013B     	 sub r3,r3,#1
 3432 00a4 1140     	 and r1,r2
 3433 00a6 1340     	 and r3,r2
 3434 00a8 3CD1     	 bne .L432
 3435              	.L409:
 3436 00aa 0120     	 mov r0,#1
 3437              	.LVL499:
 3438 00ac 8446     	 mov ip,r0
 3439              	.LVL500:
 3440 00ae 5B18     	 add r3,r3,r1
 3441              	.LVL501:
 3442 00b0 E144     	 add r9,r9,ip
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 3443              	 .loc 1 2567 0
 3444 00b2 5946     	 mov r1,fp
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 3445              	 .loc 1 2569 0
 3446 00b4 4846     	 mov r0,r9
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 3447              	 .loc 1 2567 0
 3448 00b6 5918     	 add r1,r3,r1
 3449              	.LVL502:
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 3450              	 .loc 1 2569 0
 3451 00b8 801A     	 sub r0,r0,r2
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 3452              	 .loc 1 2570 0
 3453 00ba 8A1A     	 sub r2,r1,r2
 3454              	.LVL503:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 3455              	 .loc 1 2571 0
 3456 00bc 9042     	 cmp r0,r2
 3457 00be 36D3     	 bcc .L433
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3458              	 .loc 1 2580 0
 3459 00c0 4246     	 mov r2,r8
 3460              	.LVL504:
 3461 00c2 9160     	 str r1,[r2,#8]
 3462              	.LVL505:
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3463              	 .loc 1 2582 0
 3464 00c4 1E4A     	 ldr r2,.L434
 3465 00c6 0F99     	 ldr r1,[sp,#60]
 3466              	.LVL506:
 3467              	.LBE200:
 3468              	.LBE199:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3469              	 .loc 1 2510 0
 3470 00c8 0198     	 ldr r0,[sp,#4]
 3471              	.LBB204:
 3472              	.LBB201:
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3473              	 .loc 1 2582 0
 3474 00ca 0A80     	 strh r2,[r1]
2584:../Dave/Generated/UCPROBE/lib_mem.c **** }
 3475              	 .loc 1 2584 0
 3476 00cc 9946     	 mov r9,r3
 3477              	.LBE201:
 3478              	.LBE204:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3479              	 .loc 1 2510 0
 3480 00ce FFF7FEFF 	 bl CPU_SR_Restore
 3481              	.LVL507:
 3482              	.L411:
 3483              	.LBE198:
 3484              	.LBE197:
2764:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
 3485              	 .loc 1 2764 0
 3486 00d2 0F9B     	 ldr r3,[sp,#60]
 3487 00d4 1A88     	 ldrh r2,[r3]
 3488 00d6 1A4B     	 ldr r3,.L434
 3489 00d8 9A42     	 cmp r2,r3
 3490 00da C0D1     	 bne .L400
 3491              	.LVL508:
2771:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize         = blk_size;
 3492              	 .loc 1 2771 0
 3493 00dc 4346     	 mov r3,r8
 3494 00de 3360     	 str r3,[r6]
2772:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAlign        = blk_align_worst;
 3495              	 .loc 1 2772 0
 3496 00e0 5346     	 mov r3,r10
 3497 00e2 7360     	 str r3,[r6,#4]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3498              	 .loc 1 2775 0
 3499 00e4 0E9B     	 ldr r3,[sp,#56]
2774:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkQtyMax       = blk_qty_max;
 3500              	 .loc 1 2774 0
 3501 00e6 F560     	 str r5,[r6,#12]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3502              	 .loc 1 2775 0
 3503 00e8 7361     	 str r3,[r6,#20]
2776:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3504              	 .loc 1 2776 0
 3505 00ea 0023     	 mov r3,#0
 3506 00ec B361     	 str r3,[r6,#24]
 3507              	.LBB208:
2782:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3508              	 .loc 1 2782 0
 3509 00ee 4B46     	 mov r3,r9
 3510 00f0 3361     	 str r3,[r6,#16]
 3511              	.LVL509:
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3512              	 .loc 1 2783 0
 3513 00f2 0D9B     	 ldr r3,[sp,#52]
 3514              	.LBE208:
2773:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkPaddingAlign = blk_padding_align;
 3515              	 .loc 1 2773 0
 3516 00f4 B760     	 str r7,[r6,#8]
 3517              	.LBB209:
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3518              	 .loc 1 2783 0
 3519 00f6 5D1E     	 sub r5,r3,#1
 3520              	.LVL510:
 3521 00f8 4A46     	 mov r2,r9
 3522 00fa 0023     	 mov r3,#0
 3523 00fc 002D     	 cmp r5,#0
 3524 00fe 08D0     	 beq .L415
 3525              	.LVL511:
 3526              	.L422:
2784:../Dave/Generated/UCPROBE/lib_mem.c ****             p_blks            += blk_size_align;
 3527              	 .loc 1 2784 0
 3528 0100 1119     	 add r1,r2,r4
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3529              	 .loc 1 2783 0
 3530 0102 0133     	 add r3,r3,#1
 3531              	.LVL512:
2784:../Dave/Generated/UCPROBE/lib_mem.c ****             p_blks            += blk_size_align;
 3532              	 .loc 1 2784 0
 3533 0104 1160     	 str r1,[r2]
 3534              	.LVL513:
 3535 0106 0A1C     	 mov r2,r1
2783:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3536              	 .loc 1 2783 0
 3537 0108 AB42     	 cmp r3,r5
 3538 010a F9D1     	 bne .L422
 3539 010c 5B46     	 mov r3,fp
 3540              	.LVL514:
 3541 010e 1C1B     	 sub r4,r3,r4
 3542              	.LVL515:
 3543 0110 A144     	 add r9,r9,r4
 3544              	.LVL516:
 3545              	.L415:
2787:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 3546              	 .loc 1 2787 0
 3547 0112 0023     	 mov r3,#0
 3548 0114 4A46     	 mov r2,r9
 3549              	.LVL517:
 3550 0116 1360     	 str r3,[r2]
 3551 0118 9EE7     	 b .L416
 3552              	.LVL518:
 3553              	.L429:
 3554              	.LBE209:
2751:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 3555              	 .loc 1 2751 0
 3556 011a 3C1C     	 mov r4,r7
 3557 011c 8DE7     	 b .L404
 3558              	.LVL519:
 3559              	.L428:
 3560              	.LBE212:
 3561              	.LBE215:
1923:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 3562              	 .loc 1 1923 0
 3563 011e 094B     	 ldr r3,.L434+4
 3564              	.LVL520:
 3565 0120 9846     	 mov r8,r3
 3566 0122 7AE7     	 b .L401
 3567              	.LVL521:
 3568              	.L432:
 3569              	.LBB216:
 3570              	.LBB213:
 3571              	.LBB210:
 3572              	.LBB207:
 3573              	.LBB205:
 3574              	.LBB202:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 3575              	 .loc 1 2565 0
 3576 0124 6346     	 mov r3,ip
 3577 0126 C0E7     	 b .L409
 3578              	.LVL522:
 3579              	.L431:
2562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3580              	 .loc 1 2562 0
 3581 0128 0123     	 mov r3,#1
 3582 012a 9C46     	 mov ip,r3
 3583 012c B5E7     	 b .L408
 3584              	.LVL523:
 3585              	.L433:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3586              	 .loc 1 2576 0
 3587 012e 064B     	 ldr r3,.L434+8
 3588              	.LVL524:
 3589 0130 0F9A     	 ldr r2,[sp,#60]
 3590              	.LVL525:
 3591              	.LBE202:
 3592              	.LBE205:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3593              	 .loc 1 2494 0
 3594 0132 0198     	 ldr r0,[sp,#4]
 3595              	.LBB206:
 3596              	.LBB203:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3597              	 .loc 1 2576 0
 3598 0134 1380     	 strh r3,[r2]
 3599              	.LBE203:
 3600              	.LBE206:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3601              	 .loc 1 2494 0
 3602 0136 FFF7FEFF 	 bl CPU_SR_Restore
 3603              	.LVL526:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3604              	 .loc 1 2495 0
 3605 013a 0023     	 mov r3,#0
 3606 013c 9946     	 mov r9,r3
 3607 013e C8E7     	 b .L411
 3608              	.L435:
 3609              	 .align 2
 3610              	.L434:
 3611 0140 10270000 	 .word 10000
 3612 0144 00000000 	 .word Mem_SegHeap
 3613 0148 D9270000 	 .word 10201
 3614              	.LBE207:
 3615              	.LBE210:
 3616              	.LBE213:
 3617              	.LBE216:
 3618              	 .cfi_endproc
 3619              	.LFE20:
 3621              	 .section .text.Mem_DynPoolBlkGet,"ax",%progbits
 3622              	 .align 2
 3623              	 .global Mem_DynPoolBlkGet
 3624              	 .code 16
 3625              	 .thumb_func
 3627              	Mem_DynPoolBlkGet:
 3628              	.LFB21:
1974:../Dave/Generated/UCPROBE/lib_mem.c ****            void      *p_blk;
 3629              	 .loc 1 1974 0
 3630              	 .cfi_startproc
 3631              	.LVL527:
 3632 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3633              	.LCFI28:
 3634              	 .cfi_def_cfa_offset 20
 3635              	 .cfi_offset 4,-20
 3636              	 .cfi_offset 5,-16
 3637              	 .cfi_offset 6,-12
 3638              	 .cfi_offset 7,-8
 3639              	 .cfi_offset 14,-4
 3640 0002 4E46     	 mov r6,r9
 3641 0004 5746     	 mov r7,r10
 3642 0006 4546     	 mov r5,r8
1992:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3643              	 .loc 1 1992 0
 3644 0008 4369     	 ldr r3,[r0,#20]
1974:../Dave/Generated/UCPROBE/lib_mem.c ****            void      *p_blk;
 3645              	 .loc 1 1974 0
 3646 000a E0B4     	 push {r5,r6,r7}
 3647              	.LCFI29:
 3648              	 .cfi_def_cfa_offset 32
 3649              	 .cfi_offset 8,-32
 3650              	 .cfi_offset 9,-28
 3651              	 .cfi_offset 10,-24
1974:../Dave/Generated/UCPROBE/lib_mem.c ****            void      *p_blk;
 3652              	 .loc 1 1974 0
 3653 000c 041C     	 mov r4,r0
 3654 000e 0E1C     	 mov r6,r1
1992:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3655              	 .loc 1 1992 0
 3656 0010 002B     	 cmp r3,#0
 3657 0012 09D0     	 beq .L437
1993:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 3658              	 .loc 1 1993 0
 3659 0014 FFF7FEFF 	 bl CPU_SR_Save
 3660              	.LVL528:
1994:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
 3661              	 .loc 1 1994 0
 3662 0018 A369     	 ldr r3,[r4,#24]
 3663 001a 6269     	 ldr r2,[r4,#20]
 3664 001c 9342     	 cmp r3,r2
 3665 001e 4ED2     	 bcs .L453
2001:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3666              	 .loc 1 2001 0
 3667 0020 0133     	 add r3,r3,#1
 3668 0022 A361     	 str r3,[r4,#24]
2002:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3669              	 .loc 1 2002 0
 3670 0024 FFF7FEFF 	 bl CPU_SR_Restore
 3671              	.LVL529:
 3672              	.L437:
2006:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 3673              	 .loc 1 2006 0
 3674 0028 FFF7FEFF 	 bl CPU_SR_Save
 3675              	.LVL530:
2007:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
 3676              	 .loc 1 2007 0
 3677 002c 2569     	 ldr r5,[r4,#16]
 3678 002e 002D     	 cmp r5,#0
 3679 0030 0BD0     	 beq .L440
 3680              	.LVL531:
2009:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3681              	 .loc 1 2009 0
 3682 0032 2B68     	 ldr r3,[r5]
 3683 0034 2361     	 str r3,[r4,#16]
2010:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3684              	 .loc 1 2010 0
 3685 0036 FFF7FEFF 	 bl CPU_SR_Restore
 3686              	.LVL532:
2012:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3687              	 .loc 1 2012 0
 3688 003a 274B     	 ldr r3,.L456
 3689 003c 3380     	 strh r3,[r6]
 3690              	.LVL533:
 3691              	.L439:
2036:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3692              	 .loc 1 2036 0
 3693 003e 281C     	 mov r0,r5
 3694              	 
 3695              	.LVL534:
 3696 0040 1CBC     	 pop {r2,r3,r4}
 3697 0042 9046     	 mov r8,r2
 3698 0044 9946     	 mov r9,r3
 3699 0046 A246     	 mov r10,r4
 3700 0048 F0BD     	 pop {r4,r5,r6,r7,pc}
 3701              	.LVL535:
 3702              	.L440:
2016:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3703              	 .loc 1 2016 0
 3704 004a FFF7FEFF 	 bl CPU_SR_Restore
 3705              	.LVL536:
2024:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->PoolSegPtr,
 3706              	 .loc 1 2024 0
 3707 004e 2368     	 ldr r3,[r4]
 3708 0050 6768     	 ldr r7,[r4,#4]
 3709 0052 9846     	 mov r8,r3
 3710 0054 A368     	 ldr r3,[r4,#8]
 3711 0056 E468     	 ldr r4,[r4,#12]
 3712              	.LVL537:
 3713 0058 9946     	 mov r9,r3
 3714              	.LVL538:
 3715              	.LBB221:
 3716              	.LBB222:
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 3717              	 .loc 1 2486 0
 3718 005a FFF7FEFF 	 bl CPU_SR_Save
 3719              	.LVL539:
 3720 005e 4346     	 mov r3,r8
 3721 0060 5B68     	 ldr r3,[r3,#4]
 3722 0062 8446     	 mov ip,r0
 3723              	.LVL540:
 3724 0064 9A46     	 mov r10,r3
 3725              	.LVL541:
 3726              	.LBB223:
 3727              	.LBB224:
2562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3728              	 .loc 1 2562 0
 3729 0066 211E     	 sub r1,r4,#0
 3730 0068 4945     	 cmp r1,r9
 3731 006a 26D3     	 bcc .L454
 3732              	.L441:
 3733              	.LVL542:
2565:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
 3734              	 .loc 1 2565 0
 3735 006c 4346     	 mov r3,r8
 3736 006e 9868     	 ldr r0,[r3,#8]
 3737              	.LVL543:
 3738 0070 4B42     	 neg r3,r1
 3739 0072 0340     	 and r3,r0
 3740 0074 1A1C     	 mov r2,r3
 3741 0076 4B1E     	 sub r3,r1,#1
 3742 0078 0340     	 and r3,r0
 3743 007a 00D0     	 beq .L442
 3744 007c 0B1C     	 mov r3,r1
 3745              	.L442:
 3746 007e 9B18     	 add r3,r3,r2
 3747              	.LVL544:
2567:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
 3748              	 .loc 1 2567 0
 3749 0080 D919     	 add r1,r3,r7
 3750              	.LVL545:
 3751 0082 6242     	 neg r2,r4
 3752 0084 0A40     	 and r2,r1
 3753 0086 171C     	 mov r7,r2
 3754              	.LVL546:
 3755 0088 621E     	 sub r2,r4,#1
 3756 008a 0A40     	 and r2,r1
 3757 008c 00D0     	 beq .L443
 3758 008e 221C     	 mov r2,r4
 3759              	.L443:
 3760 0090 5446     	 mov r4,r10
 3761              	.LVL547:
 3762 0092 D219     	 add r2,r2,r7
 3763              	.LVL548:
 3764 0094 0134     	 add r4,r4,#1
 3765              	.LVL549:
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 3766              	 .loc 1 2569 0
 3767 0096 241A     	 sub r4,r4,r0
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 3768              	 .loc 1 2570 0
 3769 0098 111A     	 sub r1,r2,r0
 3770              	.LVL550:
2571:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 3771              	 .loc 1 2571 0
 3772 009a 8C42     	 cmp r4,r1
 3773 009c 15D3     	 bcc .L455
2580:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3774              	 .loc 1 2580 0
 3775 009e 4146     	 mov r1,r8
 3776              	.LVL551:
 3777 00a0 8A60     	 str r2,[r1,#8]
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3778              	 .loc 1 2582 0
 3779 00a2 0D4A     	 ldr r2,.L456
 3780              	.LVL552:
 3781              	.LBE224:
 3782              	.LBE223:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3783              	 .loc 1 2510 0
 3784 00a4 6046     	 mov r0,ip
 3785              	.LVL553:
 3786              	.LBB229:
 3787              	.LBB225:
2582:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3788              	 .loc 1 2582 0
 3789 00a6 3280     	 strh r2,[r6]
2584:../Dave/Generated/UCPROBE/lib_mem.c **** }
 3790              	 .loc 1 2584 0
 3791 00a8 1C1C     	 mov r4,r3
 3792              	.LBE225:
 3793              	.LBE229:
2510:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3794              	 .loc 1 2510 0
 3795 00aa FFF7FEFF 	 bl CPU_SR_Restore
 3796              	.LVL554:
 3797              	.L445:
 3798              	.LBE222:
 3799              	.LBE221:
2031:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3800              	 .loc 1 2031 0
 3801 00ae 3288     	 ldrh r2,[r6]
 3802 00b0 094B     	 ldr r3,.L456
 3803 00b2 9A42     	 cmp r2,r3
 3804 00b4 C3D1     	 bne .L439
2035:../Dave/Generated/UCPROBE/lib_mem.c **** }
 3805              	 .loc 1 2035 0
 3806 00b6 251C     	 mov r5,r4
 3807 00b8 C1E7     	 b .L439
 3808              	.LVL555:
 3809              	.L454:
 3810              	.LBB235:
 3811              	.LBB233:
 3812              	.LBB230:
 3813              	.LBB226:
2562:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3814              	 .loc 1 2562 0
 3815 00ba 4946     	 mov r1,r9
 3816              	.LVL556:
 3817 00bc D6E7     	 b .L441
 3818              	.LVL557:
 3819              	.L453:
 3820              	.LBE226:
 3821              	.LBE230:
 3822              	.LBE233:
 3823              	.LBE235:
1995:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3824              	 .loc 1 1995 0
 3825 00be FFF7FEFF 	 bl CPU_SR_Restore
 3826              	.LVL558:
1997:../Dave/Generated/UCPROBE/lib_mem.c ****             return (DEF_NULL);
 3827              	 .loc 1 1997 0
 3828 00c2 064B     	 ldr r3,.L456+4
1998:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 3829              	 .loc 1 1998 0
 3830 00c4 0025     	 mov r5,#0
1997:../Dave/Generated/UCPROBE/lib_mem.c ****             return (DEF_NULL);
 3831              	 .loc 1 1997 0
 3832 00c6 3380     	 strh r3,[r6]
1998:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 3833              	 .loc 1 1998 0
 3834 00c8 B9E7     	 b .L439
 3835              	.LVL559:
 3836              	.L455:
 3837              	.LBB236:
 3838              	.LBB234:
 3839              	.LBB231:
 3840              	.LBB227:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3841              	 .loc 1 2576 0
 3842 00ca 054B     	 ldr r3,.L456+8
 3843              	.LVL560:
 3844              	.LBE227:
 3845              	.LBE231:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3846              	 .loc 1 2494 0
 3847 00cc 6046     	 mov r0,ip
 3848              	.LVL561:
 3849              	.LBB232:
 3850              	.LBB228:
2576:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3851              	 .loc 1 2576 0
 3852 00ce 3380     	 strh r3,[r6]
 3853              	.LBE228:
 3854              	.LBE232:
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 3855              	 .loc 1 2494 0
 3856 00d0 FFF7FEFF 	 bl CPU_SR_Restore
 3857              	.LVL562:
2495:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3858              	 .loc 1 2495 0
 3859 00d4 0024     	 mov r4,#0
 3860 00d6 EAE7     	 b .L445
 3861              	.L457:
 3862              	 .align 2
 3863              	.L456:
 3864 00d8 10270000 	 .word 10000
 3865 00dc DE270000 	 .word 10206
 3866 00e0 D9270000 	 .word 10201
 3867              	.LBE234:
 3868              	.LBE236:
 3869              	 .cfi_endproc
 3870              	.LFE21:
 3872              	 .section .text.Mem_DynPoolBlkFree,"ax",%progbits
 3873              	 .align 2
 3874              	 .global Mem_DynPoolBlkFree
 3875              	 .code 16
 3876              	 .thumb_func
 3878              	Mem_DynPoolBlkFree:
 3879              	.LFB22:
2066:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 3880              	 .loc 1 2066 0
 3881              	 .cfi_startproc
 3882              	.LVL563:
2086:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3883              	 .loc 1 2086 0
 3884 0000 4369     	 ldr r3,[r0,#20]
2066:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 3885              	 .loc 1 2066 0
 3886 0002 70B5     	 push {r4,r5,r6,lr}
 3887              	.LCFI30:
 3888              	 .cfi_def_cfa_offset 16
 3889              	 .cfi_offset 4,-16
 3890              	 .cfi_offset 5,-12
 3891              	 .cfi_offset 6,-8
 3892              	 .cfi_offset 14,-4
2066:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 3893              	 .loc 1 2066 0
 3894 0004 041C     	 mov r4,r0
 3895 0006 0D1C     	 mov r5,r1
 3896 0008 161C     	 mov r6,r2
2086:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3897              	 .loc 1 2086 0
 3898 000a 002B     	 cmp r3,#0
 3899 000c 08D0     	 beq .L459
2087:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 3900              	 .loc 1 2087 0
 3901 000e FFF7FEFF 	 bl CPU_SR_Save
 3902              	.LVL564:
2088:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
 3903              	 .loc 1 2088 0
 3904 0012 A369     	 ldr r3,[r4,#24]
 3905 0014 002B     	 cmp r3,#0
 3906 0016 0DD0     	 beq .L465
2095:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3907              	 .loc 1 2095 0
 3908 0018 013B     	 sub r3,r3,#1
 3909 001a A361     	 str r3,[r4,#24]
2096:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3910              	 .loc 1 2096 0
 3911 001c FFF7FEFF 	 bl CPU_SR_Restore
 3912              	.LVL565:
 3913              	.L459:
2099:../Dave/Generated/UCPROBE/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 3914              	 .loc 1 2099 0
 3915 0020 FFF7FEFF 	 bl CPU_SR_Save
 3916              	.LVL566:
2100:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
 3917              	 .loc 1 2100 0
 3918 0024 2369     	 ldr r3,[r4,#16]
 3919 0026 2B60     	 str r3,[r5]
2101:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 3920              	 .loc 1 2101 0
 3921 0028 2561     	 str r5,[r4,#16]
2102:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3922              	 .loc 1 2102 0
 3923 002a FFF7FEFF 	 bl CPU_SR_Restore
 3924              	.LVL567:
2104:../Dave/Generated/UCPROBE/lib_mem.c **** }
 3925              	 .loc 1 2104 0
 3926 002e 044B     	 ldr r3,.L466
 3927 0030 3380     	 strh r3,[r6]
 3928              	.L458:
2105:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3929              	 .loc 1 2105 0
 3930              	 
 3931              	.LVL568:
 3932              	.LVL569:
 3933              	.LVL570:
 3934 0032 70BD     	 pop {r4,r5,r6,pc}
 3935              	.LVL571:
 3936              	.L465:
2089:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3937              	 .loc 1 2089 0
 3938 0034 FFF7FEFF 	 bl CPU_SR_Restore
 3939              	.LVL572:
2091:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
 3940              	 .loc 1 2091 0
 3941 0038 024B     	 ldr r3,.L466+4
 3942 003a 3380     	 strh r3,[r6]
2092:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 3943              	 .loc 1 2092 0
 3944 003c F9E7     	 b .L458
 3945              	.L467:
 3946 003e C046     	 .align 2
 3947              	.L466:
 3948 0040 10270000 	 .word 10000
 3949 0044 DD270000 	 .word 10205
 3950              	 .cfi_endproc
 3951              	.LFE22:
 3953              	 .section .text.Mem_DynPoolBlkNbrAvailGet,"ax",%progbits
 3954              	 .align 2
 3955              	 .global Mem_DynPoolBlkNbrAvailGet
 3956              	 .code 16
 3957              	 .thumb_func
 3959              	Mem_DynPoolBlkNbrAvailGet:
 3960              	.LFB23:
2135:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  blk_nbr_avail;
 3961              	 .loc 1 2135 0
 3962              	 .cfi_startproc
 3963              	.LVL573:
 3964 0000 38B5     	 push {r3,r4,r5,lr}
 3965              	.LCFI31:
 3966              	 .cfi_def_cfa_offset 16
 3967              	 .cfi_offset 3,-16
 3968              	 .cfi_offset 4,-12
 3969              	 .cfi_offset 5,-8
 3970              	 .cfi_offset 14,-4
2151:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3971              	 .loc 1 2151 0
 3972 0002 4369     	 ldr r3,[r0,#20]
 3973 0004 002B     	 cmp r3,#0
 3974 0006 04D1     	 bne .L471
 3975              	.LVL574:
2158:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err         = LIB_MEM_ERR_POOL_UNLIMITED;
 3976              	 .loc 1 2158 0
 3977 0008 0024     	 mov r4,#0
2159:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 3978              	 .loc 1 2159 0
 3979 000a 084B     	 ldr r3,.L472
 3980 000c 0B80     	 strh r3,[r1]
 3981              	.LVL575:
 3982              	.L470:
2163:../Dave/Generated/UCPROBE/lib_mem.c **** 
 3983              	 .loc 1 2163 0
 3984 000e 201C     	 mov r0,r4
 3985              	 
 3986              	.LVL576:
 3987 0010 38BD     	 pop {r3,r4,r5,pc}
 3988              	.LVL577:
 3989              	.L471:
 3990 0012 041C     	 mov r4,r0
 3991 0014 0D1C     	 mov r5,r1
2152:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 3992              	 .loc 1 2152 0
 3993 0016 FFF7FEFF 	 bl CPU_SR_Save
 3994              	.LVL578:
2153:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3995              	 .loc 1 2153 0
 3996 001a 6369     	 ldr r3,[r4,#20]
 3997 001c A469     	 ldr r4,[r4,#24]
 3998              	.LVL579:
 3999 001e 1C1B     	 sub r4,r3,r4
 4000              	.LVL580:
2154:../Dave/Generated/UCPROBE/lib_mem.c **** 
 4001              	 .loc 1 2154 0
 4002 0020 FFF7FEFF 	 bl CPU_SR_Restore
 4003              	.LVL581:
2156:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
 4004              	 .loc 1 2156 0
 4005 0024 024B     	 ldr r3,.L472+4
 4006 0026 2B80     	 strh r3,[r5]
 4007 0028 F1E7     	 b .L470
 4008              	.L473:
 4009 002a C046     	 .align 2
 4010              	.L472:
 4011 002c DF270000 	 .word 10207
 4012 0030 10270000 	 .word 10000
 4013              	 .cfi_endproc
 4014              	.LFE23:
 4016              	 .comm Mem_SegHeadPtr,4,4
 4017              	 .comm Mem_SegHeap,20,4
 4018              	 .comm Mem_Heap,1024,4
 4019              	 .text
 4020              	.Letext0:
 4021              	 .file 2 "../Dave/Generated/UCPROBE/cpu.h"
 4022              	 .file 3 "../Dave/Generated/UCPROBE/lib_def.h"
 4023              	 .file 4 "../Dave/Generated/UCPROBE/lib_mem.h"
 4024              	 .file 5 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 lib_mem.c
    {standard input}:18     .text.Mem_Init:00000000 $t
    {standard input}:23     .text.Mem_Init:00000000 Mem_Init
    {standard input}:96     .text.Mem_Init:0000002c $d
                            *COM*:00000004 Mem_SegHeadPtr
                            *COM*:00000400 Mem_Heap
                            *COM*:00000014 Mem_SegHeap
    {standard input}:104    .text.Mem_Clr:00000000 $t
    {standard input}:109    .text.Mem_Clr:00000000 Mem_Clr
    {standard input}:248    .text.Mem_Set:00000000 $t
    {standard input}:253    .text.Mem_Set:00000000 Mem_Set
    {standard input}:393    .text.Mem_Copy:00000000 $t
    {standard input}:398    .text.Mem_Copy:00000000 Mem_Copy
    {standard input}:617    .text.Mem_Move:00000000 $t
    {standard input}:622    .text.Mem_Move:00000000 Mem_Move
    {standard input}:1002   .text.Mem_Cmp:00000000 $t
    {standard input}:1007   .text.Mem_Cmp:00000000 Mem_Cmp
    {standard input}:1155   .text.Mem_HeapAlloc:00000000 $t
    {standard input}:1160   .text.Mem_HeapAlloc:00000000 Mem_HeapAlloc
    {standard input}:1308   .text.Mem_HeapAlloc:00000078 $d
    {standard input}:1318   .text.Mem_HeapGetSizeRem:00000000 $t
    {standard input}:1323   .text.Mem_HeapGetSizeRem:00000000 Mem_HeapGetSizeRem
    {standard input}:1391   .text.Mem_HeapGetSizeRem:00000038 $d
    {standard input}:1397   .text.Mem_SegCreate:00000000 $t
    {standard input}:1402   .text.Mem_SegCreate:00000000 Mem_SegCreate
    {standard input}:1464   .text.Mem_SegCreate:00000030 $d
    {standard input}:1470   .text.Mem_SegClr:00000000 $t
    {standard input}:1475   .text.Mem_SegClr:00000000 Mem_SegClr
    {standard input}:1512   .text.Mem_SegClr:00000018 $d
    {standard input}:1517   .text.Mem_SegRemSizeGet:00000000 $t
    {standard input}:1522   .text.Mem_SegRemSizeGet:00000000 Mem_SegRemSizeGet
    {standard input}:1619   .text.Mem_SegRemSizeGet:00000054 $d
    {standard input}:1625   .text.Mem_SegAlloc:00000000 $t
    {standard input}:1630   .text.Mem_SegAlloc:00000000 Mem_SegAlloc
    {standard input}:1743   .text.Mem_SegAlloc:00000050 $d
    {standard input}:1752   .text.Mem_SegAllocExt:00000000 $t
    {standard input}:1757   .text.Mem_SegAllocExt:00000000 Mem_SegAllocExt
    {standard input}:1890   .text.Mem_SegAllocExt:00000064 $d
    {standard input}:1899   .text.Mem_SegAllocHW:00000000 $t
    {standard input}:1904   .text.Mem_SegAllocHW:00000000 Mem_SegAllocHW
    {standard input}:2054   .text.Mem_SegAllocHW:0000007c $d
    {standard input}:2063   .text.Mem_PoolCreate:00000000 $t
    {standard input}:2068   .text.Mem_PoolCreate:00000000 Mem_PoolCreate
    {standard input}:2689   .text.Mem_PoolCreate:00000228 $d
    {standard input}:2700   .text.Mem_PoolClr:00000000 $t
    {standard input}:2705   .text.Mem_PoolClr:00000000 Mem_PoolClr
    {standard input}:2734   .text.Mem_PoolClr:00000014 $d
    {standard input}:2739   .text.Mem_PoolBlkGet:00000000 $t
    {standard input}:2744   .text.Mem_PoolBlkGet:00000000 Mem_PoolBlkGet
    {standard input}:2810   .text.Mem_PoolBlkGet:0000003c $d
    {standard input}:2816   .text.Mem_PoolBlkFree:00000000 $t
    {standard input}:2821   .text.Mem_PoolBlkFree:00000000 Mem_PoolBlkFree
    {standard input}:2880   .text.Mem_PoolBlkFree:00000034 $d
    {standard input}:2886   .text.Mem_PoolBlkGetNbrAvail:00000000 $t
    {standard input}:2891   .text.Mem_PoolBlkGetNbrAvail:00000000 Mem_PoolBlkGetNbrAvail
    {standard input}:2929   .text.Mem_PoolBlkGetNbrAvail:00000018 $d
    {standard input}:2934   .text.Mem_DynPoolCreate:00000000 $t
    {standard input}:2939   .text.Mem_DynPoolCreate:00000000 Mem_DynPoolCreate
    {standard input}:3241   .text.Mem_DynPoolCreate:00000120 $d
    {standard input}:3252   .text.Mem_DynPoolCreateHW:00000000 $t
    {standard input}:3257   .text.Mem_DynPoolCreateHW:00000000 Mem_DynPoolCreateHW
    {standard input}:3611   .text.Mem_DynPoolCreateHW:00000140 $d
    {standard input}:3622   .text.Mem_DynPoolBlkGet:00000000 $t
    {standard input}:3627   .text.Mem_DynPoolBlkGet:00000000 Mem_DynPoolBlkGet
    {standard input}:3864   .text.Mem_DynPoolBlkGet:000000d8 $d
    {standard input}:3873   .text.Mem_DynPoolBlkFree:00000000 $t
    {standard input}:3878   .text.Mem_DynPoolBlkFree:00000000 Mem_DynPoolBlkFree
    {standard input}:3948   .text.Mem_DynPoolBlkFree:00000040 $d
    {standard input}:3954   .text.Mem_DynPoolBlkNbrAvailGet:00000000 $t
    {standard input}:3959   .text.Mem_DynPoolBlkNbrAvailGet:00000000 Mem_DynPoolBlkNbrAvailGet
    {standard input}:4011   .text.Mem_DynPoolBlkNbrAvailGet:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CPU_SR_Save
CPU_SR_Restore
memset
