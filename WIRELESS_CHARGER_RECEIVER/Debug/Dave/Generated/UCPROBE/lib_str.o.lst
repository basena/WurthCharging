   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,2
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "lib_str.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.Str_ParseNbr_Int32,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	Str_ParseNbr_Int32:
  23              	.LFB23:
  24              	 .file 1 "../Dave/Generated/UCPROBE/lib_str.c"
   1:../Dave/Generated/UCPROBE/lib_str.c **** /*
   2:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
   3:../Dave/Generated/UCPROBE/lib_str.c **** *                                                uC/LIB
   4:../Dave/Generated/UCPROBE/lib_str.c **** *                                        CUSTOM LIBRARY MODULES
   5:../Dave/Generated/UCPROBE/lib_str.c **** *
   6:../Dave/Generated/UCPROBE/lib_str.c **** *                         (c) Copyright 2004-2014; Micrium, Inc.; Weston, FL
   7:../Dave/Generated/UCPROBE/lib_str.c **** *
   8:../Dave/Generated/UCPROBE/lib_str.c **** *                  All rights reserved.  Protected by international copyright laws.
   9:../Dave/Generated/UCPROBE/lib_str.c **** *
  10:../Dave/Generated/UCPROBE/lib_str.c **** *                  uC/LIB is provided in source form to registered licensees ONLY.  It is
  11:../Dave/Generated/UCPROBE/lib_str.c **** *                  illegal to distribute this source code to any third party unless you receive
  12:../Dave/Generated/UCPROBE/lib_str.c **** *                  written permission by an authorized Micrium representative.  Knowledge of
  13:../Dave/Generated/UCPROBE/lib_str.c **** *                  the source code may NOT be used to develop a similar product.
  14:../Dave/Generated/UCPROBE/lib_str.c **** *
  15:../Dave/Generated/UCPROBE/lib_str.c **** *                  Please help us continue to provide the Embedded community with the finest
  16:../Dave/Generated/UCPROBE/lib_str.c **** *                  software available.  Your honesty is greatly appreciated.
  17:../Dave/Generated/UCPROBE/lib_str.c **** *
  18:../Dave/Generated/UCPROBE/lib_str.c **** *                  You can find our product's user manual, API reference, release notes and
  19:../Dave/Generated/UCPROBE/lib_str.c **** *                  more information at: https://doc.micrium.com
  20:../Dave/Generated/UCPROBE/lib_str.c **** *
  21:../Dave/Generated/UCPROBE/lib_str.c **** *                  You can contact us at: http://www.micrium.com
  22:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  23:../Dave/Generated/UCPROBE/lib_str.c **** */
  24:../Dave/Generated/UCPROBE/lib_str.c **** 
  25:../Dave/Generated/UCPROBE/lib_str.c **** /*
  26:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  27:../Dave/Generated/UCPROBE/lib_str.c **** *
  28:../Dave/Generated/UCPROBE/lib_str.c **** *                                       ASCII STRING MANAGEMENT
  29:../Dave/Generated/UCPROBE/lib_str.c **** *
  30:../Dave/Generated/UCPROBE/lib_str.c **** * Filename      : lib_str.c
  31:../Dave/Generated/UCPROBE/lib_str.c **** * Version       : V1.38.01
  32:../Dave/Generated/UCPROBE/lib_str.c **** * Programmer(s) : ITJ
  33:../Dave/Generated/UCPROBE/lib_str.c **** *                 BAN
  34:../Dave/Generated/UCPROBE/lib_str.c **** *                 JDH
  35:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  36:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  37:../Dave/Generated/UCPROBE/lib_str.c **** *
  38:../Dave/Generated/UCPROBE/lib_str.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  39:../Dave/Generated/UCPROBE/lib_str.c **** *
  40:../Dave/Generated/UCPROBE/lib_str.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  41:../Dave/Generated/UCPROBE/lib_str.c **** *
  42:../Dave/Generated/UCPROBE/lib_str.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  43:../Dave/Generated/UCPROBE/lib_str.c **** *
  44:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
  45:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <Custom Library Directory>      directory path for custom l
  46:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <cpu>                           directory name for specific
  47:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <compiler>                      directory name for specific
  48:../Dave/Generated/UCPROBE/lib_str.c **** *
  49:../Dave/Generated/UCPROBE/lib_str.c **** *                     (b) Product-specific library functions are implemented in individual products
  50:../Dave/Generated/UCPROBE/lib_str.c **** *
  51:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  52:../Dave/Generated/UCPROBE/lib_str.c **** * Notice(s)     : (1) The Institute of Electrical and Electronics Engineers and The Open Group, hav
  53:../Dave/Generated/UCPROBE/lib_str.c **** *                     us permission to reprint portions of their documentation.  Portions of this t
  54:../Dave/Generated/UCPROBE/lib_str.c **** *                     reprinted and reproduced in electronic form from the IEEE Std 1003.1, 2004 Ed
  55:../Dave/Generated/UCPROBE/lib_str.c **** *                     Standard for Information Technology -- Portable Operating System Interface (P
  56:../Dave/Generated/UCPROBE/lib_str.c **** *                     The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the In
  57:../Dave/Generated/UCPROBE/lib_str.c **** *                     of Electrical and Electronics Engineers, Inc and The Open Group.  In the even
  58:../Dave/Generated/UCPROBE/lib_str.c **** *                     discrepancy between these versions and the original IEEE and The Open Group S
  59:../Dave/Generated/UCPROBE/lib_str.c **** *                     the original IEEE and The Open Group Standard is the referee document.  The o
  60:../Dave/Generated/UCPROBE/lib_str.c **** *                     Standard can be obtained online at http://www.opengroup.org/unix/online.html.
  61:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  62:../Dave/Generated/UCPROBE/lib_str.c **** */
  63:../Dave/Generated/UCPROBE/lib_str.c **** 
  64:../Dave/Generated/UCPROBE/lib_str.c **** 
  65:../Dave/Generated/UCPROBE/lib_str.c **** /*
  66:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  67:../Dave/Generated/UCPROBE/lib_str.c **** *                                            INCLUDE FILES
  68:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  69:../Dave/Generated/UCPROBE/lib_str.c **** */
  70:../Dave/Generated/UCPROBE/lib_str.c **** 
  71:../Dave/Generated/UCPROBE/lib_str.c **** #define    MICRIUM_SOURCE
  72:../Dave/Generated/UCPROBE/lib_str.c **** #define    LIB_STR_MODULE
  73:../Dave/Generated/UCPROBE/lib_str.c **** #include  "lib_str.h"
  74:../Dave/Generated/UCPROBE/lib_str.c **** 
  75:../Dave/Generated/UCPROBE/lib_str.c **** 
  76:../Dave/Generated/UCPROBE/lib_str.c **** /*
  77:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  78:../Dave/Generated/UCPROBE/lib_str.c **** *                                            LOCAL DEFINES
  79:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  80:../Dave/Generated/UCPROBE/lib_str.c **** */
  81:../Dave/Generated/UCPROBE/lib_str.c **** 
  82:../Dave/Generated/UCPROBE/lib_str.c **** 
  83:../Dave/Generated/UCPROBE/lib_str.c **** /*
  84:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  85:../Dave/Generated/UCPROBE/lib_str.c **** *                                           LOCAL CONSTANTS
  86:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  87:../Dave/Generated/UCPROBE/lib_str.c **** */
  88:../Dave/Generated/UCPROBE/lib_str.c **** 
  89:../Dave/Generated/UCPROBE/lib_str.c **** 
  90:../Dave/Generated/UCPROBE/lib_str.c **** /*
  91:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  92:../Dave/Generated/UCPROBE/lib_str.c **** *                                          LOCAL DATA TYPES
  93:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  94:../Dave/Generated/UCPROBE/lib_str.c **** */
  95:../Dave/Generated/UCPROBE/lib_str.c **** 
  96:../Dave/Generated/UCPROBE/lib_str.c **** 
  97:../Dave/Generated/UCPROBE/lib_str.c **** /*
  98:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  99:../Dave/Generated/UCPROBE/lib_str.c **** *                                            LOCAL TABLES
 100:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 101:../Dave/Generated/UCPROBE/lib_str.c **** */
 102:../Dave/Generated/UCPROBE/lib_str.c **** 
 103:../Dave/Generated/UCPROBE/lib_str.c **** static  const  CPU_INT32U  Str_MultOvfThTbl_Int32U[] = {
 104:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U) DEF_INT_32U_MAX_VAL,                /*                Invalid base  0.  */
 105:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  1u),         /*                Invalid base  1.  */
 106:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  2u),         /* 32-bit mult ovf th for base  2.  */
 107:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  3u),         /* 32-bit mult ovf th for base  3.  */
 108:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  4u),         /* 32-bit mult ovf th for base  4.  */
 109:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  5u),         /* 32-bit mult ovf th for base  5.  */
 110:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  6u),         /* 32-bit mult ovf th for base  6.  */
 111:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  7u),         /* 32-bit mult ovf th for base  7.  */
 112:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  8u),         /* 32-bit mult ovf th for base  8.  */
 113:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  9u),         /* 32-bit mult ovf th for base  9.  */
 114:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 10u),         /* 32-bit mult ovf th for base 10.  */
 115:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 11u),         /* 32-bit mult ovf th for base 11.  */
 116:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 12u),         /* 32-bit mult ovf th for base 12.  */
 117:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 13u),         /* 32-bit mult ovf th for base 13.  */
 118:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 14u),         /* 32-bit mult ovf th for base 14.  */
 119:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 15u),         /* 32-bit mult ovf th for base 15.  */
 120:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 16u),         /* 32-bit mult ovf th for base 16.  */
 121:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 17u),         /* 32-bit mult ovf th for base 17.  */
 122:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 18u),         /* 32-bit mult ovf th for base 18.  */
 123:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 19u),         /* 32-bit mult ovf th for base 19.  */
 124:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 20u),         /* 32-bit mult ovf th for base 20.  */
 125:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 21u),         /* 32-bit mult ovf th for base 21.  */
 126:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 22u),         /* 32-bit mult ovf th for base 22.  */
 127:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 23u),         /* 32-bit mult ovf th for base 23.  */
 128:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 24u),         /* 32-bit mult ovf th for base 24.  */
 129:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 25u),         /* 32-bit mult ovf th for base 25.  */
 130:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 26u),         /* 32-bit mult ovf th for base 26.  */
 131:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 27u),         /* 32-bit mult ovf th for base 27.  */
 132:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 28u),         /* 32-bit mult ovf th for base 28.  */
 133:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 29u),         /* 32-bit mult ovf th for base 29.  */
 134:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 30u),         /* 32-bit mult ovf th for base 30.  */
 135:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 31u),         /* 32-bit mult ovf th for base 31.  */
 136:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 32u),         /* 32-bit mult ovf th for base 32.  */
 137:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 33u),         /* 32-bit mult ovf th for base 33.  */
 138:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 34u),         /* 32-bit mult ovf th for base 34.  */
 139:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 35u),         /* 32-bit mult ovf th for base 35.  */
 140:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 36u)          /* 32-bit mult ovf th for base 36.  */
 141:../Dave/Generated/UCPROBE/lib_str.c **** };
 142:../Dave/Generated/UCPROBE/lib_str.c **** 
 143:../Dave/Generated/UCPROBE/lib_str.c **** 
 144:../Dave/Generated/UCPROBE/lib_str.c **** /*
 145:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 146:../Dave/Generated/UCPROBE/lib_str.c **** *                                       LOCAL GLOBAL VARIABLES
 147:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 148:../Dave/Generated/UCPROBE/lib_str.c **** */
 149:../Dave/Generated/UCPROBE/lib_str.c **** 
 150:../Dave/Generated/UCPROBE/lib_str.c **** 
 151:../Dave/Generated/UCPROBE/lib_str.c **** /*
 152:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 153:../Dave/Generated/UCPROBE/lib_str.c **** *                                      LOCAL FUNCTION PROTOTYPES
 154:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 155:../Dave/Generated/UCPROBE/lib_str.c **** */
 156:../Dave/Generated/UCPROBE/lib_str.c **** 
 157:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_CHAR    *Str_FmtNbr_Int32  (       CPU_INT32U     nbr,
 158:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_dig,
 159:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
 160:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_neg,
 161:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR       lead_char,
 162:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    lower_case,
 163:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nul,
 164:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR      *pstr);
 165:../Dave/Generated/UCPROBE/lib_str.c **** 
 166:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_INT32U   Str_ParseNbr_Int32(const  CPU_CHAR      *pstr,
 167:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR     **pstr_next,
 168:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
 169:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
 170:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg);
 171:../Dave/Generated/UCPROBE/lib_str.c **** 
 172:../Dave/Generated/UCPROBE/lib_str.c **** 
 173:../Dave/Generated/UCPROBE/lib_str.c **** /*
 174:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 175:../Dave/Generated/UCPROBE/lib_str.c **** *                                     LOCAL CONFIGURATION ERRORS
 176:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 177:../Dave/Generated/UCPROBE/lib_str.c **** */
 178:../Dave/Generated/UCPROBE/lib_str.c **** 
 179:../Dave/Generated/UCPROBE/lib_str.c **** 
 180:../Dave/Generated/UCPROBE/lib_str.c **** /*
 181:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 182:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Len()
 183:../Dave/Generated/UCPROBE/lib_str.c **** *
 184:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Calculate length of a string.
 185:../Dave/Generated/UCPROBE/lib_str.c **** *
 186:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 187:../Dave/Generated/UCPROBE/lib_str.c **** *
 188:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character
 189:../Dave/Generated/UCPROBE/lib_str.c **** *                   (see Note #2b1).
 190:../Dave/Generated/UCPROBE/lib_str.c **** *
 191:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 192:../Dave/Generated/UCPROBE/lib_str.c **** *
 193:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 194:../Dave/Generated/UCPROBE/lib_str.c **** *
 195:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 196:../Dave/Generated/UCPROBE/lib_str.c **** *
 197:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 198:../Dave/Generated/UCPROBE/lib_str.c **** *                            which 's' ('pstr') points," ...
 199:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "not including the terminating null byte."
 200:../Dave/Generated/UCPROBE/lib_str.c **** *
 201:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 202:../Dave/Generated/UCPROBE/lib_str.c **** *
 203:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 204:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 205:../Dave/Generated/UCPROBE/lib_str.c **** *
 206:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String length calculation terminates when :
 207:../Dave/Generated/UCPROBE/lib_str.c **** *
 208:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer points to NULL.
 209:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 210:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 211:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL address.
 212:../Dave/Generated/UCPROBE/lib_str.c **** *
 213:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found.
 214:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 215:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL character (see Note #2a2).
 216:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 217:../Dave/Generated/UCPROBE/lib_str.c **** */
 218:../Dave/Generated/UCPROBE/lib_str.c **** 
 219:../Dave/Generated/UCPROBE/lib_str.c **** CPU_SIZE_T  Str_Len (const  CPU_CHAR  *pstr)
 220:../Dave/Generated/UCPROBE/lib_str.c **** {
 221:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_SIZE_T  len;
 222:../Dave/Generated/UCPROBE/lib_str.c **** 
 223:../Dave/Generated/UCPROBE/lib_str.c **** 
 224:../Dave/Generated/UCPROBE/lib_str.c ****     len = Str_Len_N(pstr,
 225:../Dave/Generated/UCPROBE/lib_str.c ****                     DEF_INT_CPU_U_MAX_VAL);
 226:../Dave/Generated/UCPROBE/lib_str.c **** 
 227:../Dave/Generated/UCPROBE/lib_str.c ****     return (len);
 228:../Dave/Generated/UCPROBE/lib_str.c **** }
 229:../Dave/Generated/UCPROBE/lib_str.c **** 
 230:../Dave/Generated/UCPROBE/lib_str.c **** 
 231:../Dave/Generated/UCPROBE/lib_str.c **** /*
 232:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 233:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Len_N()
 234:../Dave/Generated/UCPROBE/lib_str.c **** *
 235:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Calculate length of a string, up to a maximum number of characters.
 236:../Dave/Generated/UCPROBE/lib_str.c **** *
 237:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 238:../Dave/Generated/UCPROBE/lib_str.c **** *
 239:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to search (see Note #3c).
 240:../Dave/Generated/UCPROBE/lib_str.c **** *
 241:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character,
 242:../Dave/Generated/UCPROBE/lib_str.c **** *                   if terminating NULL character     found (see Note #2b1).
 243:../Dave/Generated/UCPROBE/lib_str.c **** *
 244:../Dave/Generated/UCPROBE/lib_str.c **** *               Requested maximum number of characters to search,
 245:../Dave/Generated/UCPROBE/lib_str.c **** *                   if terminating NULL character NOT found (see Note #3c).
 246:../Dave/Generated/UCPROBE/lib_str.c **** *
 247:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 248:../Dave/Generated/UCPROBE/lib_str.c **** *
 249:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 250:../Dave/Generated/UCPROBE/lib_str.c **** *
 251:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 252:../Dave/Generated/UCPROBE/lib_str.c **** *
 253:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 254:../Dave/Generated/UCPROBE/lib_str.c **** *                            which 's' ('pstr') points," ...
 255:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "not including the terminating null byte."
 256:../Dave/Generated/UCPROBE/lib_str.c **** *
 257:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 258:../Dave/Generated/UCPROBE/lib_str.c **** *
 259:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 260:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 261:../Dave/Generated/UCPROBE/lib_str.c **** *
 262:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String length calculation terminates when :
 263:../Dave/Generated/UCPROBE/lib_str.c **** *
 264:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer points to NULL.
 265:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 266:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 267:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL address.
 268:../Dave/Generated/UCPROBE/lib_str.c **** *
 269:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found.
 270:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 271:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL character (see Note #2a2).
 272:../Dave/Generated/UCPROBE/lib_str.c **** *
 273:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) 'len_max' number of characters searched.
 274:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 275:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 276:../Dave/Generated/UCPROBE/lib_str.c **** */
 277:../Dave/Generated/UCPROBE/lib_str.c **** 
 278:../Dave/Generated/UCPROBE/lib_str.c **** CPU_SIZE_T  Str_Len_N (const  CPU_CHAR    *pstr,
 279:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 280:../Dave/Generated/UCPROBE/lib_str.c **** {
 281:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_len;
 282:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len;
 283:../Dave/Generated/UCPROBE/lib_str.c **** 
 284:../Dave/Generated/UCPROBE/lib_str.c **** 
 285:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_len = pstr;
 286:../Dave/Generated/UCPROBE/lib_str.c ****     len      = 0u;
 287:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 288:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 289:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 290:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_len++;
 291:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 292:../Dave/Generated/UCPROBE/lib_str.c ****     }
 293:../Dave/Generated/UCPROBE/lib_str.c **** 
 294:../Dave/Generated/UCPROBE/lib_str.c ****     return (len);                                               /* Rtn str len (see Note #3b1).    
 295:../Dave/Generated/UCPROBE/lib_str.c **** }
 296:../Dave/Generated/UCPROBE/lib_str.c **** 
 297:../Dave/Generated/UCPROBE/lib_str.c **** 
 298:../Dave/Generated/UCPROBE/lib_str.c **** /*
 299:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 300:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Copy()
 301:../Dave/Generated/UCPROBE/lib_str.c **** *
 302:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Copy source string to destination string buffer.
 303:../Dave/Generated/UCPROBE/lib_str.c **** *
 304:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 305:../Dave/Generated/UCPROBE/lib_str.c **** *
 306:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 307:../Dave/Generated/UCPROBE/lib_str.c **** *
 308:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 309:../Dave/Generated/UCPROBE/lib_str.c **** *
 310:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 311:../Dave/Generated/UCPROBE/lib_str.c **** *
 312:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 313:../Dave/Generated/UCPROBE/lib_str.c **** *
 314:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 315:../Dave/Generated/UCPROBE/lib_str.c **** *
 316:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 317:../Dave/Generated/UCPROBE/lib_str.c **** *                           string size including the terminating NULL character.
 318:../Dave/Generated/UCPROBE/lib_str.c **** *
 319:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Source buffer NOT modified.
 320:../Dave/Generated/UCPROBE/lib_str.c **** *
 321:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 322:../Dave/Generated/UCPROBE/lib_str.c **** *
 323:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcpy() function shall copy the string pointed to by 's2' ('pstr_
 324:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... into the array pointed to by 's1' ('pstr_dest')" ...
 325:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(including the terminating null byte)."
 326:../Dave/Generated/UCPROBE/lib_str.c **** *
 327:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : RETURN VALUE' states tha
 328:../Dave/Generated/UCPROBE/lib_str.c **** *
 329:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcpy() function shall return 's1' ('pstr_dest');" ...
 330:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 331:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 332:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 333:../Dave/Generated/UCPROBE/lib_str.c **** *
 334:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 335:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 336:../Dave/Generated/UCPROBE/lib_str.c **** *
 337:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String copy terminates when :
 338:../Dave/Generated/UCPROBE/lib_str.c **** *
 339:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 340:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 341:../Dave/Generated/UCPROBE/lib_str.c **** *
 342:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 343:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 344:../Dave/Generated/UCPROBE/lib_str.c **** *
 345:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 346:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 347:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 348:../Dave/Generated/UCPROBE/lib_str.c **** */
 349:../Dave/Generated/UCPROBE/lib_str.c **** 
 350:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Copy (       CPU_CHAR  *pstr_dest,
 351:../Dave/Generated/UCPROBE/lib_str.c ****                      const  CPU_CHAR  *pstr_src)
 352:../Dave/Generated/UCPROBE/lib_str.c **** {
 353:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 354:../Dave/Generated/UCPROBE/lib_str.c **** 
 355:../Dave/Generated/UCPROBE/lib_str.c **** 
 356:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Copy_N(pstr_dest,
 357:../Dave/Generated/UCPROBE/lib_str.c ****                           pstr_src,
 358:../Dave/Generated/UCPROBE/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL);
 359:../Dave/Generated/UCPROBE/lib_str.c **** 
 360:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 361:../Dave/Generated/UCPROBE/lib_str.c **** }
 362:../Dave/Generated/UCPROBE/lib_str.c **** 
 363:../Dave/Generated/UCPROBE/lib_str.c **** 
 364:../Dave/Generated/UCPROBE/lib_str.c **** /*
 365:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 366:../Dave/Generated/UCPROBE/lib_str.c **** *                                            Str_Copy_N()
 367:../Dave/Generated/UCPROBE/lib_str.c **** *
 368:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Copy source string to destination string buffer, up to a maximum number of characte
 369:../Dave/Generated/UCPROBE/lib_str.c **** *
 370:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 371:../Dave/Generated/UCPROBE/lib_str.c **** *
 372:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 373:../Dave/Generated/UCPROBE/lib_str.c **** *
 374:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters  to copy (see Notes #2a2 & #3d).
 375:../Dave/Generated/UCPROBE/lib_str.c **** *
 376:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 377:../Dave/Generated/UCPROBE/lib_str.c **** *
 378:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 379:../Dave/Generated/UCPROBE/lib_str.c **** *
 380:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 381:../Dave/Generated/UCPROBE/lib_str.c **** *
 382:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 383:../Dave/Generated/UCPROBE/lib_str.c **** *
 384:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 385:../Dave/Generated/UCPROBE/lib_str.c **** *                           string size including the terminating NULL character.
 386:../Dave/Generated/UCPROBE/lib_str.c **** *
 387:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Source string buffer NOT modified.
 388:../Dave/Generated/UCPROBE/lib_str.c **** *
 389:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states
 390:../Dave/Generated/UCPROBE/lib_str.c **** *
 391:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "The strncpy() function shall copy ... the array pointed to by 's2'
 392:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('pstr_src') to the array pointed to by 's1' ('pstr_dest')"; ...
 393:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes"                   ...
 394:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C)  &   "(bytes that follow a null byte are not copied)".
 395:../Dave/Generated/UCPROBE/lib_str.c **** *
 396:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' ad
 397:../Dave/Generated/UCPROBE/lib_str.c **** *                              "if the array pointed to by 's2' ('pstr_src') is a string that is sh
 398:../Dave/Generated/UCPROBE/lib_str.c **** *                               than 'n' ('len_max') bytes, null bytes shall be appended to the cop
 399:../Dave/Generated/UCPROBE/lib_str.c **** *                               the array pointed to by 's1' ('pstr_dest'), until 'n' ('len_max') b
 400:../Dave/Generated/UCPROBE/lib_str.c **** *                               in all are written."
 401:../Dave/Generated/UCPROBE/lib_str.c **** *
 402:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Since Str_Copy() limits the maximum number of characters t
 403:../Dave/Generated/UCPROBE/lib_str.c **** *                                   via Str_Copy_N() by the CPU's maximum number of addressable cha
 404:../Dave/Generated/UCPROBE/lib_str.c **** *                                   this requirement is intentionally NOT implemented to avoid appe
 405:../Dave/Generated/UCPROBE/lib_str.c **** *                                   a potentially large number of unnecessary terminating NULL char
 406:../Dave/Generated/UCPROBE/lib_str.c **** *
 407:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : APPLICATION USA
 408:../Dave/Generated/UCPROBE/lib_str.c **** *                               states that "if there is no null byte in the first 'n' ('len_max') 
 409:../Dave/Generated/UCPROBE/lib_str.c **** *                               the array pointed to by 's2' ('pstr_src'), the result is not null-t
 410:../Dave/Generated/UCPROBE/lib_str.c **** *
 411:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : RETURN VALUE' states th
 412:../Dave/Generated/UCPROBE/lib_str.c **** *
 413:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncpy() function shall return 's1' ('pstr_dest');" ...
 414:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 415:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally ignored in order to return N
 416:../Dave/Generated/UCPROBE/lib_str.c **** *                               for any error(s).
 417:../Dave/Generated/UCPROBE/lib_str.c **** *
 418:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states tha
 419:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 420:../Dave/Generated/UCPROBE/lib_str.c **** *
 421:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String copy terminates when :
 422:../Dave/Generated/UCPROBE/lib_str.c **** *
 423:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 424:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 425:../Dave/Generated/UCPROBE/lib_str.c **** *
 426:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 427:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 428:../Dave/Generated/UCPROBE/lib_str.c **** *
 429:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 430:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 431:../Dave/Generated/UCPROBE/lib_str.c **** *
 432:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) 'len_max' number of characters copied.
 433:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters MAY include the terminating NULL charact
 434:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1C).
 435:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Null copies allowed (i.e. zero-length copies).
 436:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No string copy performed; destination string returned  (see Note #2
 437:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 438:../Dave/Generated/UCPROBE/lib_str.c **** */
 439:../Dave/Generated/UCPROBE/lib_str.c **** 
 440:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Copy_N (       CPU_CHAR    *pstr_dest,
 441:../Dave/Generated/UCPROBE/lib_str.c ****                        const  CPU_CHAR    *pstr_src,
 442:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 443:../Dave/Generated/UCPROBE/lib_str.c **** {
 444:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
 445:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_copy_src;
 446:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_copy;
 447:../Dave/Generated/UCPROBE/lib_str.c **** 
 448:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 449:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 450:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 451:../Dave/Generated/UCPROBE/lib_str.c ****     }
 452:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_src  == (const CPU_CHAR *)0) {
 453:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 454:../Dave/Generated/UCPROBE/lib_str.c ****     }
 455:../Dave/Generated/UCPROBE/lib_str.c **** 
 456:../Dave/Generated/UCPROBE/lib_str.c **** 
 457:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_copy_dest = pstr_dest;
 458:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_copy_src  = pstr_src;
 459:../Dave/Generated/UCPROBE/lib_str.c ****     len_copy       = 0u;
 460:../Dave/Generated/UCPROBE/lib_str.c **** 
 461:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_copy_dest != (      CPU_CHAR *)  0 ) &&       /* Copy str until NULL ptr(s)  [see
 462:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 463:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 464:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 465:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = *pstr_copy_src;
 466:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_dest++;
 467:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_src++;
 468:../Dave/Generated/UCPROBE/lib_str.c ****         len_copy++;
 469:../Dave/Generated/UCPROBE/lib_str.c ****     }
 470:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found  (
 471:../Dave/Generated/UCPROBE/lib_str.c ****     if ((pstr_copy_dest == (      CPU_CHAR *)0) ||
 472:../Dave/Generated/UCPROBE/lib_str.c ****         (pstr_copy_src  == (const CPU_CHAR *)0)) {
 473:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 474:../Dave/Generated/UCPROBE/lib_str.c ****     }
 475:../Dave/Generated/UCPROBE/lib_str.c **** 
 476:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_copy < len_max) {                                   /* If  copy str len < max buf len (
 477:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 478:../Dave/Generated/UCPROBE/lib_str.c ****     }
 479:../Dave/Generated/UCPROBE/lib_str.c **** 
 480:../Dave/Generated/UCPROBE/lib_str.c **** 
 481:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 482:../Dave/Generated/UCPROBE/lib_str.c **** }
 483:../Dave/Generated/UCPROBE/lib_str.c **** 
 484:../Dave/Generated/UCPROBE/lib_str.c **** 
 485:../Dave/Generated/UCPROBE/lib_str.c **** /*
 486:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 487:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Cat()
 488:../Dave/Generated/UCPROBE/lib_str.c **** *
 489:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Append concatenation string to destination string.
 490:../Dave/Generated/UCPROBE/lib_str.c **** *
 491:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 492:../Dave/Generated/UCPROBE/lib_str.c **** *
 493:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 494:../Dave/Generated/UCPROBE/lib_str.c **** *
 495:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 496:../Dave/Generated/UCPROBE/lib_str.c **** *
 497:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 498:../Dave/Generated/UCPROBE/lib_str.c **** *
 499:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 500:../Dave/Generated/UCPROBE/lib_str.c **** *
 501:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 502:../Dave/Generated/UCPROBE/lib_str.c **** *
 503:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire
 504:../Dave/Generated/UCPROBE/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 505:../Dave/Generated/UCPROBE/lib_str.c **** *
 506:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 507:../Dave/Generated/UCPROBE/lib_str.c **** *
 508:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 509:../Dave/Generated/UCPROBE/lib_str.c **** *
 510:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcat() function shall append a copy of the string pointed to by 
 511:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('pstr_cat') ... to the end of the string pointed to by 's1' ('pstr_des
 512:../Dave/Generated/UCPROBE/lib_str.c **** *
 513:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 514:../Dave/Generated/UCPROBE/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 515:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  A "terminating null byte" is appended at the end of the concatenat
 516:../Dave/Generated/UCPROBE/lib_str.c **** *                                destination strings.
 517:../Dave/Generated/UCPROBE/lib_str.c **** *
 518:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : RETURN VALUE' states tha
 519:../Dave/Generated/UCPROBE/lib_str.c **** *
 520:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcat() function shall return 's1' ('pstr_dest');" ...
 521:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 522:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 523:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 524:../Dave/Generated/UCPROBE/lib_str.c **** *
 525:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 526:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 527:../Dave/Generated/UCPROBE/lib_str.c **** *
 528:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String concatenation terminates when :
 529:../Dave/Generated/UCPROBE/lib_str.c **** *
 530:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 531:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 532:../Dave/Generated/UCPROBE/lib_str.c **** *
 533:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 534:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 535:../Dave/Generated/UCPROBE/lib_str.c **** *
 536:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 537:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 538:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 539:../Dave/Generated/UCPROBE/lib_str.c **** */
 540:../Dave/Generated/UCPROBE/lib_str.c **** 
 541:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Cat (       CPU_CHAR  *pstr_dest,
 542:../Dave/Generated/UCPROBE/lib_str.c ****                     const  CPU_CHAR  *pstr_cat)
 543:../Dave/Generated/UCPROBE/lib_str.c **** {
 544:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 545:../Dave/Generated/UCPROBE/lib_str.c **** 
 546:../Dave/Generated/UCPROBE/lib_str.c **** 
 547:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Cat_N(pstr_dest,
 548:../Dave/Generated/UCPROBE/lib_str.c ****                          pstr_cat,
 549:../Dave/Generated/UCPROBE/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
 550:../Dave/Generated/UCPROBE/lib_str.c **** 
 551:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 552:../Dave/Generated/UCPROBE/lib_str.c **** }
 553:../Dave/Generated/UCPROBE/lib_str.c **** 
 554:../Dave/Generated/UCPROBE/lib_str.c **** 
 555:../Dave/Generated/UCPROBE/lib_str.c **** /*
 556:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 557:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Cat_N()
 558:../Dave/Generated/UCPROBE/lib_str.c **** *
 559:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Append concatenation string to destination string, up to a maximum number of charac
 560:../Dave/Generated/UCPROBE/lib_str.c **** *
 561:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 562:../Dave/Generated/UCPROBE/lib_str.c **** *
 563:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 564:../Dave/Generated/UCPROBE/lib_str.c **** *
 565:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to concatenate (see Notes #2a1B & #3d).
 566:../Dave/Generated/UCPROBE/lib_str.c **** *
 567:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 568:../Dave/Generated/UCPROBE/lib_str.c **** *
 569:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 570:../Dave/Generated/UCPROBE/lib_str.c **** *
 571:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 572:../Dave/Generated/UCPROBE/lib_str.c **** *
 573:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 574:../Dave/Generated/UCPROBE/lib_str.c **** *
 575:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire
 576:../Dave/Generated/UCPROBE/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 577:../Dave/Generated/UCPROBE/lib_str.c **** *
 578:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 579:../Dave/Generated/UCPROBE/lib_str.c **** *
 580:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 581:../Dave/Generated/UCPROBE/lib_str.c **** *
 582:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strncat() function shall append ... the array pointed to by 's
 583:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('pstr_cat') to the end of the string pointed to by 's1' ('pstr_des
 584:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes".
 585:../Dave/Generated/UCPROBE/lib_str.c **** *
 586:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 587:../Dave/Generated/UCPROBE/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 588:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "(a null byte and bytes that follow it are not appended)."
 589:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) "A terminating null byte is always appended to the result."
 590:../Dave/Generated/UCPROBE/lib_str.c **** *
 591:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : RETURN VALUE' states th
 592:../Dave/Generated/UCPROBE/lib_str.c **** *
 593:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncat() function shall return 's1' ('pstr_dest');" ...
 594:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 595:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 596:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 597:../Dave/Generated/UCPROBE/lib_str.c **** *
 598:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 599:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 600:../Dave/Generated/UCPROBE/lib_str.c **** *
 601:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String concatenation terminates when :
 602:../Dave/Generated/UCPROBE/lib_str.c **** *
 603:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 604:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 605:../Dave/Generated/UCPROBE/lib_str.c **** *
 606:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 607:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 608:../Dave/Generated/UCPROBE/lib_str.c **** *
 609:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 610:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 611:../Dave/Generated/UCPROBE/lib_str.c **** *
 612:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) 'len_max' number of characters concatenated.
 613:../Dave/Generated/UCPROBE/lib_str.c **** *
 614:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 615:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
 616:../Dave/Generated/UCPROBE/lib_str.c **** *
 617:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Null concatenations allowed (i.e. zero-length concatenations).
 618:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No string concatenation performed; destination string returned
 619:../Dave/Generated/UCPROBE/lib_str.c **** *                               (see Note #2b1).
 620:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 621:../Dave/Generated/UCPROBE/lib_str.c **** */
 622:../Dave/Generated/UCPROBE/lib_str.c **** 
 623:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Cat_N (       CPU_CHAR    *pstr_dest,
 624:../Dave/Generated/UCPROBE/lib_str.c ****                       const  CPU_CHAR    *pstr_cat,
 625:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_SIZE_T   len_max)
 626:../Dave/Generated/UCPROBE/lib_str.c **** {
 627:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 628:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_cat_src;
 629:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_cat;
 630:../Dave/Generated/UCPROBE/lib_str.c **** 
 631:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 632:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 633:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 634:../Dave/Generated/UCPROBE/lib_str.c ****     }
 635:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_cat  == (const CPU_CHAR *)0) {
 636:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 637:../Dave/Generated/UCPROBE/lib_str.c ****     }
 638:../Dave/Generated/UCPROBE/lib_str.c **** 
 639:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn dest str if cat len = 0 (see
 640:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr_dest);
 641:../Dave/Generated/UCPROBE/lib_str.c ****     }
 642:../Dave/Generated/UCPROBE/lib_str.c **** 
 643:../Dave/Generated/UCPROBE/lib_str.c **** 
 644:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_cat_dest = pstr_dest;
 645:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 646:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 647:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 648:../Dave/Generated/UCPROBE/lib_str.c ****     }
 649:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_cat_dest == (CPU_CHAR *)0) {                       /* Rtn NULL if NULL ptr found (see 
 650:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 651:../Dave/Generated/UCPROBE/lib_str.c ****     }
 652:../Dave/Generated/UCPROBE/lib_str.c **** 
 653:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_cat_src = pstr_cat;
 654:../Dave/Generated/UCPROBE/lib_str.c ****     len_cat      = 0u;
 655:../Dave/Generated/UCPROBE/lib_str.c **** 
 656:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (      CPU_CHAR *)  0 ) &&        /* Cat str until NULL ptr(s)  [see 
 657:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 658:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 659:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 660:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_cat_dest = *pstr_cat_src;
 661:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 662:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_src++;
 663:../Dave/Generated/UCPROBE/lib_str.c ****         len_cat++;
 664:../Dave/Generated/UCPROBE/lib_str.c ****     }
 665:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found (s
 666:../Dave/Generated/UCPROBE/lib_str.c ****     if ((pstr_cat_dest == (      CPU_CHAR *)0) ||
 667:../Dave/Generated/UCPROBE/lib_str.c ****         (pstr_cat_src  == (const CPU_CHAR *)0)) {
 668:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 669:../Dave/Generated/UCPROBE/lib_str.c ****     }
 670:../Dave/Generated/UCPROBE/lib_str.c **** 
 671:../Dave/Generated/UCPROBE/lib_str.c ****    *pstr_cat_dest = (CPU_CHAR)'\0';                             /* Append NULL char    (see Note #2
 672:../Dave/Generated/UCPROBE/lib_str.c **** 
 673:../Dave/Generated/UCPROBE/lib_str.c **** 
 674:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 675:../Dave/Generated/UCPROBE/lib_str.c **** }
 676:../Dave/Generated/UCPROBE/lib_str.c **** 
 677:../Dave/Generated/UCPROBE/lib_str.c **** 
 678:../Dave/Generated/UCPROBE/lib_str.c **** /*
 679:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 680:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Cmp()
 681:../Dave/Generated/UCPROBE/lib_str.c **** *
 682:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical.
 683:../Dave/Generated/UCPROBE/lib_str.c **** *
 684:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 685:../Dave/Generated/UCPROBE/lib_str.c **** *
 686:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 687:../Dave/Generated/UCPROBE/lib_str.c **** *
 688:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 689:../Dave/Generated/UCPROBE/lib_str.c **** *
 690:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 691:../Dave/Generated/UCPROBE/lib_str.c **** *
 692:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 693:../Dave/Generated/UCPROBE/lib_str.c **** *
 694:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 695:../Dave/Generated/UCPROBE/lib_str.c **** *
 696:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 697:../Dave/Generated/UCPROBE/lib_str.c **** *
 698:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 699:../Dave/Generated/UCPROBE/lib_str.c **** *
 700:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' states that
 701:../Dave/Generated/UCPROBE/lib_str.c **** *                       strcmp() function shall compare the string pointed to by 's1' ('p1_str') to
 702:../Dave/Generated/UCPROBE/lib_str.c **** *                       string pointed to by 's2' ('p2_str)".
 703:../Dave/Generated/UCPROBE/lib_str.c **** *
 704:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : RETURN VALUE' states
 705:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strcmp() shall return an integer greater th
 706:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 707:../Dave/Generated/UCPROBE/lib_str.c **** *
 708:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 709:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 710:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 711:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 712:../Dave/Generated/UCPROBE/lib_str.c **** *
 713:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 714:../Dave/Generated/UCPROBE/lib_str.c **** *
 715:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 716:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 717:../Dave/Generated/UCPROBE/lib_str.c **** *
 718:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 719:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 720:../Dave/Generated/UCPROBE/lib_str.c **** *
 721:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 722:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 723:../Dave/Generated/UCPROBE/lib_str.c **** *
 724:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 725:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 726:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 727:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 728:../Dave/Generated/UCPROBE/lib_str.c **** *
 729:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 730:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 731:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 732:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 733:../Dave/Generated/UCPROBE/lib_str.c **** *
 734:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 735:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 736:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 737:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 738:../Dave/Generated/UCPROBE/lib_str.c **** *
 739:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 740:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
 741:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 742:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
 743:../Dave/Generated/UCPROBE/lib_str.c **** *
 744:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
 745:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 746:../Dave/Generated/UCPROBE/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 747:../Dave/Generated/UCPROBE/lib_str.c **** *
 748:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 749:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 750:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 751:../Dave/Generated/UCPROBE/lib_str.c **** */
 752:../Dave/Generated/UCPROBE/lib_str.c **** 
 753:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_Cmp (const  CPU_CHAR  *p1_str,
 754:../Dave/Generated/UCPROBE/lib_str.c ****                      const  CPU_CHAR  *p2_str)
 755:../Dave/Generated/UCPROBE/lib_str.c **** {
 756:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
 757:../Dave/Generated/UCPROBE/lib_str.c **** 
 758:../Dave/Generated/UCPROBE/lib_str.c **** 
 759:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_val = Str_Cmp_N(p1_str,
 760:../Dave/Generated/UCPROBE/lib_str.c ****                         p2_str,
 761:../Dave/Generated/UCPROBE/lib_str.c ****                         DEF_INT_CPU_U_MAX_VAL);
 762:../Dave/Generated/UCPROBE/lib_str.c **** 
 763:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 764:../Dave/Generated/UCPROBE/lib_str.c **** }
 765:../Dave/Generated/UCPROBE/lib_str.c **** 
 766:../Dave/Generated/UCPROBE/lib_str.c **** 
 767:../Dave/Generated/UCPROBE/lib_str.c **** /*
 768:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 769:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Cmp_N()
 770:../Dave/Generated/UCPROBE/lib_str.c **** *
 771:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters.
 772:../Dave/Generated/UCPROBE/lib_str.c **** *
 773:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 774:../Dave/Generated/UCPROBE/lib_str.c **** *
 775:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 776:../Dave/Generated/UCPROBE/lib_str.c **** *
 777:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
 778:../Dave/Generated/UCPROBE/lib_str.c **** *
 779:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 780:../Dave/Generated/UCPROBE/lib_str.c **** *
 781:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 782:../Dave/Generated/UCPROBE/lib_str.c **** *
 783:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 784:../Dave/Generated/UCPROBE/lib_str.c **** *
 785:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 786:../Dave/Generated/UCPROBE/lib_str.c **** *
 787:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 788:../Dave/Generated/UCPROBE/lib_str.c **** *
 789:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 790:../Dave/Generated/UCPROBE/lib_str.c **** *
 791:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' states tha
 792:../Dave/Generated/UCPROBE/lib_str.c **** *
 793:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncmp() function shall compare ... the array pointed to by 's1' 
 794:../Dave/Generated/UCPROBE/lib_str.c **** *                            to the array pointed to by 's2' ('p2_str)" ...
 795:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2)  but "not more than 'n' ('len_max') bytes" of either array.
 796:../Dave/Generated/UCPROBE/lib_str.c **** *
 797:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : RETURN VALUE' state
 798:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strncmp() shall return an integer greater t
 799:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 800:../Dave/Generated/UCPROBE/lib_str.c **** *
 801:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' adds t
 802:../Dave/Generated/UCPROBE/lib_str.c **** *                          "the sign of a non-zero return value is determined by the sign of the di
 803:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 804:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 805:../Dave/Generated/UCPROBE/lib_str.c **** *
 806:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 807:../Dave/Generated/UCPROBE/lib_str.c **** *
 808:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 809:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 810:../Dave/Generated/UCPROBE/lib_str.c **** *
 811:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 812:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 813:../Dave/Generated/UCPROBE/lib_str.c **** *
 814:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 815:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 816:../Dave/Generated/UCPROBE/lib_str.c **** *
 817:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 818:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 819:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 820:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 821:../Dave/Generated/UCPROBE/lib_str.c **** *
 822:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 823:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 824:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 825:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 826:../Dave/Generated/UCPROBE/lib_str.c **** *
 827:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 828:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 829:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 830:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 831:../Dave/Generated/UCPROBE/lib_str.c **** *
 832:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 833:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
 834:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 835:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
 836:../Dave/Generated/UCPROBE/lib_str.c **** *
 837:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
 838:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 839:../Dave/Generated/UCPROBE/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 840:../Dave/Generated/UCPROBE/lib_str.c **** *
 841:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
 842:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
 843:../Dave/Generated/UCPROBE/lib_str.c **** *
 844:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
 845:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Strings identical; 0 returned.
 846:../Dave/Generated/UCPROBE/lib_str.c **** *
 847:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2a2.
 848:../Dave/Generated/UCPROBE/lib_str.c **** *
 849:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 850:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 851:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 852:../Dave/Generated/UCPROBE/lib_str.c **** */
 853:../Dave/Generated/UCPROBE/lib_str.c **** 
 854:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_Cmp_N (const  CPU_CHAR    *p1_str,
 855:../Dave/Generated/UCPROBE/lib_str.c ****                        const  CPU_CHAR    *p2_str,
 856:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 857:../Dave/Generated/UCPROBE/lib_str.c **** {
 858:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 859:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
 860:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
 861:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
 862:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S   cmp_val;
 863:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   cmp_len;
 864:../Dave/Generated/UCPROBE/lib_str.c **** 
 865:../Dave/Generated/UCPROBE/lib_str.c **** 
 866:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
 867:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
 868:../Dave/Generated/UCPROBE/lib_str.c ****     }
 869:../Dave/Generated/UCPROBE/lib_str.c **** 
 870:../Dave/Generated/UCPROBE/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 871:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 872:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 873:../Dave/Generated/UCPROBE/lib_str.c ****         }
 874:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)(*p2_str));
 875:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 876:../Dave/Generated/UCPROBE/lib_str.c ****     }
 877:../Dave/Generated/UCPROBE/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 878:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 879:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 880:../Dave/Generated/UCPROBE/lib_str.c ****     }
 881:../Dave/Generated/UCPROBE/lib_str.c **** 
 882:../Dave/Generated/UCPROBE/lib_str.c **** 
 883:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp      = p1_str;
 884:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp      = p2_str;
 885:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 886:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 887:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next++;
 888:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 889:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 890:../Dave/Generated/UCPROBE/lib_str.c **** 
 891:../Dave/Generated/UCPROBE/lib_str.c ****     while ((*p1_str_cmp      == *p2_str_cmp)            &&      /* Cmp strs until non-matching char
 892:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 895:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 896:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp++;
 897:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp++;
 898:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp_next++;
 899:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 900:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 901:../Dave/Generated/UCPROBE/lib_str.c ****     }
 902:../Dave/Generated/UCPROBE/lib_str.c **** 
 903:../Dave/Generated/UCPROBE/lib_str.c **** 
 904:../Dave/Generated/UCPROBE/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 905:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 906:../Dave/Generated/UCPROBE/lib_str.c ****     }
 907:../Dave/Generated/UCPROBE/lib_str.c **** 
 908:../Dave/Generated/UCPROBE/lib_str.c ****     if (*p1_str_cmp != *p2_str_cmp) {                           /* If strs NOT identical, ...      
 909:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
 910:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)((CPU_INT16S)(*p1_str_cmp) - (CPU_INT16S)(*p2_str_cmp));
 911:../Dave/Generated/UCPROBE/lib_str.c **** 
 912:../Dave/Generated/UCPROBE/lib_str.c ****     } else if (*p1_str_cmp  == (CPU_CHAR)'\0') {                /* If NULL char(s) found, ...      
 913:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 914:../Dave/Generated/UCPROBE/lib_str.c **** 
 915:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
 916:../Dave/Generated/UCPROBE/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 917:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 918:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 919:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
 920:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
 921:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)(*p2_str_cmp_next));
 922:../Dave/Generated/UCPROBE/lib_str.c ****             }
 923:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
 924:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)(*p1_str_cmp_next);           /* ... rtn pos p1_str_cmp_next val 
 925:../Dave/Generated/UCPROBE/lib_str.c ****         }
 926:../Dave/Generated/UCPROBE/lib_str.c ****     }
 927:../Dave/Generated/UCPROBE/lib_str.c **** 
 928:../Dave/Generated/UCPROBE/lib_str.c **** 
 929:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 930:../Dave/Generated/UCPROBE/lib_str.c **** }
 931:../Dave/Generated/UCPROBE/lib_str.c **** 
 932:../Dave/Generated/UCPROBE/lib_str.c **** 
 933:../Dave/Generated/UCPROBE/lib_str.c **** /*
 934:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 935:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_CmpIgnoreCase()
 936:../Dave/Generated/UCPROBE/lib_str.c **** *
 937:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical, ignoring case.
 938:../Dave/Generated/UCPROBE/lib_str.c **** *
 939:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 940:../Dave/Generated/UCPROBE/lib_str.c **** *
 941:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 942:../Dave/Generated/UCPROBE/lib_str.c **** *
 943:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 944:../Dave/Generated/UCPROBE/lib_str.c **** *
 945:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 946:../Dave/Generated/UCPROBE/lib_str.c **** *
 947:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 948:../Dave/Generated/UCPROBE/lib_str.c **** *
 949:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 950:../Dave/Generated/UCPROBE/lib_str.c **** *
 951:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 952:../Dave/Generated/UCPROBE/lib_str.c **** *
 953:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 954:../Dave/Generated/UCPROBE/lib_str.c **** *
 955:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : DESCRIPTION' states 
 956:../Dave/Generated/UCPROBE/lib_str.c **** *
 957:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strcasecmp() function shall compare ... the string pointed to 
 958:../Dave/Generated/UCPROBE/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
 959:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "ignoring differences in case".
 960:../Dave/Generated/UCPROBE/lib_str.c **** *
 961:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "strcasecmp() ... shall behave as if the strings had been converted to 
 962:../Dave/Generated/UCPROBE/lib_str.c **** *                            and then a byte comparison performed."
 963:../Dave/Generated/UCPROBE/lib_str.c **** *
 964:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : RETURN VALUE' st
 965:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strcasecmp() shall return an integer greate
 966:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 967:../Dave/Generated/UCPROBE/lib_str.c **** *
 968:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 969:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 970:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 971:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 972:../Dave/Generated/UCPROBE/lib_str.c **** *
 973:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 974:../Dave/Generated/UCPROBE/lib_str.c **** *
 975:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 976:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 977:../Dave/Generated/UCPROBE/lib_str.c **** *
 978:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 979:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
 980:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
 981:../Dave/Generated/UCPROBE/lib_str.c **** *
 982:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 983:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
 984:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
 985:../Dave/Generated/UCPROBE/lib_str.c **** *
 986:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 987:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 988:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 989:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 990:../Dave/Generated/UCPROBE/lib_str.c **** *
 991:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 992:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 993:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 994:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 995:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
 996:../Dave/Generated/UCPROBE/lib_str.c **** *
 997:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 998:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 999:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1000:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1001:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1002:../Dave/Generated/UCPROBE/lib_str.c **** *
1003:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1004:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
1005:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1006:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
1007:../Dave/Generated/UCPROBE/lib_str.c **** *
1008:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
1009:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1010:../Dave/Generated/UCPROBE/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1011:../Dave/Generated/UCPROBE/lib_str.c **** *                           to lower case.
1012:../Dave/Generated/UCPROBE/lib_str.c **** *
1013:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1014:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1015:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1016:../Dave/Generated/UCPROBE/lib_str.c **** */
1017:../Dave/Generated/UCPROBE/lib_str.c **** 
1018:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase (const  CPU_CHAR  *p1_str,
1019:../Dave/Generated/UCPROBE/lib_str.c ****                                const  CPU_CHAR  *p2_str)
1020:../Dave/Generated/UCPROBE/lib_str.c **** {
1021:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
1022:../Dave/Generated/UCPROBE/lib_str.c **** 
1023:../Dave/Generated/UCPROBE/lib_str.c **** 
1024:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_val = Str_CmpIgnoreCase_N(p1_str,
1025:../Dave/Generated/UCPROBE/lib_str.c ****                                   p2_str,
1026:../Dave/Generated/UCPROBE/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1027:../Dave/Generated/UCPROBE/lib_str.c **** 
1028:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
1029:../Dave/Generated/UCPROBE/lib_str.c **** }
1030:../Dave/Generated/UCPROBE/lib_str.c **** 
1031:../Dave/Generated/UCPROBE/lib_str.c **** 
1032:../Dave/Generated/UCPROBE/lib_str.c **** /*
1033:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1034:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_CmpIgnoreCase_N()
1035:../Dave/Generated/UCPROBE/lib_str.c **** *
1036:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters,
1037:../Dave/Generated/UCPROBE/lib_str.c **** *                   ignoring case.
1038:../Dave/Generated/UCPROBE/lib_str.c **** *
1039:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
1040:../Dave/Generated/UCPROBE/lib_str.c **** *
1041:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
1042:../Dave/Generated/UCPROBE/lib_str.c **** *
1043:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
1044:../Dave/Generated/UCPROBE/lib_str.c **** *
1045:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
1046:../Dave/Generated/UCPROBE/lib_str.c **** *
1047:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
1048:../Dave/Generated/UCPROBE/lib_str.c **** *
1049:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
1050:../Dave/Generated/UCPROBE/lib_str.c **** *
1051:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
1052:../Dave/Generated/UCPROBE/lib_str.c **** *
1053:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1054:../Dave/Generated/UCPROBE/lib_str.c **** *
1055:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1056:../Dave/Generated/UCPROBE/lib_str.c **** *
1057:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : DESCRIPTION' states
1058:../Dave/Generated/UCPROBE/lib_str.c **** *
1059:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strncasecmp() function shall compare ... the string pointed to
1060:../Dave/Generated/UCPROBE/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
1061:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "ignoring differences in case"                           ...
1062:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C)  but "not more than 'n' ('len_max') bytes" of either string.
1063:../Dave/Generated/UCPROBE/lib_str.c **** *
1064:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "strncasecmp() shall behave as if the strings had been converted to low
1065:../Dave/Generated/UCPROBE/lib_str.c **** *                            and then a byte comparison performed."
1066:../Dave/Generated/UCPROBE/lib_str.c **** *
1067:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : RETURN VALUE' s
1068:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strncasecmp() shall return an integer great
1069:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
1070:../Dave/Generated/UCPROBE/lib_str.c **** *
1071:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
1072:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
1073:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
1074:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
1075:../Dave/Generated/UCPROBE/lib_str.c **** *
1076:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
1077:../Dave/Generated/UCPROBE/lib_str.c **** *
1078:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
1079:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
1080:../Dave/Generated/UCPROBE/lib_str.c **** *
1081:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
1082:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
1083:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
1084:../Dave/Generated/UCPROBE/lib_str.c **** *
1085:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
1086:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
1087:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
1088:../Dave/Generated/UCPROBE/lib_str.c **** *
1089:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
1090:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
1091:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
1092:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
1093:../Dave/Generated/UCPROBE/lib_str.c **** *
1094:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
1095:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
1096:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1097:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
1098:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1099:../Dave/Generated/UCPROBE/lib_str.c **** *
1100:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
1101:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1102:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1103:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1104:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1105:../Dave/Generated/UCPROBE/lib_str.c **** *
1106:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1107:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
1108:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1109:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
1110:../Dave/Generated/UCPROBE/lib_str.c **** *
1111:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
1112:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1113:../Dave/Generated/UCPROBE/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1114:../Dave/Generated/UCPROBE/lib_str.c **** *                           to lower case.
1115:../Dave/Generated/UCPROBE/lib_str.c **** *
1116:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
1117:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
1118:../Dave/Generated/UCPROBE/lib_str.c **** *
1119:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
1120:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Strings identical; 0 returned.
1121:../Dave/Generated/UCPROBE/lib_str.c **** *
1122:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2a1C.
1123:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
1124:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1125:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1126:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1127:../Dave/Generated/UCPROBE/lib_str.c **** */
1128:../Dave/Generated/UCPROBE/lib_str.c **** 
1129:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase_N (const  CPU_CHAR    *p1_str,
1130:../Dave/Generated/UCPROBE/lib_str.c ****                                  const  CPU_CHAR    *p2_str,
1131:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_SIZE_T   len_max)
1132:../Dave/Generated/UCPROBE/lib_str.c **** {
1133:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
1134:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
1135:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
1136:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
1137:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     char_1;
1138:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     char_2;
1139:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S   cmp_val;
1140:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   cmp_len;
1141:../Dave/Generated/UCPROBE/lib_str.c **** 
1142:../Dave/Generated/UCPROBE/lib_str.c **** 
1143:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
1144:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
1145:../Dave/Generated/UCPROBE/lib_str.c ****     }
1146:../Dave/Generated/UCPROBE/lib_str.c **** 
1147:../Dave/Generated/UCPROBE/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
1148:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
1149:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
1150:../Dave/Generated/UCPROBE/lib_str.c ****         }
1151:../Dave/Generated/UCPROBE/lib_str.c ****         char_2  =  ASCII_ToLower(*p2_str);
1152:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
1153:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
1154:../Dave/Generated/UCPROBE/lib_str.c ****     }
1155:../Dave/Generated/UCPROBE/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
1156:../Dave/Generated/UCPROBE/lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
1157:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
1158:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
1159:../Dave/Generated/UCPROBE/lib_str.c ****     }
1160:../Dave/Generated/UCPROBE/lib_str.c **** 
1161:../Dave/Generated/UCPROBE/lib_str.c **** 
1162:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp      = p1_str;
1163:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp      = p2_str;
1164:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
1165:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
1166:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next++;
1167:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
1169:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
1170:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
1171:../Dave/Generated/UCPROBE/lib_str.c **** 
1172:../Dave/Generated/UCPROBE/lib_str.c ****     while (( char_1          ==  char_2)                &&      /* Cmp strs until non-matching char
1173:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
1175:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
1176:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
1177:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp++;
1178:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp++;
1179:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp_next++;
1180:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
1181:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
1182:../Dave/Generated/UCPROBE/lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
1183:../Dave/Generated/UCPROBE/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
1184:../Dave/Generated/UCPROBE/lib_str.c ****     }
1185:../Dave/Generated/UCPROBE/lib_str.c **** 
1186:../Dave/Generated/UCPROBE/lib_str.c **** 
1187:../Dave/Generated/UCPROBE/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
1188:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
1189:../Dave/Generated/UCPROBE/lib_str.c ****     }
1190:../Dave/Generated/UCPROBE/lib_str.c **** 
1191:../Dave/Generated/UCPROBE/lib_str.c ****     if (char_1 != char_2) {                                     /* If strs NOT identical, ...      
1192:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
1193:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)((CPU_INT16S)char_1 - (CPU_INT16S)char_2);
1194:../Dave/Generated/UCPROBE/lib_str.c **** 
1195:../Dave/Generated/UCPROBE/lib_str.c ****     } else if (char_1 == (CPU_CHAR)'\0') {                      /* If NULL char(s) found, ...      
1196:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
1197:../Dave/Generated/UCPROBE/lib_str.c **** 
1198:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
1199:../Dave/Generated/UCPROBE/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
1200:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
1201:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
1202:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
1203:../Dave/Generated/UCPROBE/lib_str.c ****                 char_2  =  ASCII_ToLower(*p2_str_cmp_next);
1204:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
1205:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
1206:../Dave/Generated/UCPROBE/lib_str.c ****             }
1207:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
1208:../Dave/Generated/UCPROBE/lib_str.c ****             char_1  =  ASCII_ToLower(*p1_str_cmp_next);
1209:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
1210:../Dave/Generated/UCPROBE/lib_str.c ****         }
1211:../Dave/Generated/UCPROBE/lib_str.c ****     }
1212:../Dave/Generated/UCPROBE/lib_str.c **** 
1213:../Dave/Generated/UCPROBE/lib_str.c **** 
1214:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
1215:../Dave/Generated/UCPROBE/lib_str.c **** }
1216:../Dave/Generated/UCPROBE/lib_str.c **** 
1217:../Dave/Generated/UCPROBE/lib_str.c **** 
1218:../Dave/Generated/UCPROBE/lib_str.c **** /*
1219:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1220:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Char()
1221:../Dave/Generated/UCPROBE/lib_str.c **** *
1222:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurrence of specific character.
1223:../Dave/Generated/UCPROBE/lib_str.c **** *
1224:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1225:../Dave/Generated/UCPROBE/lib_str.c **** *
1226:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1227:../Dave/Generated/UCPROBE/lib_str.c **** *
1228:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1229:../Dave/Generated/UCPROBE/lib_str.c **** *
1230:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1231:../Dave/Generated/UCPROBE/lib_str.c **** *
1232:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1233:../Dave/Generated/UCPROBE/lib_str.c **** *
1234:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1235:../Dave/Generated/UCPROBE/lib_str.c **** *
1236:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1237:../Dave/Generated/UCPROBE/lib_str.c **** *
1238:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1239:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1240:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1241:../Dave/Generated/UCPROBE/lib_str.c **** *
1242:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1243:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon completion, strchr() shall return" :
1244:../Dave/Generated/UCPROBE/lib_str.c **** *
1245:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte," ...
1246:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1247:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for
1248:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1249:../Dave/Generated/UCPROBE/lib_str.c **** *
1250:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1251:../Dave/Generated/UCPROBE/lib_str.c **** *
1252:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1253:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1254:../Dave/Generated/UCPROBE/lib_str.c **** *
1255:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1256:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1257:../Dave/Generated/UCPROBE/lib_str.c **** *
1258:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1259:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1260:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1261:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1262:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1263:../Dave/Generated/UCPROBE/lib_str.c **** *
1264:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1265:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1266:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1267:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1268:../Dave/Generated/UCPROBE/lib_str.c **** */
1269:../Dave/Generated/UCPROBE/lib_str.c **** 
1270:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char (const  CPU_CHAR  *pstr,
1271:../Dave/Generated/UCPROBE/lib_str.c ****                             CPU_CHAR   srch_char)
1272:../Dave/Generated/UCPROBE/lib_str.c **** {
1273:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1274:../Dave/Generated/UCPROBE/lib_str.c **** 
1275:../Dave/Generated/UCPROBE/lib_str.c **** 
1276:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_N(pstr,
1277:../Dave/Generated/UCPROBE/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL,
1278:../Dave/Generated/UCPROBE/lib_str.c ****                           srch_char);
1279:../Dave/Generated/UCPROBE/lib_str.c **** 
1280:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
1281:../Dave/Generated/UCPROBE/lib_str.c **** }
1282:../Dave/Generated/UCPROBE/lib_str.c **** 
1283:../Dave/Generated/UCPROBE/lib_str.c **** 
1284:../Dave/Generated/UCPROBE/lib_str.c **** /*
1285:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1286:../Dave/Generated/UCPROBE/lib_str.c **** *                                            Str_Char_N()
1287:../Dave/Generated/UCPROBE/lib_str.c **** *
1288:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurrence of specific character, up to a maximum number
1289:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1290:../Dave/Generated/UCPROBE/lib_str.c **** *
1291:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1292:../Dave/Generated/UCPROBE/lib_str.c **** *
1293:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1294:../Dave/Generated/UCPROBE/lib_str.c **** *
1295:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1296:../Dave/Generated/UCPROBE/lib_str.c **** *
1297:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1298:../Dave/Generated/UCPROBE/lib_str.c **** *
1299:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1300:../Dave/Generated/UCPROBE/lib_str.c **** *
1301:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1302:../Dave/Generated/UCPROBE/lib_str.c **** *
1303:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1304:../Dave/Generated/UCPROBE/lib_str.c **** *
1305:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1306:../Dave/Generated/UCPROBE/lib_str.c **** *
1307:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1308:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1309:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1310:../Dave/Generated/UCPROBE/lib_str.c **** *
1311:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1312:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon completion, strchr() shall return" :
1313:../Dave/Generated/UCPROBE/lib_str.c **** *
1314:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte," ...
1315:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1316:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for
1317:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1318:../Dave/Generated/UCPROBE/lib_str.c **** *
1319:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1320:../Dave/Generated/UCPROBE/lib_str.c **** *                       argument list for consistency with all other custom string library function
1321:../Dave/Generated/UCPROBE/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1322:../Dave/Generated/UCPROBE/lib_str.c **** *                       to comply with most standard library's strnchr() argument list.
1323:../Dave/Generated/UCPROBE/lib_str.c **** *
1324:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1325:../Dave/Generated/UCPROBE/lib_str.c **** *
1326:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1327:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1328:../Dave/Generated/UCPROBE/lib_str.c **** *
1329:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1330:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1331:../Dave/Generated/UCPROBE/lib_str.c **** *
1332:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1333:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1334:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1335:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1336:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1337:../Dave/Generated/UCPROBE/lib_str.c **** *
1338:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1339:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1340:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1341:../Dave/Generated/UCPROBE/lib_str.c **** *
1342:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1343:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1344:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1345:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1346:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1347:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1348:../Dave/Generated/UCPROBE/lib_str.c **** */
1349:../Dave/Generated/UCPROBE/lib_str.c **** 
1350:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_N (const  CPU_CHAR    *pstr,
1351:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max,
1352:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     srch_char)
1353:../Dave/Generated/UCPROBE/lib_str.c **** {
1354:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1355:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_srch;
1356:../Dave/Generated/UCPROBE/lib_str.c **** 
1357:../Dave/Generated/UCPROBE/lib_str.c **** 
1358:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
1359:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1360:../Dave/Generated/UCPROBE/lib_str.c ****     }
1361:../Dave/Generated/UCPROBE/lib_str.c **** 
1362:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
1363:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1364:../Dave/Generated/UCPROBE/lib_str.c ****     }
1365:../Dave/Generated/UCPROBE/lib_str.c **** 
1366:../Dave/Generated/UCPROBE/lib_str.c **** 
1367:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char = pstr;
1368:../Dave/Generated/UCPROBE/lib_str.c ****     len_srch  = 0u;
1369:../Dave/Generated/UCPROBE/lib_str.c **** 
1370:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)  0 )      &&       /* Srch str until NULL ptr     [see
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
1372:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
1373:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
1374:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char++;
1375:../Dave/Generated/UCPROBE/lib_str.c ****         len_srch++;
1376:../Dave/Generated/UCPROBE/lib_str.c ****     }
1377:../Dave/Generated/UCPROBE/lib_str.c **** 
1378:../Dave/Generated/UCPROBE/lib_str.c **** 
1379:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
1380:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1381:../Dave/Generated/UCPROBE/lib_str.c ****     }
1382:../Dave/Generated/UCPROBE/lib_str.c **** 
1383:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_srch >= len_max) {                                  /* Rtn NULL if srch char NOT found 
1384:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
1385:../Dave/Generated/UCPROBE/lib_str.c ****     }
1386:../Dave/Generated/UCPROBE/lib_str.c **** 
1387:../Dave/Generated/UCPROBE/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
1388:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
1389:../Dave/Generated/UCPROBE/lib_str.c ****     }
1390:../Dave/Generated/UCPROBE/lib_str.c **** 
1391:../Dave/Generated/UCPROBE/lib_str.c **** 
1392:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
1393:../Dave/Generated/UCPROBE/lib_str.c **** }
1394:../Dave/Generated/UCPROBE/lib_str.c **** 
1395:../Dave/Generated/UCPROBE/lib_str.c **** 
1396:../Dave/Generated/UCPROBE/lib_str.c **** /*
1397:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1398:../Dave/Generated/UCPROBE/lib_str.c **** *                                           Str_Char_Last()
1399:../Dave/Generated/UCPROBE/lib_str.c **** *
1400:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for last occurrence of specific character.
1401:../Dave/Generated/UCPROBE/lib_str.c **** *
1402:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1403:../Dave/Generated/UCPROBE/lib_str.c **** *
1404:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1405:../Dave/Generated/UCPROBE/lib_str.c **** *
1406:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1407:../Dave/Generated/UCPROBE/lib_str.c **** *
1408:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1409:../Dave/Generated/UCPROBE/lib_str.c **** *
1410:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1411:../Dave/Generated/UCPROBE/lib_str.c **** *
1412:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1413:../Dave/Generated/UCPROBE/lib_str.c **** *
1414:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1415:../Dave/Generated/UCPROBE/lib_str.c **** *
1416:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1417:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1418:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1419:../Dave/Generated/UCPROBE/lib_str.c **** *
1420:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1421:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1422:../Dave/Generated/UCPROBE/lib_str.c **** *
1423:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte" ...
1424:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1425:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for
1426:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1427:../Dave/Generated/UCPROBE/lib_str.c **** *
1428:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1429:../Dave/Generated/UCPROBE/lib_str.c **** *
1430:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1431:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1432:../Dave/Generated/UCPROBE/lib_str.c **** *
1433:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1434:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1435:../Dave/Generated/UCPROBE/lib_str.c **** *
1436:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String searched from end to beginning.
1437:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1438:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1439:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1440:../Dave/Generated/UCPROBE/lib_str.c **** *
1441:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1442:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string
1443:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1444:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1445:../Dave/Generated/UCPROBE/lib_str.c **** */
1446:../Dave/Generated/UCPROBE/lib_str.c **** 
1447:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Last (const  CPU_CHAR  *pstr,
1448:../Dave/Generated/UCPROBE/lib_str.c ****                                  CPU_CHAR   srch_char)
1449:../Dave/Generated/UCPROBE/lib_str.c **** {
1450:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1451:../Dave/Generated/UCPROBE/lib_str.c **** 
1452:../Dave/Generated/UCPROBE/lib_str.c **** 
1453:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_Last_N(pstr,
1454:../Dave/Generated/UCPROBE/lib_str.c ****                                DEF_INT_CPU_U_MAX_VAL,
1455:../Dave/Generated/UCPROBE/lib_str.c ****                                srch_char);
1456:../Dave/Generated/UCPROBE/lib_str.c **** 
1457:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
1458:../Dave/Generated/UCPROBE/lib_str.c **** }
1459:../Dave/Generated/UCPROBE/lib_str.c **** 
1460:../Dave/Generated/UCPROBE/lib_str.c **** 
1461:../Dave/Generated/UCPROBE/lib_str.c **** /*
1462:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1463:../Dave/Generated/UCPROBE/lib_str.c **** *                                          Str_Char_Last_N()
1464:../Dave/Generated/UCPROBE/lib_str.c **** *
1465:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for last occurrence of specific character, up to a maximum number
1466:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1467:../Dave/Generated/UCPROBE/lib_str.c **** *
1468:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1469:../Dave/Generated/UCPROBE/lib_str.c **** *
1470:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1471:../Dave/Generated/UCPROBE/lib_str.c **** *
1472:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1473:../Dave/Generated/UCPROBE/lib_str.c **** *
1474:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1475:../Dave/Generated/UCPROBE/lib_str.c **** *
1476:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1477:../Dave/Generated/UCPROBE/lib_str.c **** *
1478:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1479:../Dave/Generated/UCPROBE/lib_str.c **** *
1480:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1481:../Dave/Generated/UCPROBE/lib_str.c **** *
1482:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1483:../Dave/Generated/UCPROBE/lib_str.c **** *
1484:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1485:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1486:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1487:../Dave/Generated/UCPROBE/lib_str.c **** *
1488:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1489:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1490:../Dave/Generated/UCPROBE/lib_str.c **** *
1491:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte" ...
1492:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1493:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for
1494:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1495:../Dave/Generated/UCPROBE/lib_str.c **** *
1496:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1497:../Dave/Generated/UCPROBE/lib_str.c **** *                       argument list for consistency with all other custom string library function
1498:../Dave/Generated/UCPROBE/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1499:../Dave/Generated/UCPROBE/lib_str.c **** *                       to comply with most standard library's strnrchr() argument list.
1500:../Dave/Generated/UCPROBE/lib_str.c **** *
1501:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also 'Str_Char_N()  Note #2c'.
1502:../Dave/Generated/UCPROBE/lib_str.c **** *
1503:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1504:../Dave/Generated/UCPROBE/lib_str.c **** *
1505:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1506:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1507:../Dave/Generated/UCPROBE/lib_str.c **** *
1508:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1509:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1510:../Dave/Generated/UCPROBE/lib_str.c **** *
1511:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String searched from end to beginning.
1512:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1513:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1514:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1515:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1516:../Dave/Generated/UCPROBE/lib_str.c **** *
1517:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1518:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string
1519:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1520:../Dave/Generated/UCPROBE/lib_str.c **** *
1521:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1522:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within last 'len_max' numbe
1523:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1524:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1525:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1526:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1527:../Dave/Generated/UCPROBE/lib_str.c **** */
1528:../Dave/Generated/UCPROBE/lib_str.c **** 
1529:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Last_N (const  CPU_CHAR    *pstr,
1530:../Dave/Generated/UCPROBE/lib_str.c ****                                    CPU_SIZE_T   len_max,
1531:../Dave/Generated/UCPROBE/lib_str.c ****                                    CPU_CHAR     srch_char)
1532:../Dave/Generated/UCPROBE/lib_str.c **** {
1533:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1534:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   str_len_max;
1535:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   str_len;
1536:../Dave/Generated/UCPROBE/lib_str.c **** 
1537:../Dave/Generated/UCPROBE/lib_str.c **** 
1538:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
1539:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1540:../Dave/Generated/UCPROBE/lib_str.c ****     }
1541:../Dave/Generated/UCPROBE/lib_str.c **** 
1542:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
1543:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1544:../Dave/Generated/UCPROBE/lib_str.c ****     }
1545:../Dave/Generated/UCPROBE/lib_str.c **** 
1546:../Dave/Generated/UCPROBE/lib_str.c **** 
1547:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char    = pstr;
1548:../Dave/Generated/UCPROBE/lib_str.c ****      str_len_max = len_max - sizeof((CPU_CHAR)'\0');            /* Str len adj'd for NULL char len.
1549:../Dave/Generated/UCPROBE/lib_str.c ****      str_len     = Str_Len_N(pstr_char, str_len_max);
1550:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char   += str_len;
1551:../Dave/Generated/UCPROBE/lib_str.c **** 
1552:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
1553:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1554:../Dave/Generated/UCPROBE/lib_str.c ****     }
1555:../Dave/Generated/UCPROBE/lib_str.c **** 
1556:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != pstr) &&                              /* Srch str from end until beginnin
1557:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
1558:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char--;
1559:../Dave/Generated/UCPROBE/lib_str.c ****     }
1560:../Dave/Generated/UCPROBE/lib_str.c **** 
1561:../Dave/Generated/UCPROBE/lib_str.c **** 
1562:../Dave/Generated/UCPROBE/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
1563:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
1564:../Dave/Generated/UCPROBE/lib_str.c ****     }
1565:../Dave/Generated/UCPROBE/lib_str.c **** 
1566:../Dave/Generated/UCPROBE/lib_str.c **** 
1567:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
1568:../Dave/Generated/UCPROBE/lib_str.c **** }
1569:../Dave/Generated/UCPROBE/lib_str.c **** 
1570:../Dave/Generated/UCPROBE/lib_str.c **** 
1571:../Dave/Generated/UCPROBE/lib_str.c **** /*
1572:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1573:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_Char_Replace()
1574:../Dave/Generated/UCPROBE/lib_str.c **** *
1575:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for specific character and replace it by another specific character.
1576:../Dave/Generated/UCPROBE/lib_str.c **** *
1577:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1578:../Dave/Generated/UCPROBE/lib_str.c **** *
1579:../Dave/Generated/UCPROBE/lib_str.c **** *               char_srch       Search character.
1580:../Dave/Generated/UCPROBE/lib_str.c **** *
1581:../Dave/Generated/UCPROBE/lib_str.c **** *               char_replace    Replace character.
1582:../Dave/Generated/UCPROBE/lib_str.c **** *
1583:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1584:../Dave/Generated/UCPROBE/lib_str.c **** *
1585:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,   otherwise.
1586:../Dave/Generated/UCPROBE/lib_str.c **** *
1587:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1588:../Dave/Generated/UCPROBE/lib_str.c **** *
1589:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer modified.
1590:../Dave/Generated/UCPROBE/lib_str.c **** *
1591:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) String search terminates when :
1592:../Dave/Generated/UCPROBE/lib_str.c **** *
1593:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1594:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1595:../Dave/Generated/UCPROBE/lib_str.c **** *
1596:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1597:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1598:../Dave/Generated/UCPROBE/lib_str.c **** *
1599:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1600:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1601:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1602:../Dave/Generated/UCPROBE/lib_str.c **** *
1603:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1604:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Replace character found by the specified character.
1605:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1606:../Dave/Generated/UCPROBE/lib_str.c **** */
1607:../Dave/Generated/UCPROBE/lib_str.c **** 
1608:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Replace (CPU_CHAR  *pstr,
1609:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_CHAR   char_srch,
1610:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_CHAR   char_replace)
1611:../Dave/Generated/UCPROBE/lib_str.c **** {
1612:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1613:../Dave/Generated/UCPROBE/lib_str.c **** 
1614:../Dave/Generated/UCPROBE/lib_str.c **** 
1615:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_Replace_N(pstr,
1616:../Dave/Generated/UCPROBE/lib_str.c ****                                   char_srch,
1617:../Dave/Generated/UCPROBE/lib_str.c ****                                   char_replace,
1618:../Dave/Generated/UCPROBE/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1619:../Dave/Generated/UCPROBE/lib_str.c **** 
1620:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
1621:../Dave/Generated/UCPROBE/lib_str.c **** }
1622:../Dave/Generated/UCPROBE/lib_str.c **** 
1623:../Dave/Generated/UCPROBE/lib_str.c **** 
1624:../Dave/Generated/UCPROBE/lib_str.c **** /*
1625:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1626:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_Char_Replace_N()
1627:../Dave/Generated/UCPROBE/lib_str.c **** *
1628:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for specific character and replace it by another specific character, 
1629:../Dave/Generated/UCPROBE/lib_str.c **** *               a maximum number of characters.
1630:../Dave/Generated/UCPROBE/lib_str.c **** *
1631:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1632:../Dave/Generated/UCPROBE/lib_str.c **** *
1633:../Dave/Generated/UCPROBE/lib_str.c **** *               char_srch       Search character.
1634:../Dave/Generated/UCPROBE/lib_str.c **** *
1635:../Dave/Generated/UCPROBE/lib_str.c **** *               char_replace    Replace character.
1636:../Dave/Generated/UCPROBE/lib_str.c **** *
1637:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1638:../Dave/Generated/UCPROBE/lib_str.c **** *
1639:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1640:../Dave/Generated/UCPROBE/lib_str.c **** *
1641:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,   otherwise.
1642:../Dave/Generated/UCPROBE/lib_str.c **** *
1643:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1644:../Dave/Generated/UCPROBE/lib_str.c **** *
1645:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer modified.
1646:../Dave/Generated/UCPROBE/lib_str.c **** *
1647:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) String search terminates when :
1648:../Dave/Generated/UCPROBE/lib_str.c **** *
1649:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1650:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1651:../Dave/Generated/UCPROBE/lib_str.c **** *
1652:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1653:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1654:../Dave/Generated/UCPROBE/lib_str.c **** *
1655:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1656:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1657:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1658:../Dave/Generated/UCPROBE/lib_str.c **** *
1659:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1660:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Replace character found by the specified character.
1661:../Dave/Generated/UCPROBE/lib_str.c **** *
1662:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1663:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1664:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1665:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1666:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1667:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1668:../Dave/Generated/UCPROBE/lib_str.c **** */
1669:../Dave/Generated/UCPROBE/lib_str.c **** 
1670:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Replace_N (CPU_CHAR    *pstr,
1671:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_CHAR     char_srch,
1672:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_CHAR     char_replace,
1673:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_SIZE_T   len_max)
1674:../Dave/Generated/UCPROBE/lib_str.c **** {
1675:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR    *pstr_char;
1676:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_SIZE_T   len;
1677:../Dave/Generated/UCPROBE/lib_str.c **** 
1678:../Dave/Generated/UCPROBE/lib_str.c **** 
1679:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
1680:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1681:../Dave/Generated/UCPROBE/lib_str.c ****     }
1682:../Dave/Generated/UCPROBE/lib_str.c **** 
1683:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
1684:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1685:../Dave/Generated/UCPROBE/lib_str.c ****     }
1686:../Dave/Generated/UCPROBE/lib_str.c **** 
1687:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char = pstr;
1688:../Dave/Generated/UCPROBE/lib_str.c ****     len       = len_max;
1689:../Dave/Generated/UCPROBE/lib_str.c **** 
1690:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)0) &&               /* Srch str until NULL ptr     [see
1691:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
1692:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
1693:../Dave/Generated/UCPROBE/lib_str.c **** 
1694:../Dave/Generated/UCPROBE/lib_str.c ****         if (*pstr_char == char_srch) {
1695:../Dave/Generated/UCPROBE/lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
1696:../Dave/Generated/UCPROBE/lib_str.c ****         }
1697:../Dave/Generated/UCPROBE/lib_str.c **** 
1698:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char++;
1699:../Dave/Generated/UCPROBE/lib_str.c ****         len--;
1700:../Dave/Generated/UCPROBE/lib_str.c ****     }
1701:../Dave/Generated/UCPROBE/lib_str.c **** 
1702:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);
1703:../Dave/Generated/UCPROBE/lib_str.c **** }
1704:../Dave/Generated/UCPROBE/lib_str.c **** 
1705:../Dave/Generated/UCPROBE/lib_str.c **** 
1706:../Dave/Generated/UCPROBE/lib_str.c **** /*
1707:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1708:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Str()
1709:../Dave/Generated/UCPROBE/lib_str.c **** *
1710:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurence of a specific search string.
1711:../Dave/Generated/UCPROBE/lib_str.c **** *
1712:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1713:../Dave/Generated/UCPROBE/lib_str.c **** *
1714:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1715:../Dave/Generated/UCPROBE/lib_str.c **** *
1716:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1717:../Dave/Generated/UCPROBE/lib_str.c **** *
1718:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1719:../Dave/Generated/UCPROBE/lib_str.c **** *
1720:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1721:../Dave/Generated/UCPROBE/lib_str.c **** *
1722:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1723:../Dave/Generated/UCPROBE/lib_str.c **** *
1724:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1725:../Dave/Generated/UCPROBE/lib_str.c **** *
1726:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1727:../Dave/Generated/UCPROBE/lib_str.c **** *
1728:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1729:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1730:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1731:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1732:../Dave/Generated/UCPROBE/lib_str.c **** *
1733:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1734:../Dave/Generated/UCPROBE/lib_str.c **** *
1735:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1736:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "a pointer to the located string" ...
1737:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1738:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1739:../Dave/Generated/UCPROBE/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1740:../Dave/Generated/UCPROBE/lib_str.c **** *
1741:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1742:../Dave/Generated/UCPROBE/lib_str.c **** *                            shall return 's1' ('pstr')."
1743:../Dave/Generated/UCPROBE/lib_str.c **** *
1744:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1745:../Dave/Generated/UCPROBE/lib_str.c **** *
1746:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1747:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1748:../Dave/Generated/UCPROBE/lib_str.c **** *
1749:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1750:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1751:../Dave/Generated/UCPROBE/lib_str.c **** *
1752:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Search string length equal to zero.
1753:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1754:../Dave/Generated/UCPROBE/lib_str.c **** *
1755:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search string length greater than string length.
1756:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1757:../Dave/Generated/UCPROBE/lib_str.c **** *
1758:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Entire string has been searched.
1759:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1760:../Dave/Generated/UCPROBE/lib_str.c **** *
1761:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Search string found.
1762:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1763:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1764:../Dave/Generated/UCPROBE/lib_str.c **** */
1765:../Dave/Generated/UCPROBE/lib_str.c **** 
1766:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Str (const  CPU_CHAR  *pstr,
1767:../Dave/Generated/UCPROBE/lib_str.c ****                     const  CPU_CHAR  *pstr_srch)
1768:../Dave/Generated/UCPROBE/lib_str.c **** {
1769:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1770:../Dave/Generated/UCPROBE/lib_str.c **** 
1771:../Dave/Generated/UCPROBE/lib_str.c **** 
1772:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Str_N(pstr,
1773:../Dave/Generated/UCPROBE/lib_str.c ****                          pstr_srch,
1774:../Dave/Generated/UCPROBE/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
1775:../Dave/Generated/UCPROBE/lib_str.c **** 
1776:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
1777:../Dave/Generated/UCPROBE/lib_str.c **** }
1778:../Dave/Generated/UCPROBE/lib_str.c **** 
1779:../Dave/Generated/UCPROBE/lib_str.c **** 
1780:../Dave/Generated/UCPROBE/lib_str.c **** /*
1781:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1782:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Str_N()
1783:../Dave/Generated/UCPROBE/lib_str.c **** *
1784:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurence of a specific search string, up to a maximum numb
1785:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1786:../Dave/Generated/UCPROBE/lib_str.c **** *
1787:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1788:../Dave/Generated/UCPROBE/lib_str.c **** *
1789:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1790:../Dave/Generated/UCPROBE/lib_str.c **** *
1791:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Note #3g).
1792:../Dave/Generated/UCPROBE/lib_str.c **** *
1793:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1794:../Dave/Generated/UCPROBE/lib_str.c **** *
1795:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1796:../Dave/Generated/UCPROBE/lib_str.c **** *
1797:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1798:../Dave/Generated/UCPROBE/lib_str.c **** *
1799:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1800:../Dave/Generated/UCPROBE/lib_str.c **** *
1801:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1802:../Dave/Generated/UCPROBE/lib_str.c **** *
1803:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1804:../Dave/Generated/UCPROBE/lib_str.c **** *
1805:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1806:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1807:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1808:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1809:../Dave/Generated/UCPROBE/lib_str.c **** *
1810:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1811:../Dave/Generated/UCPROBE/lib_str.c **** *
1812:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1813:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "a pointer to the located string" ...
1814:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1815:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1816:../Dave/Generated/UCPROBE/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1817:../Dave/Generated/UCPROBE/lib_str.c **** *
1818:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1819:../Dave/Generated/UCPROBE/lib_str.c **** *                            shall return 's1' ('pstr')."
1820:../Dave/Generated/UCPROBE/lib_str.c **** *
1821:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1822:../Dave/Generated/UCPROBE/lib_str.c **** *
1823:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1824:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1825:../Dave/Generated/UCPROBE/lib_str.c **** *
1826:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1827:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1828:../Dave/Generated/UCPROBE/lib_str.c **** *
1829:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Search string length equal to zero.
1830:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1831:../Dave/Generated/UCPROBE/lib_str.c **** *
1832:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search string length greater than string length.
1833:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1834:../Dave/Generated/UCPROBE/lib_str.c **** *
1835:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Entire string has been searched.
1836:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1837:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Maximum size of the search is defined as the subtraction of the
1838:../Dave/Generated/UCPROBE/lib_str.c **** *                           search string length from the string length.
1839:../Dave/Generated/UCPROBE/lib_str.c **** *
1840:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Search string found.
1841:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1842:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Search string found via Str_Cmp_N().
1843:../Dave/Generated/UCPROBE/lib_str.c **** *
1844:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) 'len_max' number of characters searched.
1845:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include terminating NULL charac
1846:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1847:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1848:../Dave/Generated/UCPROBE/lib_str.c **** */
1849:../Dave/Generated/UCPROBE/lib_str.c **** 
1850:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Str_N (const  CPU_CHAR    *pstr,
1851:../Dave/Generated/UCPROBE/lib_str.c ****                       const  CPU_CHAR    *pstr_srch,
1852:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_SIZE_T   len_max)
1853:../Dave/Generated/UCPROBE/lib_str.c **** {
1854:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len;
1855:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len_srch;
1856:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    len_max_srch;
1857:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    srch_len;
1858:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    srch_ix;
1859:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   srch_done;
1860:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S    srch_cmp;
1861:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_str;
1862:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_srch_ix;
1863:../Dave/Generated/UCPROBE/lib_str.c **** 
1864:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
1865:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {
1866:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1867:../Dave/Generated/UCPROBE/lib_str.c ****     }
1868:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_srch == (const CPU_CHAR *)0) {
1869:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1870:../Dave/Generated/UCPROBE/lib_str.c ****     }
1871:../Dave/Generated/UCPROBE/lib_str.c **** 
1872:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0    (see
1873:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1874:../Dave/Generated/UCPROBE/lib_str.c ****     }
1875:../Dave/Generated/UCPROBE/lib_str.c **** 
1876:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Lim max srch str len (to chk > s
1877:../Dave/Generated/UCPROBE/lib_str.c ****     len_max_srch = (len_max <       DEF_INT_CPU_U_MAX_VAL)
1878:../Dave/Generated/UCPROBE/lib_str.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
1879:../Dave/Generated/UCPROBE/lib_str.c **** 
1880:../Dave/Generated/UCPROBE/lib_str.c ****     str_len      = Str_Len_N(pstr,      len_max);
1881:../Dave/Generated/UCPROBE/lib_str.c ****     str_len_srch = Str_Len_N(pstr_srch, len_max_srch);
1882:../Dave/Generated/UCPROBE/lib_str.c ****     if (str_len_srch < 1) {                                     /* Rtn ptr to str if srch str len =
1883:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr);
1884:../Dave/Generated/UCPROBE/lib_str.c ****     }
1885:../Dave/Generated/UCPROBE/lib_str.c ****     if (str_len_srch > str_len) {                               /* Rtn NULL if srch str len > str l
1886:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1887:../Dave/Generated/UCPROBE/lib_str.c ****     }
1888:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr found      
1889:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_str = pstr      + str_len;
1890:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
1891:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1892:../Dave/Generated/UCPROBE/lib_str.c ****     }
1893:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_str = pstr_srch + str_len_srch;
1894:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
1895:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1896:../Dave/Generated/UCPROBE/lib_str.c ****     }
1897:../Dave/Generated/UCPROBE/lib_str.c **** 
1898:../Dave/Generated/UCPROBE/lib_str.c **** 
1899:../Dave/Generated/UCPROBE/lib_str.c ****     srch_len  = str_len - str_len_srch;                         /* Calc srch len (see Note #3e2).  
1900:../Dave/Generated/UCPROBE/lib_str.c ****     srch_ix   = 0u;
1901:../Dave/Generated/UCPROBE/lib_str.c ****     srch_done = DEF_NO;
1902:../Dave/Generated/UCPROBE/lib_str.c **** 
1903:../Dave/Generated/UCPROBE/lib_str.c ****     do {
1904:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_srch_ix = (const CPU_CHAR *)(pstr + srch_ix);
1905:../Dave/Generated/UCPROBE/lib_str.c ****         srch_cmp     =  Str_Cmp_N(pstr_srch_ix, pstr_srch, str_len_srch);
1906:../Dave/Generated/UCPROBE/lib_str.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
1907:../Dave/Generated/UCPROBE/lib_str.c ****         srch_ix++;
1908:../Dave/Generated/UCPROBE/lib_str.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
1909:../Dave/Generated/UCPROBE/lib_str.c **** 
1910:../Dave/Generated/UCPROBE/lib_str.c **** 
1911:../Dave/Generated/UCPROBE/lib_str.c ****     if (srch_cmp != 0) {                                        /* Rtn NULL if srch str NOT found (
1912:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
1913:../Dave/Generated/UCPROBE/lib_str.c ****     }
1914:../Dave/Generated/UCPROBE/lib_str.c **** 
1915:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_srch_ix);                          /* Else rtn ptr to found srch str (
1916:../Dave/Generated/UCPROBE/lib_str.c **** }
1917:../Dave/Generated/UCPROBE/lib_str.c **** 
1918:../Dave/Generated/UCPROBE/lib_str.c **** 
1919:../Dave/Generated/UCPROBE/lib_str.c **** /*
1920:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1921:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32U()
1922:../Dave/Generated/UCPROBE/lib_str.c **** *
1923:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit unsigned integer into a multi-digit character string.
1924:../Dave/Generated/UCPROBE/lib_str.c **** *
1925:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
1926:../Dave/Generated/UCPROBE/lib_str.c **** *
1927:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
1928:../Dave/Generated/UCPROBE/lib_str.c **** *
1929:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number of digits to format
1930:../Dave/Generated/UCPROBE/lib_str.c **** *
1931:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MIN     Minimum number of 32-bit unsigned d
1932:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MAX     Maximum number of 32-bit unsigned d
1933:../Dave/Generated/UCPROBE/lib_str.c **** *
1934:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
1935:../Dave/Generated/UCPROBE/lib_str.c **** *
1936:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number base :
1937:../Dave/Generated/UCPROBE/lib_str.c **** *
1938:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
1939:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
1940:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
1941:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
1942:../Dave/Generated/UCPROBE/lib_str.c **** *
1943:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
1944:../Dave/Generated/UCPROBE/lib_str.c **** *
1945:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
1946:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
1947:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
1948:../Dave/Generated/UCPROBE/lib_str.c **** *
1949:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
1950:../Dave/Generated/UCPROBE/lib_str.c **** *
1951:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
1952:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
1953:../Dave/Generated/UCPROBE/lib_str.c **** *
1954:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
1955:../Dave/Generated/UCPROBE/lib_str.c **** *
1956:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
1957:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
1958:../Dave/Generated/UCPROBE/lib_str.c **** *
1959:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
1960:../Dave/Generated/UCPROBE/lib_str.c **** *
1961:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
1962:../Dave/Generated/UCPROBE/lib_str.c **** *
1963:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
1964:../Dave/Generated/UCPROBE/lib_str.c **** *
1965:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1966:../Dave/Generated/UCPROBE/lib_str.c **** *
1967:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting
1968:../Dave/Generated/UCPROBE/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
1969:../Dave/Generated/UCPROBE/lib_str.c **** *
1970:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
1971:../Dave/Generated/UCPROBE/lib_str.c **** *
1972:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
1973:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 0
1974:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
1975:../Dave/Generated/UCPROBE/lib_str.c **** *
1976:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = ""                   See Note #6a
1977:../Dave/Generated/UCPROBE/lib_str.c **** *
1978:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of
1979:../Dave/Generated/UCPROBE/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
1980:../Dave/Generated/UCPROBE/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
1981:../Dave/Generated/UCPROBE/lib_str.c **** *
1982:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
1983:../Dave/Generated/UCPROBE/lib_str.c **** *
1984:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
1985:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 3
1986:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
1987:../Dave/Generated/UCPROBE/lib_str.c **** *
1988:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "???"                See Note #6b
1989:../Dave/Generated/UCPROBE/lib_str.c **** *
1990:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
1991:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
1992:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
1993:../Dave/Generated/UCPROBE/lib_str.c **** *
1994:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
1995:../Dave/Generated/UCPROBE/lib_str.c **** *
1996:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
1997:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
1998:../Dave/Generated/UCPROBE/lib_str.c **** *
1999:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) The number of leading characters is such that the total number of significa
2000:../Dave/Generated/UCPROBE/lib_str.c **** *                       integer digits plus the number of leading characters is equal to the reques
2001:../Dave/Generated/UCPROBE/lib_str.c **** *                       number of integer digits to format ('nbr_dig').
2002:../Dave/Generated/UCPROBE/lib_str.c **** *
2003:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2004:../Dave/Generated/UCPROBE/lib_str.c **** *
2005:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr       = 23456
2006:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig   = 7
2007:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base  = 10
2008:../Dave/Generated/UCPROBE/lib_str.c **** *                               lead_char = ' '
2009:../Dave/Generated/UCPROBE/lib_str.c **** *
2010:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr      = "  23456"
2011:../Dave/Generated/UCPROBE/lib_str.c **** *
2012:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2013:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2014:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2015:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2016:../Dave/Generated/UCPROBE/lib_str.c **** *
2017:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2018:../Dave/Generated/UCPROBE/lib_str.c **** *
2019:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2020:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2021:../Dave/Generated/UCPROBE/lib_str.c **** *
2022:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2023:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2024:../Dave/Generated/UCPROBE/lib_str.c **** *
2025:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2026:../Dave/Generated/UCPROBE/lib_str.c **** *
2027:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2028:../Dave/Generated/UCPROBE/lib_str.c **** *
2029:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2030:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2031:../Dave/Generated/UCPROBE/lib_str.c **** *
2032:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2033:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2034:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2035:../Dave/Generated/UCPROBE/lib_str.c **** *
2036:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2037:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
2038:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2039:../Dave/Generated/UCPROBE/lib_str.c **** *
2040:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2041:../Dave/Generated/UCPROBE/lib_str.c **** */
2042:../Dave/Generated/UCPROBE/lib_str.c **** 
2043:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32U (CPU_INT32U    nbr,
2044:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_dig,
2045:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_base,
2046:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR      lead_char,
2047:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2048:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   nul,
2049:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     *pstr)
2050:../Dave/Generated/UCPROBE/lib_str.c **** {
2051:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_fmt;
2052:../Dave/Generated/UCPROBE/lib_str.c **** 
2053:../Dave/Generated/UCPROBE/lib_str.c **** 
2054:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32(nbr,                            /* Fmt unsigned int into str.      
2055:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_dig,
2056:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_base,
2057:../Dave/Generated/UCPROBE/lib_str.c ****                                 DEF_NO,
2058:../Dave/Generated/UCPROBE/lib_str.c ****                                 lead_char,
2059:../Dave/Generated/UCPROBE/lib_str.c ****                                 lower_case,
2060:../Dave/Generated/UCPROBE/lib_str.c ****                                 nul,
2061:../Dave/Generated/UCPROBE/lib_str.c ****                                 pstr);
2062:../Dave/Generated/UCPROBE/lib_str.c **** 
2063:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_fmt);
2064:../Dave/Generated/UCPROBE/lib_str.c **** }
2065:../Dave/Generated/UCPROBE/lib_str.c **** 
2066:../Dave/Generated/UCPROBE/lib_str.c **** 
2067:../Dave/Generated/UCPROBE/lib_str.c **** /*
2068:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2069:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32S()
2070:../Dave/Generated/UCPROBE/lib_str.c **** *
2071:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit signed integer into a multi-digit character string.
2072:../Dave/Generated/UCPROBE/lib_str.c **** *
2073:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
2074:../Dave/Generated/UCPROBE/lib_str.c **** *
2075:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
2076:../Dave/Generated/UCPROBE/lib_str.c **** *
2077:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number of digits to format
2078:../Dave/Generated/UCPROBE/lib_str.c **** *
2079:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MIN + 1     Minimum number of 32-bit signed
2080:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MAX + 1     Maximum number of 32-bit signed
2081:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                   (plus 1 digit for possible nega
2082:../Dave/Generated/UCPROBE/lib_str.c **** *
2083:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
2084:../Dave/Generated/UCPROBE/lib_str.c **** *
2085:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number base :
2086:../Dave/Generated/UCPROBE/lib_str.c **** *
2087:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
2088:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
2089:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
2090:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
2091:../Dave/Generated/UCPROBE/lib_str.c **** *
2092:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
2093:../Dave/Generated/UCPROBE/lib_str.c **** *
2094:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2095:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
2096:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
2097:../Dave/Generated/UCPROBE/lib_str.c **** *
2098:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
2099:../Dave/Generated/UCPROBE/lib_str.c **** *
2100:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
2101:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
2102:../Dave/Generated/UCPROBE/lib_str.c **** *
2103:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2104:../Dave/Generated/UCPROBE/lib_str.c **** *
2105:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2106:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2107:../Dave/Generated/UCPROBE/lib_str.c **** *
2108:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2109:../Dave/Generated/UCPROBE/lib_str.c **** *
2110:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
2111:../Dave/Generated/UCPROBE/lib_str.c **** *
2112:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
2113:../Dave/Generated/UCPROBE/lib_str.c **** *
2114:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2115:../Dave/Generated/UCPROBE/lib_str.c **** *
2116:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting
2117:../Dave/Generated/UCPROBE/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
2118:../Dave/Generated/UCPROBE/lib_str.c **** *
2119:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2120:../Dave/Generated/UCPROBE/lib_str.c **** *
2121:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = -23456
2122:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  =  0
2123:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2124:../Dave/Generated/UCPROBE/lib_str.c **** *
2125:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = ""                   See Note #6a
2126:../Dave/Generated/UCPROBE/lib_str.c **** *
2127:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of
2128:../Dave/Generated/UCPROBE/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
2129:../Dave/Generated/UCPROBE/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
2130:../Dave/Generated/UCPROBE/lib_str.c **** *
2131:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2132:../Dave/Generated/UCPROBE/lib_str.c **** *
2133:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
2134:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 3
2135:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2136:../Dave/Generated/UCPROBE/lib_str.c **** *
2137:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "???"                See Note #6b
2138:../Dave/Generated/UCPROBE/lib_str.c **** *
2139:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) If the number to format ('nbr') is negative but the number of digits to for
2140:../Dave/Generated/UCPROBE/lib_str.c **** *                       ('nbr_dig') is equal to the number of significant integer digits of the num
2141:../Dave/Generated/UCPROBE/lib_str.c **** *                       to format ('nbr'); then an invalid string is formatted instead of truncatin
2142:../Dave/Generated/UCPROBE/lib_str.c **** *                       the negative sign.
2143:../Dave/Generated/UCPROBE/lib_str.c **** *
2144:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2145:../Dave/Generated/UCPROBE/lib_str.c **** *
2146:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = -23456
2147:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  =  5
2148:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2149:../Dave/Generated/UCPROBE/lib_str.c **** *
2150:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "?????"              See Note #6b
2151:../Dave/Generated/UCPROBE/lib_str.c **** *
2152:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
2153:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2154:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2155:../Dave/Generated/UCPROBE/lib_str.c **** *
2156:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2157:../Dave/Generated/UCPROBE/lib_str.c **** *
2158:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
2159:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
2160:../Dave/Generated/UCPROBE/lib_str.c **** *
2161:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2162:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2163:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2164:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
2165:../Dave/Generated/UCPROBE/lib_str.c **** *
2166:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
2167:../Dave/Generated/UCPROBE/lib_str.c **** *
2168:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456
2169:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
2170:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
2171:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2172:../Dave/Generated/UCPROBE/lib_str.c **** *
2173:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456"
2174:../Dave/Generated/UCPROBE/lib_str.c **** *
2175:../Dave/Generated/UCPROBE/lib_str.c **** *
2176:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456
2177:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   =  7
2178:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
2179:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2180:../Dave/Generated/UCPROBE/lib_str.c **** *
2181:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456"
2182:../Dave/Generated/UCPROBE/lib_str.c **** *
2183:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2184:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
2185:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2186:../Dave/Generated/UCPROBE/lib_str.c **** *
2187:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2188:../Dave/Generated/UCPROBE/lib_str.c **** *
2189:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
2190:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2191:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
2192:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
2193:../Dave/Generated/UCPROBE/lib_str.c **** *
2194:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-0023456"
2195:../Dave/Generated/UCPROBE/lib_str.c **** *
2196:../Dave/Generated/UCPROBE/lib_str.c **** *
2197:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
2198:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2199:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
2200:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
2201:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_NO
2202:../Dave/Generated/UCPROBE/lib_str.c **** *
2203:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-000ABCD"
2204:../Dave/Generated/UCPROBE/lib_str.c **** *
2205:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2206:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
2207:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2208:../Dave/Generated/UCPROBE/lib_str.c **** *
2209:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2210:../Dave/Generated/UCPROBE/lib_str.c **** *
2211:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
2212:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2213:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
2214:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
2215:../Dave/Generated/UCPROBE/lib_str.c **** *
2216:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "##-23456"
2217:../Dave/Generated/UCPROBE/lib_str.c **** *
2218:../Dave/Generated/UCPROBE/lib_str.c **** *
2219:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
2220:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2221:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
2222:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
2223:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_YES
2224:../Dave/Generated/UCPROBE/lib_str.c **** *
2225:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "###-abcd"
2226:../Dave/Generated/UCPROBE/lib_str.c **** *
2227:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2228:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2229:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2230:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2231:../Dave/Generated/UCPROBE/lib_str.c **** *
2232:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2233:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2234:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2235:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2236:../Dave/Generated/UCPROBE/lib_str.c **** *
2237:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2238:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2239:../Dave/Generated/UCPROBE/lib_str.c **** *
2240:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2241:../Dave/Generated/UCPROBE/lib_str.c **** *
2242:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2243:../Dave/Generated/UCPROBE/lib_str.c **** *
2244:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2245:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
2246:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2247:../Dave/Generated/UCPROBE/lib_str.c **** *
2248:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2249:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2250:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2251:../Dave/Generated/UCPROBE/lib_str.c **** *
2252:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2253:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
2254:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2255:../Dave/Generated/UCPROBE/lib_str.c **** *
2256:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2257:../Dave/Generated/UCPROBE/lib_str.c **** */
2258:../Dave/Generated/UCPROBE/lib_str.c **** 
2259:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32S (CPU_INT32S    nbr,
2260:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_dig,
2261:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_base,
2262:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR      lead_char,
2263:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2264:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   nul,
2265:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     *pstr)
2266:../Dave/Generated/UCPROBE/lib_str.c **** {
2267:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2268:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S    nbr_fmt;
2269:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2270:../Dave/Generated/UCPROBE/lib_str.c **** 
2271:../Dave/Generated/UCPROBE/lib_str.c **** 
2272:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr < 0) {                                              /* If nbr neg, ...                 
2273:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt = -nbr;                                         /* ... negate nbr.                 
2274:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg =  DEF_YES;
2275:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
2276:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt =  nbr;
2277:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg =  DEF_NO;
2278:../Dave/Generated/UCPROBE/lib_str.c ****     }
2279:../Dave/Generated/UCPROBE/lib_str.c **** 
2280:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32((CPU_INT32U)nbr_fmt,            /* Fmt signed int into str.        
2281:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_dig,
2282:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_base,
2283:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_neg,
2284:../Dave/Generated/UCPROBE/lib_str.c ****                                             lead_char,
2285:../Dave/Generated/UCPROBE/lib_str.c ****                                             lower_case,
2286:../Dave/Generated/UCPROBE/lib_str.c ****                                             nul,
2287:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr);
2288:../Dave/Generated/UCPROBE/lib_str.c **** 
2289:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_fmt);
2290:../Dave/Generated/UCPROBE/lib_str.c **** }
2291:../Dave/Generated/UCPROBE/lib_str.c **** 
2292:../Dave/Generated/UCPROBE/lib_str.c **** 
2293:../Dave/Generated/UCPROBE/lib_str.c **** /*
2294:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2295:../Dave/Generated/UCPROBE/lib_str.c **** *                                           Str_FmtNbr_32()
2296:../Dave/Generated/UCPROBE/lib_str.c **** *
2297:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format number into a multi-digit character string.
2298:../Dave/Generated/UCPROBE/lib_str.c **** *
2299:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number                         to format (see Note #1).
2300:../Dave/Generated/UCPROBE/lib_str.c **** *
2301:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of decimal       digits to format (see Note #2).
2302:../Dave/Generated/UCPROBE/lib_str.c **** *
2303:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dp          Number of decimal point digits to format.
2304:../Dave/Generated/UCPROBE/lib_str.c **** *
2305:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character (see Note #3) :
2306:../Dave/Generated/UCPROBE/lib_str.c **** *
2307:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2308:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
2309:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6d).
2310:../Dave/Generated/UCPROBE/lib_str.c **** *
2311:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2312:../Dave/Generated/UCPROBE/lib_str.c **** *
2313:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2314:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2315:../Dave/Generated/UCPROBE/lib_str.c **** *
2316:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2317:../Dave/Generated/UCPROBE/lib_str.c **** *
2318:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6c].
2319:../Dave/Generated/UCPROBE/lib_str.c **** *
2320:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
2321:../Dave/Generated/UCPROBE/lib_str.c **** *
2322:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2323:../Dave/Generated/UCPROBE/lib_str.c **** *
2324:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) The maximum accuracy for 32-bit floating-point numbers :
2325:../Dave/Generated/UCPROBE/lib_str.c **** *
2326:../Dave/Generated/UCPROBE/lib_str.c **** *
2327:../Dave/Generated/UCPROBE/lib_str.c **** *                                 Maximum Accuracy            log [Internal-Base ^ (Number-Internal
2328:../Dave/Generated/UCPROBE/lib_str.c **** *                           32-bit Floating-point Number  =  --------------------------------------
2329:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                             log [External-Base]
2330:../Dave/Generated/UCPROBE/lib_str.c **** *
2331:../Dave/Generated/UCPROBE/lib_str.c **** *                                                             log [2 ^ 24]
2332:../Dave/Generated/UCPROBE/lib_str.c **** *                                                         =  --------------
2333:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               log [10]
2334:../Dave/Generated/UCPROBE/lib_str.c **** *
2335:../Dave/Generated/UCPROBE/lib_str.c **** *                                                         <  7.225  Base-10 Digits
2336:../Dave/Generated/UCPROBE/lib_str.c **** *
2337:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
2338:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Internal-Base                   Internal number base of flo
2339:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           point numbers (i.e.  2)
2340:../Dave/Generated/UCPROBE/lib_str.c **** *                                       External-Base                   External number base of flo
2341:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           point numbers (i.e. 10)
2342:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Number-Internal-Base-Digits     Number of internal number b
2343:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           significant digits (i.e
2344:../Dave/Generated/UCPROBE/lib_str.c **** *
2345:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Some CPUs' &/or compilers' floating-point implementations MAY further reduc
2346:../Dave/Generated/UCPROBE/lib_str.c **** *                       maximum accuracy.
2347:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2348:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) If the total number of digits to format ('nbr_dig + nbr_dp') is zero; then 
2349:../Dave/Generated/UCPROBE/lib_str.c **** *                       formatting is performed except possible NULL-termination of the string (see
2350:../Dave/Generated/UCPROBE/lib_str.c **** *
2351:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2352:../Dave/Generated/UCPROBE/lib_str.c **** *
2353:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr     = -23456.789
2354:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig =  0
2355:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dp  =  0
2356:../Dave/Generated/UCPROBE/lib_str.c **** *
2357:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr    = ""                        See Note #7a
2358:../Dave/Generated/UCPROBE/lib_str.c **** *
2359:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is less than the number o
2360:../Dave/Generated/UCPROBE/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
2361:../Dave/Generated/UCPROBE/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
2362:../Dave/Generated/UCPROBE/lib_str.c **** *
2363:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2364:../Dave/Generated/UCPROBE/lib_str.c **** *
2365:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = 23456.789
2366:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig = 3
2367:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  = 2
2368:../Dave/Generated/UCPROBE/lib_str.c **** *
2369:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "??????"              See Note #7d
2370:../Dave/Generated/UCPROBE/lib_str.c **** *
2371:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) If the number to format ('nbr') is negative but the number of digits to
2372:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
2373:../Dave/Generated/UCPROBE/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
2374:../Dave/Generated/UCPROBE/lib_str.c **** *                           the negative sign.
2375:../Dave/Generated/UCPROBE/lib_str.c **** *
2376:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2377:../Dave/Generated/UCPROBE/lib_str.c **** *
2378:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = -23456.789
2379:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig =  5
2380:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  =  2
2381:../Dave/Generated/UCPROBE/lib_str.c **** *
2382:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "????????"            See Note #7d
2383:../Dave/Generated/UCPROBE/lib_str.c **** *
2384:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of significa
2385:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits is zero, & the number of digits to format ('nbr_dig') is
2386:../Dave/Generated/UCPROBE/lib_str.c **** *                           but the number of decimal point digits to format ('nbr_dp') is zero; th
2387:../Dave/Generated/UCPROBE/lib_str.c **** *                           an invalid string is formatted instead of truncating the negative sign.
2388:../Dave/Generated/UCPROBE/lib_str.c **** *
2389:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2390:../Dave/Generated/UCPROBE/lib_str.c **** *
2391:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = -0.7895
2392:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig =  1
2393:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  =  0
2394:../Dave/Generated/UCPROBE/lib_str.c **** *
2395:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "?"                   See Note #7d
2396:../Dave/Generated/UCPROBE/lib_str.c **** *
2397:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) (A) If the number to format ('nbr') is negative but the number of signi
2398:../Dave/Generated/UCPROBE/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2399:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2400:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero; then the negative sign immediately prefixes the decimal point
2401:../Dave/Generated/UCPROBE/lib_str.c **** *                               with NO decimal digits formatted, NOT even a single decimal digit o
2402:../Dave/Generated/UCPROBE/lib_str.c **** *
2403:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2404:../Dave/Generated/UCPROBE/lib_str.c **** *
2405:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr     = -0.7895
2406:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig =  0
2407:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp  =  2
2408:../Dave/Generated/UCPROBE/lib_str.c **** *
2409:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr    = "-.78"
2410:../Dave/Generated/UCPROBE/lib_str.c **** *
2411:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is positive but the number of signi
2412:../Dave/Generated/UCPROBE/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2413:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2414:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero; then a single decimal digit of '0' prefixes the decimal point
2415:../Dave/Generated/UCPROBE/lib_str.c **** *
2416:../Dave/Generated/UCPROBE/lib_str.c **** *                               This '0' digit is used whenever a negative sign is not formatted (s
2417:../Dave/Generated/UCPROBE/lib_str.c **** *                               Note #2b4A) so that the formatted string's decimal point is not flo
2418:../Dave/Generated/UCPROBE/lib_str.c **** *                               but fixed in the string as the 2nd character.
2419:../Dave/Generated/UCPROBE/lib_str.c **** *
2420:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2421:../Dave/Generated/UCPROBE/lib_str.c **** *
2422:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr     =  0.7895
2423:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig =  0
2424:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp  =  2
2425:../Dave/Generated/UCPROBE/lib_str.c **** *
2426:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr    = "0.78"
2427:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2428:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the total number of digits to format ('nbr_dig + nbr_dp') is greater
2429:../Dave/Generated/UCPROBE/lib_str.c **** *
2430:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) ... the maximum accuracy of the CPU's &/or compiler's 32-bit floati
2431:../Dave/Generated/UCPROBE/lib_str.c **** *                               numbers, digits following all significantly-accurate digits of the 
2432:../Dave/Generated/UCPROBE/lib_str.c **** *                               format ('nbr') will be inaccurate; ...
2433:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) ... the configured maximum accuracy ('LIB_STR_CFG_FP_MAX_NBR_DIG_SI
2434:../Dave/Generated/UCPROBE/lib_str.c **** *                               digits or decimal places following all significantly-accurate digit
2435:../Dave/Generated/UCPROBE/lib_str.c **** *                               number to format ('nbr') will be replaced & formatted with zeros ('
2436:../Dave/Generated/UCPROBE/lib_str.c **** *
2437:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2438:../Dave/Generated/UCPROBE/lib_str.c **** *
2439:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr                            = 123456789.012345
2440:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig                        = 9
2441:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp                         = 6
2442:../Dave/Generated/UCPROBE/lib_str.c **** *                                       LIB_STR_CFG_FP_MAX_NBR_DIG_SIG = 7
2443:../Dave/Generated/UCPROBE/lib_str.c **** *
2444:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr                           = "123456700.000000"
2445:../Dave/Generated/UCPROBE/lib_str.c **** *
2446:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Therefore, one or more least-significant digit(s) of the number to form
2447:../Dave/Generated/UCPROBE/lib_str.c **** *                           MAY be rounded & not necessarily truncated due to the inaccuracy of the
2448:../Dave/Generated/UCPROBE/lib_str.c **** *                           &/or compiler's floating-point implementation.
2449:../Dave/Generated/UCPROBE/lib_str.c **** *
2450:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #1.
2451:../Dave/Generated/UCPROBE/lib_str.c **** *
2452:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2453:../Dave/Generated/UCPROBE/lib_str.c **** *
2454:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2455:../Dave/Generated/UCPROBE/lib_str.c **** *
2456:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a base-10 digit, ...
2457:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
2458:../Dave/Generated/UCPROBE/lib_str.c **** *
2459:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2460:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2461:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2462:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
2463:../Dave/Generated/UCPROBE/lib_str.c **** *
2464:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
2465:../Dave/Generated/UCPROBE/lib_str.c **** *
2466:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456.789
2467:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
2468:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp    = 2
2469:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2470:../Dave/Generated/UCPROBE/lib_str.c **** *
2471:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456.78"
2472:../Dave/Generated/UCPROBE/lib_str.c **** *
2473:../Dave/Generated/UCPROBE/lib_str.c **** *
2474:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456.789
2475:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   =  7
2476:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp    =  2
2477:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2478:../Dave/Generated/UCPROBE/lib_str.c **** *
2479:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456.78"
2480:../Dave/Generated/UCPROBE/lib_str.c **** *
2481:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2482:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
2483:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2484:../Dave/Generated/UCPROBE/lib_str.c **** *
2485:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2486:../Dave/Generated/UCPROBE/lib_str.c **** *
2487:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr       = -23456.789
2488:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig   =  8
2489:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp    =  2
2490:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char = '0'
2491:../Dave/Generated/UCPROBE/lib_str.c **** *
2492:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr      = "-0023456.78"
2493:../Dave/Generated/UCPROBE/lib_str.c **** *
2494:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2495:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
2496:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2497:../Dave/Generated/UCPROBE/lib_str.c **** *
2498:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2499:../Dave/Generated/UCPROBE/lib_str.c **** *
2500:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr       = -23456.789
2501:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig   =  8
2502:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp    =  2
2503:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char = '#'
2504:../Dave/Generated/UCPROBE/lib_str.c **** *
2505:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr      = "##-23456.78"
2506:../Dave/Generated/UCPROBE/lib_str.c **** *
2507:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the integer value of the number to format is zero & ...
2508:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... the number of digits to format is greater than one ...
2509:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... OR  the number is NOT negative,                    ...
2510:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... but NO leading character available;                ...
2511:../Dave/Generated/UCPROBE/lib_str.c **** *                       (5) ... then one digit of '0' value is formatted.
2512:../Dave/Generated/UCPROBE/lib_str.c **** *
2513:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2514:../Dave/Generated/UCPROBE/lib_str.c **** *
2515:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2b4B.
2516:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2517:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2518:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2519:../Dave/Generated/UCPROBE/lib_str.c **** *
2520:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2521:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2522:../Dave/Generated/UCPROBE/lib_str.c **** *
2523:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2524:../Dave/Generated/UCPROBE/lib_str.c **** *
2525:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2526:../Dave/Generated/UCPROBE/lib_str.c **** *
2527:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2528:../Dave/Generated/UCPROBE/lib_str.c **** *                                                              'nbr_dp'           +
2529:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
2530:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 decimal point   +
2531:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2532:../Dave/Generated/UCPROBE/lib_str.c **** *
2533:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) String format terminates when :
2534:../Dave/Generated/UCPROBE/lib_str.c **** *
2535:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
2536:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
2537:../Dave/Generated/UCPROBE/lib_str.c **** *
2538:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Total number of digits to format ('nbr_dig + nbr_dp') is zero.
2539:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
2540:../Dave/Generated/UCPROBE/lib_str.c **** *
2541:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant
2542:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible
2543:../Dave/Generated/UCPROBE/lib_str.c **** *                           negative sign.
2544:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2545:../Dave/Generated/UCPROBE/lib_str.c **** *
2546:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Lead character is NOT a valid, printable character (see Note #3a).
2547:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2548:../Dave/Generated/UCPROBE/lib_str.c **** *
2549:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Number successfully formatted into character string array.
2550:../Dave/Generated/UCPROBE/lib_str.c **** *
2551:../Dave/Generated/UCPROBE/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
2552:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2553:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits ('nbr_dig') & number of decimal point digits ('nbr_dp') to for
2554:../Dave/Generated/UCPROBE/lib_str.c **** *
2555:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (a)    0 (NULL string)          ,  if 'nbr_dig' = 0 
2556:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2557:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {
2558:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (b)   'nbr_dig'                 ,  if 'nbr_dig' > 0 
2559:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2560:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {
2561:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {  (c)  ['nbr_dp'               +  ,  if 'nbr_dig' = 0 
2562:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {         1 (for decimal point) +        'nbr_dp'  > 0
2563:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {         1 (for negative sign) ]
2564:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {
2565:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (d)  ['nbr_dig'              +  ,  if 'nbr_dig' > 0 
2566:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {        'nbr_dp'               +        'nbr_dp'  > 0
2567:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {         1 (for decimal point) ]
2568:../Dave/Generated/UCPROBE/lib_str.c **** *
2569:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2570:../Dave/Generated/UCPROBE/lib_str.c **** */
2571:../Dave/Generated/UCPROBE/lib_str.c **** 
2572:../Dave/Generated/UCPROBE/lib_str.c **** #if (LIB_STR_CFG_FP_EN == DEF_ENABLED)
2573:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_32 (CPU_FP32      nbr,
2574:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_INT08U    nbr_dig,
2575:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_INT08U    nbr_dp,
2576:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_CHAR      lead_char,
2577:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_BOOLEAN   nul,
2578:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_CHAR     *pstr)
2579:../Dave/Generated/UCPROBE/lib_str.c **** {
2580:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2581:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_DATA      i;
2582:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      nbr_fmt;
2583:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      nbr_log;
2584:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_shiftd;
2585:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16U    nbr_dig_max;
2586:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16U    nbr_dig_sig;
2587:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
2588:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    dig_val;
2589:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      dig_exp;
2590:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      dp_exp;
2591:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
2592:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_fmtd;
2593:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
2594:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
2595:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   print_char;
2596:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2597:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
2598:../Dave/Generated/UCPROBE/lib_str.c **** 
2599:../Dave/Generated/UCPROBE/lib_str.c **** 
2600:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
2601:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
2602:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
2603:../Dave/Generated/UCPROBE/lib_str.c ****     }
2604:../Dave/Generated/UCPROBE/lib_str.c **** 
2605:../Dave/Generated/UCPROBE/lib_str.c ****     dig_exp     =  1.0f;
2606:../Dave/Generated/UCPROBE/lib_str.c ****     fmt_invalid =  DEF_NO;
2607:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = (lead_char == '0') ? DEF_YES : DEF_NO;        /* Chk if lead char a '0' dig (see 
2608:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_fmt     =  0.0f;
2609:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_neg     =  DEF_NO;
2610:../Dave/Generated/UCPROBE/lib_str.c **** 
2611:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_dig < 1) && (nbr_dp < 1)) {                        /* If nbr digs/dps = 0, ...        
2612:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
2613:../Dave/Generated/UCPROBE/lib_str.c ****     }
2614:../Dave/Generated/UCPROBE/lib_str.c **** 
2615:../Dave/Generated/UCPROBE/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
2616:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
2617:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable  (see
2618:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str         (see
2619:../Dave/Generated/UCPROBE/lib_str.c **** 
2620:../Dave/Generated/UCPROBE/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 dig.    
2621:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_dig = ASCII_IsDig(lead_char);
2622:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If  lead char     non-0 dig (see
2623:../Dave/Generated/UCPROBE/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str         (see
2624:../Dave/Generated/UCPROBE/lib_str.c ****             }
2625:../Dave/Generated/UCPROBE/lib_str.c ****         }
2626:../Dave/Generated/UCPROBE/lib_str.c ****     }
2627:../Dave/Generated/UCPROBE/lib_str.c **** 
2628:../Dave/Generated/UCPROBE/lib_str.c **** 
2629:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
2630:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = pstr;
2631:../Dave/Generated/UCPROBE/lib_str.c **** 
2632:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid == DEF_NO) {
2633:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr < 0.0f) {                                       /* If nbr neg, ...                 
2634:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_fmt      = -nbr;                                /* ... negate nbr.                 
2635:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_sign =  1u;
2636:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg      =  DEF_YES;
2637:../Dave/Generated/UCPROBE/lib_str.c ****         } else {
2638:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_fmt      =  nbr;
2639:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_sign =  0u;
2640:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg      =  DEF_NO;
2641:../Dave/Generated/UCPROBE/lib_str.c ****         }
2642:../Dave/Generated/UCPROBE/lib_str.c **** 
2643:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_log     = nbr_fmt;
2644:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_max = 0u;
2645:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= 1.0f) {                               /* While base-10 digs avail, ...   
2646:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
2647:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= 10.0f;
2648:../Dave/Generated/UCPROBE/lib_str.c ****         }
2649:../Dave/Generated/UCPROBE/lib_str.c **** 
2650:../Dave/Generated/UCPROBE/lib_str.c ****         if (((nbr_dig >= (nbr_dig_max + nbr_neg_sign)) ||       /* If req'd nbr digs >= (max nbr di
2651:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_dig_max < 1))                        &&       /* .. or NO nbr digs,              
2652:../Dave/Generated/UCPROBE/lib_str.c ****             ((nbr_dig     > 1) ||                               /* .. but NOT [(req'd nbr dig = 1) 
2653:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_dp      > 0) ||                               /* ..          (req'd nbr dp  = 0) 
2654:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_neg == DEF_NO))) {                            /* ..          (      nbr neg    )]
2655:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* .. prepare nbr digs to fmt.     
2656:../Dave/Generated/UCPROBE/lib_str.c ****             for (i = 1u; i < nbr_dig; i++) {
2657:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_exp *= 10.0f;
2658:../Dave/Generated/UCPROBE/lib_str.c ****             }
2659:../Dave/Generated/UCPROBE/lib_str.c **** 
2660:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd   =  DEF_NO;
2661:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_sig    =  0u;
2662:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_fmtd =  DEF_NO;
2663:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
2664:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
2665:../Dave/Generated/UCPROBE/lib_str.c ****         }
2666:../Dave/Generated/UCPROBE/lib_str.c ****     }
2667:../Dave/Generated/UCPROBE/lib_str.c **** 
2668:../Dave/Generated/UCPROBE/lib_str.c **** 
2669:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
2670:../Dave/Generated/UCPROBE/lib_str.c ****     for (i = nbr_dig; i > 0; i--) {                             /* Fmt str for desired nbr digs :  
2671:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
2672:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_dig_sig < LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) { /* If nbr sig digs < max, fmt str d
2673:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_shiftd = (CPU_INT32U)(nbr_fmt / dig_exp);
2674:../Dave/Generated/UCPROBE/lib_str.c ****                 if ((nbr_shiftd > 0) ||                         /* If shifted nbr > 0              
2675:../Dave/Generated/UCPROBE/lib_str.c ****                     (i == 1u)) {                                /* ... OR on one's dig to fmt (see 
2676:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
2677:../Dave/Generated/UCPROBE/lib_str.c ****                     if ((nbr_neg      == DEF_YES) &&            /* If  nbr neg                     
2678:../Dave/Generated/UCPROBE/lib_str.c ****                         (nbr_neg_fmtd == DEF_NO )) {            /* ... but neg sign NOT yet fmt'd; 
2679:../Dave/Generated/UCPROBE/lib_str.c **** 
2680:../Dave/Generated/UCPROBE/lib_str.c ****                         if (lead_char_fmtd == DEF_YES) {        /* ... & if lead char(s) fmt'd,    
2681:../Dave/Generated/UCPROBE/lib_str.c ****                             pstr_fmt--;                         /* ... replace last lead char w/   
2682:../Dave/Generated/UCPROBE/lib_str.c ****                         }
2683:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++   = '-';                     /* ... prepend neg sign (see Notes 
2684:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr_neg_fmtd = DEF_YES;
2685:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2686:../Dave/Generated/UCPROBE/lib_str.c **** 
2687:../Dave/Generated/UCPROBE/lib_str.c ****                     if (nbr_shiftd > 0) {                       /* If shifted nbr > 0,        ...  
2688:../Dave/Generated/UCPROBE/lib_str.c ****                         dig_val    = (CPU_INT08U)(nbr_shiftd % 10u);
2689:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++ = (CPU_CHAR  )(dig_val    + '0');
2690:../Dave/Generated/UCPROBE/lib_str.c **** 
2691:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr_dig_sig++;                          /* ... inc nbr sig digs;      ...  
2692:../Dave/Generated/UCPROBE/lib_str.c **** 
2693:../Dave/Generated/UCPROBE/lib_str.c ****                     } else if ((nbr_dig > 1) ||                 /* ... else if req'd digs > 1 ...  
2694:../Dave/Generated/UCPROBE/lib_str.c ****                                (nbr_neg == DEF_NO)) {           /* ... or non-neg nbr,        ...  
2695:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++ = '0';                       /* ... fmt one '0' char (see Note #
2696:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2697:../Dave/Generated/UCPROBE/lib_str.c **** 
2698:../Dave/Generated/UCPROBE/lib_str.c ****                 } else if ((nbr_neg      == DEF_YES) &&         /* ... else if nbr neg             
2699:../Dave/Generated/UCPROBE/lib_str.c ****                            (lead_char_0  == DEF_YES) &&         /* ... & lead char a '0' dig       
2700:../Dave/Generated/UCPROBE/lib_str.c ****                            (nbr_neg_fmtd == DEF_NO )) {         /* ... but neg sign NOT yet fmt'd, 
2701:../Dave/Generated/UCPROBE/lib_str.c **** 
2702:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++   = '-';                         /* ... prepend neg sign (see Note #
2703:../Dave/Generated/UCPROBE/lib_str.c ****                     nbr_neg_fmtd = DEF_YES;
2704:../Dave/Generated/UCPROBE/lib_str.c **** 
2705:../Dave/Generated/UCPROBE/lib_str.c ****                 } else if (lead_char != (CPU_CHAR)'\0') {       /* ... else if avail,              
2706:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++     = lead_char;                 /* ... fmt lead char.              
2707:../Dave/Generated/UCPROBE/lib_str.c ****                     lead_char_fmtd = DEF_YES;
2708:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2709:../Dave/Generated/UCPROBE/lib_str.c **** 
2710:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_exp /= 10.0f;                               /* Shift to next least-sig dig.    
2711:../Dave/Generated/UCPROBE/lib_str.c **** 
2712:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* ... else append non-sig 0's (see
2713:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt++ = '0';
2714:../Dave/Generated/UCPROBE/lib_str.c ****             }
2715:../Dave/Generated/UCPROBE/lib_str.c **** 
2716:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2717:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '?';
2718:../Dave/Generated/UCPROBE/lib_str.c ****         }
2719:../Dave/Generated/UCPROBE/lib_str.c ****     }
2720:../Dave/Generated/UCPROBE/lib_str.c **** 
2721:../Dave/Generated/UCPROBE/lib_str.c **** 
2722:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_dp > 0) {                                           /* Fmt str for desired nbr dp :    
2723:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_dig < 1) {                                      /* If NO digs fmt'd;               
2724:../Dave/Generated/UCPROBE/lib_str.c ****             if (fmt_invalid == DEF_NO) {                        /* ... nbr fmt valid,              
2725:../Dave/Generated/UCPROBE/lib_str.c ****                 if ((nbr_neg      == DEF_YES) &&                /* ... nbr neg                     
2726:../Dave/Generated/UCPROBE/lib_str.c ****                     (nbr_neg_fmtd == DEF_NO )) {                /* ... but neg sign NOT yet fmt'd, 
2727:../Dave/Generated/UCPROBE/lib_str.c ****                     *pstr_fmt++ = '-';                          /* ... prepend neg sign (see Notes 
2728:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {                                        /* ... else prepend 1 dig of '0' (s
2729:../Dave/Generated/UCPROBE/lib_str.c ****                     *pstr_fmt++ = '0';
2730:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2731:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* ... else fmt '?' for invalid str
2732:../Dave/Generated/UCPROBE/lib_str.c ****                 *pstr_fmt++ = '?';
2733:../Dave/Generated/UCPROBE/lib_str.c ****             }
2734:../Dave/Generated/UCPROBE/lib_str.c ****         }
2735:../Dave/Generated/UCPROBE/lib_str.c **** 
2736:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {                            /* If nbr fmt valid, ...           
2737:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '.';                                   /* ... append dp prior to dp conver
2738:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2739:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '?';
2740:../Dave/Generated/UCPROBE/lib_str.c ****         }
2741:../Dave/Generated/UCPROBE/lib_str.c **** 
2742:../Dave/Generated/UCPROBE/lib_str.c ****         dp_exp = 10.0f;
2743:../Dave/Generated/UCPROBE/lib_str.c ****         for (i = 0u; i < nbr_dp; i++) {
2744:../Dave/Generated/UCPROBE/lib_str.c ****             if (fmt_invalid == DEF_NO) {
2745:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* If nbr sig digs < max, fmt str d
2746:../Dave/Generated/UCPROBE/lib_str.c ****                 if (nbr_dig_sig <  LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) {
2747:../Dave/Generated/UCPROBE/lib_str.c ****                     nbr_shiftd  = (CPU_INT32U)(nbr_fmt * dp_exp);
2748:../Dave/Generated/UCPROBE/lib_str.c ****                     dig_val     = (CPU_INT08U)(nbr_shiftd % 10u);
2749:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++  = (CPU_CHAR  )(dig_val    + '0');
2750:../Dave/Generated/UCPROBE/lib_str.c ****                     dp_exp     *=  10.0f;                       /* Shift to next least-sig dp.     
2751:../Dave/Generated/UCPROBE/lib_str.c **** 
2752:../Dave/Generated/UCPROBE/lib_str.c ****                     if ((nbr_shiftd  > 0) ||                    /* If shifted nbr > 0              
2753:../Dave/Generated/UCPROBE/lib_str.c ****                         (nbr_dig_sig > 0)) {                    /* ... OR  > 0 sig digs already fmt
2754:../Dave/Generated/UCPROBE/lib_str.c ****                          nbr_dig_sig++;                         /* ... inc nbr sig digs.           
2755:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2756:../Dave/Generated/UCPROBE/lib_str.c **** 
2757:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {                                        /* ... else append non-sig 0's (see
2758:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++ = '0';
2759:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2760:../Dave/Generated/UCPROBE/lib_str.c **** 
2761:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* Else fmt '?' for invalid str (se
2762:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt++ = '?';
2763:../Dave/Generated/UCPROBE/lib_str.c ****             }
2764:../Dave/Generated/UCPROBE/lib_str.c ****         }
2765:../Dave/Generated/UCPROBE/lib_str.c ****     }
2766:../Dave/Generated/UCPROBE/lib_str.c **** 
2767:../Dave/Generated/UCPROBE/lib_str.c **** 
2768:../Dave/Generated/UCPROBE/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
2769:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
2770:../Dave/Generated/UCPROBE/lib_str.c ****     }
2771:../Dave/Generated/UCPROBE/lib_str.c **** 
2772:../Dave/Generated/UCPROBE/lib_str.c **** 
2773:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
2774:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
2775:../Dave/Generated/UCPROBE/lib_str.c ****     }
2776:../Dave/Generated/UCPROBE/lib_str.c **** 
2777:../Dave/Generated/UCPROBE/lib_str.c **** 
2778:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
2779:../Dave/Generated/UCPROBE/lib_str.c **** }
2780:../Dave/Generated/UCPROBE/lib_str.c **** #endif
2781:../Dave/Generated/UCPROBE/lib_str.c **** 
2782:../Dave/Generated/UCPROBE/lib_str.c **** 
2783:../Dave/Generated/UCPROBE/lib_str.c **** /*
2784:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2785:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32U()
2786:../Dave/Generated/UCPROBE/lib_str.c **** *
2787:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit unsigned integer from string.
2788:../Dave/Generated/UCPROBE/lib_str.c **** *
2789:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
2790:../Dave/Generated/UCPROBE/lib_str.c **** *
2791:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
2792:../Dave/Generated/UCPROBE/lib_str.c **** *
2793:../Dave/Generated/UCPROBE/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
2794:../Dave/Generated/UCPROBE/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
2795:../Dave/Generated/UCPROBE/lib_str.c **** *                               (b) Return a pointer to 'pstr',
2796:../Dave/Generated/UCPROBE/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
2797:../Dave/Generated/UCPROBE/lib_str.c **** *
2798:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
2799:../Dave/Generated/UCPROBE/lib_str.c **** *
2800:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
2801:../Dave/Generated/UCPROBE/lib_str.c **** *
2802:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
2803:../Dave/Generated/UCPROBE/lib_str.c **** *
2804:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
2805:../Dave/Generated/UCPROBE/lib_str.c **** *
2806:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2807:../Dave/Generated/UCPROBE/lib_str.c **** *
2808:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
2809:../Dave/Generated/UCPROBE/lib_str.c **** *
2810:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : DESCRIPTION' states tha
2811:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
2812:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type unsigned long ... representation" :
2813:../Dave/Generated/UCPROBE/lib_str.c **** *
2814:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
2815:../Dave/Generated/UCPROBE/lib_str.c **** *
2816:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
2817:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
2818:../Dave/Generated/UCPROBE/lib_str.c **** *
2819:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
2820:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
2821:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
2822:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
2823:../Dave/Generated/UCPROBE/lib_str.c **** *
2824:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
2825:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
2826:../Dave/Generated/UCPROBE/lib_str.c **** *
2827:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
2828:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
2829:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
2830:../Dave/Generated/UCPROBE/lib_str.c **** *
2831:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
2832:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
2833:../Dave/Generated/UCPROBE/lib_str.c **** *
2834:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
2835:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
2836:../Dave/Generated/UCPROBE/lib_str.c **** *
2837:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
2838:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
2839:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
2840:../Dave/Generated/UCPROBE/lib_str.c **** *
2841:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
2842:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
2843:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
2844:../Dave/Generated/UCPROBE/lib_str.c **** *
2845:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
2846:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
2847:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
2848:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
2849:../Dave/Generated/UCPROBE/lib_str.c **** *
2850:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
2851:../Dave/Generated/UCPROBE/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
2852:../Dave/Generated/UCPROBE/lib_str.c **** *
2853:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
2854:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
2855:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
2856:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
2857:../Dave/Generated/UCPROBE/lib_str.c **** *
2858:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
2859:../Dave/Generated/UCPROBE/lib_str.c **** *
2860:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
2861:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.
2862:../Dave/Generated/UCPROBE/lib_str.c **** *
2863:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
2864:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
2865:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
2866:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2867:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an unsig
2868:../Dave/Generated/UCPROBE/lib_str.c **** *
2869:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
2870:../Dave/Generated/UCPROBE/lib_str.c **** *
2871:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion [is] performed"; ...
2872:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') [is] stored in the object pointed 
2873:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
2874:../Dave/Generated/UCPROBE/lib_str.c **** *
2875:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
2876:../Dave/Generated/UCPROBE/lib_str.c **** *
2877:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
2878:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
2879:../Dave/Generated/UCPROBE/lib_str.c **** *
2880:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
2881:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
2882:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
2883:../Dave/Generated/UCPROBE/lib_str.c **** *
2884:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
2885:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
2886:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
2887:../Dave/Generated/UCPROBE/lib_str.c **** *
2888:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : RETURN VALU
2889:../Dave/Generated/UCPROBE/lib_str.c **** *
2890:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
2891:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
2892:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ... shall be returned."
2893:../Dave/Generated/UCPROBE/lib_str.c **** *
2894:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
2895:../Dave/Generated/UCPROBE/lib_str.c **** *
2896:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2897:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
2898:../Dave/Generated/UCPROBE/lib_str.c **** *
2899:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
2900:../Dave/Generated/UCPROBE/lib_str.c **** *
2901:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
2902:../Dave/Generated/UCPROBE/lib_str.c **** *
2903:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2904:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
2905:../Dave/Generated/UCPROBE/lib_str.c **** *
2906:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
2907:../Dave/Generated/UCPROBE/lib_str.c **** *
2908:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
2909:../Dave/Generated/UCPROBE/lib_str.c **** *
2910:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
2911:../Dave/Generated/UCPROBE/lib_str.c **** *
2912:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
2913:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
2914:../Dave/Generated/UCPROBE/lib_str.c **** *
2915:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
2916:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
2917:../Dave/Generated/UCPROBE/lib_str.c **** *
2918:../Dave/Generated/UCPROBE/lib_str.c **** *
2919:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
2920:../Dave/Generated/UCPROBE/lib_str.c **** *
2921:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
2922:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2923:../Dave/Generated/UCPROBE/lib_str.c **** *
2924:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2925:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
2926:../Dave/Generated/UCPROBE/lib_str.c **** *
2927:../Dave/Generated/UCPROBE/lib_str.c **** *
2928:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
2929:../Dave/Generated/UCPROBE/lib_str.c **** *
2930:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
2931:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
2932:../Dave/Generated/UCPROBE/lib_str.c **** *
2933:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2934:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
2935:../Dave/Generated/UCPROBE/lib_str.c **** *
2936:../Dave/Generated/UCPROBE/lib_str.c **** *
2937:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
2938:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
2939:../Dave/Generated/UCPROBE/lib_str.c **** *
2940:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
2941:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
2942:../Dave/Generated/UCPROBE/lib_str.c **** *
2943:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2944:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
2945:../Dave/Generated/UCPROBE/lib_str.c **** *
2946:../Dave/Generated/UCPROBE/lib_str.c **** *
2947:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
2948:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
2949:../Dave/Generated/UCPROBE/lib_str.c **** *
2950:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
2951:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
2952:../Dave/Generated/UCPROBE/lib_str.c **** *
2953:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2954:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
2955:../Dave/Generated/UCPROBE/lib_str.c **** *
2956:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2957:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
2958:../Dave/Generated/UCPROBE/lib_str.c **** *
2959:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
2960:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2961:../Dave/Generated/UCPROBE/lib_str.c **** *
2962:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
2963:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
2964:../Dave/Generated/UCPROBE/lib_str.c **** *
2965:../Dave/Generated/UCPROBE/lib_str.c **** *
2966:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Invalid negative unsigned parse string :
2967:../Dave/Generated/UCPROBE/lib_str.c **** *
2968:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
2969:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2970:../Dave/Generated/UCPROBE/lib_str.c **** *
2971:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 0
2972:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "  -12345678901234567890*123456"
2973:../Dave/Generated/UCPROBE/lib_str.c **** *
2974:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2975:../Dave/Generated/UCPROBE/lib_str.c **** */
2976:../Dave/Generated/UCPROBE/lib_str.c **** 
2977:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT32U  Str_ParseNbr_Int32U (const  CPU_CHAR     *pstr,
2978:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_CHAR    **pstr_next,
2979:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_INT08U    nbr_base)
2980:../Dave/Generated/UCPROBE/lib_str.c **** {
2981:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U  nbr;
2982:../Dave/Generated/UCPROBE/lib_str.c **** 
2983:../Dave/Generated/UCPROBE/lib_str.c **** 
2984:../Dave/Generated/UCPROBE/lib_str.c ****     nbr = Str_ParseNbr_Int32(               pstr,               /* Parse/convert str ...           
2985:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr_next,
2986:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_base,
2987:../Dave/Generated/UCPROBE/lib_str.c ****                                             DEF_NO,             /* ... as unsigned int (see Note #2
2988:../Dave/Generated/UCPROBE/lib_str.c ****                              (CPU_BOOLEAN *)0);
2989:../Dave/Generated/UCPROBE/lib_str.c **** 
2990:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
2991:../Dave/Generated/UCPROBE/lib_str.c **** }
2992:../Dave/Generated/UCPROBE/lib_str.c **** 
2993:../Dave/Generated/UCPROBE/lib_str.c **** 
2994:../Dave/Generated/UCPROBE/lib_str.c **** /*
2995:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2996:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32S()
2997:../Dave/Generated/UCPROBE/lib_str.c **** *
2998:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit signed integer from string.
2999:../Dave/Generated/UCPROBE/lib_str.c **** *
3000:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
3001:../Dave/Generated/UCPROBE/lib_str.c **** *
3002:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
3003:../Dave/Generated/UCPROBE/lib_str.c **** *
3004:../Dave/Generated/UCPROBE/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
3005:../Dave/Generated/UCPROBE/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
3006:../Dave/Generated/UCPROBE/lib_str.c **** *                               (b) Return a pointer to 'pstr',
3007:../Dave/Generated/UCPROBE/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
3008:../Dave/Generated/UCPROBE/lib_str.c **** *
3009:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
3010:../Dave/Generated/UCPROBE/lib_str.c **** *
3011:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO over- or underflow (see Note #2a3A).
3012:../Dave/Generated/UCPROBE/lib_str.c **** *
3013:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32S_MIN_VAL, if integer parsed but negatively underflowed (see Note #2a3A1a
3014:../Dave/Generated/UCPROBE/lib_str.c **** *
3015:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but positively overflowed  (see Note #2a3A1b
3016:../Dave/Generated/UCPROBE/lib_str.c **** *
3017:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                                    (see Note #2a3B).
3018:../Dave/Generated/UCPROBE/lib_str.c **** *
3019:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
3020:../Dave/Generated/UCPROBE/lib_str.c **** *
3021:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3022:../Dave/Generated/UCPROBE/lib_str.c **** *
3023:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3024:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3025:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type long ... representation" :
3026:../Dave/Generated/UCPROBE/lib_str.c **** *
3027:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3028:../Dave/Generated/UCPROBE/lib_str.c **** *
3029:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3030:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
3031:../Dave/Generated/UCPROBE/lib_str.c **** *
3032:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3033:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3034:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3035:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3036:../Dave/Generated/UCPROBE/lib_str.c **** *
3037:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3038:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3039:../Dave/Generated/UCPROBE/lib_str.c **** *
3040:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3041:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3042:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
3043:../Dave/Generated/UCPROBE/lib_str.c **** *
3044:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3045:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
3046:../Dave/Generated/UCPROBE/lib_str.c **** *
3047:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3048:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3049:../Dave/Generated/UCPROBE/lib_str.c **** *
3050:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3051:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3052:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3053:../Dave/Generated/UCPROBE/lib_str.c **** *
3054:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3055:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3056:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3057:../Dave/Generated/UCPROBE/lib_str.c **** *
3058:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3059:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3060:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3061:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
3062:../Dave/Generated/UCPROBE/lib_str.c **** *
3063:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3064:../Dave/Generated/UCPROBE/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
3065:../Dave/Generated/UCPROBE/lib_str.c **** *
3066:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3067:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3068:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3069:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3070:../Dave/Generated/UCPROBE/lib_str.c **** *
3071:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3072:../Dave/Generated/UCPROBE/lib_str.c **** *
3073:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
3074:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.
3075:../Dave/Generated/UCPROBE/lib_str.c **** *
3076:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3077:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3078:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3079:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3080:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3081:../Dave/Generated/UCPROBE/lib_str.c **** *
3082:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3083:../Dave/Generated/UCPROBE/lib_str.c **** *
3084:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion is performed"; ...
3085:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3086:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3087:../Dave/Generated/UCPROBE/lib_str.c **** *
3088:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3089:../Dave/Generated/UCPROBE/lib_str.c **** *
3090:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3091:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3092:../Dave/Generated/UCPROBE/lib_str.c **** *
3093:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3094:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3095:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3096:../Dave/Generated/UCPROBE/lib_str.c **** *
3097:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3098:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3099:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
3100:../Dave/Generated/UCPROBE/lib_str.c **** *
3101:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3102:../Dave/Generated/UCPROBE/lib_str.c **** *
3103:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3104:../Dave/Generated/UCPROBE/lib_str.c **** *
3105:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3106:../Dave/Generated/UCPROBE/lib_str.c **** *                                    of the following "shall be returned" :
3107:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "{LONG_MIN}" or ...
3108:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "{LONG_MAX}"
3109:../Dave/Generated/UCPROBE/lib_str.c **** *
3110:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3111:../Dave/Generated/UCPROBE/lib_str.c **** *
3112:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3113:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
3114:../Dave/Generated/UCPROBE/lib_str.c **** *
3115:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3116:../Dave/Generated/UCPROBE/lib_str.c **** *
3117:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3118:../Dave/Generated/UCPROBE/lib_str.c **** *
3119:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3120:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
3121:../Dave/Generated/UCPROBE/lib_str.c **** *
3122:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3123:../Dave/Generated/UCPROBE/lib_str.c **** *
3124:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3125:../Dave/Generated/UCPROBE/lib_str.c **** *
3126:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
3127:../Dave/Generated/UCPROBE/lib_str.c **** *
3128:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3129:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3130:../Dave/Generated/UCPROBE/lib_str.c **** *
3131:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
3132:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
3133:../Dave/Generated/UCPROBE/lib_str.c **** *
3134:../Dave/Generated/UCPROBE/lib_str.c **** *
3135:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
3136:../Dave/Generated/UCPROBE/lib_str.c **** *
3137:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
3138:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3139:../Dave/Generated/UCPROBE/lib_str.c **** *
3140:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3141:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3142:../Dave/Generated/UCPROBE/lib_str.c **** *
3143:../Dave/Generated/UCPROBE/lib_str.c **** *
3144:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3145:../Dave/Generated/UCPROBE/lib_str.c **** *
3146:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3147:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3148:../Dave/Generated/UCPROBE/lib_str.c **** *
3149:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3150:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3151:../Dave/Generated/UCPROBE/lib_str.c **** *
3152:../Dave/Generated/UCPROBE/lib_str.c **** *
3153:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3154:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
3155:../Dave/Generated/UCPROBE/lib_str.c **** *
3156:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3157:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3158:../Dave/Generated/UCPROBE/lib_str.c **** *
3159:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3160:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3161:../Dave/Generated/UCPROBE/lib_str.c **** *
3162:../Dave/Generated/UCPROBE/lib_str.c **** *
3163:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3164:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
3165:../Dave/Generated/UCPROBE/lib_str.c **** *
3166:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
3167:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3168:../Dave/Generated/UCPROBE/lib_str.c **** *
3169:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3170:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
3171:../Dave/Generated/UCPROBE/lib_str.c **** *
3172:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3173:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
3174:../Dave/Generated/UCPROBE/lib_str.c **** *
3175:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3176:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3177:../Dave/Generated/UCPROBE/lib_str.c **** *
3178:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MAX_VAL
3179:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3180:../Dave/Generated/UCPROBE/lib_str.c **** *
3181:../Dave/Generated/UCPROBE/lib_str.c **** *
3182:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Parse string integer underflow :
3183:../Dave/Generated/UCPROBE/lib_str.c **** *
3184:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3185:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3186:../Dave/Generated/UCPROBE/lib_str.c **** *
3187:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3188:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3189:../Dave/Generated/UCPROBE/lib_str.c **** *
3190:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3191:../Dave/Generated/UCPROBE/lib_str.c **** */
3192:../Dave/Generated/UCPROBE/lib_str.c **** 
3193:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT32S  Str_ParseNbr_Int32S (const  CPU_CHAR     *pstr,
3194:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_CHAR    **pstr_next,
3195:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_INT08U    nbr_base)
3196:../Dave/Generated/UCPROBE/lib_str.c **** {
3197:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S   nbr;
3198:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U   nbr_abs;
3199:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN  nbr_neg;
3200:../Dave/Generated/UCPROBE/lib_str.c **** 
3201:../Dave/Generated/UCPROBE/lib_str.c **** 
3202:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_abs = Str_ParseNbr_Int32(pstr,                          /* Parse/convert str ...           
3203:../Dave/Generated/UCPROBE/lib_str.c ****                                  pstr_next,
3204:../Dave/Generated/UCPROBE/lib_str.c ****                                  nbr_base,
3205:../Dave/Generated/UCPROBE/lib_str.c ****                                  DEF_YES,                       /* ... as signed int (see Note #2a2
3206:../Dave/Generated/UCPROBE/lib_str.c ****                                 &nbr_neg);
3207:../Dave/Generated/UCPROBE/lib_str.c **** 
3208:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_neg == DEF_NO) {                                    /* Chk for neg nbr & ovf/undf (see 
3209:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
3210:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     :  (CPU_INT32S)nbr_abs;
3211:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
3212:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U)-DEF_INT_32S_MIN_VAL_ONES_CPL) ?  (CPU_INT32S)DEF_INT_32S_MIN_
3213:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     : -(CPU_INT32S)nbr_abs;
3214:../Dave/Generated/UCPROBE/lib_str.c ****     }
3215:../Dave/Generated/UCPROBE/lib_str.c **** 
3216:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
3217:../Dave/Generated/UCPROBE/lib_str.c **** }
3218:../Dave/Generated/UCPROBE/lib_str.c **** 
3219:../Dave/Generated/UCPROBE/lib_str.c **** 
3220:../Dave/Generated/UCPROBE/lib_str.c **** /*
3221:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3222:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3223:../Dave/Generated/UCPROBE/lib_str.c **** *                                           LOCAL FUNCTIONS
3224:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3225:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3226:../Dave/Generated/UCPROBE/lib_str.c **** */
3227:../Dave/Generated/UCPROBE/lib_str.c **** 
3228:../Dave/Generated/UCPROBE/lib_str.c **** /*
3229:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3230:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32()
3231:../Dave/Generated/UCPROBE/lib_str.c **** *
3232:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit integer into a multi-digit character string.
3233:../Dave/Generated/UCPROBE/lib_str.c **** *
3234:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
3235:../Dave/Generated/UCPROBE/lib_str.c **** *
3236:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
3237:../Dave/Generated/UCPROBE/lib_str.c **** *
3238:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
3239:../Dave/Generated/UCPROBE/lib_str.c **** *
3240:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_neg         Indicates whether number to format is negative :
3241:../Dave/Generated/UCPROBE/lib_str.c **** *               -------
3242:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Number is non-negative.
3243:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Number is     negative.
3244:../Dave/Generated/UCPROBE/lib_str.c **** *
3245:../Dave/Generated/UCPROBE/lib_str.c **** *                               Argument validated in Str_FmtNbr_Int32U(),
3246:../Dave/Generated/UCPROBE/lib_str.c **** *                                                     Str_FmtNbr_Int32S().
3247:../Dave/Generated/UCPROBE/lib_str.c **** *
3248:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
3249:../Dave/Generated/UCPROBE/lib_str.c **** *
3250:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
3251:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
3252:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6e).
3253:../Dave/Generated/UCPROBE/lib_str.c **** *
3254:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
3255:../Dave/Generated/UCPROBE/lib_str.c **** *
3256:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
3257:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
3258:../Dave/Generated/UCPROBE/lib_str.c **** *
3259:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
3260:../Dave/Generated/UCPROBE/lib_str.c **** *
3261:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
3262:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
3263:../Dave/Generated/UCPROBE/lib_str.c **** *
3264:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
3265:../Dave/Generated/UCPROBE/lib_str.c **** *
3266:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6f].
3267:../Dave/Generated/UCPROBE/lib_str.c **** *
3268:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
3269:../Dave/Generated/UCPROBE/lib_str.c **** *
3270:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Str_FmtNbr_Int32U(),
3271:../Dave/Generated/UCPROBE/lib_str.c **** *               Str_FmtNbr_Int32S().
3272:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3273:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) The maximum number of digits to format for 32-bit integer numbers :
3274:../Dave/Generated/UCPROBE/lib_str.c **** *
3275:../Dave/Generated/UCPROBE/lib_str.c **** *
3276:../Dave/Generated/UCPROBE/lib_str.c **** *                               Maximum Number of             [  log (Number)      ]
3277:../Dave/Generated/UCPROBE/lib_str.c **** *                             32-bit Integer Digits  =  floor [ -------------- + 1 ]
3278:../Dave/Generated/UCPROBE/lib_str.c **** *                                   to Format                 [   log (Base)       ]
3279:../Dave/Generated/UCPROBE/lib_str.c **** *
3280:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
3281:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Number                  Number to format
3282:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Base            Base of number to format
3283:../Dave/Generated/UCPROBE/lib_str.c **** *
3284:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is zero; then NO formatti
3285:../Dave/Generated/UCPROBE/lib_str.c **** *                           is performed except possible NULL-termination of the string (see Note #
3286:../Dave/Generated/UCPROBE/lib_str.c **** *
3287:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3288:../Dave/Generated/UCPROBE/lib_str.c **** *
3289:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = -23456
3290:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  =  0
3291:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3292:../Dave/Generated/UCPROBE/lib_str.c **** *
3293:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = ""                   See Note #7a
3294:../Dave/Generated/UCPROBE/lib_str.c **** *
3295:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) If the number of digits to format ('nbr_dig') is less than the number o
3296:../Dave/Generated/UCPROBE/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
3297:../Dave/Generated/UCPROBE/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
3298:../Dave/Generated/UCPROBE/lib_str.c **** *
3299:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3300:../Dave/Generated/UCPROBE/lib_str.c **** *
3301:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = 23456
3302:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  = 3
3303:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3304:../Dave/Generated/UCPROBE/lib_str.c **** *
3305:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = "???"                See Note #7b
3306:../Dave/Generated/UCPROBE/lib_str.c **** *
3307:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of digits to
3308:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
3309:../Dave/Generated/UCPROBE/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
3310:../Dave/Generated/UCPROBE/lib_str.c **** *                           the negative sign.
3311:../Dave/Generated/UCPROBE/lib_str.c **** *
3312:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3313:../Dave/Generated/UCPROBE/lib_str.c **** *
3314:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = -23456
3315:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  =  5
3316:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3317:../Dave/Generated/UCPROBE/lib_str.c **** *
3318:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = "?????"              See Note #7b
3319:../Dave/Generated/UCPROBE/lib_str.c **** *
3320:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
3321:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3322:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
3323:../Dave/Generated/UCPROBE/lib_str.c **** *
3324:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
3325:../Dave/Generated/UCPROBE/lib_str.c **** *
3326:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
3327:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
3328:../Dave/Generated/UCPROBE/lib_str.c **** *
3329:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
3330:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
3331:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
3332:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
3333:../Dave/Generated/UCPROBE/lib_str.c **** *
3334:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
3335:../Dave/Generated/UCPROBE/lib_str.c **** *
3336:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456
3337:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
3338:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
3339:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
3340:../Dave/Generated/UCPROBE/lib_str.c **** *
3341:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456"
3342:../Dave/Generated/UCPROBE/lib_str.c **** *
3343:../Dave/Generated/UCPROBE/lib_str.c **** *
3344:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456
3345:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
3346:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
3347:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
3348:../Dave/Generated/UCPROBE/lib_str.c **** *
3349:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456"
3350:../Dave/Generated/UCPROBE/lib_str.c **** *
3351:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
3352:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
3353:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
3354:../Dave/Generated/UCPROBE/lib_str.c **** *
3355:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
3356:../Dave/Generated/UCPROBE/lib_str.c **** *
3357:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
3358:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3359:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
3360:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
3361:../Dave/Generated/UCPROBE/lib_str.c **** *
3362:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-0023456"
3363:../Dave/Generated/UCPROBE/lib_str.c **** *
3364:../Dave/Generated/UCPROBE/lib_str.c **** *
3365:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
3366:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3367:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
3368:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
3369:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_NO
3370:../Dave/Generated/UCPROBE/lib_str.c **** *
3371:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-000ABCD"
3372:../Dave/Generated/UCPROBE/lib_str.c **** *
3373:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
3374:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
3375:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
3376:../Dave/Generated/UCPROBE/lib_str.c **** *
3377:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
3378:../Dave/Generated/UCPROBE/lib_str.c **** *
3379:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
3380:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3381:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
3382:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
3383:../Dave/Generated/UCPROBE/lib_str.c **** *
3384:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "##-23456"
3385:../Dave/Generated/UCPROBE/lib_str.c **** *
3386:../Dave/Generated/UCPROBE/lib_str.c **** *
3387:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
3388:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3389:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
3390:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
3391:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_YES
3392:../Dave/Generated/UCPROBE/lib_str.c **** *
3393:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "###-abcd"
3394:../Dave/Generated/UCPROBE/lib_str.c **** *
3395:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
3396:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
3397:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
3398:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
3399:../Dave/Generated/UCPROBE/lib_str.c **** *
3400:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
3401:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3402:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
3403:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
3404:../Dave/Generated/UCPROBE/lib_str.c **** *
3405:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
3406:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
3407:../Dave/Generated/UCPROBE/lib_str.c **** *
3408:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
3409:../Dave/Generated/UCPROBE/lib_str.c **** *
3410:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
3411:../Dave/Generated/UCPROBE/lib_str.c **** *
3412:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
3413:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
3414:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
3415:../Dave/Generated/UCPROBE/lib_str.c **** *
3416:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) String format terminates when :
3417:../Dave/Generated/UCPROBE/lib_str.c **** *
3418:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
3419:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
3420:../Dave/Generated/UCPROBE/lib_str.c **** *
3421:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Number of digits to format ('nbr_dig') is zero.
3422:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
3423:../Dave/Generated/UCPROBE/lib_str.c **** *
3424:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant
3425:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible
3426:../Dave/Generated/UCPROBE/lib_str.c **** *                           negative sign.
3427:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3428:../Dave/Generated/UCPROBE/lib_str.c **** *
3429:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Base is passed an invalid base (see Note #2).
3430:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string format performed; NULL pointer returned.
3431:../Dave/Generated/UCPROBE/lib_str.c **** *
3432:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Lead character is NOT a valid, printable character (see Note #3a).
3433:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3434:../Dave/Generated/UCPROBE/lib_str.c **** *
3435:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Number successfully formatted into character string array.
3436:../Dave/Generated/UCPROBE/lib_str.c **** *
3437:../Dave/Generated/UCPROBE/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
3438:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
3439:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
3440:../Dave/Generated/UCPROBE/lib_str.c **** *
3441:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
3442:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
3443:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
3444:../Dave/Generated/UCPROBE/lib_str.c **** *
3445:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3446:../Dave/Generated/UCPROBE/lib_str.c **** */
3447:../Dave/Generated/UCPROBE/lib_str.c **** 
3448:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_CHAR  *Str_FmtNbr_Int32 (CPU_INT32U    nbr,
3449:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_INT08U    nbr_dig,
3450:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_INT08U    nbr_base,
3451:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   nbr_neg,
3452:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_CHAR      lead_char,
3453:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   lower_case,
3454:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   nul,
3455:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_CHAR     *pstr)
3456:../Dave/Generated/UCPROBE/lib_str.c **** {
3457:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
3458:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_DATA      i;
3459:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_fmt;
3460:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_log;
3461:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_max;
3462:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_min;
3463:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_fmtd;
3464:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
3465:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_lead_char;
3466:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    dig_val;
3467:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    lead_char_delta_0;
3468:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    lead_char_delta_a;
3469:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
3470:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
3471:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
3472:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   print_char;
3473:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
3474:../Dave/Generated/UCPROBE/lib_str.c **** 
3475:../Dave/Generated/UCPROBE/lib_str.c **** 
3476:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
3477:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
3478:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
3479:../Dave/Generated/UCPROBE/lib_str.c ****     }
3480:../Dave/Generated/UCPROBE/lib_str.c **** 
3481:../Dave/Generated/UCPROBE/lib_str.c ****     fmt_invalid = DEF_NO;
3482:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
3483:../Dave/Generated/UCPROBE/lib_str.c **** 
3484:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_dig < 1) {                                          /* If nbr digs = 0, ...            
3485:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
3486:../Dave/Generated/UCPROBE/lib_str.c ****     }
3487:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* If invalid base, ...            
3488:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_base <  2u) ||
3489:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
3490:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
3491:../Dave/Generated/UCPROBE/lib_str.c ****     }
3492:../Dave/Generated/UCPROBE/lib_str.c **** 
3493:../Dave/Generated/UCPROBE/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
3494:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
3495:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable (see 
3496:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str        (see 
3497:../Dave/Generated/UCPROBE/lib_str.c **** 
3498:../Dave/Generated/UCPROBE/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 nbr base
3499:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_delta_0 = (CPU_INT08U)(lead_char - '0');
3500:../Dave/Generated/UCPROBE/lib_str.c ****             if (lower_case != DEF_YES) {
3501:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
3502:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3503:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'a');
3504:../Dave/Generated/UCPROBE/lib_str.c ****             }
3505:../Dave/Generated/UCPROBE/lib_str.c **** 
3506:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_dig = (((nbr_base <= 10u) &&  (lead_char_delta_0 <  nbr_base))      ||
3507:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
3508:../Dave/Generated/UCPROBE/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
3509:../Dave/Generated/UCPROBE/lib_str.c **** 
3510:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If lead char non-0 nbr base dig 
3511:../Dave/Generated/UCPROBE/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str             
3512:../Dave/Generated/UCPROBE/lib_str.c ****             }
3513:../Dave/Generated/UCPROBE/lib_str.c ****         }
3514:../Dave/Generated/UCPROBE/lib_str.c ****     }
3515:../Dave/Generated/UCPROBE/lib_str.c **** 
3516:../Dave/Generated/UCPROBE/lib_str.c **** 
3517:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
3518:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt    = pstr;
3519:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
3520:../Dave/Generated/UCPROBE/lib_str.c **** 
3521:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid == DEF_NO) {
3522:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt     = nbr;
3523:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_log     = nbr;
3524:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_max = 1u;
3525:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= nbr_base) {                           /* While nbr base digs avail, ...  
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
3527:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
3528:../Dave/Generated/UCPROBE/lib_str.c ****         }
3529:../Dave/Generated/UCPROBE/lib_str.c **** 
3530:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg_sign = (nbr_neg == DEF_YES) ? 1u : 0u;
3531:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_dig >= (nbr_dig_max + nbr_neg_sign)) {          /* If req'd nbr digs >= (max nbr di
3532:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd = DEF_NO;
3533:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_min  = DEF_MIN(nbr_dig_max, nbr_dig);
3534:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
3535:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char != (CPU_CHAR)'\0') {
3536:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
3537:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_lead_char = nbr_dig     -
3538:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_dig_min - nbr_neg_sign;
3539:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3540:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig_min + nbr_neg_sign;
3541:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_lead_char = 0u;
3542:../Dave/Generated/UCPROBE/lib_str.c ****             }
3543:../Dave/Generated/UCPROBE/lib_str.c **** 
3544:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_lead_char > 0) {                            /* If lead chars to fmt, ...       
3545:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_0 = (lead_char == '0')                /* ... chk if lead char a '0' dig (
3546:../Dave/Generated/UCPROBE/lib_str.c ****                             ?  DEF_YES : DEF_NO;
3547:../Dave/Generated/UCPROBE/lib_str.c ****             }
3548:../Dave/Generated/UCPROBE/lib_str.c **** 
3549:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
3550:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
3551:../Dave/Generated/UCPROBE/lib_str.c ****         }
3552:../Dave/Generated/UCPROBE/lib_str.c ****     }
3553:../Dave/Generated/UCPROBE/lib_str.c **** 
3554:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {
3555:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_fmtd = nbr_dig;
3556:../Dave/Generated/UCPROBE/lib_str.c ****     }
3557:../Dave/Generated/UCPROBE/lib_str.c **** 
3558:../Dave/Generated/UCPROBE/lib_str.c **** 
3559:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
3560:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt += nbr_dig_fmtd;                                   /* Start fmt @ least-sig dig.      
3561:../Dave/Generated/UCPROBE/lib_str.c **** 
3562:../Dave/Generated/UCPROBE/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
3563:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
3564:../Dave/Generated/UCPROBE/lib_str.c ****     }
3565:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt--;
3566:../Dave/Generated/UCPROBE/lib_str.c **** 
3567:../Dave/Generated/UCPROBE/lib_str.c **** 
3568:../Dave/Generated/UCPROBE/lib_str.c ****     for (i = 0u; i < nbr_dig_fmtd; i++) {                       /* Fmt str for desired nbr digs :  
3569:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
3570:../Dave/Generated/UCPROBE/lib_str.c ****             if ((nbr_fmt > 0) ||                                /* If fmt nbr > 0                  
3571:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
3572:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_val = (CPU_INT08U)(nbr_fmt % nbr_base);
3574:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
3575:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
3576:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
3577:../Dave/Generated/UCPROBE/lib_str.c ****                     if (lower_case !=  DEF_YES) {
3578:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
3579:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
3580:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'a');
3581:../Dave/Generated/UCPROBE/lib_str.c ****                     }
3582:../Dave/Generated/UCPROBE/lib_str.c ****                 }
3583:../Dave/Generated/UCPROBE/lib_str.c **** 
3584:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_fmt /= nbr_base;                            /* Shift to next more-sig dig.     
3585:../Dave/Generated/UCPROBE/lib_str.c **** 
3586:../Dave/Generated/UCPROBE/lib_str.c ****             } else if ((nbr_neg      == DEF_YES)  &&            /* ... else if nbr neg             
3587:../Dave/Generated/UCPROBE/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
3588:../Dave/Generated/UCPROBE/lib_str.c ****                        (nbr_neg_fmtd == DEF_NO )) ||            /* ... but neg sign NOT yet fmt'd  
3589:../Dave/Generated/UCPROBE/lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
3590:../Dave/Generated/UCPROBE/lib_str.c ****                        (i == (nbr_dig_fmtd - 1u))))) {          /* ... & on most-sig dig to fmt,   
3591:../Dave/Generated/UCPROBE/lib_str.c **** 
3592:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt--   = '-';                             /* ... prepend neg sign (see Note #
3593:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
3594:../Dave/Generated/UCPROBE/lib_str.c **** 
3595:../Dave/Generated/UCPROBE/lib_str.c ****             } else if (lead_char != (CPU_CHAR)'\0') {           /* ... else if avail,              
3596:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt-- = lead_char;                         /* ... fmt lead char.              
3597:../Dave/Generated/UCPROBE/lib_str.c ****             }
3598:../Dave/Generated/UCPROBE/lib_str.c **** 
3599:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
3600:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt-- = '?';
3601:../Dave/Generated/UCPROBE/lib_str.c ****         }
3602:../Dave/Generated/UCPROBE/lib_str.c ****     }
3603:../Dave/Generated/UCPROBE/lib_str.c **** 
3604:../Dave/Generated/UCPROBE/lib_str.c **** 
3605:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
3606:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
3607:../Dave/Generated/UCPROBE/lib_str.c ****     }
3608:../Dave/Generated/UCPROBE/lib_str.c **** 
3609:../Dave/Generated/UCPROBE/lib_str.c **** 
3610:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
3611:../Dave/Generated/UCPROBE/lib_str.c **** }
3612:../Dave/Generated/UCPROBE/lib_str.c **** 
3613:../Dave/Generated/UCPROBE/lib_str.c **** 
3614:../Dave/Generated/UCPROBE/lib_str.c **** /*
3615:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3616:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32()
3617:../Dave/Generated/UCPROBE/lib_str.c **** *
3618:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit integer from string.
3619:../Dave/Generated/UCPROBE/lib_str.c **** *
3620:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Notes #1 & #2a).
3621:../Dave/Generated/UCPROBE/lib_str.c **** *
3622:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next       Optional pointer to a variable to ... :
3623:../Dave/Generated/UCPROBE/lib_str.c **** *
3624:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return a pointer to first character following the integer s
3625:../Dave/Generated/UCPROBE/lib_str.c **** *                                           if NO error(s) [see Note #2a2B2];
3626:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Return a pointer to 'pstr',
3627:../Dave/Generated/UCPROBE/lib_str.c **** *                                           otherwise      (see Note #2a2A2).
3628:../Dave/Generated/UCPROBE/lib_str.c **** *
3629:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base of number to parse (see Notes #2a1B1 & #2a2B1).
3630:../Dave/Generated/UCPROBE/lib_str.c **** *
3631:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_signed      Indicates whether number to parse is signed :
3632:../Dave/Generated/UCPROBE/lib_str.c **** *
3633:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO                  Number is unsigned.
3634:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                 Number is   signed.
3635:../Dave/Generated/UCPROBE/lib_str.c **** *
3636:../Dave/Generated/UCPROBE/lib_str.c **** *               pnbr_neg        Pointer to a variable to return if the parsed (signed) number is ne
3637:../Dave/Generated/UCPROBE/lib_str.c **** *
3638:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO                  Number is non-negative.
3639:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                 Number is     negative.
3640:../Dave/Generated/UCPROBE/lib_str.c **** *
3641:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
3642:../Dave/Generated/UCPROBE/lib_str.c **** *
3643:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
3644:../Dave/Generated/UCPROBE/lib_str.c **** *
3645:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
3646:../Dave/Generated/UCPROBE/lib_str.c **** *
3647:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Str_ParseNbr_Int32U(),
3648:../Dave/Generated/UCPROBE/lib_str.c **** *               Str_ParseNbr_Int32S().
3649:../Dave/Generated/UCPROBE/lib_str.c **** *
3650:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3651:../Dave/Generated/UCPROBE/lib_str.c **** *
3652:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3653:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3654:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type long ... representation" :
3655:../Dave/Generated/UCPROBE/lib_str.c **** *
3656:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3657:../Dave/Generated/UCPROBE/lib_str.c **** *
3658:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3659:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
3660:../Dave/Generated/UCPROBE/lib_str.c **** *
3661:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3662:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3663:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3664:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3665:../Dave/Generated/UCPROBE/lib_str.c **** *
3666:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3667:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3668:../Dave/Generated/UCPROBE/lib_str.c **** *
3669:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3670:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3671:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
3672:../Dave/Generated/UCPROBE/lib_str.c **** *
3673:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3674:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
3675:../Dave/Generated/UCPROBE/lib_str.c **** *
3676:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3677:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3678:../Dave/Generated/UCPROBE/lib_str.c **** *
3679:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3680:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3681:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3682:../Dave/Generated/UCPROBE/lib_str.c **** *
3683:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3684:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3685:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3686:../Dave/Generated/UCPROBE/lib_str.c **** *
3687:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3688:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3689:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3690:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
3691:../Dave/Generated/UCPROBE/lib_str.c **** *
3692:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3693:../Dave/Generated/UCPROBE/lib_str.c **** *                                               '0X' may optionally precede the sequence of letters
3694:../Dave/Generated/UCPROBE/lib_str.c **** *
3695:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3696:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3697:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3698:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3699:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3700:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3701:../Dave/Generated/UCPROBE/lib_str.c **** *
3702:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) It does NOT seem reasonable to parse & convert a negative n
3703:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.  However, a negati
3704:../Dave/Generated/UCPROBE/lib_str.c **** *                                       for an unsigned integer will automatically be parsed as an 
3705:../Dave/Generated/UCPROBE/lib_str.c **** *                                       character (see Note #2aC1).
3706:../Dave/Generated/UCPROBE/lib_str.c **** *
3707:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3708:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3709:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3710:../Dave/Generated/UCPROBE/lib_str.c **** *
3711:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3712:../Dave/Generated/UCPROBE/lib_str.c **** *
3713:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3714:../Dave/Generated/UCPROBE/lib_str.c **** *
3715:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion is performed"; ...
3716:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3717:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3718:../Dave/Generated/UCPROBE/lib_str.c **** *
3719:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3720:../Dave/Generated/UCPROBE/lib_str.c **** *
3721:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3722:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3723:../Dave/Generated/UCPROBE/lib_str.c **** *
3724:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3725:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3726:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3727:../Dave/Generated/UCPROBE/lib_str.c **** *
3728:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3729:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3730:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
3731:../Dave/Generated/UCPROBE/lib_str.c **** *
3732:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3733:../Dave/Generated/UCPROBE/lib_str.c **** *
3734:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3735:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3736:../Dave/Generated/UCPROBE/lib_str.c **** *                                    [or] {LONG_MAX} ... shall be returned."
3737:../Dave/Generated/UCPROBE/lib_str.c **** *
3738:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3739:../Dave/Generated/UCPROBE/lib_str.c **** *
3740:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3741:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
3742:../Dave/Generated/UCPROBE/lib_str.c **** *
3743:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3744:../Dave/Generated/UCPROBE/lib_str.c **** *
3745:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3746:../Dave/Generated/UCPROBE/lib_str.c **** *
3747:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3748:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
3749:../Dave/Generated/UCPROBE/lib_str.c **** *
3750:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3751:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3752:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3753:../Dave/Generated/UCPROBE/lib_str.c **** *
3754:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
3755:../Dave/Generated/UCPROBE/lib_str.c **** *
3756:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3757:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3758:../Dave/Generated/UCPROBE/lib_str.c **** *
3759:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
3760:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
3761:../Dave/Generated/UCPROBE/lib_str.c **** *
3762:../Dave/Generated/UCPROBE/lib_str.c **** *
3763:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
3764:../Dave/Generated/UCPROBE/lib_str.c **** *
3765:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
3766:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3767:../Dave/Generated/UCPROBE/lib_str.c **** *
3768:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3769:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3770:../Dave/Generated/UCPROBE/lib_str.c **** *
3771:../Dave/Generated/UCPROBE/lib_str.c **** *
3772:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3773:../Dave/Generated/UCPROBE/lib_str.c **** *
3774:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3775:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3776:../Dave/Generated/UCPROBE/lib_str.c **** *
3777:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3778:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3779:../Dave/Generated/UCPROBE/lib_str.c **** *
3780:../Dave/Generated/UCPROBE/lib_str.c **** *
3781:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3782:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
3783:../Dave/Generated/UCPROBE/lib_str.c **** *
3784:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3785:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3786:../Dave/Generated/UCPROBE/lib_str.c **** *
3787:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3788:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3789:../Dave/Generated/UCPROBE/lib_str.c **** *
3790:../Dave/Generated/UCPROBE/lib_str.c **** *
3791:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3792:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
3793:../Dave/Generated/UCPROBE/lib_str.c **** *
3794:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
3795:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3796:../Dave/Generated/UCPROBE/lib_str.c **** *
3797:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3798:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
3799:../Dave/Generated/UCPROBE/lib_str.c **** *
3800:../Dave/Generated/UCPROBE/lib_str.c **** *
3801:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
3802:../Dave/Generated/UCPROBE/lib_str.c **** *
3803:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3804:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3805:../Dave/Generated/UCPROBE/lib_str.c **** *
3806:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
3807:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3808:../Dave/Generated/UCPROBE/lib_str.c **** *
3809:../Dave/Generated/UCPROBE/lib_str.c **** *
3810:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Parse string integer underflow :
3811:../Dave/Generated/UCPROBE/lib_str.c **** *
3812:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3813:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3814:../Dave/Generated/UCPROBE/lib_str.c **** *
3815:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3816:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3817:../Dave/Generated/UCPROBE/lib_str.c **** *
3818:../Dave/Generated/UCPROBE/lib_str.c **** *
3819:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) String parse terminates when :
3820:../Dave/Generated/UCPROBE/lib_str.c **** *
3821:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Base passed an invalid base (see Note #2a1B1b).
3822:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No conversion performed; 0 returned.
3823:../Dave/Generated/UCPROBE/lib_str.c **** *
3824:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) Parse string passed a NULL pointer OR empty integer sequence (see Note 
3825:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No conversion performed; 0 returned.
3826:../Dave/Generated/UCPROBE/lib_str.c **** *
3827:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Invalid parse string character found (see Note #2a1C).
3828:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Parsed integer returned.
3829:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) 'pstr_next' points to invalid character.
3830:../Dave/Generated/UCPROBE/lib_str.c **** *
3831:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Entire  parse string converted (see Note #2a2B).
3832:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Parsed integer returned.
3833:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) 'pstr_next' points to terminating NULL character.
3834:../Dave/Generated/UCPROBE/lib_str.c **** *
3835:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) Pointers to variables that return values MUST be initialized PRIOR to all other
3836:../Dave/Generated/UCPROBE/lib_str.c **** *                   validation or function handling in case of any error(s).
3837:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3838:../Dave/Generated/UCPROBE/lib_str.c **** */
3839:../Dave/Generated/UCPROBE/lib_str.c **** 
3840:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_INT32U  Str_ParseNbr_Int32 (const  CPU_CHAR      *pstr,
3841:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR     **pstr_next,
3842:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
3843:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
3844:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg)
3845:../Dave/Generated/UCPROBE/lib_str.c **** {
  25              	 .loc 1 3845 0
  26              	 .cfi_startproc
  27              	.LVL0:
  28 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 20
  31              	 .cfi_offset 4,-20
  32              	 .cfi_offset 5,-16
  33              	 .cfi_offset 6,-12
  34              	 .cfi_offset 7,-8
  35              	 .cfi_offset 14,-4
  36 0002 5F46     	 mov r7,fp
  37 0004 5646     	 mov r6,r10
  38 0006 4D46     	 mov r5,r9
  39 0008 4446     	 mov r4,r8
  40 000a F0B4     	 push {r4,r5,r6,r7}
  41              	.LCFI1:
  42              	 .cfi_def_cfa_offset 36
  43              	 .cfi_offset 8,-36
  44              	 .cfi_offset 9,-32
  45              	 .cfi_offset 10,-28
  46              	 .cfi_offset 11,-24
  47 000c 8146     	 mov r9,r0
  48 000e 87B0     	 sub sp,sp,#28
  49              	.LCFI2:
  50              	 .cfi_def_cfa_offset 64
  51              	 .loc 1 3845 0
  52 0010 8B46     	 mov fp,r1
  53 0012 161C     	 mov r6,r2
  54 0014 1C1C     	 mov r4,r3
3846:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_parse;
3847:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_parse_nbr;
3848:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     *pstr_parse_unused;
3849:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR      parse_char;
3850:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT08U    parse_dig;
3851:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT32U    nbr;
3852:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_neg_unused;
3853:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_dig;
3854:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_alpha;
3855:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_hex;
3856:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_hex_lower;
3857:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   whitespace;
3858:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   neg;
3859:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   ovf;
3860:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   done;
3861:../Dave/Generated/UCPROBE/lib_str.c **** 
3862:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* --------------- VALIDATE PARSE A
3863:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_next == (CPU_CHAR **) 0) {                         /* If NOT avail, ...               
  55              	 .loc 1 3863 0
  56 0016 0029     	 cmp r1,#0
  57 0018 00D1     	 bne .LCB37
  58 001a 91E0     	 b .L78
  59              	.LCB37:
3864:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_next  = (CPU_CHAR **)&pstr_parse_unused;           /* ... re-cfg NULL rtn ptr to unuse
3865:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&pstr_parse_unused;                                /* Prevent possible 'variable unuse
3866:../Dave/Generated/UCPROBE/lib_str.c ****     }
3867:../Dave/Generated/UCPROBE/lib_str.c ****    *pstr_next = (CPU_CHAR *)pstr;                               /* Init rtn str for err (see Note #
  60              	 .loc 1 3867 0
  61 001c 5B46     	 mov r3,fp
  62              	.LVL1:
  63 001e 4A46     	 mov r2,r9
  64              	.LVL2:
  65 0020 1A60     	 str r2,[r3]
3868:../Dave/Generated/UCPROBE/lib_str.c **** 
3869:../Dave/Generated/UCPROBE/lib_str.c ****     if (pnbr_neg == (CPU_BOOLEAN *) 0) {                        /* If NOT avail, ...               
  66              	 .loc 1 3869 0
  67 0022 109B     	 ldr r3,[sp,#64]
  68 0024 002B     	 cmp r3,#0
  69 0026 00D1     	 bne .LCB46
  70 0028 93E0     	 b .L79
  71              	.LCB46:
  72              	.LVL3:
  73              	.L3:
3870:../Dave/Generated/UCPROBE/lib_str.c ****         pnbr_neg  = (CPU_BOOLEAN *)&nbr_neg_unused;             /* ... re-cfg NULL rtn ptr to unuse
3871:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&nbr_neg_unused;                                   /* Prevent possible 'variable unuse
3872:../Dave/Generated/UCPROBE/lib_str.c ****     }
3873:../Dave/Generated/UCPROBE/lib_str.c ****    *pnbr_neg = DEF_NO;                                          /* Init nbr neg for err (see Note #
  74              	 .loc 1 3873 0
  75 002a 0023     	 mov r3,#0
  76 002c 109A     	 ldr r2,[sp,#64]
3874:../Dave/Generated/UCPROBE/lib_str.c **** 
3875:../Dave/Generated/UCPROBE/lib_str.c **** 
3876:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn zero if str ptr NULL (see No
3877:../Dave/Generated/UCPROBE/lib_str.c ****         return (0u);
  77              	 .loc 1 3877 0
  78 002e 0020     	 mov r0,#0
  79              	.LVL4:
3873:../Dave/Generated/UCPROBE/lib_str.c **** 
  80              	 .loc 1 3873 0
  81 0030 1370     	 strb r3,[r2]
3876:../Dave/Generated/UCPROBE/lib_str.c ****         return (0u);
  82              	 .loc 1 3876 0
  83 0032 4B46     	 mov r3,r9
  84 0034 002B     	 cmp r3,#0
  85 0036 03D0     	 beq .L59
  86              	.LVL5:
3878:../Dave/Generated/UCPROBE/lib_str.c ****     }
3879:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn zero if invalid base (see No
3880:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_base == 1u) ||
  87              	 .loc 1 3880 0
  88 0038 012E     	 cmp r6,#1
  89 003a 01D0     	 beq .L59
  90              	 .loc 1 3880 0 is_stmt 0 discriminator 1
  91 003c 242E     	 cmp r6,#36
  92 003e 06D9     	 bls .L80
  93              	.LVL6:
  94              	.L59:
3881:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
3882:../Dave/Generated/UCPROBE/lib_str.c ****         return (0u);
3883:../Dave/Generated/UCPROBE/lib_str.c ****     }
3884:../Dave/Generated/UCPROBE/lib_str.c **** 
3885:../Dave/Generated/UCPROBE/lib_str.c **** 
3886:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------- IGNORE PRECEDING C
3887:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_parse = pstr;                                          /* Save ptr to init'l str for err (
3888:../Dave/Generated/UCPROBE/lib_str.c **** 
3889:../Dave/Generated/UCPROBE/lib_str.c ****     whitespace = ASCII_IsSpace(*pstr_parse);
3890:../Dave/Generated/UCPROBE/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
3891:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_parse++;
3892:../Dave/Generated/UCPROBE/lib_str.c ****         whitespace = ASCII_IsSpace(*pstr_parse);
3893:../Dave/Generated/UCPROBE/lib_str.c ****     }
3894:../Dave/Generated/UCPROBE/lib_str.c **** 
3895:../Dave/Generated/UCPROBE/lib_str.c ****     switch (*pstr_parse) {
3896:../Dave/Generated/UCPROBE/lib_str.c ****         case '+':                                               /* Ignore   pos sign (see Note #2a1
3897:../Dave/Generated/UCPROBE/lib_str.c ****              pstr_parse++;
3898:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_NO;
3899:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3900:../Dave/Generated/UCPROBE/lib_str.c **** 
3901:../Dave/Generated/UCPROBE/lib_str.c **** 
3902:../Dave/Generated/UCPROBE/lib_str.c ****         case '-':                                               /* Validate neg sign (see Note #2a1
3903:../Dave/Generated/UCPROBE/lib_str.c ****              if (nbr_signed == DEF_YES) {
3904:../Dave/Generated/UCPROBE/lib_str.c ****                  pstr_parse++;
3905:../Dave/Generated/UCPROBE/lib_str.c ****              }
3906:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_YES;
3907:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3908:../Dave/Generated/UCPROBE/lib_str.c **** 
3909:../Dave/Generated/UCPROBE/lib_str.c **** 
3910:../Dave/Generated/UCPROBE/lib_str.c ****         default:
3911:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_NO;
3912:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3913:../Dave/Generated/UCPROBE/lib_str.c ****     }
3914:../Dave/Generated/UCPROBE/lib_str.c **** 
3915:../Dave/Generated/UCPROBE/lib_str.c **** 
3916:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* --------- IGNORE NBR BASE PRECED
3917:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_parse_nbr = pstr_parse;                                /* Save ptr to str's nbr (see Note 
3918:../Dave/Generated/UCPROBE/lib_str.c **** 
3919:../Dave/Generated/UCPROBE/lib_str.c ****     switch (nbr_base) {
3920:../Dave/Generated/UCPROBE/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
3921:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3922:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3923:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
3924:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
3925:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'X':
3926:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_base   = 16u;                    /* ... set nbr base = 16    (see No
3927:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3928:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
3929:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
3930:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
3931:../Dave/Generated/UCPROBE/lib_str.c ****                            }
3932:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3933:../Dave/Generated/UCPROBE/lib_str.c **** 
3934:../Dave/Generated/UCPROBE/lib_str.c **** 
3935:../Dave/Generated/UCPROBE/lib_str.c ****                       default:                                  /* For '0'  prefix, ...            
3936:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_base =  8u;                      /* ... set nbr base =  8    (see No
3937:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3938:../Dave/Generated/UCPROBE/lib_str.c ****                   }
3939:../Dave/Generated/UCPROBE/lib_str.c **** 
3940:../Dave/Generated/UCPROBE/lib_str.c ****              } else {                                           /* For non-'0' prefix, ...         
3941:../Dave/Generated/UCPROBE/lib_str.c ****                  nbr_base = 10u;                                /* ... set nbr base = 10    (see No
3942:../Dave/Generated/UCPROBE/lib_str.c ****              }
3943:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3944:../Dave/Generated/UCPROBE/lib_str.c **** 
3945:../Dave/Generated/UCPROBE/lib_str.c **** 
3946:../Dave/Generated/UCPROBE/lib_str.c ****         case  8u:                                               /* See Note #2a1B1a2.              
3947:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3948:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3949:../Dave/Generated/UCPROBE/lib_str.c ****              }
3950:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3951:../Dave/Generated/UCPROBE/lib_str.c **** 
3952:../Dave/Generated/UCPROBE/lib_str.c **** 
3953:../Dave/Generated/UCPROBE/lib_str.c ****         case 16u:                                               /* See Note #2a1B1a3.              
3954:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3955:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3956:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
3957:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':
3958:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'X':
3959:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3960:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
3961:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
3962:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
3963:../Dave/Generated/UCPROBE/lib_str.c ****                            }
3964:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3965:../Dave/Generated/UCPROBE/lib_str.c **** 
3966:../Dave/Generated/UCPROBE/lib_str.c **** 
3967:../Dave/Generated/UCPROBE/lib_str.c ****                       default:
3968:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3969:../Dave/Generated/UCPROBE/lib_str.c ****                   }
3970:../Dave/Generated/UCPROBE/lib_str.c ****              }
3971:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3972:../Dave/Generated/UCPROBE/lib_str.c **** 
3973:../Dave/Generated/UCPROBE/lib_str.c **** 
3974:../Dave/Generated/UCPROBE/lib_str.c ****         default:                                                /* See Note #2a1B1b.               
3975:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3976:../Dave/Generated/UCPROBE/lib_str.c ****     }
3977:../Dave/Generated/UCPROBE/lib_str.c **** 
3978:../Dave/Generated/UCPROBE/lib_str.c **** 
3979:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------ PARSE INT STR
3980:../Dave/Generated/UCPROBE/lib_str.c ****     nbr  = 0u;
3981:../Dave/Generated/UCPROBE/lib_str.c ****     ovf  = DEF_NO;
3982:../Dave/Generated/UCPROBE/lib_str.c ****     done = DEF_NO;
3983:../Dave/Generated/UCPROBE/lib_str.c **** 
3984:../Dave/Generated/UCPROBE/lib_str.c ****     while (done == DEF_NO) {                                    /* Parse str for desired nbr base d
3985:../Dave/Generated/UCPROBE/lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
3986:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_alpha  =  ASCII_IsAlphaNum(parse_char);
3987:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_alpha == DEF_YES) {                             /* If valid alpha num nbr dig avail
3988:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... convert parse char into nbr 
3989:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig = ASCII_IsDig(parse_char);
3990:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_dig == DEF_YES) {
3991:../Dave/Generated/UCPROBE/lib_str.c ****                 parse_dig = (CPU_INT08U)(parse_char - '0');
3992:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3993:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_hex_lower = ASCII_IsLower(parse_char);
3994:../Dave/Generated/UCPROBE/lib_str.c ****                 if (nbr_hex_lower == DEF_YES) {
3995:../Dave/Generated/UCPROBE/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'a') + 10u);
3996:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
3997:../Dave/Generated/UCPROBE/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'A') + 10u);
3998:../Dave/Generated/UCPROBE/lib_str.c ****                 }
3999:../Dave/Generated/UCPROBE/lib_str.c ****             }
4000:../Dave/Generated/UCPROBE/lib_str.c **** 
4001:../Dave/Generated/UCPROBE/lib_str.c ****             if (parse_dig < nbr_base) {                         /* If parse char valid for nbr base
4002:../Dave/Generated/UCPROBE/lib_str.c ****                 if (ovf == DEF_NO) {                            /* ... & nbr NOT yet ovf'd,        
4003:../Dave/Generated/UCPROBE/lib_str.c ****                     if (nbr <= Str_MultOvfThTbl_Int32U[nbr_base]) {
4004:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... merge parse char dig into nb
4005:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr *= nbr_base;
4006:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr += parse_dig;
4007:../Dave/Generated/UCPROBE/lib_str.c ****                         if (nbr < parse_dig) {
4008:../Dave/Generated/UCPROBE/lib_str.c ****                             ovf = DEF_YES;
4009:../Dave/Generated/UCPROBE/lib_str.c ****                         }
4010:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
4011:../Dave/Generated/UCPROBE/lib_str.c ****                         ovf = DEF_YES;
4012:../Dave/Generated/UCPROBE/lib_str.c ****                     }
4013:../Dave/Generated/UCPROBE/lib_str.c ****                 }
4014:../Dave/Generated/UCPROBE/lib_str.c ****                 pstr_parse++;
4015:../Dave/Generated/UCPROBE/lib_str.c **** 
4016:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* Invalid         char parsed (see
4017:../Dave/Generated/UCPROBE/lib_str.c ****                 done = DEF_YES;
4018:../Dave/Generated/UCPROBE/lib_str.c ****             }
4019:../Dave/Generated/UCPROBE/lib_str.c **** 
4020:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Invalid OR NULL char parsed (see
4021:../Dave/Generated/UCPROBE/lib_str.c ****             done = DEF_YES;
4022:../Dave/Generated/UCPROBE/lib_str.c ****         }
4023:../Dave/Generated/UCPROBE/lib_str.c ****     }
4024:../Dave/Generated/UCPROBE/lib_str.c **** 
4025:../Dave/Generated/UCPROBE/lib_str.c ****     if (ovf == DEF_YES) {                                       /* If nbr ovf'd, ...               
4026:../Dave/Generated/UCPROBE/lib_str.c ****         nbr  = DEF_INT_32U_MAX_VAL;                             /* ... rtn max int val (see Note #2
4027:../Dave/Generated/UCPROBE/lib_str.c ****     }
4028:../Dave/Generated/UCPROBE/lib_str.c **** 
4029:../Dave/Generated/UCPROBE/lib_str.c **** 
4030:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_parse !=             pstr_parse_nbr) {             /* If final parse str != init'l par
4031:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr_parse;                   /* .. rtn   parse str's next char (
4032:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
4033:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr;                         /* .. else rtn initial parse str  (
4034:../Dave/Generated/UCPROBE/lib_str.c ****     }
4035:../Dave/Generated/UCPROBE/lib_str.c **** 
4036:../Dave/Generated/UCPROBE/lib_str.c ****    *pnbr_neg = neg;                                             /* Rtn neg nbr status.             
4037:../Dave/Generated/UCPROBE/lib_str.c **** 
4038:../Dave/Generated/UCPROBE/lib_str.c **** 
4039:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
4040:../Dave/Generated/UCPROBE/lib_str.c **** }
  95              	 .loc 1 4040 0 is_stmt 1
  96 0040 07B0     	 add sp,sp,#28
  97              	 
  98              	.LVL7:
  99              	.LVL8:
 100 0042 3CBC     	 pop {r2,r3,r4,r5}
 101 0044 9046     	 mov r8,r2
 102 0046 9946     	 mov r9,r3
 103 0048 A246     	 mov r10,r4
 104 004a AB46     	 mov fp,r5
 105 004c F0BD     	 pop {r4,r5,r6,r7,pc}
 106              	.LVL9:
 107              	.L80:
3889:../Dave/Generated/UCPROBE/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 108              	 .loc 1 3889 0
 109 004e 1878     	 ldrb r0,[r3]
 110 0050 FFF7FEFF 	 bl ASCII_IsSpace
 111              	.LVL10:
3890:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_parse++;
 112              	 .loc 1 3890 0
 113 0054 4D46     	 mov r5,r9
 114 0056 0128     	 cmp r0,#1
 115 0058 05D1     	 bne .L5
 116              	.LVL11:
 117              	.L6:
3891:../Dave/Generated/UCPROBE/lib_str.c ****         whitespace = ASCII_IsSpace(*pstr_parse);
 118              	 .loc 1 3891 0
 119 005a 0135     	 add r5,r5,#1
 120              	.LVL12:
3892:../Dave/Generated/UCPROBE/lib_str.c ****     }
 121              	 .loc 1 3892 0
 122 005c 2878     	 ldrb r0,[r5]
 123 005e FFF7FEFF 	 bl ASCII_IsSpace
 124              	.LVL13:
3890:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_parse++;
 125              	 .loc 1 3890 0
 126 0062 0128     	 cmp r0,#1
 127 0064 F9D0     	 beq .L6
 128              	.L5:
3895:../Dave/Generated/UCPROBE/lib_str.c ****         case '+':                                               /* Ignore   pos sign (see Note #2a1
 129              	 .loc 1 3895 0
 130 0066 2B78     	 ldrb r3,[r5]
 131 0068 2B2B     	 cmp r3,#43
 132 006a 26D0     	 beq .L8
 133 006c 2D2B     	 cmp r3,#45
 134 006e 76D1     	 bne .L81
3903:../Dave/Generated/UCPROBE/lib_str.c ****                  pstr_parse++;
 135              	 .loc 1 3903 0
 136 0070 012C     	 cmp r4,#1
 137 0072 00D1     	 bne .LCB129
 138 0074 95E0     	 b .L82
 139              	.LCB129:
3906:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 140              	 .loc 1 3906 0
 141 0076 0123     	 mov r3,#1
 142 0078 2D24     	 mov r4,#45
 143 007a 0393     	 str r3,[sp,#12]
 144              	.LVL14:
3919:../Dave/Generated/UCPROBE/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
 145              	 .loc 1 3919 0
 146 007c 082E     	 cmp r6,#8
 147 007e 77D0     	 beq .L37
 148 0080 102E     	 cmp r6,#16
 149 0082 2BD0     	 beq .L38
 150 0084 002E     	 cmp r6,#0
 151 0086 24D0     	 beq .L43
 152              	.LVL15:
 153              	.L71:
 154 0088 A846     	 mov r8,r5
 155              	.LVL16:
 156              	.L11:
3981:../Dave/Generated/UCPROBE/lib_str.c ****     done = DEF_NO;
 157              	 .loc 1 3981 0
 158 008a 0023     	 mov r3,#0
3980:../Dave/Generated/UCPROBE/lib_str.c ****     ovf  = DEF_NO;
 159              	 .loc 1 3980 0
 160 008c 0027     	 mov r7,#0
3981:../Dave/Generated/UCPROBE/lib_str.c ****     done = DEF_NO;
 161              	 .loc 1 3981 0
 162 008e 9A46     	 mov r10,r3
4003:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... merge parse char dig into nb
 163              	 .loc 1 4003 0
 164 0090 B300     	 lsl r3,r6,#2
 165 0092 0293     	 str r3,[sp,#8]
 166              	.LVL17:
 167              	.L25:
3986:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_alpha == DEF_YES) {                             /* If valid alpha num nbr dig avail
 168              	 .loc 1 3986 0
 169 0094 201C     	 mov r0,r4
 170 0096 FFF7FEFF 	 bl ASCII_IsAlphaNum
 171              	.LVL18:
3987:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... convert parse char into nbr 
 172              	 .loc 1 3987 0
 173 009a 0128     	 cmp r0,#1
 174 009c 21D0     	 beq .L83
 175              	.LVL19:
 176              	.L19:
4025:../Dave/Generated/UCPROBE/lib_str.c ****         nbr  = DEF_INT_32U_MAX_VAL;                             /* ... rtn max int val (see Note #2
 177              	 .loc 1 4025 0
 178 009e 5346     	 mov r3,r10
 179 00a0 012B     	 cmp r3,#1
 180 00a2 60D0     	 beq .L84
 181              	.LVL20:
 182              	.L26:
4030:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr_parse;                   /* .. rtn   parse str's next char (
 183              	 .loc 1 4030 0
 184 00a4 4545     	 cmp r5,r8
 185 00a6 7AD0     	 beq .L85
 186              	.LVL21:
 187              	.L27:
 188 00a8 5B46     	 mov r3,fp
 189 00aa 4246     	 mov r2,r8
 190 00ac 1A60     	 str r2,[r3]
4036:../Dave/Generated/UCPROBE/lib_str.c **** 
 191              	 .loc 1 4036 0
 192 00ae 6A46     	 mov r2,sp
 193 00b0 109B     	 ldr r3,[sp,#64]
 194 00b2 127B     	 ldrb r2,[r2,#12]
4039:../Dave/Generated/UCPROBE/lib_str.c **** }
 195              	 .loc 1 4039 0
 196 00b4 381C     	 mov r0,r7
4036:../Dave/Generated/UCPROBE/lib_str.c **** 
 197              	 .loc 1 4036 0
 198 00b6 1A70     	 strb r2,[r3]
4039:../Dave/Generated/UCPROBE/lib_str.c **** }
 199              	 .loc 1 4039 0
 200 00b8 C2E7     	 b .L59
 201              	.LVL22:
 202              	.L8:
3898:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 203              	 .loc 1 3898 0
 204 00ba 0023     	 mov r3,#0
 205 00bc 6C78     	 ldrb r4,[r5,#1]
 206 00be 0393     	 str r3,[sp,#12]
3897:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_NO;
 207              	 .loc 1 3897 0
 208 00c0 0135     	 add r5,r5,#1
 209              	.LVL23:
 210              	.L7:
3919:../Dave/Generated/UCPROBE/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
 211              	 .loc 1 3919 0
 212 00c2 082E     	 cmp r6,#8
 213 00c4 52D0     	 beq .L12
 214 00c6 102E     	 cmp r6,#16
 215 00c8 06D0     	 beq .L13
 216 00ca 002E     	 cmp r6,#0
 217 00cc DCD1     	 bne .L71
3921:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 218              	 .loc 1 3921 0
 219 00ce 302C     	 cmp r4,#48
 220 00d0 6CD0     	 beq .L86
 221              	.LVL24:
 222              	.L43:
3919:../Dave/Generated/UCPROBE/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
 223              	 .loc 1 3919 0
 224 00d2 A846     	 mov r8,r5
3941:../Dave/Generated/UCPROBE/lib_str.c ****              }
 225              	 .loc 1 3941 0
 226 00d4 0A26     	 mov r6,#10
 227 00d6 D8E7     	 b .L11
 228              	.LVL25:
 229              	.L13:
3954:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 230              	 .loc 1 3954 0
 231 00d8 302C     	 cmp r4,#48
 232 00da 50D0     	 beq .L87
 233              	.LVL26:
 234              	.L38:
 235 00dc A846     	 mov r8,r5
 236 00de 1026     	 mov r6,#16
 237 00e0 D3E7     	 b .L11
 238              	.LVL27:
 239              	.L83:
3989:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_dig == DEF_YES) {
 240              	 .loc 1 3989 0
 241 00e2 201C     	 mov r0,r4
 242              	.LVL28:
 243 00e4 FFF7FEFF 	 bl ASCII_IsDig
 244              	.LVL29:
3990:../Dave/Generated/UCPROBE/lib_str.c ****                 parse_dig = (CPU_INT08U)(parse_char - '0');
 245              	 .loc 1 3990 0
 246 00e8 0128     	 cmp r0,#1
 247 00ea 1BD1     	 bne .L20
3991:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
 248              	 .loc 1 3991 0
 249 00ec 303C     	 sub r4,r4,#48
 250              	.LVL30:
 251 00ee E4B2     	 uxtb r4,r4
 252              	.LVL31:
 253              	.L21:
4001:../Dave/Generated/UCPROBE/lib_str.c ****                 if (ovf == DEF_NO) {                            /* ... & nbr NOT yet ovf'd,        
 254              	 .loc 1 4001 0
 255 00f0 A642     	 cmp r6,r4
 256 00f2 D4D9     	 bls .L19
4002:../Dave/Generated/UCPROBE/lib_str.c ****                     if (nbr <= Str_MultOvfThTbl_Int32U[nbr_base]) {
 257              	 .loc 1 4002 0
 258 00f4 5346     	 mov r3,r10
 259 00f6 002B     	 cmp r3,#0
 260 00f8 1CD1     	 bne .L40
4003:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... merge parse char dig into nb
 261              	 .loc 1 4003 0
 262 00fa 334B     	 ldr r3,.L90
 263 00fc 029A     	 ldr r2,[sp,#8]
 264 00fe D358     	 ldr r3,[r2,r3]
 265 0100 0193     	 str r3,[sp,#4]
4011:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 266              	 .loc 1 4011 0
 267 0102 0123     	 mov r3,#1
 268 0104 9A46     	 mov r10,r3
 269              	.LVL32:
4003:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... merge parse char dig into nb
 270              	 .loc 1 4003 0
 271 0106 019B     	 ldr r3,[sp,#4]
 272 0108 BB42     	 cmp r3,r7
 273 010a 05D3     	 bcc .L24
4005:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr += parse_dig;
 274              	 .loc 1 4005 0
 275 010c 7743     	 mul r7,r6
 276              	.LVL33:
4006:../Dave/Generated/UCPROBE/lib_str.c ****                         if (nbr < parse_dig) {
 277              	 .loc 1 4006 0
 278 010e E719     	 add r7,r4,r7
 279              	.LVL34:
4008:../Dave/Generated/UCPROBE/lib_str.c ****                         }
 280              	 .loc 1 4008 0
 281 0110 A742     	 cmp r7,r4
 282 0112 A441     	 sbc r4,r4,r4
 283              	.LVL35:
 284 0114 6342     	 neg r3,r4
 285 0116 9A46     	 mov r10,r3
 286              	.L24:
 287              	.LVL36:
4014:../Dave/Generated/UCPROBE/lib_str.c **** 
 288              	 .loc 1 4014 0
 289 0118 0123     	 mov r3,#1
 290 011a 9C46     	 mov ip,r3
 291 011c E044     	 add r8,r8,ip
 292              	.LVL37:
 293 011e 4346     	 mov r3,r8
 294 0120 1C78     	 ldrb r4,[r3]
 295 0122 B7E7     	 b .L25
 296              	.LVL38:
 297              	.L20:
3993:../Dave/Generated/UCPROBE/lib_str.c ****                 if (nbr_hex_lower == DEF_YES) {
 298              	 .loc 1 3993 0
 299 0124 201C     	 mov r0,r4
 300              	.LVL39:
 301 0126 FFF7FEFF 	 bl ASCII_IsLower
 302              	.LVL40:
3994:../Dave/Generated/UCPROBE/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'a') + 10u);
 303              	 .loc 1 3994 0
 304 012a 0128     	 cmp r0,#1
 305 012c 05D0     	 beq .L88
3997:../Dave/Generated/UCPROBE/lib_str.c ****                 }
 306              	 .loc 1 3997 0
 307 012e 373C     	 sub r4,r4,#55
 308              	.LVL41:
 309 0130 E4B2     	 uxtb r4,r4
 310              	.LVL42:
 311 0132 DDE7     	 b .L21
 312              	.LVL43:
 313              	.L40:
 314 0134 0123     	 mov r3,#1
 315 0136 9A46     	 mov r10,r3
 316              	.LVL44:
 317 0138 EEE7     	 b .L24
 318              	.LVL45:
 319              	.L88:
3995:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 320              	 .loc 1 3995 0
 321 013a 573C     	 sub r4,r4,#87
 322              	.LVL46:
 323 013c E4B2     	 uxtb r4,r4
 324              	.LVL47:
 325 013e D7E7     	 b .L21
 326              	.LVL48:
 327              	.L78:
3864:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&pstr_parse_unused;                                /* Prevent possible 'variable unuse
 328              	 .loc 1 3864 0
 329 0140 05AB     	 add r3,sp,#20
 330              	.LVL49:
 331 0142 9B46     	 mov fp,r3
 332              	.LVL50:
3867:../Dave/Generated/UCPROBE/lib_str.c **** 
 333              	 .loc 1 3867 0
 334 0144 4A46     	 mov r2,r9
 335              	.LVL51:
 336 0146 5B46     	 mov r3,fp
 337 0148 1A60     	 str r2,[r3]
3869:../Dave/Generated/UCPROBE/lib_str.c ****         pnbr_neg  = (CPU_BOOLEAN *)&nbr_neg_unused;             /* ... re-cfg NULL rtn ptr to unuse
 338              	 .loc 1 3869 0
 339 014a 109B     	 ldr r3,[sp,#64]
 340              	.LVL52:
 341 014c 002B     	 cmp r3,#0
 342 014e 00D0     	 beq .LCB406
 343 0150 6BE7     	 b .L3
 344              	.LCB406:
 345              	.L79:
3870:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&nbr_neg_unused;                                   /* Prevent possible 'variable unuse
 346              	 .loc 1 3870 0
 347 0152 04AA     	 add r2,sp,#16
 348 0154 9446     	 mov ip,r2
 349 0156 0333     	 add r3,r3,#3
 350 0158 6344     	 add r3,r3,ip
 351 015a 1093     	 str r3,[sp,#64]
 352              	.LVL53:
 353 015c 65E7     	 b .L3
 354              	.LVL54:
 355              	.L81:
3895:../Dave/Generated/UCPROBE/lib_str.c ****         case '+':                                               /* Ignore   pos sign (see Note #2a1
 356              	 .loc 1 3895 0
 357 015e 1C1C     	 mov r4,r3
3911:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 358              	 .loc 1 3911 0
 359 0160 0023     	 mov r3,#0
 360 0162 0393     	 str r3,[sp,#12]
 361 0164 ADE7     	 b .L7
 362              	.LVL55:
 363              	.L84:
4026:../Dave/Generated/UCPROBE/lib_str.c ****     }
 364              	 .loc 1 4026 0
 365 0166 0127     	 mov r7,#1
 366              	.LVL56:
 367 0168 7F42     	 neg r7,r7
 368 016a 9BE7     	 b .L26
 369              	.LVL57:
 370              	.L12:
3947:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 371              	 .loc 1 3947 0
 372 016c 302C     	 cmp r4,#48
 373 016e 02D0     	 beq .L89
 374              	.LVL58:
 375              	.L37:
 376 0170 A846     	 mov r8,r5
 377 0172 0826     	 mov r6,#8
 378 0174 89E7     	 b .L11
 379              	.LVL59:
 380              	.L89:
3948:../Dave/Generated/UCPROBE/lib_str.c ****              }
 381              	 .loc 1 3948 0
 382 0176 6B1C     	 add r3,r5,#1
 383 0178 9846     	 mov r8,r3
 384              	.LVL60:
 385 017a 6C78     	 ldrb r4,[r5,#1]
 386 017c 85E7     	 b .L11
 387              	.LVL61:
 388              	.L87:
3956:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':
 389              	 .loc 1 3956 0
 390 017e 6C78     	 ldrb r4,[r5,#1]
3955:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
 391              	 .loc 1 3955 0
 392 0180 6B1C     	 add r3,r5,#1
 393 0182 9846     	 mov r8,r3
 394              	.LVL62:
3956:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':
 395              	 .loc 1 3956 0
 396 0184 582C     	 cmp r4,#88
 397 0186 02D0     	 beq .L17
 398 0188 782C     	 cmp r4,#120
 399 018a 00D0     	 beq .LCB490
 400 018c 7DE7     	 b .L11
 401              	.LCB490:
 402              	.L17:
 403              	.LVL63:
3960:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 404              	 .loc 1 3960 0
 405 018e A878     	 ldrb r0,[r5,#2]
 406              	.LVL64:
 407 0190 FFF7FEFF 	 bl ASCII_IsDigHex
 408              	.LVL65:
3961:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 409              	 .loc 1 3961 0
 410 0194 0128     	 cmp r0,#1
 411 0196 12D0     	 beq .L18
 412 0198 6C78     	 ldrb r4,[r5,#1]
 413 019a 1026     	 mov r6,#16
 414 019c 75E7     	 b .L11
 415              	.LVL66:
 416              	.L85:
 417 019e C846     	 mov r8,r9
 418              	.LVL67:
 419 01a0 82E7     	 b .L27
 420              	.LVL68:
 421              	.L82:
3906:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 422              	 .loc 1 3906 0
 423 01a2 0123     	 mov r3,#1
 424 01a4 6C78     	 ldrb r4,[r5,#1]
 425 01a6 0393     	 str r3,[sp,#12]
3904:../Dave/Generated/UCPROBE/lib_str.c ****              }
 426              	 .loc 1 3904 0
 427 01a8 0135     	 add r5,r5,#1
 428              	.LVL69:
 429 01aa 8AE7     	 b .L7
 430              	.LVL70:
 431              	.L86:
3923:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
 432              	 .loc 1 3923 0
 433 01ac 6C78     	 ldrb r4,[r5,#1]
3922:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
 434              	 .loc 1 3922 0
 435 01ae 6B1C     	 add r3,r5,#1
 436 01b0 9846     	 mov r8,r3
 437              	.LVL71:
3923:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
 438              	 .loc 1 3923 0
 439 01b2 582C     	 cmp r4,#88
 440 01b4 EBD0     	 beq .L17
 441 01b6 782C     	 cmp r4,#120
 442 01b8 E9D0     	 beq .L17
 443 01ba 0826     	 mov r6,#8
 444 01bc 65E7     	 b .L11
 445              	.LVL72:
 446              	.L18:
3962:../Dave/Generated/UCPROBE/lib_str.c ****                            }
 447              	 .loc 1 3962 0
 448 01be AB1C     	 add r3,r5,#2
 449 01c0 9846     	 mov r8,r3
 450              	.LVL73:
 451 01c2 AC78     	 ldrb r4,[r5,#2]
 452 01c4 1026     	 mov r6,#16
 453 01c6 60E7     	 b .L11
 454              	.L91:
 455              	 .align 2
 456              	.L90:
 457 01c8 00000000 	 .word .LANCHOR0
 458              	 .cfi_endproc
 459              	.LFE23:
 461              	 .section .text.Str_Len,"ax",%progbits
 462              	 .align 2
 463              	 .global Str_Len
 464              	 .code 16
 465              	 .thumb_func
 467              	Str_Len:
 468              	.LFB0:
 220:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_SIZE_T  len;
 469              	 .loc 1 220 0
 470              	 .cfi_startproc
 471              	.LVL74:
 472              	.LBB18:
 473              	.LBB19:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 474              	 .loc 1 287 0
 475 0000 0028     	 cmp r0,#0
 476 0002 11D0     	 beq .L96
 477 0004 0378     	 ldrb r3,[r0]
 478 0006 002B     	 cmp r3,#0
 479 0008 0ED0     	 beq .L96
 480 000a 4142     	 neg r1,r0
 481 000c 0123     	 mov r3,#1
 482 000e 05E0     	 b .L94
 483              	.LVL75:
 484              	.L102:
 485 0010 C25C     	 ldrb r2,[r0,r3]
 486 0012 002A     	 cmp r2,#0
 487 0014 04D0     	 beq .L93
 488 0016 0133     	 add r3,r3,#1
 489              	.LVL76:
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 490              	 .loc 1 288 0
 491 0018 002B     	 cmp r3,#0
 492 001a 03D0     	 beq .L101
 493              	.LVL77:
 494              	.L94:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 495              	 .loc 1 287 0
 496 001c 8B42     	 cmp r3,r1
 497 001e F7D1     	 bne .L102
 498              	.LVL78:
 499              	.L93:
 500              	.LBE19:
 501              	.LBE18:
 228:../Dave/Generated/UCPROBE/lib_str.c **** 
 502              	 .loc 1 228 0
 503 0020 181C     	 mov r0,r3
 504              	.LVL79:
 505              	 
 506 0022 7047     	 bx lr
 507              	.LVL80:
 508              	.L101:
 509              	.LBB21:
 510              	.LBB20:
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 511              	 .loc 1 288 0
 512 0024 013B     	 sub r3,r3,#1
 513              	.LVL81:
 514 0026 FBE7     	 b .L93
 515              	.LVL82:
 516              	.L96:
 286:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 517              	 .loc 1 286 0
 518 0028 0023     	 mov r3,#0
 519 002a F9E7     	 b .L93
 520              	.LBE20:
 521              	.LBE21:
 522              	 .cfi_endproc
 523              	.LFE0:
 525              	 .section .text.Str_Len_N,"ax",%progbits
 526              	 .align 2
 527              	 .global Str_Len_N
 528              	 .code 16
 529              	 .thumb_func
 531              	Str_Len_N:
 532              	.LFB1:
 280:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_len;
 533              	 .loc 1 280 0
 534              	 .cfi_startproc
 535              	.LVL83:
 536 0000 10B5     	 push {r4,lr}
 537              	.LCFI3:
 538              	 .cfi_def_cfa_offset 8
 539              	 .cfi_offset 4,-8
 540              	 .cfi_offset 14,-4
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 541              	 .loc 1 287 0
 542 0002 0028     	 cmp r0,#0
 543 0004 13D0     	 beq .L108
 544 0006 0378     	 ldrb r3,[r0]
 545 0008 002B     	 cmp r3,#0
 546 000a 10D0     	 beq .L108
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 547              	 .loc 1 288 0
 548 000c 0029     	 cmp r1,#0
 549 000e 0ED0     	 beq .L108
 550 0010 4442     	 neg r4,r0
 551 0012 0131     	 add r1,r1,#1
 552              	.LVL84:
 553 0014 0123     	 mov r3,#1
 554 0016 06E0     	 b .L105
 555              	.LVL85:
 556              	.L113:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 557              	 .loc 1 287 0 discriminator 1
 558 0018 C25C     	 ldrb r2,[r0,r3]
 559 001a 002A     	 cmp r2,#0
 560 001c 05D0     	 beq .L104
 561 001e 5A1C     	 add r2,r3,#1
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 562              	 .loc 1 288 0
 563 0020 8A42     	 cmp r2,r1
 564 0022 02D0     	 beq .L104
 565 0024 131C     	 mov r3,r2
 566              	.LVL86:
 567              	.L105:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 568              	 .loc 1 287 0
 569 0026 A342     	 cmp r3,r4
 570 0028 F6D1     	 bne .L113
 571              	.LVL87:
 572              	.L104:
 295:../Dave/Generated/UCPROBE/lib_str.c **** 
 573              	 .loc 1 295 0
 574 002a 181C     	 mov r0,r3
 575              	.LVL88:
 576              	 
 577 002c 10BD     	 pop {r4,pc}
 578              	.LVL89:
 579              	.L108:
 286:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 580              	 .loc 1 286 0
 581 002e 0023     	 mov r3,#0
 582 0030 FBE7     	 b .L104
 583              	 .cfi_endproc
 584              	.LFE1:
 586 0032 C046     	 .section .text.Str_Copy,"ax",%progbits
 587              	 .align 2
 588              	 .global Str_Copy
 589              	 .code 16
 590              	 .thumb_func
 592              	Str_Copy:
 593              	.LFB2:
 352:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 594              	 .loc 1 352 0
 595              	 .cfi_startproc
 596              	.LVL90:
 597 0000 70B5     	 push {r4,r5,r6,lr}
 598              	.LCFI4:
 599              	 .cfi_def_cfa_offset 16
 600              	 .cfi_offset 4,-16
 601              	 .cfi_offset 5,-12
 602              	 .cfi_offset 6,-8
 603              	 .cfi_offset 14,-4
 604              	.LBB24:
 605              	.LBB25:
 449:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 606              	 .loc 1 449 0
 607 0002 0028     	 cmp r0,#0
 608 0004 15D0     	 beq .L117
 452:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 609              	 .loc 1 452 0
 610 0006 0029     	 cmp r1,#0
 611 0008 13D0     	 beq .L117
 612              	.LVL91:
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 613              	 .loc 1 463 0
 614 000a 0C78     	 ldrb r4,[r1]
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 615              	 .loc 1 462 0
 616 000c 002C     	 cmp r4,#0
 617 000e 17D0     	 beq .L121
 618 0010 461E     	 sub r6,r0,#1
 619 0012 4D42     	 neg r5,r1
 620 0014 031C     	 mov r3,r0
 621 0016 0122     	 mov r2,#1
 622 0018 07E0     	 b .L120
 623              	.LVL92:
 624              	.L130:
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 625              	 .loc 1 461 0
 626 001a AA42     	 cmp r2,r5
 627 001c 09D0     	 beq .L117
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 628              	 .loc 1 463 0
 629 001e 8C5C     	 ldrb r4,[r1,r2]
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 630              	 .loc 1 462 0
 631 0020 002C     	 cmp r4,#0
 632 0022 08D0     	 beq .L119
 633 0024 0132     	 add r2,r2,#1
 634              	.LVL93:
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 635              	 .loc 1 463 0
 636 0026 B342     	 cmp r3,r6
 637 0028 04D0     	 beq .L129
 638              	.LVL94:
 639              	.L120:
 465:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_dest++;
 640              	 .loc 1 465 0
 641 002a 1C70     	 strb r4,[r3]
 466:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_src++;
 642              	 .loc 1 466 0
 643 002c 0133     	 add r3,r3,#1
 644              	.LVL95:
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 645              	 .loc 1 461 0
 646 002e 002B     	 cmp r3,#0
 647 0030 F3D1     	 bne .L130
 648              	.LVL96:
 649              	.L117:
 450:../Dave/Generated/UCPROBE/lib_str.c ****     }
 650              	 .loc 1 450 0
 651 0032 0020     	 mov r0,#0
 652              	.LVL97:
 653              	.L129:
 654              	.LBE25:
 655              	.LBE24:
 361:../Dave/Generated/UCPROBE/lib_str.c **** 
 656              	 .loc 1 361 0
 657              	 
 658 0034 70BD     	 pop {r4,r5,r6,pc}
 659              	.LVL98:
 660              	.L119:
 661              	.LBB27:
 662              	.LBB26:
 476:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 663              	 .loc 1 476 0
 664 0036 0132     	 add r2,r2,#1
 665 0038 FCD0     	 beq .L129
 666              	.LVL99:
 667              	.L118:
 477:../Dave/Generated/UCPROBE/lib_str.c ****     }
 668              	 .loc 1 477 0
 669 003a 0022     	 mov r2,#0
 670 003c 1A70     	 strb r2,[r3]
 671 003e F9E7     	 b .L129
 672              	.LVL100:
 673              	.L121:
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 674              	 .loc 1 462 0
 675 0040 031C     	 mov r3,r0
 676 0042 FAE7     	 b .L118
 677              	.LBE26:
 678              	.LBE27:
 679              	 .cfi_endproc
 680              	.LFE2:
 682              	 .section .text.Str_Copy_N,"ax",%progbits
 683              	 .align 2
 684              	 .global Str_Copy_N
 685              	 .code 16
 686              	 .thumb_func
 688              	Str_Copy_N:
 689              	.LFB3:
 443:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
 690              	 .loc 1 443 0
 691              	 .cfi_startproc
 692              	.LVL101:
 693 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 694              	.LCFI5:
 695              	 .cfi_def_cfa_offset 20
 696              	 .cfi_offset 4,-20
 697              	 .cfi_offset 5,-16
 698              	 .cfi_offset 6,-12
 699              	 .cfi_offset 7,-8
 700              	 .cfi_offset 14,-4
 449:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 701              	 .loc 1 449 0
 702 0002 0028     	 cmp r0,#0
 703 0004 17D0     	 beq .L134
 452:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 704              	 .loc 1 452 0
 705 0006 0029     	 cmp r1,#0
 706 0008 15D0     	 beq .L134
 707              	.LVL102:
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 708              	 .loc 1 463 0
 709 000a 0D78     	 ldrb r5,[r1]
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 710              	 .loc 1 462 0
 711 000c 002D     	 cmp r5,#0
 712 000e 14D0     	 beq .L139
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 713              	 .loc 1 463 0
 714 0010 002A     	 cmp r2,#0
 715 0012 11D0     	 beq .L153
 716 0014 8718     	 add r7,r0,r2
 717 0016 4E42     	 neg r6,r1
 718 0018 031C     	 mov r3,r0
 719 001a 0124     	 mov r4,#1
 720 001c 07E0     	 b .L137
 721              	.LVL103:
 722              	.L154:
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 723              	 .loc 1 461 0 discriminator 1
 724 001e B442     	 cmp r4,r6
 725 0020 09D0     	 beq .L134
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 726              	 .loc 1 463 0
 727 0022 0D5D     	 ldrb r5,[r1,r4]
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 728              	 .loc 1 462 0
 729 0024 002D     	 cmp r5,#0
 730 0026 0AD0     	 beq .L135
 731 0028 0134     	 add r4,r4,#1
 732              	.LVL104:
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 733              	 .loc 1 463 0
 734 002a BB42     	 cmp r3,r7
 735 002c 04D0     	 beq .L153
 736              	.LVL105:
 737              	.L137:
 465:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_dest++;
 738              	 .loc 1 465 0
 739 002e 1D70     	 strb r5,[r3]
 466:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_src++;
 740              	 .loc 1 466 0
 741 0030 0133     	 add r3,r3,#1
 742              	.LVL106:
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 743              	 .loc 1 461 0
 744 0032 002B     	 cmp r3,#0
 745 0034 F3D1     	 bne .L154
 746              	.LVL107:
 747              	.L134:
 450:../Dave/Generated/UCPROBE/lib_str.c ****     }
 748              	 .loc 1 450 0
 749 0036 0020     	 mov r0,#0
 750              	.LVL108:
 751              	.L153:
 482:../Dave/Generated/UCPROBE/lib_str.c **** 
 752              	 .loc 1 482 0
 753              	 
 754 0038 F0BD     	 pop {r4,r5,r6,r7,pc}
 755              	.LVL109:
 756              	.L139:
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 757              	 .loc 1 462 0
 758 003a 031C     	 mov r3,r0
 759 003c 0024     	 mov r4,#0
 760              	.LVL110:
 761              	.L135:
 476:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 762              	 .loc 1 476 0
 763 003e A242     	 cmp r2,r4
 764 0040 FAD9     	 bls .L153
 477:../Dave/Generated/UCPROBE/lib_str.c ****     }
 765              	 .loc 1 477 0
 766 0042 0022     	 mov r2,#0
 767              	.LVL111:
 768 0044 1A70     	 strb r2,[r3]
 769 0046 F7E7     	 b .L153
 770              	 .cfi_endproc
 771              	.LFE3:
 773              	 .section .text.Str_Cat,"ax",%progbits
 774              	 .align 2
 775              	 .global Str_Cat
 776              	 .code 16
 777              	 .thumb_func
 779              	Str_Cat:
 780              	.LFB4:
 543:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 781              	 .loc 1 543 0
 782              	 .cfi_startproc
 783              	.LVL112:
 784 0000 10B5     	 push {r4,lr}
 785              	.LCFI6:
 786              	 .cfi_def_cfa_offset 8
 787              	 .cfi_offset 4,-8
 788              	 .cfi_offset 14,-4
 789              	.LBB32:
 790              	.LBB33:
 632:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 791              	 .loc 1 632 0
 792 0002 0028     	 cmp r0,#0
 793 0004 08D0     	 beq .L156
 635:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 794              	 .loc 1 635 0
 795 0006 0029     	 cmp r1,#0
 796 0008 06D0     	 beq .L156
 797 000a 031C     	 mov r3,r0
 798              	.L158:
 799              	.LVL113:
 800              	.LBB34:
 801              	.LBB35:
 645:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 802              	 .loc 1 645 0
 803 000c 1A78     	 ldrb r2,[r3]
 804 000e 002A     	 cmp r2,#0
 805 0010 04D0     	 beq .L186
 647:../Dave/Generated/UCPROBE/lib_str.c ****     }
 806              	 .loc 1 647 0
 807 0012 0133     	 add r3,r3,#1
 808              	.LVL114:
 645:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 809              	 .loc 1 645 0
 810 0014 002B     	 cmp r3,#0
 811 0016 F9D1     	 bne .L158
 812              	.LVL115:
 813              	.L156:
 814              	.LBE35:
 815              	.LBE34:
 633:../Dave/Generated/UCPROBE/lib_str.c ****     }
 816              	 .loc 1 633 0
 817 0018 0020     	 mov r0,#0
 818              	.LVL116:
 819              	.L185:
 820              	.LBE33:
 821              	.LBE32:
 552:../Dave/Generated/UCPROBE/lib_str.c **** 
 822              	 .loc 1 552 0
 823              	 
 824 001a 10BD     	 pop {r4,pc}
 825              	.LVL117:
 826              	.L186:
 827              	.LBB39:
 828              	.LBB38:
 829              	.LBB37:
 830              	.LBB36:
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 831              	 .loc 1 658 0
 832 001c 0A78     	 ldrb r2,[r1]
 833 001e 5C1E     	 sub r4,r3,#1
 657:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 834              	 .loc 1 657 0
 835 0020 002A     	 cmp r2,#0
 836 0022 07D1     	 bne .L162
 837 0024 0CE0     	 b .L161
 838              	.LVL118:
 839              	.L187:
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 840              	 .loc 1 656 0
 841 0026 0029     	 cmp r1,#0
 842 0028 F6D0     	 beq .L156
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 843              	 .loc 1 658 0
 844 002a 0A78     	 ldrb r2,[r1]
 657:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 845              	 .loc 1 657 0
 846 002c 002A     	 cmp r2,#0
 847 002e 07D0     	 beq .L161
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 848              	 .loc 1 658 0
 849 0030 A342     	 cmp r3,r4
 850 0032 05D0     	 beq .L161
 851              	.L162:
 660:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 852              	 .loc 1 660 0
 853 0034 1A70     	 strb r2,[r3]
 661:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_src++;
 854              	 .loc 1 661 0
 855 0036 0133     	 add r3,r3,#1
 856              	.LVL119:
 662:../Dave/Generated/UCPROBE/lib_str.c ****         len_cat++;
 857              	 .loc 1 662 0
 858 0038 0131     	 add r1,r1,#1
 859              	.LVL120:
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 860              	 .loc 1 656 0
 861 003a 002B     	 cmp r3,#0
 862 003c F3D1     	 bne .L187
 863 003e EBE7     	 b .L156
 864              	.L161:
 671:../Dave/Generated/UCPROBE/lib_str.c **** 
 865              	 .loc 1 671 0
 866 0040 0022     	 mov r2,#0
 867 0042 1A70     	 strb r2,[r3]
 868 0044 E9E7     	 b .L185
 869              	.LBE36:
 870              	.LBE37:
 871              	.LBE38:
 872              	.LBE39:
 873              	 .cfi_endproc
 874              	.LFE4:
 876 0046 C046     	 .section .text.Str_Cat_N,"ax",%progbits
 877              	 .align 2
 878              	 .global Str_Cat_N
 879              	 .code 16
 880              	 .thumb_func
 882              	Str_Cat_N:
 883              	.LFB5:
 626:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 884              	 .loc 1 626 0
 885              	 .cfi_startproc
 886              	.LVL121:
 887 0000 10B5     	 push {r4,lr}
 888              	.LCFI7:
 889              	 .cfi_def_cfa_offset 8
 890              	 .cfi_offset 4,-8
 891              	 .cfi_offset 14,-4
 632:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 892              	 .loc 1 632 0
 893 0002 0028     	 cmp r0,#0
 894 0004 0AD0     	 beq .L189
 635:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 895              	 .loc 1 635 0
 896 0006 0029     	 cmp r1,#0
 897 0008 08D0     	 beq .L189
 898 000a 031C     	 mov r3,r0
 639:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr_dest);
 899              	 .loc 1 639 0
 900 000c 002A     	 cmp r2,#0
 901 000e 06D0     	 beq .L210
 902              	.L192:
 903              	.LVL122:
 904              	.LBB42:
 905              	.LBB43:
 645:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 906              	 .loc 1 645 0
 907 0010 1C78     	 ldrb r4,[r3]
 908 0012 002C     	 cmp r4,#0
 909 0014 05D0     	 beq .L221
 910              	.LVL123:
 647:../Dave/Generated/UCPROBE/lib_str.c ****     }
 911              	 .loc 1 647 0
 912 0016 0133     	 add r3,r3,#1
 913              	.LVL124:
 645:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 914              	 .loc 1 645 0
 915 0018 002B     	 cmp r3,#0
 916 001a F9D1     	 bne .L192
 917              	.LVL125:
 918              	.L189:
 919              	.LBE43:
 920              	.LBE42:
 633:../Dave/Generated/UCPROBE/lib_str.c ****     }
 921              	 .loc 1 633 0
 922 001c 0023     	 mov r3,#0
 923              	.L210:
 675:../Dave/Generated/UCPROBE/lib_str.c **** 
 924              	 .loc 1 675 0
 925 001e 181C     	 mov r0,r3
 926              	.LVL126:
 927              	 
 928 0020 10BD     	 pop {r4,pc}
 929              	.LVL127:
 930              	.L221:
 931              	.LBB45:
 932              	.LBB44:
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 933              	 .loc 1 658 0
 934 0022 0C78     	 ldrb r4,[r1]
 935 0024 9A18     	 add r2,r3,r2
 936              	.LVL128:
 657:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 937              	 .loc 1 657 0
 938 0026 002C     	 cmp r4,#0
 939 0028 07D1     	 bne .L196
 940 002a 0CE0     	 b .L195
 941              	.LVL129:
 942              	.L222:
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 943              	 .loc 1 656 0
 944 002c 0029     	 cmp r1,#0
 945 002e F5D0     	 beq .L189
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 946              	 .loc 1 658 0
 947 0030 0C78     	 ldrb r4,[r1]
 657:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 948              	 .loc 1 657 0
 949 0032 002C     	 cmp r4,#0
 950 0034 07D0     	 beq .L195
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 951              	 .loc 1 658 0
 952 0036 9342     	 cmp r3,r2
 953 0038 05D0     	 beq .L195
 954              	.LVL130:
 955              	.L196:
 660:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 956              	 .loc 1 660 0
 957 003a 1C70     	 strb r4,[r3]
 661:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_src++;
 958              	 .loc 1 661 0
 959 003c 0133     	 add r3,r3,#1
 960              	.LVL131:
 662:../Dave/Generated/UCPROBE/lib_str.c ****         len_cat++;
 961              	 .loc 1 662 0
 962 003e 0131     	 add r1,r1,#1
 963              	.LVL132:
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 964              	 .loc 1 656 0
 965 0040 002B     	 cmp r3,#0
 966 0042 F3D1     	 bne .L222
 967 0044 EAE7     	 b .L189
 968              	.LVL133:
 969              	.L195:
 671:../Dave/Generated/UCPROBE/lib_str.c **** 
 970              	 .loc 1 671 0
 971 0046 0022     	 mov r2,#0
 972 0048 1A70     	 strb r2,[r3]
 973 004a 031C     	 mov r3,r0
 974 004c E7E7     	 b .L210
 975              	.LBE44:
 976              	.LBE45:
 977              	 .cfi_endproc
 978              	.LFE5:
 980 004e C046     	 .section .text.Str_Cmp,"ax",%progbits
 981              	 .align 2
 982              	 .global Str_Cmp
 983              	 .code 16
 984              	 .thumb_func
 986              	Str_Cmp:
 987              	.LFB6:
 755:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
 988              	 .loc 1 755 0
 989              	 .cfi_startproc
 990              	.LVL134:
 991 0000 70B5     	 push {r4,r5,r6,lr}
 992              	.LCFI8:
 993              	 .cfi_def_cfa_offset 16
 994              	 .cfi_offset 4,-16
 995              	 .cfi_offset 5,-12
 996              	 .cfi_offset 6,-8
 997              	 .cfi_offset 14,-4
 998              	.LBB50:
 999              	.LBB51:
 870:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 1000              	 .loc 1 870 0
 1001 0002 0028     	 cmp r0,#0
 1002 0004 2BD0     	 beq .L251
 877:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 1003              	 .loc 1 877 0
 1004 0006 0029     	 cmp r1,#0
 1005 0008 33D0     	 beq .L252
 1006              	.LVL135:
 1007              	.LBB52:
 1008              	.LBB53:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1009              	 .loc 1 891 0
 1010 000a 0378     	 ldrb r3,[r0]
 1011 000c 0E78     	 ldrb r6,[r1]
 887:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 1012              	 .loc 1 887 0
 1013 000e 451C     	 add r5,r0,#1
 1014              	.LVL136:
 888:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 1015              	 .loc 1 888 0
 1016 0010 4C1C     	 add r4,r1,#1
 1017              	.LVL137:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1018              	 .loc 1 891 0
 1019 0012 B342     	 cmp r3,r6
 1020 0014 18D1     	 bne .L250
 1021 0016 002B     	 cmp r3,#0
 1022 0018 1ED0     	 beq .L241
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1023              	 .loc 1 892 0
 1024 001a 002D     	 cmp r5,#0
 1025 001c 1AD0     	 beq .L229
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1026              	 .loc 1 893 0
 1027 001e 002C     	 cmp r4,#0
 1028 0020 25D0     	 beq .L230
 1029 0022 0022     	 mov r2,#0
 1030 0024 07E0     	 b .L234
 1031              	.LVL138:
 1032              	.L253:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1033              	 .loc 1 891 0
 1034 0026 002B     	 cmp r3,#0
 1035 0028 16D0     	 beq .L241
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1036              	 .loc 1 892 0
 1037 002a 002D     	 cmp r5,#0
 1038 002c 10D0     	 beq .L232
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1039              	 .loc 1 893 0
 1040 002e 002C     	 cmp r4,#0
 1041 0030 1BD0     	 beq .L233
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1042              	 .loc 1 894 0
 1043 0032 8C42     	 cmp r4,r1
 1044 0034 10D0     	 beq .L241
 1045              	.LVL139:
 1046              	.L234:
 900:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1047              	 .loc 1 900 0
 1048 0036 0132     	 add r2,r2,#1
 1049              	.LVL140:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1050              	 .loc 1 891 0
 1051 0038 835C     	 ldrb r3,[r0,r2]
 1052 003a 8E5C     	 ldrb r6,[r1,r2]
 898:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 1053              	 .loc 1 898 0
 1054 003c 0135     	 add r5,r5,#1
 1055              	.LVL141:
 899:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 1056              	 .loc 1 899 0
 1057 003e 0134     	 add r4,r4,#1
 1058              	.LVL142:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1059              	 .loc 1 891 0
 1060 0040 B342     	 cmp r3,r6
 1061 0042 F0D0     	 beq .L253
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1062              	 .loc 1 904 0
 1063 0044 0132     	 add r2,r2,#1
 1064 0046 07D0     	 beq .L241
 1065              	.LVL143:
 1066              	.L250:
 1067 0048 9BB2     	 uxth r3,r3
 910:../Dave/Generated/UCPROBE/lib_str.c **** 
 1068              	 .loc 1 910 0
 1069 004a 981B     	 sub r0,r3,r6
 1070              	.LVL144:
 1071 004c 80B2     	 uxth r0,r0
 1072 004e 04E0     	 b .L225
 1073              	.LVL145:
 1074              	.L232:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1075              	 .loc 1 904 0
 1076 0050 531C     	 add r3,r2,#1
 1077 0052 01D0     	 beq .L241
 1078              	.LVL146:
 1079              	.L229:
 917:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1080              	 .loc 1 917 0
 1081 0054 002C     	 cmp r4,#0
 1082 0056 0ED1     	 bne .L254
 1083              	.LVL147:
 1084              	.L241:
 1085              	.LBE53:
 1086              	.LBE52:
 872:../Dave/Generated/UCPROBE/lib_str.c ****         }
 1087              	 .loc 1 872 0
 1088 0058 0020     	 mov r0,#0
 1089              	.LVL148:
 1090              	.L225:
 1091              	.LBE51:
 1092              	.LBE50:
 763:../Dave/Generated/UCPROBE/lib_str.c **** }
 1093              	 .loc 1 763 0
 1094 005a 00B2     	 sxth r0,r0
 764:../Dave/Generated/UCPROBE/lib_str.c **** 
 1095              	 .loc 1 764 0
 1096              	 
 1097 005c 70BD     	 pop {r4,r5,r6,pc}
 1098              	.LVL149:
 1099              	.L251:
 1100              	.LBB59:
 1101              	.LBB58:
 871:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 1102              	 .loc 1 871 0
 1103 005e 0029     	 cmp r1,#0
 1104 0060 FAD0     	 beq .L241
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 1105              	 .loc 1 874 0
 1106 0062 0878     	 ldrb r0,[r1]
 1107              	.LVL150:
 1108 0064 4042     	 neg r0,r0
 1109 0066 80B2     	 uxth r0,r0
 1110 0068 F7E7     	 b .L225
 1111              	.LVL151:
 1112              	.L233:
 1113              	.LBB56:
 1114              	.LBB54:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1115              	 .loc 1 904 0
 1116 006a 531C     	 add r3,r2,#1
 1117 006c F4D0     	 beq .L241
 1118              	.LVL152:
 1119              	.L230:
 924:../Dave/Generated/UCPROBE/lib_str.c ****         }
 1120              	 .loc 1 924 0
 1121 006e 2878     	 ldrb r0,[r5]
 1122              	.LVL153:
 1123 0070 F3E7     	 b .L225
 1124              	.LVL154:
 1125              	.L252:
 1126              	.LBE54:
 1127              	.LBE56:
 878:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 1128              	 .loc 1 878 0
 1129 0072 0078     	 ldrb r0,[r0]
 1130              	.LVL155:
 1131 0074 F1E7     	 b .L225
 1132              	.LVL156:
 1133              	.L254:
 1134              	.LBB57:
 1135              	.LBB55:
 921:../Dave/Generated/UCPROBE/lib_str.c ****             }
 1136              	 .loc 1 921 0
 1137 0076 2078     	 ldrb r0,[r4]
 1138              	.LVL157:
 1139 0078 4042     	 neg r0,r0
 1140 007a 80B2     	 uxth r0,r0
 1141 007c EDE7     	 b .L225
 1142              	.LBE55:
 1143              	.LBE57:
 1144              	.LBE58:
 1145              	.LBE59:
 1146              	 .cfi_endproc
 1147              	.LFE6:
 1149 007e C046     	 .section .text.Str_Cmp_N,"ax",%progbits
 1150              	 .align 2
 1151              	 .global Str_Cmp_N
 1152              	 .code 16
 1153              	 .thumb_func
 1155              	Str_Cmp_N:
 1156              	.LFB7:
 857:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1157              	 .loc 1 857 0
 1158              	 .cfi_startproc
 1159              	.LVL158:
 867:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1160              	 .loc 1 867 0
 1161 0000 0023     	 mov r3,#0
 857:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1162              	 .loc 1 857 0
 1163 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 1164              	.LCFI9:
 1165              	 .cfi_def_cfa_offset 20
 1166              	 .cfi_offset 4,-20
 1167              	 .cfi_offset 5,-16
 1168              	 .cfi_offset 6,-12
 1169              	 .cfi_offset 7,-8
 1170              	 .cfi_offset 14,-4
 867:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1171              	 .loc 1 867 0
 1172 0004 9C46     	 mov ip,r3
 857:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1173              	 .loc 1 857 0
 1174 0006 051C     	 mov r5,r0
 866:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
 1175              	 .loc 1 866 0
 1176 0008 002A     	 cmp r2,#0
 1177 000a 26D0     	 beq .L256
 870:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 1178              	 .loc 1 870 0
 1179 000c 0028     	 cmp r0,#0
 1180 000e 31D0     	 beq .L285
 877:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 1181              	 .loc 1 877 0
 1182 0010 0029     	 cmp r1,#0
 1183 0012 2CD0     	 beq .L286
 1184              	.LVL159:
 1185              	.LBB62:
 1186              	.LBB63:
 887:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 1187              	 .loc 1 887 0
 1188 0014 461C     	 add r6,r0,#1
 1189              	.LVL160:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1190              	 .loc 1 891 0
 1191 0016 0478     	 ldrb r4,[r0]
 1192 0018 0878     	 ldrb r0,[r1]
 1193              	.LVL161:
 888:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 1194              	 .loc 1 888 0
 1195 001a 4F1C     	 add r7,r1,#1
 1196              	.LVL162:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1197              	 .loc 1 891 0
 1198 001c 8442     	 cmp r4,r0
 1199 001e 18D1     	 bne .L284
 1200 0020 002C     	 cmp r4,#0
 1201 0022 1AD0     	 beq .L256
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1202              	 .loc 1 892 0
 1203 0024 002E     	 cmp r6,#0
 1204 0026 1DD0     	 beq .L261
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1205              	 .loc 1 893 0
 1206 0028 002F     	 cmp r7,#0
 1207 002a 2ED0     	 beq .L262
 1208 002c 0023     	 mov r3,#0
 1209 002e 07E0     	 b .L266
 1210              	.LVL163:
 1211              	.L287:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1212              	 .loc 1 891 0
 1213 0030 002C     	 cmp r4,#0
 1214 0032 19D0     	 beq .L273
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1215              	 .loc 1 892 0
 1216 0034 002E     	 cmp r6,#0
 1217 0036 13D0     	 beq .L264
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1218              	 .loc 1 893 0
 1219 0038 002F     	 cmp r7,#0
 1220 003a 22D0     	 beq .L265
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1221              	 .loc 1 894 0
 1222 003c 9342     	 cmp r3,r2
 1223 003e 13D0     	 beq .L273
 1224              	.LVL164:
 1225              	.L266:
 900:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1226              	 .loc 1 900 0
 1227 0040 0133     	 add r3,r3,#1
 1228              	.LVL165:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1229              	 .loc 1 891 0
 1230 0042 EC5C     	 ldrb r4,[r5,r3]
 1231 0044 C85C     	 ldrb r0,[r1,r3]
 898:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 1232              	 .loc 1 898 0
 1233 0046 0136     	 add r6,r6,#1
 1234              	.LVL166:
 899:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 1235              	 .loc 1 899 0
 1236 0048 0137     	 add r7,r7,#1
 1237              	.LVL167:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1238              	 .loc 1 891 0
 1239 004a 8442     	 cmp r4,r0
 1240 004c F0D0     	 beq .L287
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1241              	 .loc 1 904 0
 1242 004e 9A42     	 cmp r2,r3
 1243 0050 0AD0     	 beq .L273
 1244              	.LVL168:
 1245              	.L284:
 1246 0052 A4B2     	 uxth r4,r4
 910:../Dave/Generated/UCPROBE/lib_str.c **** 
 1247              	 .loc 1 910 0
 1248 0054 251A     	 sub r5,r4,r0
 1249              	.LVL169:
 1250 0056 ABB2     	 uxth r3,r5
 1251 0058 9C46     	 mov ip,r3
 1252              	.LVL170:
 1253              	.L256:
 1254 005a 6346     	 mov r3,ip
 1255              	.LBE63:
 1256              	.LBE62:
 930:../Dave/Generated/UCPROBE/lib_str.c **** 
 1257              	 .loc 1 930 0
 1258              	 
 1259 005c 18B2     	 sxth r0,r3
 1260 005e F0BD     	 pop {r4,r5,r6,r7,pc}
 1261              	.LVL171:
 1262              	.L264:
 1263              	.LBB66:
 1264              	.LBB64:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1265              	 .loc 1 904 0
 1266 0060 9A42     	 cmp r2,r3
 1267 0062 01D0     	 beq .L273
 1268              	.LVL172:
 1269              	.L261:
 917:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1270              	 .loc 1 917 0
 1271 0064 002F     	 cmp r7,#0
 1272 0066 13D1     	 bne .L288
 1273              	.L273:
 1274              	.LBE64:
 1275              	.LBE66:
 867:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1276              	 .loc 1 867 0
 1277 0068 0023     	 mov r3,#0
 1278 006a 9C46     	 mov ip,r3
 1279 006c F5E7     	 b .L256
 1280              	.LVL173:
 1281              	.L286:
 878:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 1282              	 .loc 1 878 0
 1283 006e 0378     	 ldrb r3,[r0]
 1284 0070 9C46     	 mov ip,r3
 879:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1285              	 .loc 1 879 0
 1286 0072 F2E7     	 b .L256
 1287              	.L285:
 871:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 1288              	 .loc 1 871 0
 1289 0074 0029     	 cmp r1,#0
 1290 0076 F0D0     	 beq .L256
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 1291              	 .loc 1 874 0
 1292 0078 0D78     	 ldrb r5,[r1]
 1293 007a 6D42     	 neg r5,r5
 1294 007c ABB2     	 uxth r3,r5
 1295 007e 9C46     	 mov ip,r3
 875:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1296              	 .loc 1 875 0
 1297 0080 EBE7     	 b .L256
 1298              	.LVL174:
 1299              	.L265:
 867:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1300              	 .loc 1 867 0
 1301 0082 0021     	 mov r1,#0
 1302              	.LVL175:
 1303 0084 8C46     	 mov ip,r1
 1304              	.LBB67:
 1305              	.LBB65:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1306              	 .loc 1 904 0
 1307 0086 9A42     	 cmp r2,r3
 1308 0088 E7D0     	 beq .L256
 1309              	.LVL176:
 1310              	.L262:
 924:../Dave/Generated/UCPROBE/lib_str.c ****         }
 1311              	 .loc 1 924 0
 1312 008a 3378     	 ldrb r3,[r6]
 1313 008c 9C46     	 mov ip,r3
 1314 008e E4E7     	 b .L256
 1315              	.LVL177:
 1316              	.L288:
 921:../Dave/Generated/UCPROBE/lib_str.c ****             }
 1317              	 .loc 1 921 0
 1318 0090 3D78     	 ldrb r5,[r7]
 1319              	.LVL178:
 1320 0092 6D42     	 neg r5,r5
 1321 0094 ABB2     	 uxth r3,r5
 1322 0096 9C46     	 mov ip,r3
 1323 0098 DFE7     	 b .L256
 1324              	.LBE65:
 1325              	.LBE67:
 1326              	 .cfi_endproc
 1327              	.LFE7:
 1329 009a C046     	 .section .text.Str_CmpIgnoreCase,"ax",%progbits
 1330              	 .align 2
 1331              	 .global Str_CmpIgnoreCase
 1332              	 .code 16
 1333              	 .thumb_func
 1335              	Str_CmpIgnoreCase:
 1336              	.LFB8:
1020:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
 1337              	 .loc 1 1020 0
 1338              	 .cfi_startproc
 1339              	.LVL179:
 1340 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1341              	.LCFI10:
 1342              	 .cfi_def_cfa_offset 24
 1343              	 .cfi_offset 3,-24
 1344              	 .cfi_offset 4,-20
 1345              	 .cfi_offset 5,-16
 1346              	 .cfi_offset 6,-12
 1347              	 .cfi_offset 7,-8
 1348              	 .cfi_offset 14,-4
 1349 0002 4F46     	 mov r7,r9
 1350 0004 4646     	 mov r6,r8
 1351 0006 8846     	 mov r8,r1
 1352 0008 C0B4     	 push {r6,r7}
 1353              	.LCFI11:
 1354              	 .cfi_def_cfa_offset 32
 1355              	 .cfi_offset 8,-32
 1356              	 .cfi_offset 9,-28
1020:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
 1357              	 .loc 1 1020 0
 1358 000a 071E     	 sub r7,r0,#0
 1359              	.LBB72:
 1360              	.LBB73:
1147:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 1361              	 .loc 1 1147 0
 1362 000c 44D0     	 beq .L334
1155:../Dave/Generated/UCPROBE/lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
 1363              	 .loc 1 1155 0
 1364 000e 0029     	 cmp r1,#0
 1365 0010 4AD0     	 beq .L335
 1366              	.LVL180:
 1367              	.LBB74:
 1368              	.LBB75:
1166:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 1369              	 .loc 1 1166 0
 1370 0012 461C     	 add r6,r0,#1
 1371              	.LVL181:
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1372              	 .loc 1 1168 0
 1373 0014 0078     	 ldrb r0,[r0]
 1374              	.LVL182:
1167:../Dave/Generated/UCPROBE/lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
 1375              	 .loc 1 1167 0
 1376 0016 4D1C     	 add r5,r1,#1
 1377              	.LVL183:
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1378              	 .loc 1 1168 0
 1379 0018 FFF7FEFF 	 bl ASCII_ToLower
 1380              	.LVL184:
1169:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 1381              	 .loc 1 1169 0
 1382 001c 4346     	 mov r3,r8
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1383              	 .loc 1 1168 0
 1384 001e 8146     	 mov r9,r0
 1385              	.LVL185:
1169:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 1386              	 .loc 1 1169 0
 1387 0020 1878     	 ldrb r0,[r3]
 1388              	.LVL186:
 1389 0022 FFF7FEFF 	 bl ASCII_ToLower
 1390              	.LVL187:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1391              	 .loc 1 1172 0
 1392 0026 8145     	 cmp r9,r0
 1393 0028 20D1     	 bne .L294
 1394 002a 3B78     	 ldrb r3,[r7]
 1395 002c 002B     	 cmp r3,#0
 1396 002e 27D0     	 beq .L301
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1397              	 .loc 1 1173 0
 1398 0030 002E     	 cmp r6,#0
 1399 0032 25D0     	 beq .L301
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1400              	 .loc 1 1174 0
 1401 0034 002D     	 cmp r5,#0
 1402 0036 23D0     	 beq .L301
 1403 0038 0024     	 mov r4,#0
 1404 003a 08E0     	 b .L298
 1405              	.LVL188:
 1406              	.L336:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1407              	 .loc 1 1172 0
 1408 003c 3B5D     	 ldrb r3,[r7,r4]
 1409 003e 002B     	 cmp r3,#0
 1410 0040 1CD0     	 beq .L297
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1411              	 .loc 1 1173 0
 1412 0042 002E     	 cmp r6,#0
 1413 0044 1AD0     	 beq .L297
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1414              	 .loc 1 1174 0
 1415 0046 002D     	 cmp r5,#0
 1416 0048 18D0     	 beq .L297
1175:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1417              	 .loc 1 1175 0
 1418 004a 4545     	 cmp r5,r8
 1419 004c 22D0     	 beq .L299
 1420              	.LVL189:
 1421              	.L298:
1181:../Dave/Generated/UCPROBE/lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
 1422              	 .loc 1 1181 0
 1423 004e 0134     	 add r4,r4,#1
 1424              	.LVL190:
1182:../Dave/Generated/UCPROBE/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 1425              	 .loc 1 1182 0
 1426 0050 385D     	 ldrb r0,[r7,r4]
 1427 0052 FFF7FEFF 	 bl ASCII_ToLower
 1428              	.LVL191:
1183:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1429              	 .loc 1 1183 0
 1430 0056 4346     	 mov r3,r8
1182:../Dave/Generated/UCPROBE/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 1431              	 .loc 1 1182 0
 1432 0058 8146     	 mov r9,r0
1183:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1433              	 .loc 1 1183 0
 1434 005a 185D     	 ldrb r0,[r3,r4]
1179:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 1435              	 .loc 1 1179 0
 1436 005c 0136     	 add r6,r6,#1
 1437              	.LVL192:
1180:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 1438              	 .loc 1 1180 0
 1439 005e 0135     	 add r5,r5,#1
 1440              	.LVL193:
1183:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1441              	 .loc 1 1183 0
 1442 0060 FFF7FEFF 	 bl ASCII_ToLower
 1443              	.LVL194:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1444              	 .loc 1 1172 0
 1445 0064 8145     	 cmp r9,r0
 1446 0066 E9D0     	 beq .L336
1187:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1447              	 .loc 1 1187 0
 1448 0068 631C     	 add r3,r4,#1
 1449 006a 13D0     	 beq .L299
 1450              	.LVL195:
 1451              	.L294:
1193:../Dave/Generated/UCPROBE/lib_str.c **** 
 1452              	 .loc 1 1193 0
 1453 006c 4B46     	 mov r3,r9
 1454 006e 181A     	 sub r0,r3,r0
 1455              	.LVL196:
 1456 0070 80B2     	 uxth r0,r0
 1457              	.LVL197:
 1458              	.L292:
 1459              	.LBE75:
 1460              	.LBE74:
 1461              	.LBE73:
 1462              	.LBE72:
1028:../Dave/Generated/UCPROBE/lib_str.c **** }
 1463              	 .loc 1 1028 0
 1464 0072 00B2     	 sxth r0,r0
1029:../Dave/Generated/UCPROBE/lib_str.c **** 
 1465              	 .loc 1 1029 0
 1466              	 
 1467              	.LVL198:
 1468              	.LVL199:
 1469 0074 0CBC     	 pop {r2,r3}
 1470 0076 9046     	 mov r8,r2
 1471 0078 9946     	 mov r9,r3
 1472 007a F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1473              	.LVL200:
 1474              	.L297:
 1475              	.LBB81:
 1476              	.LBB80:
 1477              	.LBB78:
 1478              	.LBB76:
1187:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1479              	 .loc 1 1187 0
 1480 007c 631C     	 add r3,r4,#1
 1481 007e 09D0     	 beq .L299
 1482              	.LVL201:
 1483              	.L301:
1195:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 1484              	 .loc 1 1195 0
 1485 0080 4B46     	 mov r3,r9
 1486 0082 002B     	 cmp r3,#0
 1487 0084 06D0     	 beq .L299
1199:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 1488              	 .loc 1 1199 0
 1489 0086 002E     	 cmp r6,#0
 1490 0088 13D0     	 beq .L337
1208:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
 1491              	 .loc 1 1208 0
 1492 008a 3078     	 ldrb r0,[r6]
 1493              	.LVL202:
 1494 008c FFF7FEFF 	 bl ASCII_ToLower
 1495              	.LVL203:
1209:../Dave/Generated/UCPROBE/lib_str.c ****         }
 1496              	 .loc 1 1209 0
 1497 0090 80B2     	 uxth r0,r0
 1498              	.LVL204:
 1499 0092 EEE7     	 b .L292
 1500              	.LVL205:
 1501              	.L299:
 1502              	.LBE76:
 1503              	.LBE78:
1149:../Dave/Generated/UCPROBE/lib_str.c ****         }
 1504              	 .loc 1 1149 0
 1505 0094 0020     	 mov r0,#0
 1506 0096 ECE7     	 b .L292
 1507              	.LVL206:
 1508              	.L334:
1148:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 1509              	 .loc 1 1148 0
 1510 0098 0029     	 cmp r1,#0
 1511 009a FBD0     	 beq .L299
1151:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
 1512              	 .loc 1 1151 0
 1513 009c 0878     	 ldrb r0,[r1]
 1514              	.LVL207:
 1515 009e FFF7FEFF 	 bl ASCII_ToLower
 1516              	.LVL208:
1152:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 1517              	 .loc 1 1152 0
 1518 00a2 4042     	 neg r0,r0
 1519              	.LVL209:
 1520 00a4 80B2     	 uxth r0,r0
 1521 00a6 E4E7     	 b .L292
 1522              	.LVL210:
 1523              	.L335:
1156:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
 1524              	 .loc 1 1156 0
 1525 00a8 0078     	 ldrb r0,[r0]
 1526              	.LVL211:
 1527 00aa FFF7FEFF 	 bl ASCII_ToLower
 1528              	.LVL212:
1157:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 1529              	 .loc 1 1157 0
 1530 00ae 80B2     	 uxth r0,r0
 1531              	.LVL213:
 1532 00b0 DFE7     	 b .L292
 1533              	.LVL214:
 1534              	.L337:
 1535              	.LBB79:
 1536              	.LBB77:
1200:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1537              	 .loc 1 1200 0
 1538 00b2 002D     	 cmp r5,#0
 1539 00b4 EED0     	 beq .L299
1203:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
 1540              	 .loc 1 1203 0
 1541 00b6 2878     	 ldrb r0,[r5]
 1542              	.LVL215:
 1543 00b8 FFF7FEFF 	 bl ASCII_ToLower
 1544              	.LVL216:
1205:../Dave/Generated/UCPROBE/lib_str.c ****             }
 1545              	 .loc 1 1205 0
 1546 00bc 4042     	 neg r0,r0
 1547              	.LVL217:
 1548 00be 80B2     	 uxth r0,r0
 1549 00c0 D7E7     	 b .L292
 1550              	.LBE77:
 1551              	.LBE79:
 1552              	.LBE80:
 1553              	.LBE81:
 1554              	 .cfi_endproc
 1555              	.LFE8:
 1557 00c2 C046     	 .section .text.Str_CmpIgnoreCase_N,"ax",%progbits
 1558              	 .align 2
 1559              	 .global Str_CmpIgnoreCase_N
 1560              	 .code 16
 1561              	 .thumb_func
 1563              	Str_CmpIgnoreCase_N:
 1564              	.LFB9:
1132:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1565              	 .loc 1 1132 0
 1566              	 .cfi_startproc
 1567              	.LVL218:
 1568 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1569              	.LCFI12:
 1570              	 .cfi_def_cfa_offset 24
 1571              	 .cfi_offset 3,-24
 1572              	 .cfi_offset 4,-20
 1573              	 .cfi_offset 5,-16
 1574              	 .cfi_offset 6,-12
 1575              	 .cfi_offset 7,-8
 1576              	 .cfi_offset 14,-4
 1577 0002 4F46     	 mov r7,r9
 1578 0004 4646     	 mov r6,r8
 1579 0006 C0B4     	 push {r6,r7}
 1580              	.LCFI13:
 1581              	 .cfi_def_cfa_offset 32
 1582              	 .cfi_offset 8,-32
 1583              	 .cfi_offset 9,-28
1143:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
 1584              	 .loc 1 1143 0
 1585 0008 002A     	 cmp r2,#0
 1586 000a 3AD0     	 beq .L342
 1587 000c 9146     	 mov r9,r2
 1588 000e 0C1C     	 mov r4,r1
 1589 0010 071E     	 sub r7,r0,#0
1147:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 1590              	 .loc 1 1147 0
 1591 0012 48D0     	 beq .L380
1155:../Dave/Generated/UCPROBE/lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
 1592              	 .loc 1 1155 0
 1593 0014 0029     	 cmp r1,#0
 1594 0016 3AD0     	 beq .L381
 1595              	.LVL219:
 1596              	.LBB84:
 1597              	.LBB85:
1166:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 1598              	 .loc 1 1166 0
 1599 0018 461C     	 add r6,r0,#1
 1600              	.LVL220:
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1601              	 .loc 1 1168 0
 1602 001a 0078     	 ldrb r0,[r0]
 1603              	.LVL221:
1167:../Dave/Generated/UCPROBE/lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
 1604              	 .loc 1 1167 0
 1605 001c 4D1C     	 add r5,r1,#1
 1606              	.LVL222:
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1607              	 .loc 1 1168 0
 1608 001e FFF7FEFF 	 bl ASCII_ToLower
 1609              	.LVL223:
 1610 0022 8046     	 mov r8,r0
 1611              	.LVL224:
1169:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 1612              	 .loc 1 1169 0
 1613 0024 2078     	 ldrb r0,[r4]
 1614              	.LVL225:
 1615 0026 FFF7FEFF 	 bl ASCII_ToLower
 1616              	.LVL226:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1617              	 .loc 1 1172 0
 1618 002a 8045     	 cmp r8,r0
 1619 002c 20D1     	 bne .L344
 1620 002e 3B78     	 ldrb r3,[r7]
 1621 0030 002B     	 cmp r3,#0
 1622 0032 23D0     	 beq .L350
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1623              	 .loc 1 1173 0
 1624 0034 002E     	 cmp r6,#0
 1625 0036 21D0     	 beq .L350
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1626              	 .loc 1 1174 0
 1627 0038 002D     	 cmp r5,#0
 1628 003a 1FD0     	 beq .L350
 1629 003c 0024     	 mov r4,#0
 1630              	.LVL227:
 1631 003e 08E0     	 b .L348
 1632              	.LVL228:
 1633              	.L382:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1634              	 .loc 1 1172 0
 1635 0040 3B5D     	 ldrb r3,[r7,r4]
 1636 0042 002B     	 cmp r3,#0
 1637 0044 18D0     	 beq .L347
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1638              	 .loc 1 1173 0
 1639 0046 002E     	 cmp r6,#0
 1640 0048 16D0     	 beq .L347
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1641              	 .loc 1 1174 0
 1642 004a 002D     	 cmp r5,#0
 1643 004c 14D0     	 beq .L347
1175:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1644              	 .loc 1 1175 0
 1645 004e 4C45     	 cmp r4,r9
 1646 0050 17D0     	 beq .L342
 1647              	.LVL229:
 1648              	.L348:
1181:../Dave/Generated/UCPROBE/lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
 1649              	 .loc 1 1181 0
 1650 0052 0134     	 add r4,r4,#1
 1651              	.LVL230:
1182:../Dave/Generated/UCPROBE/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 1652              	 .loc 1 1182 0
 1653 0054 385D     	 ldrb r0,[r7,r4]
 1654 0056 FFF7FEFF 	 bl ASCII_ToLower
 1655              	.LVL231:
1180:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 1656              	 .loc 1 1180 0
 1657 005a 0135     	 add r5,r5,#1
 1658              	.LVL232:
 1659 005c 6B1E     	 sub r3,r5,#1
1182:../Dave/Generated/UCPROBE/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 1660              	 .loc 1 1182 0
 1661 005e 8046     	 mov r8,r0
1183:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1662              	 .loc 1 1183 0
 1663 0060 1878     	 ldrb r0,[r3]
1179:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 1664              	 .loc 1 1179 0
 1665 0062 0136     	 add r6,r6,#1
 1666              	.LVL233:
1183:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1667              	 .loc 1 1183 0
 1668 0064 FFF7FEFF 	 bl ASCII_ToLower
 1669              	.LVL234:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1670              	 .loc 1 1172 0
 1671 0068 8045     	 cmp r8,r0
 1672 006a E9D0     	 beq .L382
1187:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1673              	 .loc 1 1187 0
 1674 006c A145     	 cmp r9,r4
 1675 006e 08D0     	 beq .L342
 1676              	.LVL235:
 1677              	.L344:
1193:../Dave/Generated/UCPROBE/lib_str.c **** 
 1678              	 .loc 1 1193 0
 1679 0070 4346     	 mov r3,r8
 1680 0072 181A     	 sub r0,r3,r0
 1681              	.LVL236:
 1682 0074 80B2     	 uxth r0,r0
 1683 0076 05E0     	 b .L340
 1684              	.LVL237:
 1685              	.L347:
1187:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1686              	 .loc 1 1187 0
 1687 0078 A145     	 cmp r9,r4
 1688 007a 02D0     	 beq .L342
 1689              	.LVL238:
 1690              	.L350:
1195:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 1691              	 .loc 1 1195 0
 1692 007c 4346     	 mov r3,r8
 1693 007e 002B     	 cmp r3,#0
 1694 0080 0AD1     	 bne .L383
 1695              	.LVL239:
 1696              	.L342:
 1697              	.LBE85:
 1698              	.LBE84:
1144:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1699              	 .loc 1 1144 0
 1700 0082 0020     	 mov r0,#0
 1701              	.L340:
 1702 0084 00B2     	 sxth r0,r0
1215:../Dave/Generated/UCPROBE/lib_str.c **** 
 1703              	 .loc 1 1215 0
 1704              	 
 1705 0086 0CBC     	 pop {r2,r3}
 1706 0088 9046     	 mov r8,r2
 1707 008a 9946     	 mov r9,r3
 1708 008c F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1709              	.LVL240:
 1710              	.L381:
1156:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
 1711              	 .loc 1 1156 0
 1712 008e 0078     	 ldrb r0,[r0]
 1713              	.LVL241:
 1714 0090 FFF7FEFF 	 bl ASCII_ToLower
 1715              	.LVL242:
1157:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 1716              	 .loc 1 1157 0
 1717 0094 80B2     	 uxth r0,r0
 1718              	.LVL243:
1158:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1719              	 .loc 1 1158 0
 1720 0096 F5E7     	 b .L340
 1721              	.LVL244:
 1722              	.L383:
 1723              	.LBB88:
 1724              	.LBB86:
1199:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 1725              	 .loc 1 1199 0
 1726 0098 002E     	 cmp r6,#0
 1727 009a 0CD0     	 beq .L384
1208:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
 1728              	 .loc 1 1208 0
 1729 009c 3078     	 ldrb r0,[r6]
 1730              	.LVL245:
 1731 009e FFF7FEFF 	 bl ASCII_ToLower
 1732              	.LVL246:
1209:../Dave/Generated/UCPROBE/lib_str.c ****         }
 1733              	 .loc 1 1209 0
 1734 00a2 80B2     	 uxth r0,r0
 1735              	.LVL247:
 1736 00a4 EEE7     	 b .L340
 1737              	.LVL248:
 1738              	.L380:
 1739              	.LBE86:
 1740              	.LBE88:
1148:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 1741              	 .loc 1 1148 0
 1742 00a6 0029     	 cmp r1,#0
 1743 00a8 EBD0     	 beq .L342
1151:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
 1744              	 .loc 1 1151 0
 1745 00aa 0878     	 ldrb r0,[r1]
 1746              	.LVL249:
 1747 00ac FFF7FEFF 	 bl ASCII_ToLower
 1748              	.LVL250:
1152:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 1749              	 .loc 1 1152 0
 1750 00b0 4042     	 neg r0,r0
 1751              	.LVL251:
 1752 00b2 80B2     	 uxth r0,r0
1153:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1753              	 .loc 1 1153 0
 1754 00b4 E6E7     	 b .L340
 1755              	.LVL252:
 1756              	.L384:
 1757              	.LBB89:
 1758              	.LBB87:
1200:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1759              	 .loc 1 1200 0
 1760 00b6 002D     	 cmp r5,#0
 1761 00b8 E3D0     	 beq .L342
1203:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
 1762              	 .loc 1 1203 0
 1763 00ba 2878     	 ldrb r0,[r5]
 1764              	.LVL253:
 1765 00bc FFF7FEFF 	 bl ASCII_ToLower
 1766              	.LVL254:
1205:../Dave/Generated/UCPROBE/lib_str.c ****             }
 1767              	 .loc 1 1205 0
 1768 00c0 4042     	 neg r0,r0
 1769              	.LVL255:
 1770 00c2 80B2     	 uxth r0,r0
 1771 00c4 DEE7     	 b .L340
 1772              	.LBE87:
 1773              	.LBE89:
 1774              	 .cfi_endproc
 1775              	.LFE9:
 1777 00c6 C046     	 .section .text.Str_Char,"ax",%progbits
 1778              	 .align 2
 1779              	 .global Str_Char
 1780              	 .code 16
 1781              	 .thumb_func
 1783              	Str_Char:
 1784              	.LFB10:
1272:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 1785              	 .loc 1 1272 0
 1786              	 .cfi_startproc
 1787              	.LVL256:
 1788 0000 30B5     	 push {r4,r5,lr}
 1789              	.LCFI14:
 1790              	 .cfi_def_cfa_offset 12
 1791              	 .cfi_offset 4,-12
 1792              	 .cfi_offset 5,-8
 1793              	 .cfi_offset 14,-4
 1794              	.LBB92:
 1795              	.LBB93:
1358:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1796              	 .loc 1 1358 0
 1797 0002 0028     	 cmp r0,#0
 1798 0004 0CD0     	 beq .L394
 1799 0006 031C     	 mov r3,r0
 1800 0008 441E     	 sub r4,r0,#1
 1801              	.L387:
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1802              	 .loc 1 1371 0
 1803 000a 1A78     	 ldrb r2,[r3]
 1804 000c 1D1A     	 sub r5,r3,r0
 1805              	.LVL257:
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1806              	 .loc 1 1370 0
 1807 000e 002A     	 cmp r2,#0
 1808 0010 08D0     	 beq .L388
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1809              	 .loc 1 1371 0
 1810 0012 9142     	 cmp r1,r2
 1811 0014 0DD0     	 beq .L389
1372:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
 1812              	 .loc 1 1372 0
 1813 0016 A342     	 cmp r3,r4
 1814 0018 02D0     	 beq .L394
1374:../Dave/Generated/UCPROBE/lib_str.c ****         len_srch++;
 1815              	 .loc 1 1374 0
 1816 001a 0133     	 add r3,r3,#1
 1817              	.LVL258:
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1818              	 .loc 1 1370 0
 1819 001c 002B     	 cmp r3,#0
 1820 001e F4D1     	 bne .L387
 1821              	.LVL259:
 1822              	.L394:
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1823              	 .loc 1 1359 0
 1824 0020 0020     	 mov r0,#0
 1825              	.LVL260:
 1826              	.L398:
 1827              	.LBE93:
 1828              	.LBE92:
1281:../Dave/Generated/UCPROBE/lib_str.c **** 
 1829              	 .loc 1 1281 0
 1830              	 
 1831 0022 30BD     	 pop {r4,r5,pc}
 1832              	.LVL261:
 1833              	.L388:
 1834              	.LBB95:
 1835              	.LBB94:
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1836              	 .loc 1 1359 0
 1837 0024 0020     	 mov r0,#0
 1838              	.LVL262:
1383:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1839              	 .loc 1 1383 0
 1840 0026 6A1C     	 add r2,r5,#1
 1841 0028 FBD0     	 beq .L398
1387:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 1842              	 .loc 1 1387 0
 1843 002a 0029     	 cmp r1,#0
 1844 002c F9D1     	 bne .L398
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1845              	 .loc 1 1359 0
 1846 002e 181C     	 mov r0,r3
 1847 0030 F7E7     	 b .L398
 1848              	.LVL263:
 1849              	.L389:
 1850 0032 0020     	 mov r0,#0
 1851              	.LVL264:
1383:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1852              	 .loc 1 1383 0
 1853 0034 6A1C     	 add r2,r5,#1
 1854 0036 F4D0     	 beq .L398
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1855              	 .loc 1 1359 0
 1856 0038 181C     	 mov r0,r3
 1857 003a F2E7     	 b .L398
 1858              	.LBE94:
 1859              	.LBE95:
 1860              	 .cfi_endproc
 1861              	.LFE10:
 1863              	 .section .text.Str_Char_N,"ax",%progbits
 1864              	 .align 2
 1865              	 .global Str_Char_N
 1866              	 .code 16
 1867              	 .thumb_func
 1869              	Str_Char_N:
 1870              	.LFB11:
1353:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
 1871              	 .loc 1 1353 0
 1872              	 .cfi_startproc
 1873              	.LVL265:
 1874 0000 70B5     	 push {r4,r5,r6,lr}
 1875              	.LCFI15:
 1876              	 .cfi_def_cfa_offset 16
 1877              	 .cfi_offset 4,-16
 1878              	 .cfi_offset 5,-12
 1879              	 .cfi_offset 6,-8
 1880              	 .cfi_offset 14,-4
1358:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1881              	 .loc 1 1358 0
 1882 0002 0028     	 cmp r0,#0
 1883 0004 0ED0     	 beq .L413
1362:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1884              	 .loc 1 1362 0
 1885 0006 0029     	 cmp r1,#0
 1886 0008 0CD0     	 beq .L413
 1887 000a 031C     	 mov r3,r0
 1888 000c 4518     	 add r5,r0,r1
 1889              	.L405:
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1890              	 .loc 1 1371 0 discriminator 1
 1891 000e 1C78     	 ldrb r4,[r3]
 1892 0010 1E1A     	 sub r6,r3,r0
 1893              	.LVL266:
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1894              	 .loc 1 1370 0 discriminator 1
 1895 0012 002C     	 cmp r4,#0
 1896 0014 08D0     	 beq .L406
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1897              	 .loc 1 1371 0
 1898 0016 9442     	 cmp r4,r2
 1899 0018 0DD0     	 beq .L407
1372:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
 1900              	 .loc 1 1372 0
 1901 001a AB42     	 cmp r3,r5
 1902 001c 02D0     	 beq .L413
1374:../Dave/Generated/UCPROBE/lib_str.c ****         len_srch++;
 1903              	 .loc 1 1374 0
 1904 001e 0133     	 add r3,r3,#1
 1905              	.LVL267:
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1906              	 .loc 1 1370 0
 1907 0020 002B     	 cmp r3,#0
 1908 0022 F4D1     	 bne .L405
 1909              	.LVL268:
 1910              	.L413:
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1911              	 .loc 1 1359 0
 1912 0024 0020     	 mov r0,#0
 1913              	.LVL269:
 1914              	.L417:
1393:../Dave/Generated/UCPROBE/lib_str.c **** 
 1915              	 .loc 1 1393 0
 1916              	 
 1917 0026 70BD     	 pop {r4,r5,r6,pc}
 1918              	.LVL270:
 1919              	.L406:
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1920              	 .loc 1 1359 0
 1921 0028 0020     	 mov r0,#0
 1922              	.LVL271:
1383:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1923              	 .loc 1 1383 0
 1924 002a 8E42     	 cmp r6,r1
 1925 002c FBD2     	 bcs .L417
1387:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 1926              	 .loc 1 1387 0
 1927 002e 002A     	 cmp r2,#0
 1928 0030 F9D1     	 bne .L417
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1929              	 .loc 1 1359 0
 1930 0032 181C     	 mov r0,r3
 1931 0034 F7E7     	 b .L417
 1932              	.LVL272:
 1933              	.L407:
 1934 0036 0020     	 mov r0,#0
 1935              	.LVL273:
1383:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1936              	 .loc 1 1383 0
 1937 0038 8E42     	 cmp r6,r1
 1938 003a F4D2     	 bcs .L417
1359:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1939              	 .loc 1 1359 0
 1940 003c 181C     	 mov r0,r3
 1941 003e F2E7     	 b .L417
 1942              	 .cfi_endproc
 1943              	.LFE11:
 1945              	 .section .text.Str_Char_Last,"ax",%progbits
 1946              	 .align 2
 1947              	 .global Str_Char_Last
 1948              	 .code 16
 1949              	 .thumb_func
 1951              	Str_Char_Last:
 1952              	.LFB12:
1449:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 1953              	 .loc 1 1449 0
 1954              	 .cfi_startproc
 1955              	.LVL274:
 1956 0000 10B5     	 push {r4,lr}
 1957              	.LCFI16:
 1958              	 .cfi_def_cfa_offset 8
 1959              	 .cfi_offset 4,-8
 1960              	 .cfi_offset 14,-4
 1961              	.LBB100:
 1962              	.LBB101:
1538:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1963              	 .loc 1 1538 0
 1964 0002 0028     	 cmp r0,#0
 1965 0004 1DD0     	 beq .L431
 1966 0006 021C     	 mov r2,r0
 1967 0008 0023     	 mov r3,#0
 1968              	.L423:
 1969              	.LVL275:
 1970              	.LBB102:
 1971              	.LBB103:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 1972              	 .loc 1 287 0
 1973 000a 1478     	 ldrb r4,[r2]
 1974 000c 002C     	 cmp r4,#0
 1975 000e 05D0     	 beq .L424
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 1976              	 .loc 1 288 0
 1977 0010 9C1C     	 add r4,r3,#2
 1978 0012 03D0     	 beq .L424
 290:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 1979              	 .loc 1 290 0
 1980 0014 0132     	 add r2,r2,#1
 1981              	.LVL276:
 291:../Dave/Generated/UCPROBE/lib_str.c ****     }
 1982              	 .loc 1 291 0
 1983 0016 0133     	 add r3,r3,#1
 1984              	.LVL277:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 1985              	 .loc 1 287 0
 1986 0018 002A     	 cmp r2,#0
 1987 001a F6D1     	 bne .L423
 1988              	.L424:
 1989              	.LBE103:
 1990              	.LBE102:
1550:../Dave/Generated/UCPROBE/lib_str.c **** 
 1991              	 .loc 1 1550 0
 1992 001c C318     	 add r3,r0,r3
 1993              	.LVL278:
1552:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1994              	 .loc 1 1552 0
 1995 001e 002B     	 cmp r3,#0
 1996 0020 0FD0     	 beq .L431
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1997              	 .loc 1 1556 0
 1998 0022 9842     	 cmp r0,r3
 1999 0024 03D1     	 bne .L438
 2000 0026 07E0     	 b .L426
 2001              	.LVL279:
 2002              	.L439:
1558:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2003              	 .loc 1 1558 0
 2004 0028 013B     	 sub r3,r3,#1
 2005              	.LVL280:
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 2006              	 .loc 1 1556 0
 2007 002a 9842     	 cmp r0,r3
 2008 002c 04D0     	 beq .L426
 2009              	.L438:
 2010 002e 1A78     	 ldrb r2,[r3]
 2011 0030 8A42     	 cmp r2,r1
 2012 0032 F9D1     	 bne .L439
 2013              	.LVL281:
 2014              	.L429:
1539:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2015              	 .loc 1 1539 0
 2016 0034 181C     	 mov r0,r3
 2017              	.LVL282:
 2018              	.L421:
 2019              	.LBE101:
 2020              	.LBE100:
1458:../Dave/Generated/UCPROBE/lib_str.c **** 
 2021              	 .loc 1 1458 0
 2022              	 
 2023 0036 10BD     	 pop {r4,pc}
 2024              	.LVL283:
 2025              	.L426:
 2026              	.LBB105:
 2027              	.LBB104:
1562:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 2028              	 .loc 1 1562 0
 2029 0038 1A78     	 ldrb r2,[r3]
1539:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2030              	 .loc 1 1539 0
 2031 003a 0020     	 mov r0,#0
 2032              	.LVL284:
1562:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 2033              	 .loc 1 1562 0
 2034 003c 8A42     	 cmp r2,r1
 2035 003e F9D0     	 beq .L429
 2036 0040 F9E7     	 b .L421
 2037              	.LVL285:
 2038              	.L431:
1539:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2039              	 .loc 1 1539 0
 2040 0042 0020     	 mov r0,#0
 2041              	.LVL286:
 2042 0044 F7E7     	 b .L421
 2043              	.LBE104:
 2044              	.LBE105:
 2045              	 .cfi_endproc
 2046              	.LFE12:
 2048 0046 C046     	 .section .text.Str_Char_Last_N,"ax",%progbits
 2049              	 .align 2
 2050              	 .global Str_Char_Last_N
 2051              	 .code 16
 2052              	 .thumb_func
 2054              	Str_Char_Last_N:
 2055              	.LFB13:
1532:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
 2056              	 .loc 1 1532 0
 2057              	 .cfi_startproc
 2058              	.LVL287:
 2059 0000 30B5     	 push {r4,r5,lr}
 2060              	.LCFI17:
 2061              	 .cfi_def_cfa_offset 12
 2062              	 .cfi_offset 4,-12
 2063              	 .cfi_offset 5,-8
 2064              	 .cfi_offset 14,-4
1538:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2065              	 .loc 1 1538 0
 2066 0002 0028     	 cmp r0,#0
 2067 0004 20D0     	 beq .L451
1542:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2068              	 .loc 1 1542 0
 2069 0006 0029     	 cmp r1,#0
 2070 0008 1ED0     	 beq .L451
 2071              	.LVL288:
1548:../Dave/Generated/UCPROBE/lib_str.c ****      str_len     = Str_Len_N(pstr_char, str_len_max);
 2072              	 .loc 1 1548 0
 2073 000a 041C     	 mov r4,r0
 2074              	.LBB106:
 2075              	.LBB107:
 286:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 2076              	 .loc 1 286 0
 2077 000c 0023     	 mov r3,#0
 2078              	.LBE107:
 2079              	.LBE106:
1548:../Dave/Generated/UCPROBE/lib_str.c ****      str_len     = Str_Len_N(pstr_char, str_len_max);
 2080              	 .loc 1 1548 0
 2081 000e 0139     	 sub r1,r1,#1
 2082              	.LVL289:
 2083              	.L442:
 2084              	.LBB109:
 2085              	.LBB108:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2086              	 .loc 1 287 0
 2087 0010 2578     	 ldrb r5,[r4]
 2088 0012 002D     	 cmp r5,#0
 2089 0014 05D0     	 beq .L443
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 2090              	 .loc 1 288 0
 2091 0016 9942     	 cmp r1,r3
 2092 0018 03D0     	 beq .L443
 290:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 2093              	 .loc 1 290 0
 2094 001a 0134     	 add r4,r4,#1
 2095              	.LVL290:
 291:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2096              	 .loc 1 291 0
 2097 001c 0133     	 add r3,r3,#1
 2098              	.LVL291:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2099              	 .loc 1 287 0
 2100 001e 002C     	 cmp r4,#0
 2101 0020 F6D1     	 bne .L442
 2102              	.L443:
 2103              	.LBE108:
 2104              	.LBE109:
1550:../Dave/Generated/UCPROBE/lib_str.c **** 
 2105              	 .loc 1 1550 0
 2106 0022 C318     	 add r3,r0,r3
 2107              	.LVL292:
1552:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2108              	 .loc 1 1552 0
 2109 0024 002B     	 cmp r3,#0
 2110 0026 0FD0     	 beq .L451
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 2111              	 .loc 1 1556 0
 2112 0028 9842     	 cmp r0,r3
 2113 002a 03D1     	 bne .L460
 2114 002c 07E0     	 b .L445
 2115              	.LVL293:
 2116              	.L461:
1558:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2117              	 .loc 1 1558 0
 2118 002e 013B     	 sub r3,r3,#1
 2119              	.LVL294:
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 2120              	 .loc 1 1556 0
 2121 0030 9842     	 cmp r0,r3
 2122 0032 04D0     	 beq .L445
 2123              	.L460:
 2124 0034 1978     	 ldrb r1,[r3]
 2125 0036 9142     	 cmp r1,r2
 2126 0038 F9D1     	 bne .L461
 2127              	.LVL295:
 2128              	.L448:
1567:../Dave/Generated/UCPROBE/lib_str.c **** }
 2129              	 .loc 1 1567 0
 2130 003a 181C     	 mov r0,r3
 2131              	.LVL296:
 2132              	.L441:
1568:../Dave/Generated/UCPROBE/lib_str.c **** 
 2133              	 .loc 1 1568 0
 2134              	 
 2135 003c 30BD     	 pop {r4,r5,pc}
 2136              	.LVL297:
 2137              	.L445:
1562:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 2138              	 .loc 1 1562 0
 2139 003e 1978     	 ldrb r1,[r3]
1539:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2140              	 .loc 1 1539 0
 2141 0040 0020     	 mov r0,#0
 2142              	.LVL298:
1562:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 2143              	 .loc 1 1562 0
 2144 0042 9142     	 cmp r1,r2
 2145 0044 F9D0     	 beq .L448
 2146 0046 F9E7     	 b .L441
 2147              	.LVL299:
 2148              	.L451:
1539:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2149              	 .loc 1 1539 0
 2150 0048 0020     	 mov r0,#0
 2151              	.LVL300:
 2152 004a F7E7     	 b .L441
 2153              	 .cfi_endproc
 2154              	.LFE13:
 2156              	 .section .text.Str_Char_Replace,"ax",%progbits
 2157              	 .align 2
 2158              	 .global Str_Char_Replace
 2159              	 .code 16
 2160              	 .thumb_func
 2162              	Str_Char_Replace:
 2163              	.LFB14:
1611:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 2164              	 .loc 1 1611 0
 2165              	 .cfi_startproc
 2166              	.LVL301:
 2167 0000 30B5     	 push {r4,r5,lr}
 2168              	.LCFI18:
 2169              	 .cfi_def_cfa_offset 12
 2170              	 .cfi_offset 4,-12
 2171              	 .cfi_offset 5,-8
 2172              	 .cfi_offset 14,-4
 2173              	.LBB110:
 2174              	.LBB111:
1679:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2175              	 .loc 1 1679 0
 2176 0002 0028     	 cmp r0,#0
 2177 0004 11D0     	 beq .L468
 2178 0006 451E     	 sub r5,r0,#1
 2179 0008 031C     	 mov r3,r0
 2180 000a 02E0     	 b .L464
 2181              	.LVL302:
 2182              	.L465:
1698:../Dave/Generated/UCPROBE/lib_str.c ****         len--;
 2183              	 .loc 1 1698 0
 2184 000c 0133     	 add r3,r3,#1
 2185              	.LVL303:
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 2186              	 .loc 1 1690 0
 2187 000e 002B     	 cmp r3,#0
 2188 0010 0AD0     	 beq .L463
 2189              	.LVL304:
 2190              	.L464:
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 2191              	 .loc 1 1691 0
 2192 0012 1C78     	 ldrb r4,[r3]
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 2193              	 .loc 1 1690 0
 2194 0014 002C     	 cmp r4,#0
 2195 0016 07D0     	 beq .L463
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 2196              	 .loc 1 1691 0
 2197 0018 AB42     	 cmp r3,r5
 2198 001a 05D0     	 beq .L463
1694:../Dave/Generated/UCPROBE/lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
 2199              	 .loc 1 1694 0
 2200 001c A142     	 cmp r1,r4
 2201 001e F5D1     	 bne .L465
1695:../Dave/Generated/UCPROBE/lib_str.c ****         }
 2202              	 .loc 1 1695 0
 2203 0020 1A70     	 strb r2,[r3]
1698:../Dave/Generated/UCPROBE/lib_str.c ****         len--;
 2204              	 .loc 1 1698 0
 2205 0022 0133     	 add r3,r3,#1
 2206              	.LVL305:
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 2207              	 .loc 1 1690 0
 2208 0024 002B     	 cmp r3,#0
 2209 0026 F4D1     	 bne .L464
 2210              	.LVL306:
 2211              	.L463:
 2212              	.LBE111:
 2213              	.LBE110:
1621:../Dave/Generated/UCPROBE/lib_str.c **** 
 2214              	 .loc 1 1621 0
 2215              	 
 2216 0028 30BD     	 pop {r4,r5,pc}
 2217              	.LVL307:
 2218              	.L468:
 2219              	.LBB113:
 2220              	.LBB112:
1680:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2221              	 .loc 1 1680 0
 2222 002a 0020     	 mov r0,#0
 2223              	.LVL308:
 2224 002c FCE7     	 b .L463
 2225              	.LBE112:
 2226              	.LBE113:
 2227              	 .cfi_endproc
 2228              	.LFE14:
 2230              	 .section .text.Str_Char_Replace_N,"ax",%progbits
 2231              	 .align 2
 2232              	 .global Str_Char_Replace_N
 2233              	 .code 16
 2234              	 .thumb_func
 2236              	Str_Char_Replace_N:
 2237              	.LFB15:
1674:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR    *pstr_char;
 2238              	 .loc 1 1674 0
 2239              	 .cfi_startproc
 2240              	.LVL309:
 2241 0000 30B5     	 push {r4,r5,lr}
 2242              	.LCFI19:
 2243              	 .cfi_def_cfa_offset 12
 2244              	 .cfi_offset 4,-12
 2245              	 .cfi_offset 5,-8
 2246              	 .cfi_offset 14,-4
1679:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2247              	 .loc 1 1679 0
 2248 0002 0028     	 cmp r0,#0
 2249 0004 13D0     	 beq .L480
1683:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2250              	 .loc 1 1683 0
 2251 0006 002B     	 cmp r3,#0
 2252 0008 11D0     	 beq .L480
 2253 000a C318     	 add r3,r0,r3
 2254              	.LVL310:
 2255 000c 041C     	 mov r4,r0
 2256 000e 02E0     	 b .L475
 2257              	.LVL311:
 2258              	.L476:
1698:../Dave/Generated/UCPROBE/lib_str.c ****         len--;
 2259              	 .loc 1 1698 0
 2260 0010 0134     	 add r4,r4,#1
 2261              	.LVL312:
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 2262              	 .loc 1 1690 0
 2263 0012 002C     	 cmp r4,#0
 2264 0014 0AD0     	 beq .L474
 2265              	.LVL313:
 2266              	.L475:
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 2267              	 .loc 1 1691 0 discriminator 1
 2268 0016 2578     	 ldrb r5,[r4]
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 2269              	 .loc 1 1690 0 discriminator 1
 2270 0018 002D     	 cmp r5,#0
 2271 001a 07D0     	 beq .L474
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 2272              	 .loc 1 1691 0
 2273 001c 9C42     	 cmp r4,r3
 2274 001e 05D0     	 beq .L474
1694:../Dave/Generated/UCPROBE/lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
 2275              	 .loc 1 1694 0
 2276 0020 8D42     	 cmp r5,r1
 2277 0022 F5D1     	 bne .L476
1695:../Dave/Generated/UCPROBE/lib_str.c ****         }
 2278              	 .loc 1 1695 0
 2279 0024 2270     	 strb r2,[r4]
1698:../Dave/Generated/UCPROBE/lib_str.c ****         len--;
 2280              	 .loc 1 1698 0
 2281 0026 0134     	 add r4,r4,#1
 2282              	.LVL314:
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 2283              	 .loc 1 1690 0
 2284 0028 002C     	 cmp r4,#0
 2285 002a F4D1     	 bne .L475
 2286              	.LVL315:
 2287              	.L474:
1703:../Dave/Generated/UCPROBE/lib_str.c **** 
 2288              	 .loc 1 1703 0
 2289              	 
 2290 002c 30BD     	 pop {r4,r5,pc}
 2291              	.LVL316:
 2292              	.L480:
1680:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2293              	 .loc 1 1680 0
 2294 002e 0020     	 mov r0,#0
 2295              	.LVL317:
 2296 0030 FCE7     	 b .L474
 2297              	 .cfi_endproc
 2298              	.LFE15:
 2300 0032 C046     	 .section .text.Str_Str,"ax",%progbits
 2301              	 .align 2
 2302              	 .global Str_Str
 2303              	 .code 16
 2304              	 .thumb_func
 2306              	Str_Str:
 2307              	.LFB16:
1768:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 2308              	 .loc 1 1768 0
 2309              	 .cfi_startproc
 2310              	.LVL318:
 2311 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2312              	.LCFI20:
 2313              	 .cfi_def_cfa_offset 20
 2314              	 .cfi_offset 4,-20
 2315              	 .cfi_offset 5,-16
 2316              	 .cfi_offset 6,-12
 2317              	 .cfi_offset 7,-8
 2318              	 .cfi_offset 14,-4
 2319 0002 4D46     	 mov r5,r9
 2320 0004 5F46     	 mov r7,fp
 2321 0006 5646     	 mov r6,r10
 2322 0008 4446     	 mov r4,r8
 2323 000a F0B4     	 push {r4,r5,r6,r7}
 2324              	.LCFI21:
 2325              	 .cfi_def_cfa_offset 36
 2326              	 .cfi_offset 8,-36
 2327              	 .cfi_offset 9,-32
 2328              	 .cfi_offset 10,-28
 2329              	 .cfi_offset 11,-24
 2330 000c 8146     	 mov r9,r0
 2331 000e 83B0     	 sub sp,sp,#12
 2332              	.LCFI22:
 2333              	 .cfi_def_cfa_offset 48
1768:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 2334              	 .loc 1 1768 0
 2335 0010 8C46     	 mov ip,r1
 2336              	.LBB124:
 2337              	.LBB125:
1865:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2338              	 .loc 1 1865 0
 2339 0012 0028     	 cmp r0,#0
 2340 0014 67D0     	 beq .L546
1868:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2341              	 .loc 1 1868 0
 2342 0016 0029     	 cmp r1,#0
 2343 0018 65D0     	 beq .L546
 2344 001a 031C     	 mov r3,r0
 2345 001c 0021     	 mov r1,#0
 2346              	.LVL319:
 2347              	.L488:
 2348              	.LBB126:
 2349              	.LBB127:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2350              	 .loc 1 287 0
 2351 001e 1A78     	 ldrb r2,[r3]
 2352 0020 002A     	 cmp r2,#0
 2353 0022 05D0     	 beq .L489
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 2354              	 .loc 1 288 0
 2355 0024 4A1C     	 add r2,r1,#1
 2356 0026 03D0     	 beq .L489
 290:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 2357              	 .loc 1 290 0
 2358 0028 0133     	 add r3,r3,#1
 2359              	.LVL320:
 291:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2360              	 .loc 1 291 0
 2361 002a 0131     	 add r1,r1,#1
 2362              	.LVL321:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2363              	 .loc 1 287 0
 2364 002c 002B     	 cmp r3,#0
 2365 002e F6D1     	 bne .L488
 2366              	.L489:
 2367              	.LVL322:
 2368              	.LBE127:
 2369              	.LBE126:
1868:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2370              	 .loc 1 1868 0
 2371 0030 6346     	 mov r3,ip
 2372              	.LVL323:
 2373              	.LBB128:
 2374              	.LBB129:
 286:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 2375              	 .loc 1 286 0
 2376 0032 0027     	 mov r7,#0
 2377              	.LVL324:
 2378              	.L491:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2379              	 .loc 1 287 0
 2380 0034 1A78     	 ldrb r2,[r3]
 2381 0036 002A     	 cmp r2,#0
 2382 0038 6FD0     	 beq .L493
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 2383              	 .loc 1 288 0
 2384 003a 7A1C     	 add r2,r7,#1
 2385 003c 03D0     	 beq .L495
 290:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 2386              	 .loc 1 290 0
 2387 003e 0133     	 add r3,r3,#1
 2388              	.LVL325:
 291:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2389              	 .loc 1 291 0
 2390 0040 0137     	 add r7,r7,#1
 2391              	.LVL326:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2392              	 .loc 1 287 0
 2393 0042 002B     	 cmp r3,#0
 2394 0044 F6D1     	 bne .L491
 2395              	.L495:
 2396              	.LBE129:
 2397              	.LBE128:
1885:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2398              	 .loc 1 1885 0
 2399 0046 B942     	 cmp r1,r7
 2400 0048 4DD3     	 bcc .L546
 2401              	.LVL327:
1889:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 2402              	 .loc 1 1889 0
 2403 004a 4B46     	 mov r3,r9
 2404              	.LVL328:
 2405 004c 5B18     	 add r3,r3,r1
1890:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2406              	 .loc 1 1890 0
 2407 004e 002B     	 cmp r3,#0
 2408 0050 49D0     	 beq .L546
 2409              	.LVL329:
1893:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 2410              	 .loc 1 1893 0
 2411 0052 6346     	 mov r3,ip
 2412 0054 DB19     	 add r3,r3,r7
 2413              	.LVL330:
1894:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2414              	 .loc 1 1894 0
 2415 0056 002B     	 cmp r3,#0
 2416 0058 45D0     	 beq .L546
1899:../Dave/Generated/UCPROBE/lib_str.c ****     srch_ix   = 0u;
 2417              	 .loc 1 1899 0
 2418 005a CB1B     	 sub r3,r1,r7
 2419              	.LVL331:
 2420 005c 9846     	 mov r8,r3
 2421              	.LVL332:
 2422 005e 6346     	 mov r3,ip
 2423              	.LVL333:
 2424 0060 1B78     	 ldrb r3,[r3]
 2425              	.LBB130:
 2426              	.LBB131:
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 2427              	 .loc 1 874 0
 2428 0062 6446     	 mov r4,ip
 2429 0064 9A46     	 mov r10,r3
 2430              	.LBB132:
 2431              	.LBB133:
 888:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 2432              	 .loc 1 888 0
 2433 0066 0123     	 mov r3,#1
 2434 0068 6344     	 add r3,r3,ip
 2435 006a 9B46     	 mov fp,r3
 2436 006c 4B46     	 mov r3,r9
 2437 006e 591C     	 add r1,r3,#1
 2438              	.LVL334:
 2439              	.LBE133:
 2440              	.LBE132:
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 2441              	 .loc 1 874 0
 2442 0070 5346     	 mov r3,r10
 2443 0072 5B42     	 neg r3,r3
 2444 0074 9BB2     	 uxth r3,r3
 2445 0076 0193     	 str r3,[sp,#4]
 2446 0078 5B46     	 mov r3,fp
 2447 007a C446     	 mov ip,r8
 2448              	.LVL335:
 2449              	.LBB138:
 2450              	.LBB134:
 888:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 2451              	 .loc 1 888 0
 2452 007c 4846     	 mov r0,r9
 2453              	.LVL336:
 2454              	.LBE134:
 2455              	.LBE138:
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 2456              	 .loc 1 874 0
 2457 007e D046     	 mov r8,r10
 2458              	.LVL337:
 2459 0080 8A46     	 mov r10,r1
 2460 0082 0093     	 str r3,[sp]
 2461              	.LVL338:
 2462              	.L507:
 870:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 2463              	 .loc 1 870 0
 2464 0084 0028     	 cmp r0,#0
 2465 0086 46D0     	 beq .L547
 2466              	.LVL339:
 2467              	.LBB139:
 2468              	.LBB135:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2469              	 .loc 1 891 0
 2470 0088 0278     	 ldrb r2,[r0]
 887:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 2471              	 .loc 1 887 0
 2472 008a 5146     	 mov r1,r10
 2473              	.LVL340:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2474              	 .loc 1 891 0
 2475 008c 9045     	 cmp r8,r2
 2476 008e 48D1     	 bne .L498
 2477 0090 4346     	 mov r3,r8
 2478 0092 002B     	 cmp r3,#0
 2479 0094 28D0     	 beq .L532
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 2480              	 .loc 1 892 0
 2481 0096 0029     	 cmp r1,#0
 2482 0098 45D0     	 beq .L500
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 2483              	 .loc 1 893 0
 2484 009a 009A     	 ldr r2,[sp]
 2485 009c 002A     	 cmp r2,#0
 2486 009e 38D0     	 beq .L508
 2487 00a0 161C     	 mov r6,r2
 2488 00a2 0023     	 mov r3,#0
 2489 00a4 9346     	 mov fp,r2
 2490 00a6 07E0     	 b .L505
 2491              	.LVL341:
 2492              	.L548:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2493              	 .loc 1 891 0
 2494 00a8 002A     	 cmp r2,#0
 2495 00aa 1DD0     	 beq .L532
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 2496              	 .loc 1 892 0
 2497 00ac 0029     	 cmp r1,#0
 2498 00ae 22D0     	 beq .L503
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 2499              	 .loc 1 893 0
 2500 00b0 002E     	 cmp r6,#0
 2501 00b2 2AD0     	 beq .L504
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 2502              	 .loc 1 894 0
 2503 00b4 BB42     	 cmp r3,r7
 2504 00b6 17D0     	 beq .L532
 2505              	.LVL342:
 2506              	.L505:
 900:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2507              	 .loc 1 900 0
 2508 00b8 0133     	 add r3,r3,#1
 2509              	.LVL343:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2510              	 .loc 1 891 0
 2511 00ba C25C     	 ldrb r2,[r0,r3]
 2512 00bc E55C     	 ldrb r5,[r4,r3]
 898:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 2513              	 .loc 1 898 0
 2514 00be 0131     	 add r1,r1,#1
 2515              	.LVL344:
 899:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 2516              	 .loc 1 899 0
 2517 00c0 0136     	 add r6,r6,#1
 2518              	.LVL345:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2519              	 .loc 1 891 0
 2520 00c2 AA42     	 cmp r2,r5
 2521 00c4 F0D0     	 beq .L548
 2522 00c6 5946     	 mov r1,fp
 2523              	.LVL346:
 2524 00c8 0091     	 str r1,[sp]
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 2525              	 .loc 1 904 0
 2526 00ca 9F42     	 cmp r7,r3
 2527 00cc 0CD0     	 beq .L532
 2528              	.LVL347:
 2529              	.L511:
 910:../Dave/Generated/UCPROBE/lib_str.c **** 
 2530              	 .loc 1 910 0
 2531 00ce 521B     	 sub r2,r2,r5
 2532 00d0 92B2     	 uxth r2,r2
 2533              	.LVL348:
 2534              	.L497:
 2535              	.LBE135:
 2536              	.LBE139:
 2537              	.LBE131:
 2538              	.LBE130:
1906:../Dave/Generated/UCPROBE/lib_str.c ****         srch_ix++;
 2539              	 .loc 1 1906 0
 2540 00d2 002A     	 cmp r2,#0
 2541 00d4 08D0     	 beq .L532
 2542              	.LVL349:
 2543 00d6 0123     	 mov r3,#1
 2544 00d8 9B46     	 mov fp,r3
 2545 00da 4B46     	 mov r3,r9
 2546 00dc 0130     	 add r0,r0,#1
 2547              	.LVL350:
 2548 00de DA44     	 add r10,r10,fp
 2549 00e0 C31A     	 sub r3,r0,r3
1908:../Dave/Generated/UCPROBE/lib_str.c **** 
 2550              	 .loc 1 1908 0
 2551 00e2 9C45     	 cmp ip,r3
 2552 00e4 CED2     	 bcs .L507
 2553              	.LVL351:
 2554              	.L546:
1866:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2555              	 .loc 1 1866 0
 2556 00e6 0020     	 mov r0,#0
 2557              	.L532:
 2558              	.LBE125:
 2559              	.LBE124:
1777:../Dave/Generated/UCPROBE/lib_str.c **** 
 2560              	 .loc 1 1777 0
 2561 00e8 03B0     	 add sp,sp,#12
 2562              	 
 2563              	.LVL352:
 2564 00ea 3CBC     	 pop {r2,r3,r4,r5}
 2565 00ec 9046     	 mov r8,r2
 2566 00ee 9946     	 mov r9,r3
 2567 00f0 A246     	 mov r10,r4
 2568 00f2 AB46     	 mov fp,r5
 2569 00f4 F0BD     	 pop {r4,r5,r6,r7,pc}
 2570              	.LVL353:
 2571              	.L503:
 2572 00f6 5A46     	 mov r2,fp
 2573 00f8 0092     	 str r2,[sp]
 2574              	.LBB147:
 2575              	.LBB146:
 2576              	.LBB144:
 2577              	.LBB142:
 2578              	.LBB140:
 2579              	.LBB136:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 2580              	 .loc 1 904 0
 2581 00fa 9F42     	 cmp r7,r3
 2582 00fc F4D0     	 beq .L532
 2583              	.LVL354:
 2584              	.L510:
 917:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 2585              	 .loc 1 917 0
 2586 00fe 002E     	 cmp r6,#0
 2587 0100 F2D0     	 beq .L532
 921:../Dave/Generated/UCPROBE/lib_str.c ****             }
 2588              	 .loc 1 921 0
 2589 0102 3278     	 ldrb r2,[r6]
 2590 0104 5242     	 neg r2,r2
 2591 0106 92B2     	 uxth r2,r2
 2592 0108 E3E7     	 b .L497
 2593              	.LVL355:
 2594              	.L504:
 2595 010a 5A46     	 mov r2,fp
 2596 010c 0092     	 str r2,[sp]
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 2597              	 .loc 1 904 0
 2598 010e 9F42     	 cmp r7,r3
 2599 0110 EAD0     	 beq .L532
 2600              	.LVL356:
 2601              	.L508:
 924:../Dave/Generated/UCPROBE/lib_str.c ****         }
 2602              	 .loc 1 924 0
 2603 0112 0A78     	 ldrb r2,[r1]
 2604 0114 DDE7     	 b .L497
 2605              	.LVL357:
 2606              	.L547:
 2607              	.LBE136:
 2608              	.LBE140:
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 2609              	 .loc 1 874 0
 2610 0116 019A     	 ldr r2,[sp,#4]
 2611 0118 DBE7     	 b .L497
 2612              	.LVL358:
 2613              	.L493:
 2614              	.LBE142:
 2615              	.LBE144:
1882:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr);
 2616              	 .loc 1 1882 0
 2617 011a 4846     	 mov r0,r9
 2618              	.LVL359:
 2619 011c 002F     	 cmp r7,#0
 2620 011e E3D0     	 beq .L532
 2621              	.LVL360:
 2622 0120 91E7     	 b .L495
 2623              	.LVL361:
 2624              	.L498:
 2625              	.LBB145:
 2626              	.LBB143:
 2627              	.LBB141:
 2628              	.LBB137:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2629              	 .loc 1 891 0
 2630 0122 4546     	 mov r5,r8
 2631 0124 D3E7     	 b .L511
 2632              	.L500:
 888:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 2633              	 .loc 1 888 0
 2634 0126 009E     	 ldr r6,[sp]
 2635 0128 E9E7     	 b .L510
 2636              	.LBE137:
 2637              	.LBE141:
 2638              	.LBE143:
 2639              	.LBE145:
 2640              	.LBE146:
 2641              	.LBE147:
 2642              	 .cfi_endproc
 2643              	.LFE16:
 2645 012a C046     	 .section .text.Str_Str_N,"ax",%progbits
 2646              	 .align 2
 2647              	 .global Str_Str_N
 2648              	 .code 16
 2649              	 .thumb_func
 2651              	Str_Str_N:
 2652              	.LFB17:
1853:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len;
 2653              	 .loc 1 1853 0
 2654              	 .cfi_startproc
 2655              	.LVL362:
 2656 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2657              	.LCFI23:
 2658              	 .cfi_def_cfa_offset 20
 2659              	 .cfi_offset 4,-20
 2660              	 .cfi_offset 5,-16
 2661              	 .cfi_offset 6,-12
 2662              	 .cfi_offset 7,-8
 2663              	 .cfi_offset 14,-4
 2664 0002 4D46     	 mov r5,r9
 2665 0004 8146     	 mov r9,r0
 2666 0006 5F46     	 mov r7,fp
 2667 0008 5646     	 mov r6,r10
 2668 000a 4446     	 mov r4,r8
1865:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2669              	 .loc 1 1865 0
 2670 000c 4B46     	 mov r3,r9
1853:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len;
 2671              	 .loc 1 1853 0
 2672 000e F0B4     	 push {r4,r5,r6,r7}
 2673              	.LCFI24:
 2674              	 .cfi_def_cfa_offset 36
 2675              	 .cfi_offset 8,-36
 2676              	 .cfi_offset 9,-32
 2677              	 .cfi_offset 10,-28
 2678              	 .cfi_offset 11,-24
 2679 0010 081C     	 mov r0,r1
 2680              	.LVL363:
 2681 0012 83B0     	 sub sp,sp,#12
 2682              	.LCFI25:
 2683              	 .cfi_def_cfa_offset 48
1865:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2684              	 .loc 1 1865 0
 2685 0014 002B     	 cmp r3,#0
 2686 0016 00D1     	 bne .LCB3638
 2687 0018 7BE0     	 b .L623
 2688              	.LCB3638:
1868:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2689              	 .loc 1 1868 0
 2690 001a 0029     	 cmp r1,#0
 2691 001c 00D1     	 bne .LCB3640
 2692 001e 78E0     	 b .L623
 2693              	.LCB3640:
1872:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2694              	 .loc 1 1872 0
 2695 0020 002A     	 cmp r2,#0
 2696 0022 00D1     	 bne .LCB3642
 2697 0024 75E0     	 b .L623
 2698              	.LCB3642:
1878:../Dave/Generated/UCPROBE/lib_str.c **** 
 2699              	 .loc 1 1878 0
 2700 0026 551C     	 add r5,r2,#1
 2701 0028 6B1E     	 sub r3,r5,#1
 2702 002a 9D41     	 sbc r5,r5,r3
 2703              	.LVL364:
 2704              	.LBB156:
 2705              	.LBB157:
 286:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 2706              	 .loc 1 286 0
 2707 002c 0024     	 mov r4,#0
 2708              	.LBE157:
 2709              	.LBE156:
1878:../Dave/Generated/UCPROBE/lib_str.c **** 
 2710              	 .loc 1 1878 0
 2711 002e 4B46     	 mov r3,r9
 2712 0030 5519     	 add r5,r2,r5
 2713              	.LVL365:
 2714 0032 4A44     	 add r2,r2,r9
 2715              	.LVL366:
 2716              	.L552:
 2717              	.LBB159:
 2718              	.LBB158:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2719              	 .loc 1 287 0
 2720 0034 1978     	 ldrb r1,[r3]
 2721 0036 0029     	 cmp r1,#0
 2722 0038 05D0     	 beq .L553
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 2723              	 .loc 1 288 0
 2724 003a 9342     	 cmp r3,r2
 2725 003c 03D0     	 beq .L553
 290:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 2726              	 .loc 1 290 0
 2727 003e 0133     	 add r3,r3,#1
 2728              	.LVL367:
 291:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2729              	 .loc 1 291 0
 2730 0040 0134     	 add r4,r4,#1
 2731              	.LVL368:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2732              	 .loc 1 287 0
 2733 0042 002B     	 cmp r3,#0
 2734 0044 F6D1     	 bne .L552
 2735              	.L553:
 2736              	.LVL369:
 286:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 2737              	 .loc 1 286 0
 2738 0046 031C     	 mov r3,r0
 2739              	.LVL370:
 2740              	.LBE158:
 2741              	.LBE159:
 2742              	.LBB160:
 2743              	.LBB161:
 2744 0048 0021     	 mov r1,#0
 2745 004a 4519     	 add r5,r0,r5
 2746              	.LVL371:
 2747              	.L555:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2748              	 .loc 1 287 0
 2749 004c 1A78     	 ldrb r2,[r3]
 2750 004e 002A     	 cmp r2,#0
 2751 0050 05D0     	 beq .L556
 288:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 2752              	 .loc 1 288 0
 2753 0052 AB42     	 cmp r3,r5
 2754 0054 0ED0     	 beq .L558
 290:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 2755              	 .loc 1 290 0
 2756 0056 0133     	 add r3,r3,#1
 2757              	.LVL372:
 291:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2758              	 .loc 1 291 0
 2759 0058 0131     	 add r1,r1,#1
 2760              	.LVL373:
 287:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 2761              	 .loc 1 287 0
 2762 005a 002B     	 cmp r3,#0
 2763 005c F6D1     	 bne .L555
 2764              	.L556:
 2765              	.LBE161:
 2766              	.LBE160:
 2767 005e 4F46     	 mov r7,r9
1882:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr);
 2768              	 .loc 1 1882 0
 2769 0060 0029     	 cmp r1,#0
 2770 0062 07D1     	 bne .L558
 2771              	.LVL374:
 2772              	.L603:
1916:../Dave/Generated/UCPROBE/lib_str.c **** 
 2773              	 .loc 1 1916 0
 2774 0064 381C     	 mov r0,r7
 2775              	.LVL375:
 2776 0066 03B0     	 add sp,sp,#12
 2777              	 
 2778              	.LVL376:
 2779 0068 3CBC     	 pop {r2,r3,r4,r5}
 2780 006a 9046     	 mov r8,r2
 2781 006c 9946     	 mov r9,r3
 2782 006e A246     	 mov r10,r4
 2783 0070 AB46     	 mov fp,r5
 2784 0072 F0BD     	 pop {r4,r5,r6,r7,pc}
 2785              	.LVL377:
 2786              	.L558:
1885:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2787              	 .loc 1 1885 0
 2788 0074 8C42     	 cmp r4,r1
 2789 0076 4CD3     	 bcc .L623
 2790              	.LVL378:
1889:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 2791              	 .loc 1 1889 0
 2792 0078 4B46     	 mov r3,r9
 2793              	.LVL379:
 2794 007a 1B19     	 add r3,r3,r4
1890:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2795              	 .loc 1 1890 0
 2796 007c 002B     	 cmp r3,#0
 2797 007e 48D0     	 beq .L623
 2798              	.LVL380:
1893:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 2799              	 .loc 1 1893 0
 2800 0080 4318     	 add r3,r0,r1
 2801              	.LVL381:
1894:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2802              	 .loc 1 1894 0
 2803 0082 002B     	 cmp r3,#0
 2804 0084 45D0     	 beq .L623
1899:../Dave/Generated/UCPROBE/lib_str.c ****     srch_ix   = 0u;
 2805              	 .loc 1 1899 0
 2806 0086 631A     	 sub r3,r4,r1
 2807              	.LVL382:
 2808 0088 9C46     	 mov ip,r3
 2809              	.LVL383:
 2810 008a 0378     	 ldrb r3,[r0]
 2811              	.LVL384:
 2812              	.LBB162:
 2813              	.LBB163:
 2814              	.LBB164:
 2815              	.LBB165:
 888:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 2816              	 .loc 1 888 0
 2817 008c 4F46     	 mov r7,r9
 2818 008e 9A46     	 mov r10,r3
 2819 0090 431C     	 add r3,r0,#1
 2820 0092 9B46     	 mov fp,r3
 2821 0094 0123     	 mov r3,#1
 2822 0096 4B44     	 add r3,r3,r9
 2823 0098 9846     	 mov r8,r3
 2824              	.LBE165:
 2825              	.LBE164:
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 2826              	 .loc 1 874 0
 2827 009a 5346     	 mov r3,r10
 2828 009c 5B42     	 neg r3,r3
 2829 009e 9BB2     	 uxth r3,r3
 2830 00a0 0193     	 str r3,[sp,#4]
 2831 00a2 5B46     	 mov r3,fp
 2832 00a4 0093     	 str r3,[sp]
 2833 00a6 4346     	 mov r3,r8
 2834 00a8 D046     	 mov r8,r10
 2835 00aa 9A46     	 mov r10,r3
 2836              	.LVL385:
 2837              	.L567:
 870:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 2838              	 .loc 1 870 0
 2839 00ac 002F     	 cmp r7,#0
 2840 00ae 42D0     	 beq .L624
 2841              	.LVL386:
 2842              	.LBB169:
 2843              	.LBB166:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2844              	 .loc 1 891 0
 2845 00b0 3A78     	 ldrb r2,[r7]
 887:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 2846              	 .loc 1 887 0
 2847 00b2 5646     	 mov r6,r10
 2848              	.LVL387:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2849              	 .loc 1 891 0
 2850 00b4 9045     	 cmp r8,r2
 2851 00b6 40D1     	 bne .L579
 2852 00b8 4346     	 mov r3,r8
 2853 00ba 002B     	 cmp r3,#0
 2854 00bc D2D0     	 beq .L603
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 2855              	 .loc 1 892 0
 2856 00be 002E     	 cmp r6,#0
 2857 00c0 40D0     	 beq .L580
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 2858              	 .loc 1 893 0
 2859 00c2 009A     	 ldr r2,[sp]
 2860 00c4 002A     	 cmp r2,#0
 2861 00c6 3BD0     	 beq .L581
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 2862              	 .loc 1 894 0
 2863 00c8 0029     	 cmp r1,#0
 2864 00ca CBD0     	 beq .L603
 2865 00cc 151C     	 mov r5,r2
 2866 00ce 0023     	 mov r3,#0
 2867 00d0 9346     	 mov fp,r2
 2868 00d2 07E0     	 b .L565
 2869              	.LVL388:
 2870              	.L625:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2871              	 .loc 1 891 0
 2872 00d4 002A     	 cmp r2,#0
 2873 00d6 C5D0     	 beq .L603
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 2874              	 .loc 1 892 0
 2875 00d8 002E     	 cmp r6,#0
 2876 00da 1CD0     	 beq .L621
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 2877              	 .loc 1 893 0
 2878 00dc 002D     	 cmp r5,#0
 2879 00de 24D0     	 beq .L622
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 2880              	 .loc 1 894 0
 2881 00e0 8B42     	 cmp r3,r1
 2882 00e2 BFD0     	 beq .L603
 2883              	.LVL389:
 2884              	.L565:
 900:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2885              	 .loc 1 900 0
 2886 00e4 0133     	 add r3,r3,#1
 2887              	.LVL390:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2888              	 .loc 1 891 0
 2889 00e6 FA5C     	 ldrb r2,[r7,r3]
 2890 00e8 C45C     	 ldrb r4,[r0,r3]
 898:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 2891              	 .loc 1 898 0
 2892 00ea 0136     	 add r6,r6,#1
 2893              	.LVL391:
 899:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 2894              	 .loc 1 899 0
 2895 00ec 0135     	 add r5,r5,#1
 2896              	.LVL392:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2897              	 .loc 1 891 0
 2898 00ee A242     	 cmp r2,r4
 2899 00f0 F0D0     	 beq .L625
 2900 00f2 5D46     	 mov r5,fp
 2901              	.LVL393:
 2902 00f4 0095     	 str r5,[sp]
 2903              	.LVL394:
 2904              	.L561:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 2905              	 .loc 1 904 0
 2906 00f6 9942     	 cmp r1,r3
 2907 00f8 B4D0     	 beq .L603
 910:../Dave/Generated/UCPROBE/lib_str.c **** 
 2908              	 .loc 1 910 0
 2909 00fa 121B     	 sub r2,r2,r4
 2910 00fc 92B2     	 uxth r2,r2
 2911              	.LVL395:
 2912              	.L560:
 2913              	.LBE166:
 2914              	.LBE169:
 2915              	.LBE163:
 2916              	.LBE162:
1906:../Dave/Generated/UCPROBE/lib_str.c ****         srch_ix++;
 2917              	 .loc 1 1906 0
 2918 00fe 002A     	 cmp r2,#0
 2919 0100 B0D0     	 beq .L603
 2920              	.LVL396:
 2921 0102 0123     	 mov r3,#1
 2922 0104 9B46     	 mov fp,r3
 2923 0106 4B46     	 mov r3,r9
 2924 0108 0137     	 add r7,r7,#1
 2925              	.LVL397:
 2926 010a DA44     	 add r10,r10,fp
 2927 010c FB1A     	 sub r3,r7,r3
1908:../Dave/Generated/UCPROBE/lib_str.c **** 
 2928              	 .loc 1 1908 0
 2929 010e 9C45     	 cmp ip,r3
 2930 0110 CCD2     	 bcs .L567
 2931              	.LVL398:
 2932              	.L623:
1866:../Dave/Generated/UCPROBE/lib_str.c ****     }
 2933              	 .loc 1 1866 0
 2934 0112 0027     	 mov r7,#0
 2935 0114 A6E7     	 b .L603
 2936              	.LVL399:
 2937              	.L621:
 2938 0116 5A46     	 mov r2,fp
 2939 0118 0092     	 str r2,[sp]
 2940              	.LVL400:
 2941              	.L563:
 2942              	.LBB173:
 2943              	.LBB172:
 2944              	.LBB170:
 2945              	.LBB167:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 2946              	 .loc 1 904 0
 2947 011a 9942     	 cmp r1,r3
 2948 011c A2D0     	 beq .L603
 917:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 2949              	 .loc 1 917 0
 2950 011e 002D     	 cmp r5,#0
 2951 0120 A0D0     	 beq .L603
 921:../Dave/Generated/UCPROBE/lib_str.c ****             }
 2952              	 .loc 1 921 0
 2953 0122 2A78     	 ldrb r2,[r5]
 2954 0124 5242     	 neg r2,r2
 2955 0126 92B2     	 uxth r2,r2
 2956 0128 E9E7     	 b .L560
 2957              	.LVL401:
 2958              	.L622:
 2959 012a 5A46     	 mov r2,fp
 2960 012c 0092     	 str r2,[sp]
 2961              	.LVL402:
 2962              	.L564:
 904:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 2963              	 .loc 1 904 0
 2964 012e 9942     	 cmp r1,r3
 2965 0130 98D0     	 beq .L603
 924:../Dave/Generated/UCPROBE/lib_str.c ****         }
 2966              	 .loc 1 924 0
 2967 0132 3278     	 ldrb r2,[r6]
 2968 0134 E3E7     	 b .L560
 2969              	.LVL403:
 2970              	.L624:
 2971              	.LBE167:
 2972              	.LBE170:
 874:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 2973              	 .loc 1 874 0
 2974 0136 019A     	 ldr r2,[sp,#4]
 2975 0138 E1E7     	 b .L560
 2976              	.LVL404:
 2977              	.L579:
 2978              	.LBB171:
 2979              	.LBB168:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 2980              	 .loc 1 891 0
 2981 013a 4446     	 mov r4,r8
 889:../Dave/Generated/UCPROBE/lib_str.c **** 
 2982              	 .loc 1 889 0
 2983 013c 0023     	 mov r3,#0
 2984 013e DAE7     	 b .L561
 2985              	.L581:
 2986 0140 0023     	 mov r3,#0
 2987 0142 F4E7     	 b .L564
 2988              	.L580:
 888:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 2989              	 .loc 1 888 0
 2990 0144 009D     	 ldr r5,[sp]
 889:../Dave/Generated/UCPROBE/lib_str.c **** 
 2991              	 .loc 1 889 0
 2992 0146 0023     	 mov r3,#0
 2993 0148 E7E7     	 b .L563
 2994              	.LBE168:
 2995              	.LBE171:
 2996              	.LBE172:
 2997              	.LBE173:
 2998              	 .cfi_endproc
 2999              	.LFE17:
 3001              	 .global __aeabi_uidiv
 3002              	 .global __aeabi_uidivmod
 3003 014a C046     	 .section .text.Str_FmtNbr_Int32U,"ax",%progbits
 3004              	 .align 2
 3005              	 .global Str_FmtNbr_Int32U
 3006              	 .code 16
 3007              	 .thumb_func
 3009              	Str_FmtNbr_Int32U:
 3010              	.LFB18:
2050:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_fmt;
 3011              	 .loc 1 2050 0
 3012              	 .cfi_startproc
 3013              	.LVL405:
 3014 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3015              	.LCFI26:
 3016              	 .cfi_def_cfa_offset 20
 3017              	 .cfi_offset 4,-20
 3018              	 .cfi_offset 5,-16
 3019              	 .cfi_offset 6,-12
 3020              	 .cfi_offset 7,-8
 3021              	 .cfi_offset 14,-4
 3022 0002 4446     	 mov r4,r8
 3023 0004 5F46     	 mov r7,fp
 3024 0006 5646     	 mov r6,r10
 3025 0008 4D46     	 mov r5,r9
 3026 000a F0B4     	 push {r4,r5,r6,r7}
 3027              	.LCFI27:
 3028              	 .cfi_def_cfa_offset 36
 3029              	 .cfi_offset 8,-36
 3030              	 .cfi_offset 9,-32
 3031              	 .cfi_offset 10,-28
 3032              	 .cfi_offset 11,-24
 3033 000c 83B0     	 sub sp,sp,#12
 3034              	.LCFI28:
 3035              	 .cfi_def_cfa_offset 48
2050:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_fmt;
 3036              	 .loc 1 2050 0
 3037 000e 9846     	 mov r8,r3
 3038 0010 0CAB     	 add r3,sp,#48
 3039              	.LVL406:
 3040 0012 1B78     	 ldrb r3,[r3]
 3041              	.LVL407:
 3042 0014 8246     	 mov r10,r0
 3043              	.LVL408:
 3044 0016 0193     	 str r3,[sp,#4]
 3045              	.LVL409:
 3046 0018 0DAB     	 add r3,sp,#52
 3047              	.LVL410:
 3048 001a 1B78     	 ldrb r3,[r3]
 3049              	.LVL411:
 3050 001c 8946     	 mov r9,r1
 3051 001e 9B46     	 mov fp,r3
 3052              	.LVL412:
 3053              	.LBB176:
 3054              	.LBB177:
3477:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 3055              	 .loc 1 3477 0
 3056 0020 0E9B     	 ldr r3,[sp,#56]
 3057              	.LBE177:
 3058              	.LBE176:
2050:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_fmt;
 3059              	 .loc 1 2050 0
 3060 0022 141C     	 mov r4,r2
 3061              	.LBB180:
 3062              	.LBB178:
3477:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 3063              	 .loc 1 3477 0
 3064 0024 002B     	 cmp r3,#0
 3065 0026 00D1     	 bne .LCB4226
 3066 0028 A4E0     	 b .L642
 3067              	.LCB4226:
 3068              	.LVL413:
3484:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 3069              	 .loc 1 3484 0
 3070 002a 0F1C     	 mov r7,r1
 3071 002c 7B42     	 neg r3,r7
 3072 002e 5F41     	 adc r7,r7,r3
3488:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
 3073              	 .loc 1 3488 0
 3074 0030 931E     	 sub r3,r2,#2
3481:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
 3075              	 .loc 1 3481 0
 3076 0032 FFB2     	 uxtb r7,r7
 3077              	.LVL414:
3488:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
 3078              	 .loc 1 3488 0
 3079 0034 222B     	 cmp r3,#34
 3080 0036 5CD8     	 bhi .L629
3493:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
 3081              	 .loc 1 3493 0
 3082 0038 4346     	 mov r3,r8
 3083 003a 002B     	 cmp r3,#0
 3084 003c 5DD1     	 bne .L674
 3085              	.LVL415:
 3086              	.L630:
3521:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt     = nbr;
 3087              	 .loc 1 3521 0
 3088 003e 002F     	 cmp r7,#0
 3089 0040 4DD1     	 bne .L637
 3090              	.LVL416:
3525:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 3091              	 .loc 1 3525 0
 3092 0042 A245     	 cmp r10,r4
 3093 0044 00D2     	 bcs .LCB4260
 3094 0046 F4E0     	 b .L676
 3095              	.LCB4260:
 3096 0048 5046     	 mov r0,r10
 3097 004a 0125     	 mov r5,#1
 3098              	.LVL417:
 3099              	.L636:
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
 3100              	 .loc 1 3526 0
 3101 004c 0135     	 add r5,r5,#1
 3102              	.LVL418:
3527:../Dave/Generated/UCPROBE/lib_str.c ****         }
 3103              	 .loc 1 3527 0
 3104 004e 211C     	 mov r1,r4
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
 3105              	 .loc 1 3526 0
 3106 0050 EDB2     	 uxtb r5,r5
 3107              	.LVL419:
3527:../Dave/Generated/UCPROBE/lib_str.c ****         }
 3108              	 .loc 1 3527 0
 3109 0052 FFF7FEFF 	 bl __aeabi_uidiv
 3110              	.LVL420:
3525:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 3111              	 .loc 1 3525 0
 3112 0056 A042     	 cmp r0,r4
 3113 0058 F8D2     	 bcs .L636
 3114 005a 2B1C     	 mov r3,r5
 3115              	.LVL421:
 3116              	.L635:
3531:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd = DEF_NO;
 3117              	 .loc 1 3531 0
 3118 005c 4B45     	 cmp r3,r9
 3119 005e 3DDC     	 bgt .L677
 3120              	.LVL422:
3535:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 3121              	 .loc 1 3535 0
 3122 0060 4346     	 mov r3,r8
 3123 0062 4E46     	 mov r6,r9
 3124 0064 002B     	 cmp r3,#0
 3125 0066 04D1     	 bne .L638
3533:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
 3126              	 .loc 1 3533 0
 3127 0068 2E1C     	 add r6,r5,#0
 3128 006a 4D45     	 cmp r5,r9
 3129 006c 00D9     	 bls .L639
 3130 006e 4E46     	 mov r6,r9
 3131              	.L639:
 3132 0070 F6B2     	 uxtb r6,r6
 3133              	.L638:
 3134              	.LVL423:
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3135              	 .loc 1 3562 0
 3136 0072 5A46     	 mov r2,fp
3560:../Dave/Generated/UCPROBE/lib_str.c **** 
 3137              	 .loc 1 3560 0
 3138 0074 0E9B     	 ldr r3,[sp,#56]
3535:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 3139              	 .loc 1 3535 0
 3140 0076 5546     	 mov r5,r10
 3141              	.LVL424:
3560:../Dave/Generated/UCPROBE/lib_str.c **** 
 3142              	 .loc 1 3560 0
 3143 0078 9B19     	 add r3,r3,r6
 3144              	.LVL425:
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3145              	 .loc 1 3562 0
 3146 007a 002A     	 cmp r2,#0
 3147 007c 36D1     	 bne .L706
 3148              	.LVL426:
 3149              	.L640:
3565:../Dave/Generated/UCPROBE/lib_str.c **** 
 3150              	 .loc 1 3565 0
 3151 007e 5A1E     	 sub r2,r3,#1
 3152 0080 9146     	 mov r9,r2
 3153              	.LVL427:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3154              	 .loc 1 3568 0
 3155 0082 002E     	 cmp r6,#0
 3156 0084 00D1     	 bne .LCB4335
 3157 0086 CBE0     	 b .L707
 3158              	.LCB4335:
 3159 0088 002F     	 cmp r7,#0
 3160 008a 6ED1     	 bne .L708
 3161 008c 4246     	 mov r2,r8
 3162              	.LVL428:
 3163 008e 002A     	 cmp r2,#0
 3164 0090 00D0     	 beq .LCB4342
 3165 0092 76E0     	 b .L644
 3166              	.LCB4342:
 3167 0094 019B     	 ldr r3,[sp,#4]
 3168 0096 0027     	 mov r7,#0
 3169 0098 012B     	 cmp r3,#1
 3170 009a 5FD0     	 beq .L650
 3171              	.LVL429:
 3172              	.L686:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3173              	 .loc 1 3570 0
 3174 009c 002D     	 cmp r5,#0
 3175 009e 6BD0     	 beq .L709
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3176              	 .loc 1 3573 0
 3177 00a0 281C     	 mov r0,r5
 3178 00a2 211C     	 mov r1,r4
 3179 00a4 FFF7FEFF 	 bl __aeabi_uidivmod
 3180              	.LVL430:
 3181 00a8 C9B2     	 uxtb r1,r1
 3182              	.LVL431:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 3183              	 .loc 1 3574 0
 3184 00aa 0929     	 cmp r1,#9
 3185 00ac 67D9     	 bls .L656
 3186              	.LVL432:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 3187              	 .loc 1 3578 0
 3188 00ae 3731     	 add r1,r1,#55
 3189              	.LVL433:
 3190              	.L700:
 3191 00b0 4B46     	 mov r3,r9
 3192 00b2 1970     	 strb r1,[r3]
 3193 00b4 0123     	 mov r3,#1
 3194 00b6 5B42     	 neg r3,r3
 3195 00b8 9C46     	 mov ip,r3
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3196              	 .loc 1 3584 0
 3197 00ba 281C     	 mov r0,r5
 3198 00bc 211C     	 mov r1,r4
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 3199              	 .loc 1 3578 0
 3200 00be E144     	 add r9,r9,ip
 3201              	.LVL434:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3202              	 .loc 1 3584 0
 3203 00c0 FFF7FEFF 	 bl __aeabi_uidiv
 3204              	.LVL435:
 3205 00c4 051C     	 mov r5,r0
 3206              	.LVL436:
 3207              	.L654:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3208              	 .loc 1 3568 0
 3209 00c6 0137     	 add r7,r7,#1
 3210              	.LVL437:
 3211 00c8 BE42     	 cmp r6,r7
 3212 00ca E7D8     	 bhi .L686
 3213              	.LVL438:
 3214              	.L651:
3605:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 3215              	 .loc 1 3605 0
 3216 00cc 0E98     	 ldr r0,[sp,#56]
 3217              	.LVL439:
 3218              	.L695:
 3219              	.LBE178:
 3220              	.LBE180:
2064:../Dave/Generated/UCPROBE/lib_str.c **** 
 3221              	 .loc 1 2064 0
 3222 00ce 03B0     	 add sp,sp,#12
 3223              	 
 3224              	.LVL440:
 3225              	.LVL441:
 3226              	.LVL442:
 3227 00d0 3CBC     	 pop {r2,r3,r4,r5}
 3228 00d2 9046     	 mov r8,r2
 3229 00d4 9946     	 mov r9,r3
 3230 00d6 A246     	 mov r10,r4
 3231 00d8 AB46     	 mov fp,r5
 3232 00da F0BD     	 pop {r4,r5,r6,r7,pc}
 3233              	.LVL443:
 3234              	.L677:
 3235              	.LBB181:
 3236              	.LBB179:
3531:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd = DEF_NO;
 3237              	 .loc 1 3531 0
 3238 00dc 5546     	 mov r5,r10
 3239              	.LVL444:
 3240              	.L637:
3535:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 3241              	 .loc 1 3535 0
 3242 00de 4E46     	 mov r6,r9
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3243              	 .loc 1 3562 0
 3244 00e0 5A46     	 mov r2,fp
3560:../Dave/Generated/UCPROBE/lib_str.c **** 
 3245              	 .loc 1 3560 0
 3246 00e2 0E9B     	 ldr r3,[sp,#56]
3535:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 3247              	 .loc 1 3535 0
 3248 00e4 0127     	 mov r7,#1
 3249              	.LVL445:
3560:../Dave/Generated/UCPROBE/lib_str.c **** 
 3250              	 .loc 1 3560 0
 3251 00e6 9B19     	 add r3,r3,r6
 3252              	.LVL446:
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3253              	 .loc 1 3562 0
 3254 00e8 002A     	 cmp r2,#0
 3255 00ea C8D0     	 beq .L640
 3256              	.LVL447:
 3257              	.L706:
3563:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3258              	 .loc 1 3563 0
 3259 00ec 0022     	 mov r2,#0
 3260 00ee 1A70     	 strb r2,[r3]
 3261 00f0 C5E7     	 b .L640
 3262              	.LVL448:
 3263              	.L629:
3493:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
 3264              	 .loc 1 3493 0
 3265 00f2 4346     	 mov r3,r8
 3266 00f4 002B     	 cmp r3,#0
 3267 00f6 F2D0     	 beq .L637
3490:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3268              	 .loc 1 3490 0
 3269 00f8 0127     	 mov r7,#1
 3270              	.LVL449:
 3271              	.L674:
3494:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable (see 
 3272              	 .loc 1 3494 0
 3273 00fa 4046     	 mov r0,r8
 3274              	.LVL450:
 3275 00fc FFF7FEFF 	 bl ASCII_IsPrint
 3276              	.LVL451:
3495:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str        (see 
 3277              	 .loc 1 3495 0
 3278 0100 0128     	 cmp r0,#1
 3279 0102 ECD1     	 bne .L637
3498:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_delta_0 = (CPU_INT08U)(lead_char - '0');
 3280              	 .loc 1 3498 0
 3281 0104 4346     	 mov r3,r8
 3282 0106 302B     	 cmp r3,#48
 3283 0108 99D0     	 beq .L630
3500:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
 3284              	 .loc 1 3500 0
 3285 010a 019A     	 ldr r2,[sp,#4]
3499:../Dave/Generated/UCPROBE/lib_str.c ****             if (lower_case != DEF_YES) {
 3286              	 .loc 1 3499 0
 3287 010c 303B     	 sub r3,r3,#48
 3288 010e DBB2     	 uxtb r3,r3
 3289              	.LVL452:
3500:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
 3290              	 .loc 1 3500 0
 3291 0110 012A     	 cmp r2,#1
 3292 0112 00D1     	 bne .LCB4525
 3293 0114 89E0     	 b .L632
 3294              	.LCB4525:
3501:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
 3295              	 .loc 1 3501 0
 3296 0116 4246     	 mov r2,r8
 3297 0118 413A     	 sub r2,r2,#65
 3298 011a D2B2     	 uxtb r2,r2
 3299              	.LVL453:
 3300              	.L633:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 3301              	 .loc 1 3506 0
 3302 011c 0A2C     	 cmp r4,#10
 3303 011e 00D8     	 bhi .LCB4535
 3304 0120 8AE0     	 b .L710
 3305              	.LCB4535:
3507:../Dave/Generated/UCPROBE/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 3306              	 .loc 1 3507 0
 3307 0122 092B     	 cmp r3,#9
 3308 0124 DBD9     	 bls .L637
3508:../Dave/Generated/UCPROBE/lib_str.c **** 
 3309              	 .loc 1 3508 0
 3310 0126 231C     	 mov r3,r4
 3311              	.LVL454:
 3312 0128 0A3B     	 sub r3,r3,#10
3507:../Dave/Generated/UCPROBE/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 3313              	 .loc 1 3507 0
 3314 012a 9A42     	 cmp r2,r3
 3315 012c D7D3     	 bcc .L637
 3316 012e 86E7     	 b .L630
 3317              	.LVL455:
 3318              	.L646:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3319              	 .loc 1 3573 0
 3320 0130 281C     	 mov r0,r5
 3321 0132 211C     	 mov r1,r4
 3322 0134 FFF7FEFF 	 bl __aeabi_uidivmod
 3323              	.LVL456:
 3324 0138 C9B2     	 uxtb r1,r1
 3325              	.LVL457:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 3326              	 .loc 1 3574 0
 3327 013a 0929     	 cmp r1,#9
 3328 013c 13D9     	 bls .L648
 3329              	.LVL458:
3580:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 3330              	 .loc 1 3580 0
 3331 013e 5731     	 add r1,r1,#87
 3332              	.LVL459:
 3333              	.L699:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 3334              	 .loc 1 3575 0
 3335 0140 4B46     	 mov r3,r9
 3336 0142 1970     	 strb r1,[r3]
 3337 0144 0123     	 mov r3,#1
 3338 0146 5B42     	 neg r3,r3
 3339 0148 9C46     	 mov ip,r3
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3340              	 .loc 1 3584 0
 3341 014a 281C     	 mov r0,r5
 3342 014c 211C     	 mov r1,r4
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 3343              	 .loc 1 3575 0
 3344 014e E144     	 add r9,r9,ip
 3345              	.LVL460:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3346              	 .loc 1 3584 0
 3347 0150 FFF7FEFF 	 bl __aeabi_uidiv
 3348              	.LVL461:
 3349 0154 051C     	 mov r5,r0
 3350              	.LVL462:
 3351              	.L647:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3352              	 .loc 1 3568 0
 3353 0156 0137     	 add r7,r7,#1
 3354              	.LVL463:
 3355 0158 BE42     	 cmp r6,r7
 3356 015a B7D9     	 bls .L651
 3357              	.LVL464:
 3358              	.L650:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3359              	 .loc 1 3570 0
 3360 015c 002D     	 cmp r5,#0
 3361 015e E7D1     	 bne .L646
 3362              	.LVL465:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3363              	 .loc 1 3573 0
 3364 0160 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3365              	 .loc 1 3570 0
 3366 0162 002F     	 cmp r7,#0
 3367 0164 F7D1     	 bne .L647
 3368              	.LVL466:
 3369              	.L648:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 3370              	 .loc 1 3575 0
 3371 0166 3031     	 add r1,r1,#48
 3372              	.LVL467:
 3373 0168 EAE7     	 b .L699
 3374              	.LVL468:
 3375              	.L708:
 3376 016a 0E98     	 ldr r0,[sp,#56]
 3377 016c 3F21     	 mov r1,#63
 3378 016e 321C     	 mov r2,r6
 3379              	.LVL469:
 3380 0170 FFF7FEFF 	 bl memset
 3381              	.LVL470:
 3382              	.L642:
3478:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3383              	 .loc 1 3478 0
 3384 0174 0020     	 mov r0,#0
 3385 0176 AAE7     	 b .L695
 3386              	.LVL471:
 3387              	.L709:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3388              	 .loc 1 3573 0
 3389 0178 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3390              	 .loc 1 3570 0
 3391 017a 002F     	 cmp r7,#0
 3392 017c A3D1     	 bne .L654
 3393              	.LVL472:
 3394              	.L656:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 3395              	 .loc 1 3575 0
 3396 017e 3031     	 add r1,r1,#48
 3397              	.LVL473:
 3398 0180 96E7     	 b .L700
 3399              	.LVL474:
 3400              	.L644:
 3401 0182 9F1E     	 sub r7,r3,#2
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3402              	 .loc 1 3568 0
 3403 0184 0023     	 mov r3,#0
 3404 0186 019A     	 ldr r2,[sp,#4]
 3405 0188 9946     	 mov r9,r3
 3406              	.LVL475:
 3407 018a 012A     	 cmp r2,#1
 3408 018c 17D1     	 bne .L672
 3409              	.LVL476:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3410              	 .loc 1 3570 0
 3411 018e 002D     	 cmp r5,#0
 3412 0190 3FD0     	 beq .L711
 3413              	.LVL477:
 3414              	.L659:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3415              	 .loc 1 3573 0
 3416 0192 281C     	 mov r0,r5
 3417 0194 211C     	 mov r1,r4
 3418 0196 FFF7FEFF 	 bl __aeabi_uidivmod
 3419              	.LVL478:
 3420 019a C9B2     	 uxtb r1,r1
 3421              	.LVL479:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 3422              	 .loc 1 3574 0
 3423 019c 0929     	 cmp r1,#9
 3424 019e 28D9     	 bls .L663
 3425              	.LVL480:
3580:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 3426              	 .loc 1 3580 0
 3427 01a0 5731     	 add r1,r1,#87
 3428              	.LVL481:
 3429 01a2 7970     	 strb r1,[r7,#1]
 3430 01a4 27E0     	 b .L662
 3431              	.LVL482:
 3432              	.L713:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3433              	 .loc 1 3570 0
 3434 01a6 4B46     	 mov r3,r9
 3435 01a8 002B     	 cmp r3,#0
 3436 01aa 19D0     	 beq .L712
 3437              	.LVL483:
3596:../Dave/Generated/UCPROBE/lib_str.c ****             }
 3438              	 .loc 1 3596 0
 3439 01ac 4346     	 mov r3,r8
 3440              	.LVL484:
 3441 01ae 7B70     	 strb r3,[r7,#1]
 3442              	.LVL485:
 3443              	.L671:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3444              	 .loc 1 3568 0
 3445 01b0 0123     	 mov r3,#1
 3446 01b2 9C46     	 mov ip,r3
 3447 01b4 E144     	 add r9,r9,ip
 3448              	.LVL486:
 3449 01b6 013F     	 sub r7,r7,#1
 3450 01b8 4E45     	 cmp r6,r9
 3451 01ba 00D8     	 bhi .LCB4756
 3452 01bc 86E7     	 b .L651
 3453              	.LCB4756:
 3454              	.LVL487:
 3455              	.L672:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3456              	 .loc 1 3570 0
 3457 01be 002D     	 cmp r5,#0
 3458 01c0 F1D0     	 beq .L713
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3459              	 .loc 1 3573 0
 3460 01c2 281C     	 mov r0,r5
 3461 01c4 211C     	 mov r1,r4
 3462 01c6 FFF7FEFF 	 bl __aeabi_uidivmod
 3463              	.LVL488:
 3464 01ca C9B2     	 uxtb r1,r1
 3465              	.LVL489:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 3466              	 .loc 1 3574 0
 3467 01cc 0929     	 cmp r1,#9
 3468 01ce 08D9     	 bls .L675
 3469              	.LVL490:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 3470              	 .loc 1 3578 0
 3471 01d0 3731     	 add r1,r1,#55
 3472              	.LVL491:
 3473 01d2 7970     	 strb r1,[r7,#1]
 3474              	.LVL492:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3475              	 .loc 1 3584 0
 3476 01d4 281C     	 mov r0,r5
 3477 01d6 211C     	 mov r1,r4
 3478              	.LVL493:
 3479 01d8 FFF7FEFF 	 bl __aeabi_uidiv
 3480              	.LVL494:
 3481 01dc 051C     	 mov r5,r0
 3482              	.LVL495:
 3483 01de E7E7     	 b .L671
 3484              	.LVL496:
 3485              	.L712:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3486              	 .loc 1 3573 0
 3487 01e0 0021     	 mov r1,#0
 3488              	.LVL497:
 3489              	.L675:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 3490              	 .loc 1 3575 0
 3491 01e2 3031     	 add r1,r1,#48
 3492              	.LVL498:
 3493 01e4 7970     	 strb r1,[r7,#1]
 3494              	.LVL499:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3495              	 .loc 1 3584 0
 3496 01e6 281C     	 mov r0,r5
 3497 01e8 211C     	 mov r1,r4
 3498 01ea FFF7FEFF 	 bl __aeabi_uidiv
 3499              	.LVL500:
 3500 01ee 051C     	 mov r5,r0
 3501              	.LVL501:
 3502 01f0 DEE7     	 b .L671
 3503              	.LVL502:
 3504              	.L663:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 3505              	 .loc 1 3575 0
 3506 01f2 3031     	 add r1,r1,#48
 3507              	.LVL503:
 3508 01f4 7970     	 strb r1,[r7,#1]
 3509              	.L662:
 3510              	.LVL504:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3511              	 .loc 1 3584 0
 3512 01f6 281C     	 mov r0,r5
 3513 01f8 211C     	 mov r1,r4
 3514 01fa FFF7FEFF 	 bl __aeabi_uidiv
 3515              	.LVL505:
 3516 01fe 051C     	 mov r5,r0
 3517              	.LVL506:
 3518              	.L661:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3519              	 .loc 1 3568 0
 3520 0200 0123     	 mov r3,#1
 3521 0202 9C46     	 mov ip,r3
 3522 0204 E144     	 add r9,r9,ip
 3523              	.LVL507:
 3524 0206 013F     	 sub r7,r7,#1
 3525 0208 4E45     	 cmp r6,r9
 3526 020a 00D8     	 bhi .LCB4861
 3527 020c 5EE7     	 b .L651
 3528              	.LCB4861:
 3529              	.LVL508:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3530              	 .loc 1 3570 0
 3531 020e 002D     	 cmp r5,#0
 3532 0210 BFD1     	 bne .L659
 3533              	.LVL509:
 3534              	.L711:
 3535 0212 4B46     	 mov r3,r9
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3536              	 .loc 1 3573 0
 3537 0214 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3538              	 .loc 1 3570 0
 3539 0216 002B     	 cmp r3,#0
 3540 0218 EBD0     	 beq .L663
 3541              	.LVL510:
3596:../Dave/Generated/UCPROBE/lib_str.c ****             }
 3542              	 .loc 1 3596 0
 3543 021a 4346     	 mov r3,r8
 3544              	.LVL511:
 3545 021c 7B70     	 strb r3,[r7,#1]
 3546 021e EFE7     	 b .L661
 3547              	.LVL512:
 3548              	.L707:
3605:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 3549              	 .loc 1 3605 0
 3550 0220 002F     	 cmp r7,#0
 3551 0222 00D1     	 bne .LCB4896
 3552 0224 52E7     	 b .L651
 3553              	.LCB4896:
3478:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3554              	 .loc 1 3478 0
 3555 0226 0020     	 mov r0,#0
 3556 0228 51E7     	 b .L695
 3557              	.LVL513:
 3558              	.L632:
3503:../Dave/Generated/UCPROBE/lib_str.c ****             }
 3559              	 .loc 1 3503 0
 3560 022a 4246     	 mov r2,r8
 3561 022c 613A     	 sub r2,r2,#97
 3562 022e D2B2     	 uxtb r2,r2
 3563              	.LVL514:
 3564 0230 74E7     	 b .L633
 3565              	.LVL515:
 3566              	.L676:
3525:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 3567              	 .loc 1 3525 0
 3568 0232 0123     	 mov r3,#1
 3569 0234 0125     	 mov r5,#1
 3570 0236 11E7     	 b .L635
 3571              	.LVL516:
 3572              	.L710:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 3573              	 .loc 1 3506 0
 3574 0238 9C42     	 cmp r4,r3
 3575 023a 00D9     	 bls .LCB4943
 3576 023c 4FE7     	 b .L637
 3577              	.LCB4943:
 3578 023e FEE6     	 b .L630
 3579              	.LBE179:
 3580              	.LBE181:
 3581              	 .cfi_endproc
 3582              	.LFE18:
 3584              	 .section .text.Str_FmtNbr_Int32S,"ax",%progbits
 3585              	 .align 2
 3586              	 .global Str_FmtNbr_Int32S
 3587              	 .code 16
 3588              	 .thumb_func
 3590              	Str_FmtNbr_Int32S:
 3591              	.LFB19:
2266:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
 3592              	 .loc 1 2266 0
 3593              	 .cfi_startproc
 3594              	.LVL517:
 3595 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3596              	.LCFI29:
 3597              	 .cfi_def_cfa_offset 20
 3598              	 .cfi_offset 4,-20
 3599              	 .cfi_offset 5,-16
 3600              	 .cfi_offset 6,-12
 3601              	 .cfi_offset 7,-8
 3602              	 .cfi_offset 14,-4
 3603 0002 4446     	 mov r4,r8
 3604 0004 5F46     	 mov r7,fp
 3605 0006 5646     	 mov r6,r10
 3606 0008 4D46     	 mov r5,r9
 3607 000a F0B4     	 push {r4,r5,r6,r7}
 3608              	.LCFI30:
 3609              	 .cfi_def_cfa_offset 36
 3610              	 .cfi_offset 8,-36
 3611              	 .cfi_offset 9,-32
 3612              	 .cfi_offset 10,-28
 3613              	 .cfi_offset 11,-24
 3614 000c 85B0     	 sub sp,sp,#20
 3615              	.LCFI31:
 3616              	 .cfi_def_cfa_offset 56
2266:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
 3617              	 .loc 1 2266 0
 3618 000e 1F1C     	 mov r7,r3
 3619 0010 0EAB     	 add r3,sp,#56
 3620              	.LVL518:
 3621 0012 1B78     	 ldrb r3,[r3]
 3622              	.LVL519:
 3623 0014 8146     	 mov r9,r0
 3624 0016 0293     	 str r3,[sp,#8]
 3625 0018 0FAB     	 add r3,sp,#60
 3626              	.LVL520:
 3627 001a 1B78     	 ldrb r3,[r3]
 3628              	.LVL521:
 3629 001c 8846     	 mov r8,r1
 3630 001e 141C     	 mov r4,r2
 3631 0020 9A46     	 mov r10,r3
2272:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt = -nbr;                                         /* ... negate nbr.                 
 3632              	 .loc 1 2272 0
 3633 0022 0028     	 cmp r0,#0
 3634 0024 00DA     	 bge .LCB5003
 3635 0026 9DE0     	 b .L842
 3636              	.LCB5003:
 3637 0028 0123     	 mov r3,#1
 3638 002a 9B46     	 mov fp,r3
 3639 002c 0023     	 mov r3,#0
 3640 002e 0393     	 str r3,[sp,#12]
2277:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3641              	 .loc 1 2277 0
 3642 0030 0193     	 str r3,[sp,#4]
 3643              	.L715:
 3644              	.LVL522:
 3645              	.LBB184:
 3646              	.LBB185:
3477:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 3647              	 .loc 1 3477 0
 3648 0032 109B     	 ldr r3,[sp,#64]
 3649 0034 002B     	 cmp r3,#0
 3650 0036 00D1     	 bne .LCB5026
 3651 0038 8CE0     	 b .L734
 3652              	.LCB5026:
 3653              	.LVL523:
3484:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 3654              	 .loc 1 3484 0
 3655 003a 4646     	 mov r6,r8
 3656 003c 7342     	 neg r3,r6
 3657 003e 5E41     	 adc r6,r6,r3
3481:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
 3658              	 .loc 1 3481 0
 3659 0040 F3B2     	 uxtb r3,r6
 3660 0042 0093     	 str r3,[sp]
 3661              	.LVL524:
3488:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
 3662              	 .loc 1 3488 0
 3663 0044 A31E     	 sub r3,r4,#2
 3664 0046 222B     	 cmp r3,#34
 3665 0048 6AD8     	 bhi .L718
3493:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
 3666              	 .loc 1 3493 0
 3667 004a 002F     	 cmp r7,#0
 3668 004c 6CD1     	 bne .L805
 3669              	.LVL525:
 3670              	.L719:
3521:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt     = nbr;
 3671              	 .loc 1 3521 0
 3672 004e 009B     	 ldr r3,[sp]
 3673 0050 002B     	 cmp r3,#0
 3674 0052 6FD1     	 bne .L726
 3675              	.LBE185:
 3676              	.LBE184:
2280:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_dig,
 3677              	 .loc 1 2280 0
 3678 0054 4D46     	 mov r5,r9
 3679              	.LVL526:
 3680              	.LBB188:
 3681              	.LBB186:
3525:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 3682              	 .loc 1 3525 0
 3683 0056 A542     	 cmp r5,r4
 3684 0058 00D2     	 bcs .LCB5063
 3685 005a 50E1     	 b .L808
 3686              	.LCB5063:
 3687              	.LVL527:
 3688 005c 4846     	 mov r0,r9
 3689 005e 0126     	 mov r6,#1
 3690              	.LVL528:
 3691              	.L725:
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
 3692              	 .loc 1 3526 0
 3693 0060 0136     	 add r6,r6,#1
 3694              	.LVL529:
3527:../Dave/Generated/UCPROBE/lib_str.c ****         }
 3695              	 .loc 1 3527 0
 3696 0062 211C     	 mov r1,r4
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
 3697              	 .loc 1 3526 0
 3698 0064 F6B2     	 uxtb r6,r6
 3699              	.LVL530:
3527:../Dave/Generated/UCPROBE/lib_str.c ****         }
 3700              	 .loc 1 3527 0
 3701 0066 FFF7FEFF 	 bl __aeabi_uidiv
 3702              	.LVL531:
3525:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 3703              	 .loc 1 3525 0
 3704 006a A042     	 cmp r0,r4
 3705 006c F8D2     	 bcs .L725
 3706 006e 039A     	 ldr r2,[sp,#12]
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
 3707              	 .loc 1 3526 0
 3708 0070 331C     	 mov r3,r6
 3709 0072 9346     	 mov fp,r2
 3710 0074 B344     	 add fp,fp,r6
 3711              	.LVL532:
 3712              	.L724:
3531:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd = DEF_NO;
 3713              	 .loc 1 3531 0
 3714 0076 D845     	 cmp r8,fp
 3715 0078 5CDB     	 blt .L726
 3716              	.LVL533:
3533:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
 3717              	 .loc 1 3533 0
 3718 007a 1A1C     	 add r2,r3,#0
 3719 007c 4345     	 cmp r3,r8
 3720 007e 00D9     	 bls .LCB5101
 3721 0080 A6E0     	 b .L843
 3722              	.LCB5101:
 3723 0082 D2B2     	 uxtb r2,r2
 3724              	.LVL534:
3535:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 3725              	 .loc 1 3535 0
 3726 0084 002F     	 cmp r7,#0
 3727 0086 00D1     	 bne .LCB5105
 3728 0088 A7E0     	 b .L728
 3729              	.LCB5105:
 3730              	.LVL535:
 3731              	.L853:
3537:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_dig_min - nbr_neg_sign;
 3732              	 .loc 1 3537 0
 3733 008a 4346     	 mov r3,r8
 3734 008c 9A1A     	 sub r2,r3,r2
3544:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_0 = (lead_char == '0')                /* ... chk if lead char a '0' dig (
 3735              	 .loc 1 3544 0
 3736 008e 019B     	 ldr r3,[sp,#4]
 3737 0090 D2B2     	 uxtb r2,r2
 3738 0092 9342     	 cmp r3,r2
 3739 0094 00D1     	 bne .LCB5115
 3740 0096 A5E0     	 b .L834
 3741              	.LCB5115:
3545:../Dave/Generated/UCPROBE/lib_str.c ****                             ?  DEF_YES : DEF_NO;
 3742              	 .loc 1 3545 0
 3743 0098 3A1C     	 mov r2,r7
 3744 009a 303A     	 sub r2,r2,#48
 3745 009c 5342     	 neg r3,r2
 3746 009e 5A41     	 adc r2,r2,r3
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3747              	 .loc 1 3562 0
 3748 00a0 5146     	 mov r1,r10
3560:../Dave/Generated/UCPROBE/lib_str.c **** 
 3749              	 .loc 1 3560 0
 3750 00a2 109B     	 ldr r3,[sp,#64]
3545:../Dave/Generated/UCPROBE/lib_str.c ****                             ?  DEF_YES : DEF_NO;
 3751              	 .loc 1 3545 0
 3752 00a4 D2B2     	 uxtb r2,r2
3560:../Dave/Generated/UCPROBE/lib_str.c **** 
 3753              	 .loc 1 3560 0
 3754 00a6 4344     	 add r3,r3,r8
 3755              	.LVL536:
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3756              	 .loc 1 3562 0
 3757 00a8 0029     	 cmp r1,#0
 3758 00aa 4BD1     	 bne .L844
 3759              	.LVL537:
 3760              	.L732:
3565:../Dave/Generated/UCPROBE/lib_str.c **** 
 3761              	 .loc 1 3565 0
 3762 00ac 591E     	 sub r1,r3,#1
 3763 00ae 8946     	 mov r9,r1
 3764              	.LVL538:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3765              	 .loc 1 3568 0
 3766 00b0 4146     	 mov r1,r8
 3767              	.LVL539:
 3768 00b2 0029     	 cmp r1,#0
 3769 00b4 00D1     	 bne .LCB5148
 3770 00b6 FEE0     	 b .L845
 3771              	.LCB5148:
 3772 00b8 0099     	 ldr r1,[sp]
 3773 00ba 0029     	 cmp r1,#0
 3774 00bc 45D1     	 bne .L846
 3775 00be 002F     	 cmp r7,#0
 3776 00c0 58D1     	 bne .L736
 3777 00c2 002A     	 cmp r2,#0
 3778 00c4 00D0     	 beq .LCB5155
 3779 00c6 8FE0     	 b .L737
 3780              	.LCB5155:
 3781 00c8 029B     	 ldr r3,[sp,#8]
 3782 00ca 012B     	 cmp r3,#1
 3783 00cc 00D1     	 bne .LCB5158
 3784 00ce 18E1     	 b .L847
 3785              	.LCB5158:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 3786              	 .loc 1 3592 0
 3787 00d0 2D23     	 mov r3,#45
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3788              	 .loc 1 3568 0
 3789 00d2 0027     	 mov r7,#0
 3790              	.LVL540:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 3791              	 .loc 1 3592 0
 3792 00d4 9A46     	 mov r10,r3
 3793              	.LVL541:
 3794 00d6 231C     	 mov r3,r4
 3795 00d8 BB46     	 mov fp,r7
 3796 00da 4446     	 mov r4,r8
 3797              	.LVL542:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3798              	 .loc 1 3568 0
 3799 00dc 0026     	 mov r6,#0
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 3800              	 .loc 1 3592 0
 3801 00de 4F46     	 mov r7,r9
 3802 00e0 9846     	 mov r8,r3
 3803              	.LVL543:
 3804 00e2 0AE0     	 b .L752
 3805              	.LVL544:
 3806              	.L849:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3807              	 .loc 1 3570 0
 3808 00e4 002E     	 cmp r6,#0
 3809 00e6 00D1     	 bne .LCB5186
 3810 00e8 F2E0     	 b .L748
 3811              	.LCB5186:
3586:../Dave/Generated/UCPROBE/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
 3812              	 .loc 1 3586 0
 3813 00ea 019B     	 ldr r3,[sp,#4]
 3814 00ec 012B     	 cmp r3,#1
 3815 00ee 00D1     	 bne .LCB5192
 3816 00f0 F7E0     	 b .L848
 3817              	.LCB5192:
 3818              	.LVL545:
 3819              	.L749:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3820              	 .loc 1 3568 0
 3821 00f2 0136     	 add r6,r6,#1
 3822              	.LVL546:
 3823 00f4 B442     	 cmp r4,r6
 3824 00f6 00D8     	 bhi .LCB5207
 3825 00f8 E1E0     	 b .L746
 3826              	.LCB5207:
 3827              	.LVL547:
 3828              	.L752:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 3829              	 .loc 1 3570 0
 3830 00fa 002D     	 cmp r5,#0
 3831 00fc F2D0     	 beq .L849
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3832              	 .loc 1 3573 0
 3833 00fe 281C     	 mov r0,r5
 3834 0100 4146     	 mov r1,r8
 3835 0102 FFF7FEFF 	 bl __aeabi_uidivmod
 3836              	.LVL548:
 3837 0106 C9B2     	 uxtb r1,r1
 3838              	.LVL549:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 3839              	 .loc 1 3574 0
 3840 0108 0929     	 cmp r1,#9
 3841 010a 00D8     	 bhi .LCB5228
 3842 010c E1E0     	 b .L750
 3843              	.LCB5228:
 3844              	.LVL550:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 3845              	 .loc 1 3578 0
 3846 010e 3731     	 add r1,r1,#55
 3847              	.LVL551:
 3848 0110 3970     	 strb r1,[r7]
 3849 0112 013F     	 sub r7,r7,#1
 3850              	.LVL552:
 3851              	.L751:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3852              	 .loc 1 3584 0
 3853 0114 281C     	 mov r0,r5
 3854 0116 4146     	 mov r1,r8
 3855 0118 FFF7FEFF 	 bl __aeabi_uidiv
 3856              	.LVL553:
 3857 011c 051C     	 mov r5,r0
 3858              	.LVL554:
 3859 011e E8E7     	 b .L749
 3860              	.LVL555:
 3861              	.L718:
3493:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
 3862              	 .loc 1 3493 0
 3863 0120 002F     	 cmp r7,#0
 3864 0122 07D0     	 beq .L726
3490:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3865              	 .loc 1 3490 0
 3866 0124 0123     	 mov r3,#1
 3867 0126 0093     	 str r3,[sp]
 3868              	.LVL556:
 3869              	.L805:
3494:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable (see 
 3870              	 .loc 1 3494 0
 3871 0128 381C     	 mov r0,r7
 3872              	.LVL557:
 3873 012a FFF7FEFF 	 bl ASCII_IsPrint
 3874              	.LVL558:
3495:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str        (see 
 3875              	 .loc 1 3495 0
 3876 012e 0128     	 cmp r0,#1
 3877 0130 00D1     	 bne .LCB5286
 3878 0132 A8E0     	 b .L850
 3879              	.LCB5286:
 3880              	.LVL559:
 3881              	.L726:
3519:../Dave/Generated/UCPROBE/lib_str.c **** 
 3882              	 .loc 1 3519 0
 3883 0134 0123     	 mov r3,#1
 3884 0136 0022     	 mov r2,#0
 3885 0138 0093     	 str r3,[sp]
 3886              	.LVL560:
 3887              	.L804:
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3888              	 .loc 1 3562 0
 3889 013a 5146     	 mov r1,r10
3560:../Dave/Generated/UCPROBE/lib_str.c **** 
 3890              	 .loc 1 3560 0
 3891 013c 109B     	 ldr r3,[sp,#64]
 3892 013e 4344     	 add r3,r3,r8
 3893              	.LVL561:
3562:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 3894              	 .loc 1 3562 0
 3895 0140 0029     	 cmp r1,#0
 3896 0142 B3D0     	 beq .L732
 3897              	.L844:
3563:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3898              	 .loc 1 3563 0
 3899 0144 0021     	 mov r1,#0
 3900 0146 1970     	 strb r1,[r3]
 3901 0148 B0E7     	 b .L732
 3902              	.LVL562:
 3903              	.L846:
 3904 014a 1098     	 ldr r0,[sp,#64]
 3905 014c 3F21     	 mov r1,#63
 3906 014e 4246     	 mov r2,r8
 3907 0150 FFF7FEFF 	 bl memset
 3908              	.LVL563:
 3909              	.L734:
3478:../Dave/Generated/UCPROBE/lib_str.c ****     }
 3910              	 .loc 1 3478 0
 3911 0154 0020     	 mov r0,#0
 3912              	.LVL564:
 3913              	.L828:
 3914              	.LBE186:
 3915              	.LBE188:
2290:../Dave/Generated/UCPROBE/lib_str.c **** 
 3916              	 .loc 1 2290 0
 3917 0156 05B0     	 add sp,sp,#20
 3918              	 
 3919 0158 3CBC     	 pop {r2,r3,r4,r5}
 3920 015a 9046     	 mov r8,r2
 3921 015c 9946     	 mov r9,r3
 3922 015e A246     	 mov r10,r4
 3923 0160 AB46     	 mov fp,r5
 3924 0162 F0BD     	 pop {r4,r5,r6,r7,pc}
 3925              	.LVL565:
 3926              	.L842:
2273:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg =  DEF_YES;
 3927              	 .loc 1 2273 0
 3928 0164 4342     	 neg r3,r0
 3929 0166 9946     	 mov r9,r3
 3930              	.LVL566:
 3931 0168 0223     	 mov r3,#2
 3932              	.LVL567:
 3933 016a 9B46     	 mov fp,r3
 3934 016c 013B     	 sub r3,r3,#1
 3935 016e 0393     	 str r3,[sp,#12]
2274:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
 3936              	 .loc 1 2274 0
 3937 0170 0193     	 str r3,[sp,#4]
 3938 0172 5EE7     	 b .L715
 3939              	.LVL568:
 3940              	.L736:
 3941 0174 002A     	 cmp r2,#0
 3942 0176 5CD0     	 beq .L851
 3943 0178 9E1E     	 sub r6,r3,#2
 3944              	.LBB189:
 3945              	.LBB187:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3946              	 .loc 1 3568 0
 3947 017a 0023     	 mov r3,#0
 3948 017c 019A     	 ldr r2,[sp,#4]
 3949 017e 9946     	 mov r9,r3
 3950              	.LVL569:
 3951 0180 012A     	 cmp r2,#1
 3952 0182 00D1     	 bne .LCB5430
 3953 0184 F0E0     	 b .L786
 3954              	.LCB5430:
 3955 0186 3B1C     	 mov r3,r7
 3956 0188 4746     	 mov r7,r8
 3957              	.LVL570:
 3958 018a A046     	 mov r8,r4
 3959              	.LVL571:
 3960 018c 4C46     	 mov r4,r9
 3961              	.LVL572:
 3962 018e 9946     	 mov r9,r3
 3963 0190 16E0     	 b .L794
 3964              	.LVL573:
 3965              	.L787:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 3966              	 .loc 1 3573 0
 3967 0192 281C     	 mov r0,r5
 3968 0194 4146     	 mov r1,r8
 3969 0196 FFF7FEFF 	 bl __aeabi_uidivmod
 3970              	.LVL574:
 3971 019a C9B2     	 uxtb r1,r1
 3972              	.LVL575:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 3973              	 .loc 1 3574 0
 3974 019c 0929     	 cmp r1,#9
 3975 019e 00D8     	 bhi .LCB5458
 3976 01a0 8FE0     	 b .L791
 3977              	.LCB5458:
3577:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 3978              	 .loc 1 3577 0
 3979 01a2 029B     	 ldr r3,[sp,#8]
 3980 01a4 012B     	 cmp r3,#1
 3981 01a6 00D1     	 bne .LCB5462
 3982 01a8 DBE0     	 b .L852
 3983              	.LCB5462:
 3984              	.LVL576:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 3985              	 .loc 1 3578 0
 3986 01aa 3731     	 add r1,r1,#55
 3987              	.LVL577:
 3988 01ac 7170     	 strb r1,[r6,#1]
 3989              	.LVL578:
 3990              	.L790:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 3991              	 .loc 1 3584 0
 3992 01ae 281C     	 mov r0,r5
 3993 01b0 4146     	 mov r1,r8
 3994 01b2 FFF7FEFF 	 bl __aeabi_uidiv
 3995              	.LVL579:
 3996 01b6 051C     	 mov r5,r0
 3997              	.LVL580:
 3998              	.L789:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 3999              	 .loc 1 3568 0
 4000 01b8 0134     	 add r4,r4,#1
 4001              	.LVL581:
 4002 01ba 013E     	 sub r6,r6,#1
 4003 01bc A742     	 cmp r7,r4
 4004 01be 7ED9     	 bls .L746
 4005              	.LVL582:
 4006              	.L794:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4007              	 .loc 1 3570 0
 4008 01c0 002D     	 cmp r5,#0
 4009 01c2 E6D1     	 bne .L787
 4010              	.LVL583:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4011              	 .loc 1 3573 0
 4012 01c4 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4013              	 .loc 1 3570 0
 4014 01c6 002C     	 cmp r4,#0
 4015 01c8 7BD0     	 beq .L791
 4016              	.LVL584:
3596:../Dave/Generated/UCPROBE/lib_str.c ****             }
 4017              	 .loc 1 3596 0
 4018 01ca 4B46     	 mov r3,r9
 4019 01cc 7370     	 strb r3,[r6,#1]
 4020 01ce F3E7     	 b .L789
 4021              	.LVL585:
 4022              	.L843:
3533:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
 4023              	 .loc 1 3533 0
 4024 01d0 4246     	 mov r2,r8
 4025 01d2 D2B2     	 uxtb r2,r2
 4026              	.LVL586:
3535:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 4027              	 .loc 1 3535 0
 4028 01d4 002F     	 cmp r7,#0
 4029 01d6 00D0     	 beq .LCB5536
 4030 01d8 57E7     	 b .L853
 4031              	.LCB5536:
 4032              	.LVL587:
 4033              	.L728:
3540:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_lead_char = 0u;
 4034              	 .loc 1 3540 0
 4035 01da 019B     	 ldr r3,[sp,#4]
 4036 01dc 9C46     	 mov ip,r3
 4037 01de 6244     	 add r2,r2,ip
 4038 01e0 D3B2     	 uxtb r3,r2
 4039 01e2 9846     	 mov r8,r3
 4040              	.LVL588:
 4041              	.L834:
3519:../Dave/Generated/UCPROBE/lib_str.c **** 
 4042              	 .loc 1 3519 0
 4043 01e4 0022     	 mov r2,#0
 4044 01e6 A8E7     	 b .L804
 4045              	.LVL589:
 4046              	.L737:
 4047 01e8 019B     	 ldr r3,[sp,#4]
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4048              	 .loc 1 3568 0
 4049 01ea 0026     	 mov r6,#0
 4050 01ec 012B     	 cmp r3,#1
 4051 01ee 00D1     	 bne .LCB5572
 4052 01f0 1DE1     	 b .L753
 4053              	.LCB5572:
 4054 01f2 4746     	 mov r7,r8
 4055              	.LVL590:
 4056 01f4 A046     	 mov r8,r4
 4057              	.LVL591:
 4058 01f6 4C46     	 mov r4,r9
 4059              	.LVL592:
 4060 01f8 05E0     	 b .L759
 4061              	.LVL593:
 4062              	.L854:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4063              	 .loc 1 3573 0
 4064 01fa 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4065              	 .loc 1 3570 0
 4066 01fc 002E     	 cmp r6,#0
 4067 01fe 63D0     	 beq .L756
 4068              	.LVL594:
 4069              	.L755:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4070              	 .loc 1 3568 0
 4071 0200 0136     	 add r6,r6,#1
 4072              	.LVL595:
 4073 0202 B742     	 cmp r7,r6
 4074 0204 5BD9     	 bls .L746
 4075              	.LVL596:
 4076              	.L759:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4077              	 .loc 1 3570 0
 4078 0206 002D     	 cmp r5,#0
 4079 0208 F7D0     	 beq .L854
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4080              	 .loc 1 3573 0
 4081 020a 281C     	 mov r0,r5
 4082 020c 4146     	 mov r1,r8
 4083 020e FFF7FEFF 	 bl __aeabi_uidivmod
 4084              	.LVL597:
 4085 0212 C9B2     	 uxtb r1,r1
 4086              	.LVL598:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 4087              	 .loc 1 3574 0
 4088 0214 0929     	 cmp r1,#9
 4089 0216 57D9     	 bls .L756
3577:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 4090              	 .loc 1 3577 0
 4091 0218 029B     	 ldr r3,[sp,#8]
 4092 021a 012B     	 cmp r3,#1
 4093 021c 00D1     	 bne .LCB5630
 4094 021e 36E1     	 b .L757
 4095              	.LCB5630:
 4096              	.LVL599:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 4097              	 .loc 1 3578 0
 4098 0220 3731     	 add r1,r1,#55
 4099              	.LVL600:
 4100 0222 2170     	 strb r1,[r4]
 4101 0224 013C     	 sub r4,r4,#1
 4102              	.LVL601:
 4103              	.L758:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 4104              	 .loc 1 3584 0
 4105 0226 281C     	 mov r0,r5
 4106 0228 4146     	 mov r1,r8
 4107 022a FFF7FEFF 	 bl __aeabi_uidiv
 4108              	.LVL602:
 4109 022e 051C     	 mov r5,r0
 4110              	.LVL603:
 4111 0230 E6E7     	 b .L755
 4112              	.LVL604:
 4113              	.L851:
 4114 0232 019A     	 ldr r2,[sp,#4]
 4115 0234 9E1E     	 sub r6,r3,#2
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4116              	 .loc 1 3568 0
 4117 0236 0023     	 mov r3,#0
 4118 0238 012A     	 cmp r2,#1
 4119 023a 00D1     	 bne .LCB5664
 4120 023c C2E0     	 b .L769
 4121              	.LCB5664:
 4122 023e 9946     	 mov r9,r3
 4123              	.LVL605:
 4124 0240 3B1C     	 mov r3,r7
 4125 0242 4746     	 mov r7,r8
 4126              	.LVL606:
 4127 0244 A046     	 mov r8,r4
 4128              	.LVL607:
 4129 0246 4C46     	 mov r4,r9
 4130              	.LVL608:
 4131 0248 9946     	 mov r9,r3
 4132 024a 07E0     	 b .L776
 4133              	.LVL609:
 4134              	.L855:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4135              	 .loc 1 3570 0
 4136 024c 002C     	 cmp r4,#0
 4137 024e 44D0     	 beq .L771
 4138              	.LVL610:
3596:../Dave/Generated/UCPROBE/lib_str.c ****             }
 4139              	 .loc 1 3596 0
 4140 0250 4B46     	 mov r3,r9
 4141 0252 7370     	 strb r3,[r6,#1]
 4142              	.LVL611:
 4143              	.L772:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4144              	 .loc 1 3568 0
 4145 0254 0134     	 add r4,r4,#1
 4146              	.LVL612:
 4147 0256 013E     	 sub r6,r6,#1
 4148 0258 A742     	 cmp r7,r4
 4149 025a 30D9     	 bls .L746
 4150              	.LVL613:
 4151              	.L776:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4152              	 .loc 1 3570 0
 4153 025c 002D     	 cmp r5,#0
 4154 025e F5D0     	 beq .L855
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4155              	 .loc 1 3573 0
 4156 0260 281C     	 mov r0,r5
 4157 0262 4146     	 mov r1,r8
 4158 0264 FFF7FEFF 	 bl __aeabi_uidivmod
 4159              	.LVL614:
 4160 0268 C9B2     	 uxtb r1,r1
 4161              	.LVL615:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 4162              	 .loc 1 3574 0
 4163 026a 0929     	 cmp r1,#9
 4164 026c 36D9     	 bls .L773
3577:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 4165              	 .loc 1 3577 0
 4166 026e 029B     	 ldr r3,[sp,#8]
 4167 0270 012B     	 cmp r3,#1
 4168 0272 00D1     	 bne .LCB5733
 4169 0274 D8E0     	 b .L774
 4170              	.LCB5733:
 4171              	.LVL616:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 4172              	 .loc 1 3578 0
 4173 0276 3731     	 add r1,r1,#55
 4174              	.LVL617:
 4175 0278 7170     	 strb r1,[r6,#1]
 4176              	.LVL618:
 4177              	.L775:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 4178              	 .loc 1 3584 0
 4179 027a 281C     	 mov r0,r5
 4180 027c 4146     	 mov r1,r8
 4181 027e FFF7FEFF 	 bl __aeabi_uidiv
 4182              	.LVL619:
 4183 0282 051C     	 mov r5,r0
 4184              	.LVL620:
 4185 0284 E6E7     	 b .L772
 4186              	.LVL621:
 4187              	.L850:
3498:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_delta_0 = (CPU_INT08U)(lead_char - '0');
 4188              	 .loc 1 3498 0
 4189 0286 302F     	 cmp r7,#48
 4190 0288 00D1     	 bne .LCB5768
 4191 028a E0E6     	 b .L719
 4192              	.LCB5768:
3499:../Dave/Generated/UCPROBE/lib_str.c ****             if (lower_case != DEF_YES) {
 4193              	 .loc 1 3499 0
 4194 028c 3B1C     	 mov r3,r7
3500:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
 4195              	 .loc 1 3500 0
 4196 028e 029A     	 ldr r2,[sp,#8]
3499:../Dave/Generated/UCPROBE/lib_str.c ****             if (lower_case != DEF_YES) {
 4197              	 .loc 1 3499 0
 4198 0290 303B     	 sub r3,r3,#48
 4199 0292 DBB2     	 uxtb r3,r3
 4200              	.LVL622:
3500:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
 4201              	 .loc 1 3500 0
 4202 0294 012A     	 cmp r2,#1
 4203 0296 2ED0     	 beq .L721
3501:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
 4204              	 .loc 1 3501 0
 4205 0298 3A1C     	 mov r2,r7
 4206 029a 413A     	 sub r2,r2,#65
 4207 029c D2B2     	 uxtb r2,r2
 4208              	.LVL623:
 4209              	.L722:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 4210              	 .loc 1 3506 0
 4211 029e 0A2C     	 cmp r4,#10
 4212 02a0 00D8     	 bhi .LCB5785
 4213 02a2 F8E0     	 b .L856
 4214              	.LCB5785:
3507:../Dave/Generated/UCPROBE/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 4215              	 .loc 1 3507 0
 4216 02a4 092B     	 cmp r3,#9
 4217 02a6 00D8     	 bhi .LCB5788
 4218 02a8 44E7     	 b .L726
 4219              	.LCB5788:
3508:../Dave/Generated/UCPROBE/lib_str.c **** 
 4220              	 .loc 1 3508 0
 4221 02aa 231C     	 mov r3,r4
 4222              	.LVL624:
 4223 02ac 0A3B     	 sub r3,r3,#10
3507:../Dave/Generated/UCPROBE/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 4224              	 .loc 1 3507 0
 4225 02ae 9A42     	 cmp r2,r3
 4226 02b0 00D2     	 bcs .LCB5793
 4227 02b2 3FE7     	 b .L726
 4228              	.LCB5793:
 4229 02b4 CBE6     	 b .L719
 4230              	.LVL625:
 4231              	.L845:
3605:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 4232              	 .loc 1 3605 0
 4233 02b6 009B     	 ldr r3,[sp]
 4234 02b8 002B     	 cmp r3,#0
 4235 02ba 00D0     	 beq .LCB5811
 4236 02bc 4AE7     	 b .L734
 4237              	.LCB5811:
 4238              	.LVL626:
 4239              	.L746:
 4240 02be 1098     	 ldr r0,[sp,#64]
 4241 02c0 49E7     	 b .L828
 4242              	.LVL627:
 4243              	.L791:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 4244              	 .loc 1 3575 0
 4245 02c2 3031     	 add r1,r1,#48
 4246              	.LVL628:
 4247 02c4 7170     	 strb r1,[r6,#1]
 4248 02c6 72E7     	 b .L790
 4249              	.LVL629:
 4250              	.L756:
 4251 02c8 3031     	 add r1,r1,#48
 4252              	.LVL630:
 4253 02ca 2170     	 strb r1,[r4]
 4254 02cc 013C     	 sub r4,r4,#1
 4255              	.LVL631:
 4256 02ce AAE7     	 b .L758
 4257              	.LVL632:
 4258              	.L748:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4259              	 .loc 1 3573 0
 4260 02d0 0021     	 mov r1,#0
 4261              	.LVL633:
 4262              	.L750:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 4263              	 .loc 1 3575 0
 4264 02d2 3031     	 add r1,r1,#48
 4265              	.LVL634:
 4266 02d4 3970     	 strb r1,[r7]
 4267 02d6 013F     	 sub r7,r7,#1
 4268              	.LVL635:
 4269 02d8 1CE7     	 b .L751
 4270              	.LVL636:
 4271              	.L771:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4272              	 .loc 1 3573 0
 4273 02da 0021     	 mov r1,#0
 4274              	.LVL637:
 4275              	.L773:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 4276              	 .loc 1 3575 0
 4277 02dc 3031     	 add r1,r1,#48
 4278              	.LVL638:
 4279 02de 7170     	 strb r1,[r6,#1]
 4280 02e0 CBE7     	 b .L775
 4281              	.LVL639:
 4282              	.L848:
3586:../Dave/Generated/UCPROBE/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
 4283              	 .loc 1 3586 0
 4284 02e2 5B46     	 mov r3,fp
 4285 02e4 002B     	 cmp r3,#0
 4286 02e6 00D0     	 beq .LCB5938
 4287 02e8 03E7     	 b .L749
 4288              	.LCB5938:
 4289              	.LVL640:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4290              	 .loc 1 3592 0
 4291 02ea 5346     	 mov r3,r10
 4292 02ec 3B70     	 strb r3,[r7]
 4293              	.LVL641:
3593:../Dave/Generated/UCPROBE/lib_str.c **** 
 4294              	 .loc 1 3593 0
 4295 02ee 0123     	 mov r3,#1
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4296              	 .loc 1 3592 0
 4297 02f0 013F     	 sub r7,r7,#1
 4298              	.LVL642:
3593:../Dave/Generated/UCPROBE/lib_str.c **** 
 4299              	 .loc 1 3593 0
 4300 02f2 9B46     	 mov fp,r3
 4301 02f4 FDE6     	 b .L749
 4302              	.LVL643:
 4303              	.L721:
3503:../Dave/Generated/UCPROBE/lib_str.c ****             }
 4304              	 .loc 1 3503 0
 4305 02f6 3A1C     	 mov r2,r7
 4306 02f8 613A     	 sub r2,r2,#97
 4307 02fa D2B2     	 uxtb r2,r2
 4308              	.LVL644:
 4309 02fc CFE7     	 b .L722
 4310              	.LVL645:
 4311              	.L808:
3525:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 4312              	 .loc 1 3525 0
 4313 02fe 0123     	 mov r3,#1
 4314 0300 B9E6     	 b .L724
 4315              	.LVL646:
 4316              	.L847:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4317              	 .loc 1 3592 0
 4318 0302 2C33     	 add r3,r3,#44
 4319 0304 9A46     	 mov r10,r3
 4320              	.LVL647:
 4321 0306 231C     	 mov r3,r4
 4322 0308 BB46     	 mov fp,r7
 4323 030a 4446     	 mov r4,r8
 4324              	.LVL648:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4325              	 .loc 1 3568 0
 4326 030c 0026     	 mov r6,#0
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4327              	 .loc 1 3592 0
 4328 030e 4F46     	 mov r7,r9
 4329              	.LVL649:
 4330 0310 9846     	 mov r8,r3
 4331              	.LVL650:
 4332 0312 11E0     	 b .L745
 4333              	.LVL651:
 4334              	.L739:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4335              	 .loc 1 3573 0
 4336 0314 281C     	 mov r0,r5
 4337 0316 4146     	 mov r1,r8
 4338 0318 FFF7FEFF 	 bl __aeabi_uidivmod
 4339              	.LVL652:
 4340 031c C9B2     	 uxtb r1,r1
 4341              	.LVL653:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 4342              	 .loc 1 3574 0
 4343 031e 0929     	 cmp r1,#9
 4344 0320 1BD9     	 bls .L743
 4345              	.LVL654:
3580:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 4346              	 .loc 1 3580 0
 4347 0322 5731     	 add r1,r1,#87
 4348              	.LVL655:
 4349 0324 3970     	 strb r1,[r7]
 4350 0326 013F     	 sub r7,r7,#1
 4351              	.LVL656:
 4352              	.L742:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 4353              	 .loc 1 3584 0
 4354 0328 281C     	 mov r0,r5
 4355 032a 4146     	 mov r1,r8
 4356 032c FFF7FEFF 	 bl __aeabi_uidiv
 4357              	.LVL657:
 4358 0330 051C     	 mov r5,r0
 4359              	.LVL658:
 4360              	.L741:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4361              	 .loc 1 3568 0
 4362 0332 0136     	 add r6,r6,#1
 4363              	.LVL659:
 4364 0334 B442     	 cmp r4,r6
 4365 0336 C2D9     	 bls .L746
 4366              	.LVL660:
 4367              	.L745:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4368              	 .loc 1 3570 0
 4369 0338 002D     	 cmp r5,#0
 4370 033a EBD1     	 bne .L739
 4371              	.LVL661:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4372              	 .loc 1 3573 0
 4373 033c 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4374              	 .loc 1 3570 0
 4375 033e 002E     	 cmp r6,#0
 4376 0340 0BD0     	 beq .L743
3586:../Dave/Generated/UCPROBE/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
 4377              	 .loc 1 3586 0
 4378 0342 019B     	 ldr r3,[sp,#4]
 4379 0344 012B     	 cmp r3,#1
 4380 0346 F4D1     	 bne .L741
 4381 0348 5B46     	 mov r3,fp
 4382 034a 002B     	 cmp r3,#0
 4383 034c F1D1     	 bne .L741
 4384              	.LVL662:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4385              	 .loc 1 3592 0
 4386 034e 5346     	 mov r3,r10
 4387 0350 3B70     	 strb r3,[r7]
 4388              	.LVL663:
3593:../Dave/Generated/UCPROBE/lib_str.c **** 
 4389              	 .loc 1 3593 0
 4390 0352 0123     	 mov r3,#1
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4391              	 .loc 1 3592 0
 4392 0354 013F     	 sub r7,r7,#1
 4393              	.LVL664:
3593:../Dave/Generated/UCPROBE/lib_str.c **** 
 4394              	 .loc 1 3593 0
 4395 0356 9B46     	 mov fp,r3
 4396 0358 EBE7     	 b .L741
 4397              	.LVL665:
 4398              	.L743:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 4399              	 .loc 1 3575 0
 4400 035a 3031     	 add r1,r1,#48
 4401              	.LVL666:
 4402 035c 3970     	 strb r1,[r7]
 4403 035e 013F     	 sub r7,r7,#1
 4404              	.LVL667:
 4405 0360 E2E7     	 b .L742
 4406              	.LVL668:
 4407              	.L852:
3580:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 4408              	 .loc 1 3580 0
 4409 0362 5731     	 add r1,r1,#87
 4410              	.LVL669:
 4411 0364 7170     	 strb r1,[r6,#1]
 4412 0366 22E7     	 b .L790
 4413              	.LVL670:
 4414              	.L786:
3590:../Dave/Generated/UCPROBE/lib_str.c **** 
 4415              	 .loc 1 3590 0
 4416 0368 013B     	 sub r3,r3,#1
 4417 036a 4344     	 add r3,r3,r8
 4418 036c 9A46     	 mov r10,r3
 4419              	.LVL671:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4420              	 .loc 1 3592 0
 4421 036e 2D23     	 mov r3,#45
 4422 0370 9B46     	 mov fp,r3
 4423 0372 3B1C     	 mov r3,r7
 4424 0374 4746     	 mov r7,r8
 4425              	.LVL672:
 4426 0376 A046     	 mov r8,r4
 4427              	.LVL673:
 4428 0378 4C46     	 mov r4,r9
 4429              	.LVL674:
 4430 037a 9946     	 mov r9,r3
 4431 037c 0BE0     	 b .L803
 4432              	.LVL675:
 4433              	.L859:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4434              	 .loc 1 3570 0
 4435 037e 002C     	 cmp r4,#0
 4436 0380 00D1     	 bne .LCB6178
 4437 0382 99E0     	 b .L857
 4438              	.LCB6178:
3589:../Dave/Generated/UCPROBE/lib_str.c ****                        (i == (nbr_dig_fmtd - 1u))))) {          /* ... & on most-sig dig to fmt,   
 4439              	 .loc 1 3589 0
 4440 0384 5445     	 cmp r4,r10
 4441 0386 00D1     	 bne .LCB6182
 4442 0388 89E0     	 b .L858
 4443              	.LCB6182:
 4444              	.LVL676:
3596:../Dave/Generated/UCPROBE/lib_str.c ****             }
 4445              	 .loc 1 3596 0
 4446 038a 4B46     	 mov r3,r9
 4447 038c 7370     	 strb r3,[r6,#1]
 4448              	.LVL677:
 4449              	.L801:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4450              	 .loc 1 3568 0
 4451 038e 0134     	 add r4,r4,#1
 4452              	.LVL678:
 4453 0390 013E     	 sub r6,r6,#1
 4454 0392 A742     	 cmp r7,r4
 4455 0394 93D9     	 bls .L746
 4456              	.LVL679:
 4457              	.L803:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4458              	 .loc 1 3570 0
 4459 0396 002D     	 cmp r5,#0
 4460 0398 F1D0     	 beq .L859
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4461              	 .loc 1 3573 0
 4462 039a 281C     	 mov r0,r5
 4463 039c 4146     	 mov r1,r8
 4464 039e FFF7FEFF 	 bl __aeabi_uidivmod
 4465              	.LVL680:
 4466 03a2 C9B2     	 uxtb r1,r1
 4467              	.LVL681:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 4468              	 .loc 1 3574 0
 4469 03a4 0929     	 cmp r1,#9
 4470 03a6 07D8     	 bhi .L798
 4471              	.LVL682:
 4472              	.L806:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 4473              	 .loc 1 3575 0
 4474 03a8 3031     	 add r1,r1,#48
 4475              	.LVL683:
 4476 03aa 7170     	 strb r1,[r6,#1]
 4477              	.L799:
 4478              	.LVL684:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 4479              	 .loc 1 3584 0
 4480 03ac 281C     	 mov r0,r5
 4481 03ae 4146     	 mov r1,r8
 4482 03b0 FFF7FEFF 	 bl __aeabi_uidiv
 4483              	.LVL685:
 4484 03b4 051C     	 mov r5,r0
 4485              	.LVL686:
 4486 03b6 EAE7     	 b .L801
 4487              	.LVL687:
 4488              	.L798:
3577:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 4489              	 .loc 1 3577 0
 4490 03b8 029B     	 ldr r3,[sp,#8]
 4491 03ba 012B     	 cmp r3,#1
 4492 03bc 79D0     	 beq .L800
 4493              	.LVL688:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 4494              	 .loc 1 3578 0
 4495 03be 3731     	 add r1,r1,#55
 4496              	.LVL689:
 4497 03c0 7170     	 strb r1,[r6,#1]
 4498 03c2 F3E7     	 b .L799
 4499              	.LVL690:
 4500              	.L769:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4501              	 .loc 1 3568 0
 4502 03c4 9A46     	 mov r10,r3
 4503              	.LVL691:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4504              	 .loc 1 3592 0
 4505 03c6 2D33     	 add r3,r3,#45
 4506 03c8 9B46     	 mov fp,r3
 4507 03ca 3B1C     	 mov r3,r7
 4508 03cc 4746     	 mov r7,r8
 4509              	.LVL692:
 4510 03ce 9946     	 mov r9,r3
 4511              	.LVL693:
 4512 03d0 A046     	 mov r8,r4
 4513              	.LVL694:
 4514 03d2 5446     	 mov r4,r10
 4515              	.LVL695:
 4516 03d4 15E0     	 b .L785
 4517              	.LVL696:
 4518              	.L777:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4519              	 .loc 1 3573 0
 4520 03d6 281C     	 mov r0,r5
 4521 03d8 4146     	 mov r1,r8
 4522 03da FFF7FEFF 	 bl __aeabi_uidivmod
 4523              	.LVL697:
 4524 03de C9B2     	 uxtb r1,r1
 4525              	.LVL698:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 4526              	 .loc 1 3574 0
 4527 03e0 0929     	 cmp r1,#9
 4528 03e2 1BD9     	 bls .L781
3577:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 4529              	 .loc 1 3577 0
 4530 03e4 029B     	 ldr r3,[sp,#8]
 4531 03e6 012B     	 cmp r3,#1
 4532 03e8 5CD0     	 beq .L860
 4533              	.LVL699:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 4534              	 .loc 1 3578 0
 4535 03ea 3731     	 add r1,r1,#55
 4536              	.LVL700:
 4537 03ec 7170     	 strb r1,[r6,#1]
 4538              	.LVL701:
 4539              	.L780:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 4540              	 .loc 1 3584 0
 4541 03ee 281C     	 mov r0,r5
 4542 03f0 4146     	 mov r1,r8
 4543 03f2 FFF7FEFF 	 bl __aeabi_uidiv
 4544              	.LVL702:
 4545 03f6 051C     	 mov r5,r0
 4546              	.LVL703:
 4547              	.L779:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4548              	 .loc 1 3568 0
 4549 03f8 0134     	 add r4,r4,#1
 4550              	.LVL704:
 4551 03fa 013E     	 sub r6,r6,#1
 4552 03fc A742     	 cmp r7,r4
 4553 03fe 00D8     	 bhi .LCB6335
 4554 0400 5DE7     	 b .L746
 4555              	.LCB6335:
 4556              	.LVL705:
 4557              	.L785:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4558              	 .loc 1 3570 0
 4559 0402 002D     	 cmp r5,#0
 4560 0404 E7D1     	 bne .L777
 4561              	.LVL706:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4562              	 .loc 1 3573 0
 4563 0406 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4564              	 .loc 1 3570 0
 4565 0408 002C     	 cmp r4,#0
 4566 040a 07D0     	 beq .L781
3586:../Dave/Generated/UCPROBE/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
 4567              	 .loc 1 3586 0
 4568 040c 5346     	 mov r3,r10
 4569 040e 002B     	 cmp r3,#0
 4570 0410 07D1     	 bne .L784
 4571              	.LVL707:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4572              	 .loc 1 3592 0
 4573 0412 5B46     	 mov r3,fp
 4574 0414 7370     	 strb r3,[r6,#1]
 4575              	.LVL708:
3593:../Dave/Generated/UCPROBE/lib_str.c **** 
 4576              	 .loc 1 3593 0
 4577 0416 0123     	 mov r3,#1
 4578 0418 9A46     	 mov r10,r3
 4579 041a EDE7     	 b .L779
 4580              	.LVL709:
 4581              	.L781:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 4582              	 .loc 1 3575 0
 4583 041c 3031     	 add r1,r1,#48
 4584              	.LVL710:
 4585 041e 7170     	 strb r1,[r6,#1]
 4586 0420 E5E7     	 b .L780
 4587              	.LVL711:
 4588              	.L784:
3596:../Dave/Generated/UCPROBE/lib_str.c ****             }
 4589              	 .loc 1 3596 0
 4590 0422 4B46     	 mov r3,r9
 4591 0424 7370     	 strb r3,[r6,#1]
 4592 0426 E7E7     	 b .L779
 4593              	.LVL712:
 4594              	.L774:
3580:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 4595              	 .loc 1 3580 0
 4596 0428 5731     	 add r1,r1,#87
 4597              	.LVL713:
 4598 042a 7170     	 strb r1,[r6,#1]
 4599 042c 25E7     	 b .L775
 4600              	.LVL714:
 4601              	.L753:
3590:../Dave/Generated/UCPROBE/lib_str.c **** 
 4602              	 .loc 1 3590 0
 4603 042e 4346     	 mov r3,r8
 4604 0430 5F1E     	 sub r7,r3,#1
 4605              	.LVL715:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4606              	 .loc 1 3592 0
 4607 0432 2D23     	 mov r3,#45
 4608 0434 221C     	 mov r2,r4
 4609 0436 9A46     	 mov r10,r3
 4610              	.LVL716:
 4611 0438 3B1C     	 mov r3,r7
 4612 043a 4446     	 mov r4,r8
 4613              	.LVL717:
 4614 043c 4F46     	 mov r7,r9
 4615 043e 9046     	 mov r8,r2
 4616              	.LVL718:
 4617 0440 9946     	 mov r9,r3
 4618              	.LVL719:
 4619 0442 15E0     	 b .L767
 4620              	.LVL720:
 4621              	.L760:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4622              	 .loc 1 3573 0
 4623 0444 281C     	 mov r0,r5
 4624 0446 4146     	 mov r1,r8
 4625 0448 FFF7FEFF 	 bl __aeabi_uidivmod
 4626              	.LVL721:
 4627 044c C9B2     	 uxtb r1,r1
 4628              	.LVL722:
3574:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 4629              	 .loc 1 3574 0
 4630 044e 0929     	 cmp r1,#9
 4631 0450 19D9     	 bls .L764
3577:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 4632              	 .loc 1 3577 0
 4633 0452 029B     	 ldr r3,[sp,#8]
 4634 0454 012B     	 cmp r3,#1
 4635 0456 28D0     	 beq .L861
 4636              	.LVL723:
3578:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
 4637              	 .loc 1 3578 0
 4638 0458 3731     	 add r1,r1,#55
 4639              	.LVL724:
 4640 045a 3970     	 strb r1,[r7]
 4641 045c 013F     	 sub r7,r7,#1
 4642              	.LVL725:
 4643              	.L763:
3584:../Dave/Generated/UCPROBE/lib_str.c **** 
 4644              	 .loc 1 3584 0
 4645 045e 281C     	 mov r0,r5
 4646 0460 4146     	 mov r1,r8
 4647 0462 FFF7FEFF 	 bl __aeabi_uidiv
 4648              	.LVL726:
 4649 0466 051C     	 mov r5,r0
 4650              	.LVL727:
 4651              	.L762:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 4652              	 .loc 1 3568 0
 4653 0468 0136     	 add r6,r6,#1
 4654              	.LVL728:
 4655 046a B442     	 cmp r4,r6
 4656 046c 00D8     	 bhi .LCB6483
 4657 046e 26E7     	 b .L746
 4658              	.LCB6483:
 4659              	.LVL729:
 4660              	.L767:
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4661              	 .loc 1 3570 0
 4662 0470 002D     	 cmp r5,#0
 4663 0472 E7D1     	 bne .L760
 4664              	.LVL730:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4665              	 .loc 1 3573 0
 4666 0474 0021     	 mov r1,#0
3570:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
 4667              	 .loc 1 3570 0
 4668 0476 002E     	 cmp r6,#0
 4669 0478 05D0     	 beq .L764
3589:../Dave/Generated/UCPROBE/lib_str.c ****                        (i == (nbr_dig_fmtd - 1u))))) {          /* ... & on most-sig dig to fmt,   
 4670              	 .loc 1 3589 0
 4671 047a 4E45     	 cmp r6,r9
 4672 047c F4D1     	 bne .L762
 4673              	.LVL731:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4674              	 .loc 1 3592 0
 4675 047e 5346     	 mov r3,r10
 4676 0480 013F     	 sub r7,r7,#1
 4677              	.LVL732:
 4678 0482 7B70     	 strb r3,[r7,#1]
 4679              	.LVL733:
 4680 0484 F0E7     	 b .L762
 4681              	.LVL734:
 4682              	.L764:
3575:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
 4683              	 .loc 1 3575 0
 4684 0486 3031     	 add r1,r1,#48
 4685              	.LVL735:
 4686 0488 3970     	 strb r1,[r7]
 4687 048a 013F     	 sub r7,r7,#1
 4688              	.LVL736:
 4689 048c E7E7     	 b .L763
 4690              	.LVL737:
 4691              	.L757:
3580:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 4692              	 .loc 1 3580 0
 4693 048e 5731     	 add r1,r1,#87
 4694              	.LVL738:
 4695 0490 2170     	 strb r1,[r4]
 4696 0492 013C     	 sub r4,r4,#1
 4697              	.LVL739:
 4698 0494 C7E6     	 b .L758
 4699              	.LVL740:
 4700              	.L856:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 4701              	 .loc 1 3506 0
 4702 0496 9C42     	 cmp r4,r3
 4703 0498 00D9     	 bls .LCB6561
 4704 049a 4BE6     	 b .L726
 4705              	.LCB6561:
 4706 049c D7E5     	 b .L719
 4707              	.LVL741:
 4708              	.L858:
3592:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 4709              	 .loc 1 3592 0
 4710 049e 5B46     	 mov r3,fp
 4711 04a0 7370     	 strb r3,[r6,#1]
 4712              	.LVL742:
 4713 04a2 74E7     	 b .L801
 4714              	.LVL743:
 4715              	.L860:
3580:../Dave/Generated/UCPROBE/lib_str.c ****                     }
 4716              	 .loc 1 3580 0
 4717 04a4 5731     	 add r1,r1,#87
 4718              	.LVL744:
 4719 04a6 7170     	 strb r1,[r6,#1]
 4720 04a8 A1E7     	 b .L780
 4721              	.LVL745:
 4722              	.L861:
 4723 04aa 5731     	 add r1,r1,#87
 4724              	.LVL746:
 4725 04ac 3970     	 strb r1,[r7]
 4726 04ae 013F     	 sub r7,r7,#1
 4727              	.LVL747:
 4728 04b0 D5E7     	 b .L763
 4729              	.LVL748:
 4730              	.L800:
 4731 04b2 5731     	 add r1,r1,#87
 4732              	.LVL749:
 4733 04b4 7170     	 strb r1,[r6,#1]
 4734 04b6 79E7     	 b .L799
 4735              	.LVL750:
 4736              	.L857:
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 4737              	 .loc 1 3573 0
 4738 04b8 0021     	 mov r1,#0
 4739 04ba 75E7     	 b .L806
 4740              	.LBE187:
 4741              	.LBE189:
 4742              	 .cfi_endproc
 4743              	.LFE19:
 4745              	 .section .text.Str_ParseNbr_Int32U,"ax",%progbits
 4746              	 .align 2
 4747              	 .global Str_ParseNbr_Int32U
 4748              	 .code 16
 4749              	 .thumb_func
 4751              	Str_ParseNbr_Int32U:
 4752              	.LFB20:
2980:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U  nbr;
 4753              	 .loc 1 2980 0
 4754              	 .cfi_startproc
 4755              	.LVL751:
2984:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr_next,
 4756              	 .loc 1 2984 0
 4757 0000 0023     	 mov r3,#0
2980:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U  nbr;
 4758              	 .loc 1 2980 0
 4759 0002 00B5     	 push {lr}
 4760              	.LCFI32:
 4761              	 .cfi_def_cfa_offset 4
 4762              	 .cfi_offset 14,-4
 4763 0004 83B0     	 sub sp,sp,#12
 4764              	.LCFI33:
 4765              	 .cfi_def_cfa_offset 16
2984:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr_next,
 4766              	 .loc 1 2984 0
 4767 0006 0093     	 str r3,[sp]
 4768 0008 FFF7FEFF 	 bl Str_ParseNbr_Int32
 4769              	.LVL752:
2991:../Dave/Generated/UCPROBE/lib_str.c **** 
 4770              	 .loc 1 2991 0
 4771 000c 03B0     	 add sp,sp,#12
 4772              	 
 4773 000e 00BD     	 pop {pc}
 4774              	 .cfi_endproc
 4775              	.LFE20:
 4777              	 .section .text.Str_ParseNbr_Int32S,"ax",%progbits
 4778              	 .align 2
 4779              	 .global Str_ParseNbr_Int32S
 4780              	 .code 16
 4781              	 .thumb_func
 4783              	Str_ParseNbr_Int32S:
 4784              	.LFB21:
3196:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S   nbr;
 4785              	 .loc 1 3196 0
 4786              	 .cfi_startproc
 4787              	.LVL753:
 4788 0000 10B5     	 push {r4,lr}
 4789              	.LCFI34:
 4790              	 .cfi_def_cfa_offset 8
 4791              	 .cfi_offset 4,-8
 4792              	 .cfi_offset 14,-4
3202:../Dave/Generated/UCPROBE/lib_str.c ****                                  pstr_next,
 4793              	 .loc 1 3202 0
 4794 0002 0F24     	 mov r4,#15
3196:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S   nbr;
 4795              	 .loc 1 3196 0
 4796 0004 84B0     	 sub sp,sp,#16
 4797              	.LCFI35:
 4798              	 .cfi_def_cfa_offset 24
3202:../Dave/Generated/UCPROBE/lib_str.c ****                                  pstr_next,
 4799              	 .loc 1 3202 0
 4800 0006 6C44     	 add r4,r4,sp
 4801 0008 0123     	 mov r3,#1
 4802 000a 0094     	 str r4,[sp]
 4803 000c FFF7FEFF 	 bl Str_ParseNbr_Int32
 4804              	.LVL754:
3208:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
 4805              	 .loc 1 3208 0
 4806 0010 2378     	 ldrb r3,[r4]
 4807 0012 002B     	 cmp r3,#0
 4808 0014 03D1     	 bne .L864
3210:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
 4809              	 .loc 1 3210 0
 4810 0016 0028     	 cmp r0,#0
 4811 0018 08DB     	 blt .L869
 4812              	.LVL755:
 4813              	.L865:
3217:../Dave/Generated/UCPROBE/lib_str.c **** 
 4814              	 .loc 1 3217 0
 4815 001a 04B0     	 add sp,sp,#16
 4816              	 
 4817 001c 10BD     	 pop {r4,pc}
 4818              	.LVL756:
 4819              	.L864:
3213:../Dave/Generated/UCPROBE/lib_str.c ****     }
 4820              	 .loc 1 3213 0
 4821 001e 0028     	 cmp r0,#0
 4822 0020 01DB     	 blt .L867
3213:../Dave/Generated/UCPROBE/lib_str.c ****     }
 4823              	 .loc 1 3213 0 is_stmt 0 discriminator 1
 4824 0022 4042     	 neg r0,r0
 4825              	.LVL757:
 4826 0024 F9E7     	 b .L865
 4827              	.LVL758:
 4828              	.L867:
3213:../Dave/Generated/UCPROBE/lib_str.c ****     }
 4829              	 .loc 1 3213 0
 4830 0026 8020     	 mov r0,#128
 4831              	.LVL759:
 4832 0028 0006     	 lsl r0,r0,#24
 4833 002a F6E7     	 b .L865
 4834              	.LVL760:
 4835              	.L869:
3210:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
 4836              	 .loc 1 3210 0 is_stmt 1
 4837 002c 0048     	 ldr r0,.L870
 4838              	.LVL761:
 4839 002e F4E7     	 b .L865
 4840              	.L871:
 4841              	 .align 2
 4842              	.L870:
 4843 0030 FFFFFF7F 	 .word 2147483647
 4844              	 .cfi_endproc
 4845              	.LFE21:
 4847              	 .section .rodata.Str_MultOvfThTbl_Int32U,"a",%progbits
 4848              	 .align 2
 4849              	 .set .LANCHOR0,.+0
 4852              	Str_MultOvfThTbl_Int32U:
 4853 0000 FFFFFFFF 	 .word -1
 4854 0004 FFFFFFFF 	 .word -1
 4855 0008 FFFFFF7F 	 .word 2147483647
 4856 000c 55555555 	 .word 1431655765
 4857 0010 FFFFFF3F 	 .word 1073741823
 4858 0014 33333333 	 .word 858993459
 4859 0018 AAAAAA2A 	 .word 715827882
 4860 001c 24499224 	 .word 613566756
 4861 0020 FFFFFF1F 	 .word 536870911
 4862 0024 1CC7711C 	 .word 477218588
 4863 0028 99999919 	 .word 429496729
 4864 002c 74D14517 	 .word 390451572
 4865 0030 55555515 	 .word 357913941
 4866 0034 133BB113 	 .word 330382099
 4867 0038 92244912 	 .word 306783378
 4868 003c 11111111 	 .word 286331153
 4869 0040 FFFFFF0F 	 .word 268435455
 4870 0044 0F0F0F0F 	 .word 252645135
 4871 0048 8EE3380E 	 .word 238609294
 4872 004c 5E43790D 	 .word 226050910
 4873 0050 CCCCCC0C 	 .word 214748364
 4874 0054 0CC3300C 	 .word 204522252
 4875 0058 BAE8A20B 	 .word 195225786
 4876 005c 2C64210B 	 .word 186737708
 4877 0060 AAAAAA0A 	 .word 178956970
 4878 0064 A3703D0A 	 .word 171798691
 4879 0068 899DD809 	 .word 165191049
 4880 006c 5E427B09 	 .word 159072862
 4881 0070 49922409 	 .word 153391689
 4882 0074 B0DCD308 	 .word 148102320
 4883 0078 88888808 	 .word 143165576
 4884 007c 84104208 	 .word 138547332
 4885 0080 FFFFFF07 	 .word 134217727
 4886 0084 7CF0C107 	 .word 130150524
 4887 0088 87878707 	 .word 126322567
 4888 008c 07755007 	 .word 122713351
 4889 0090 C7711C07 	 .word 119304647
 4890              	 .text
 4891              	.Letext0:
 4892              	 .file 2 "../Dave/Generated/UCPROBE/cpu.h"
 4893              	 .file 3 "../Dave/Generated/UCPROBE/lib_ascii.h"
 4894              	 .file 4 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 lib_str.c
    {standard input}:18     .text.Str_ParseNbr_Int32:00000000 $t
    {standard input}:22     .text.Str_ParseNbr_Int32:00000000 Str_ParseNbr_Int32
    {standard input}:457    .text.Str_ParseNbr_Int32:000001c8 $d
    {standard input}:462    .text.Str_Len:00000000 $t
    {standard input}:467    .text.Str_Len:00000000 Str_Len
    {standard input}:526    .text.Str_Len_N:00000000 $t
    {standard input}:531    .text.Str_Len_N:00000000 Str_Len_N
    {standard input}:587    .text.Str_Copy:00000000 $t
    {standard input}:592    .text.Str_Copy:00000000 Str_Copy
    {standard input}:683    .text.Str_Copy_N:00000000 $t
    {standard input}:688    .text.Str_Copy_N:00000000 Str_Copy_N
    {standard input}:774    .text.Str_Cat:00000000 $t
    {standard input}:779    .text.Str_Cat:00000000 Str_Cat
    {standard input}:877    .text.Str_Cat_N:00000000 $t
    {standard input}:882    .text.Str_Cat_N:00000000 Str_Cat_N
    {standard input}:981    .text.Str_Cmp:00000000 $t
    {standard input}:986    .text.Str_Cmp:00000000 Str_Cmp
    {standard input}:1150   .text.Str_Cmp_N:00000000 $t
    {standard input}:1155   .text.Str_Cmp_N:00000000 Str_Cmp_N
    {standard input}:1330   .text.Str_CmpIgnoreCase:00000000 $t
    {standard input}:1335   .text.Str_CmpIgnoreCase:00000000 Str_CmpIgnoreCase
    {standard input}:1558   .text.Str_CmpIgnoreCase_N:00000000 $t
    {standard input}:1563   .text.Str_CmpIgnoreCase_N:00000000 Str_CmpIgnoreCase_N
    {standard input}:1778   .text.Str_Char:00000000 $t
    {standard input}:1783   .text.Str_Char:00000000 Str_Char
    {standard input}:1864   .text.Str_Char_N:00000000 $t
    {standard input}:1869   .text.Str_Char_N:00000000 Str_Char_N
    {standard input}:1946   .text.Str_Char_Last:00000000 $t
    {standard input}:1951   .text.Str_Char_Last:00000000 Str_Char_Last
    {standard input}:2049   .text.Str_Char_Last_N:00000000 $t
    {standard input}:2054   .text.Str_Char_Last_N:00000000 Str_Char_Last_N
    {standard input}:2157   .text.Str_Char_Replace:00000000 $t
    {standard input}:2162   .text.Str_Char_Replace:00000000 Str_Char_Replace
    {standard input}:2231   .text.Str_Char_Replace_N:00000000 $t
    {standard input}:2236   .text.Str_Char_Replace_N:00000000 Str_Char_Replace_N
    {standard input}:2301   .text.Str_Str:00000000 $t
    {standard input}:2306   .text.Str_Str:00000000 Str_Str
    {standard input}:2646   .text.Str_Str_N:00000000 $t
    {standard input}:2651   .text.Str_Str_N:00000000 Str_Str_N
    {standard input}:3004   .text.Str_FmtNbr_Int32U:00000000 $t
    {standard input}:3009   .text.Str_FmtNbr_Int32U:00000000 Str_FmtNbr_Int32U
    {standard input}:3585   .text.Str_FmtNbr_Int32S:00000000 $t
    {standard input}:3590   .text.Str_FmtNbr_Int32S:00000000 Str_FmtNbr_Int32S
    {standard input}:4746   .text.Str_ParseNbr_Int32U:00000000 $t
    {standard input}:4751   .text.Str_ParseNbr_Int32U:00000000 Str_ParseNbr_Int32U
    {standard input}:4778   .text.Str_ParseNbr_Int32S:00000000 $t
    {standard input}:4783   .text.Str_ParseNbr_Int32S:00000000 Str_ParseNbr_Int32S
    {standard input}:4843   .text.Str_ParseNbr_Int32S:00000030 $d
    {standard input}:4848   .rodata.Str_MultOvfThTbl_Int32U:00000000 $d
    {standard input}:4852   .rodata.Str_MultOvfThTbl_Int32U:00000000 Str_MultOvfThTbl_Int32U
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ASCII_IsSpace
ASCII_IsAlphaNum
ASCII_IsDig
ASCII_IsLower
ASCII_IsDigHex
ASCII_ToLower
__aeabi_uidiv
__aeabi_uidivmod
ASCII_IsPrint
memset
